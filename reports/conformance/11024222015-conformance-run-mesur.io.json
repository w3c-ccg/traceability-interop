{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "951a9aa1-80d7-4292-915c-3141b31485d8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bc8b7cb6-c656-465e-b5f1-e193cadae56a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3851b47-becc-4864-b407-e6a33516a165",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "facd8e8c-f6ae-4380-a70e-c2b13a140dd8"
                }
              }
            ]
          },
          {
            "id": "61b6817d-19ac-4f44-81f0-7b36bdc0fd01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dca86e4-38c6-4126-84f6-b552734b9671",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19e0f2da-8f01-47c4-be50-eb4e3b73225d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "87f90be7-4b71-4087-958f-e8330d9660d7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "89e8c805-7782-4e59-8a05-1ec986ed25ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "128369cc-e2d8-4c3c-baed-c79999d6e7af",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b578bcd-2bee-4cf3-bc96-a3c6ff32015e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32ac7db0-1468-4db5-9dc7-f79fd470f9a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fa9a31c-b9ff-4c78-8a4b-02bcecf4220d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86473557-6c06-4adf-8400-8669fe69c723"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ef0adc3-b454-4f91-bc56-dfe27414c6a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0723c0b3-bed3-4481-8dc1-b6d4d21edbb3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b28f3fee-b287-4a6b-bbeb-32090b1a8c81",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "44ceb240-ea90-498b-b35a-1b23ce0db766"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6933f3be-686a-4f24-8ddf-1c9fa54100f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "433b9a58-0b95-46dc-ae0b-9b46012a00c8"
            }
          }
        ]
      },
      {
        "id": "8e3a24a7-4fe7-4638-bc9c-fda88a932358",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f9d3f0db-6e82-4e73-8292-06feedffeb9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a92b752b-6f6f-4f69-b512-01ebd38bed7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6493cb3-de25-479e-aefe-6b7732699b09",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73000296-c6ce-4bcc-a14e-b2ef30d254b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1100e8e0-2862-4d82-baa5-cac665942e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b803ddf6-81ed-4727-9316-f4c4479597b0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a7b8e-f3c2-427c-b1cf-b41b7fd4d101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aac9008-b352-45c1-9470-d1a0b32e9f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b35144e-fe92-49ed-a0ed-fc18d8ef680c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb547bb-b64b-4d78-aee7-a3d4bdccd98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "728145e9-113d-4c93-893a-d6907f36dc26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b915db5b-8b97-4106-81ab-bdcb1945ab7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c209b31-79fe-404a-a810-9fbb912b0c21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ff9477-2b22-4c4c-ab66-49d9142ad05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c0d61b7-e031-4e08-b3b3-8cc25a4756b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e48f063-8921-4de8-8582-fb5dfd24fbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d86fa9-0a29-4cee-84f1-1097f9827fad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d677fa65-db5a-4e4f-8722-431cae8649d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7db1eb3d-ac75-4436-b191-5655743e5089",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95e5372f-a76a-410a-ba14-a86cb5120554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "00d50201-196f-462e-8154-4a8788cef8db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8212bf12-bde0-4483-9939-b92823b9cece",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d9684d58-31a3-484c-b2e4-4ae4c2ba2073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "394d5122-6bde-49c4-9a43-fe18cd7111ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d6e67c3-9e28-437c-9e86-1cbc0594ba7a"
            }
          }
        ]
      },
      {
        "id": "f7d1b04e-4dc4-4c4a-9ad6-d2376d71c75c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d40933c9-cd39-4f4a-a198-f8ecb7a0ab63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ec6d5ee-2b13-4b89-8b0a-d271015669c6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bea3ce5c-5703-4a9d-b5d3-1410cd5d4f4e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff930c11-707c-4aa1-934d-2c976e4ec70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdfcaa0-4c0d-44f2-9380-0e346e4bf431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecb494a-9f5c-40da-a397-db6fd119173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b09b33f5-1e14-497d-b3d7-17d879933b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc028ec-6c72-4174-ac7d-facf39660116",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52981d37-b0eb-4f1b-a0d6-93b66f73e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00eda64-84c5-48d8-a541-7d08cd956f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36635eaa-0bb3-4c6c-9c9c-a40985567b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b71968a6-2f44-46da-9201-44c534f3c9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9f69ce-d46a-405d-a027-119c4f7b38f5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c34f87-8c20-4105-b897-d328d0db00df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52fa88a-2aa9-471c-ac9f-6f6375390267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d3a482-db10-47f1-a7e6-25d8e9f1e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aacc128-a00f-4be7-bcdf-bfe05d896e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242fead5-3042-4aff-a262-5da9bba02a43",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2be4db3-b288-4ca6-a6f4-21cf95c0a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b59c045-b167-4d90-9187-175d122095b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4827910-91d6-434b-9150-f144c24e4784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cac1245f-755a-4f32-89ba-8dda9bb92ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8fa9f2-84bc-4bbc-8785-da55e4dce964",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43cdad5-a294-48cc-9f10-4a628ef73623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3401e10-1185-42d0-9b4f-364e498a519f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbe2f76-52fc-40b5-bc81-73ce98acc2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad0bba8e-3780-48d5-9473-8b4daec201d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e509b98-c68d-4166-bc61-fae276315fc5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b49435a-fbf9-42d8-9e20-ab35fd5e051d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed7a925-c51d-4fdb-aab8-a7644d3d93ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca007cb-5801-481c-98ce-21c7700df296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66f3b54-2ef4-4c6b-a893-a48100d4e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfc920f-1392-463d-a7c3-e6f6cf808f91",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaf2b6c-739b-4a32-b19c-2eb5f565dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec685a5f-370d-46c3-84bb-c5112921290d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acabc2a-9d8d-44a0-986b-94a693e1b2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d37edf1-af97-432e-907d-7bed39b3f47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8795bc-d459-469f-a707-553cb52403ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68017cf-b491-4c9a-99ab-a7fd8939ed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d67751-a377-4b34-a7d5-ac98ce2b62ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dcb513-1263-4604-9cf0-817544666ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d843554f-6664-4e16-9d25-b61be83b66d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f76dd2-3873-49ed-a328-e252c68253c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e81940-ff6d-4fe2-9632-12003eca5263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e17012e-415c-4350-8b91-f5fcb71b6892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00abaac3-8ed2-4a67-8673-98e1fa5e3b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ff9af5-a4cb-401f-aad3-afd8443d4442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96641d8f-548a-468c-be5a-2de7be8c7d0f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ceb4cf-830b-468d-979b-29b38e166630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df350b1c-e979-4b56-af68-ee831b8a76b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a511881-b251-486b-99c6-d47b409a36e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9fd81cb-543e-420d-a7cc-600d4ba03c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469452ea-13a8-4fac-8ef6-72b96fe2f364",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8213a-c1df-4320-9c5b-613fe71c3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717e6a0e-68d5-46b8-9233-791d2e97708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ea1bba-601a-4c33-842c-3ebcf6603b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39301c6-2e3b-4d42-9016-35da7a8ff51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13d5c79-9c55-4555-93c7-8a32a19f362c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9820565-a4ed-44e2-a9d3-9cca6058261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779e064e-7ba6-4e56-b5f0-37f5abd3b3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7267a3ce-9b46-4ad2-884b-f010de7cf691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "996e9137-69b2-4af5-a34d-86053684390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f1b68b-d1f2-4dd0-9ad6-fa89aa37d13f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10ddc39-6394-4148-9f9e-ac28e45d2e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a2962-3e95-4154-a30a-ef3e579c93d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85b5fb4-8635-442d-8ead-c67a236888d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2329f788-1515-4c72-ba52-2787fc6540f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabb82d7-18f5-417f-9cfd-521dde2117e5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e67c2e7-7e54-4bcf-ad5a-0b7ed23ecbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ee7862-b24a-44db-8ca5-160432afd8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa1547d-2a06-40fd-b677-570bb0019184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae6d4731-6700-4c6c-8441-7ae8583f39fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19032b9d-40da-4f65-af43-8f8f5124e3c4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74d9b5b-c48c-45ce-a47a-feecd54e78b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c3fedd-661b-4c16-8e63-68245a474e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d452f9a7-b5dd-4ef4-91fe-a61f13108469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0de3b7-2f10-4da6-aea4-0d9ce3cee9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd0d190-81f3-4a9a-b190-e0bdfab68464",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c9affb-be15-4acd-8787-ed037c41f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a35556-84c4-4962-95a6-c6498fd666f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68201eee-b906-4f89-ac8e-c9bd6faf9037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf5fa53-3711-4c55-aead-c76deb8d7bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1a06fb-5569-4b94-bb9b-7b979f9f71a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64d6f45-17a8-428a-b16d-7cbbc334e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421c20d9-39e0-4eb2-ac25-f33e639de240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a12544b-7c33-4d03-834b-19d098e958ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3854766-7d8a-461d-9f6f-3349cb41a554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238239de-f10f-44eb-9574-31f97c31ae99",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5bae25-7536-4da3-9eb3-d5fe2aeb433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350d949c-498e-4e69-81b8-ac5eb6b4fcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f3d4dd-1c3d-491e-8e6f-9481ddc38096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c097cde1-362c-45ad-a681-10bdc42566c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1920bb-1d3c-4bb7-a1d0-36d501535a62",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96707e92-39ff-4033-9e16-d7536418c107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c1f5d8-7b1f-4dea-92bd-a568c926e80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2845190c-599e-437a-a14f-63e82f70b607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4543ea-c378-4b6f-b1d1-0c436b14fd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8bc56d-e9a6-45ab-99ff-f765ae8a1b76",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c26cc3-07be-4b88-ad32-23c279b75375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae8ec40-c503-45a1-ab78-5b75c3c19507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c17c78c-ed38-43ab-b46a-45e27d803980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cfde1b-423d-49e3-b514-6f5fcf1c587d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a9003e-6b45-487d-97f6-85f0f80efc13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545493f8-c67f-42fc-81cb-35cb4fc8c18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e2013f-96f5-4182-b567-8e9a89f6b395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0b84f1-46f9-4e8d-a73a-247d8788c011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c05dbb-6c21-482e-a8ed-563b96ef5368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d7890-9afa-4454-831b-dff6d1bcece5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2449a46-d93f-4a8f-a792-41dff96d6ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2764451b-6694-4125-8244-c0e07a0d12ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dbd7a8-5a43-4c5e-a634-e64332571ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29b8e06-f769-4cfe-9779-27645375446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6101a55c-546c-46b7-b5e9-9e3e5277f60c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdfae2d-38fd-4c65-886f-1dbe5d611752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0836c240-0416-4709-a01e-a9ab0a1bbd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34cdeaa-386f-43c6-a593-462f56663486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07945271-4b52-448a-955a-1183770a606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67af303-b226-4302-8cab-f2f340dd791d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f6a008-8b3c-4709-b6a4-90df2061d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450b7181-34f8-4eb1-b8c0-4139e9027c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f0343e-885a-4f32-83d5-ef872e55aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad7a08-70eb-4b13-a7fb-6ef91c4e2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c65d60-00b8-4722-9b61-98d0a9d3a015",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f08b0-10b1-468b-b4eb-0e151ab7d8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af547c5-14cb-40e2-89f4-38982220cd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffcbae2-2739-4fae-8a0d-afa3f2bd035e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b2c150-641c-4a67-8e56-2f22a7a4c076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5026c728-77d2-4cb7-9c3b-73c4efb7bfad",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a1b972-2c59-4114-b355-79a553651e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08afbb4f-44dd-4d64-bce0-c91567bac8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c6765-23ea-4cfa-a42a-2b7301c50b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47b5cd9-7dda-441a-8d0f-7fec1677ca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef64ce85-1af7-4918-9c7f-e6753f87a611",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22ac5b7-944c-48cb-aa74-a892b3878933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b1c2e0-eda5-45a4-9bdb-a69653ece8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51898532-9466-4412-a46c-b16064dfffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4d71a7-b433-474b-9508-981827bc6a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7734ae7a-2c44-4eac-94bc-ed1ce18d9b0d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b15cbc2-5ee3-4289-85e6-7a652d4fb565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5793e577-a684-4100-adca-78fb3427490e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4558d07-39f0-44f9-9b59-80dba123eb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a86ed76-16ca-4fd2-8c13-665a3c7d6113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787a17a2-aa37-44b9-abc2-1aaab65f0d3d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e75f4a-17ea-414a-8eb7-821b9ebda7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b4ee2c-b399-4cf7-be67-ff6fd1c0dae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79c2b0c-10b3-4ab7-be3f-4aae22db38f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe448f47-c939-4a8f-bc6c-84d82197014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73ae30c-9d00-48d8-a81c-3c88d4b1eaa2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab6680b-f03d-4c88-9d81-0f05b0c00117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c710f34-0df7-4420-af66-3f5734dfe839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41781cb0-c549-4745-a2e7-e693c82827c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c9b51d-9ef4-4c5b-9837-93ea6f368d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b61a23b-dc4e-4f11-a344-93933d42b3d6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c649aa-7cc3-419c-89fe-2c152013ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bd143b-bc2d-4bf0-ab46-c0e792fdc3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e018131-3345-417e-87d9-bb5f62b3d9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c46f82-c85a-46ab-8f7e-82bcba2d039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb47e67-fc25-406b-8a89-67b9be528c8d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8398d47-7fdd-4647-84c1-1f08daaf36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb1e08c-64b9-43dd-8fd9-17658e1275bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361fd6f0-e326-43d9-a398-2e083c2cb8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5711ab52-546e-46aa-bef7-082f02fa822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32415f5-91a3-4cda-8b51-efd4e5b3acbc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933f7421-1619-4975-bff8-4d403d8968bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd4752a-0931-4cfb-9b72-7581113ba8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc44fe-274d-423e-b59c-8eb29e7e78d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1896744-eee4-44a4-b579-f398eae8b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0c1487-aaa6-47d4-a852-0b3aa42f3e20",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ebeaa-1392-4010-bd9a-599de213f680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299c9e4e-522c-48b5-9b4f-586cbe1118c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4db939-76ae-4d69-b9b5-e59cc14ee7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4313de69-418b-4661-b15c-9498e00fc405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e486a694-fa12-4174-9073-79d09fd3c721",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1d4b3d-8a27-4a5c-aa26-4c568dc4ca65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93653c39-c39b-498b-ae82-abb61a09e5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e7d9f-f685-48cb-be1a-11646f575d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e93e8-5dca-4241-a5f6-996d36d02498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83748d7-20c9-4831-abd6-dd89fbd952ad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b5dd7d-8be6-4043-84d9-81d19dd4456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65aa98b4-7719-4cd9-bb7c-68dc88f41ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cfba17-b3ca-46a3-b88c-3eeb566a9874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "524a900e-8e7f-46ef-a333-bc855f67603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d584764-2526-4e7c-8874-ff638feae3d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c1a832-8848-407c-b6f7-67d2c56b1676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf0be12-8bbd-47b3-b978-98a9ee0fe180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a970e-5707-43b8-bc5f-1c697a7ab24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0a486e-7531-4192-bd95-4fce16b2e291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2a284c-de16-45f3-9d95-7f9d9abd3b88",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f906fa-72ed-4996-9e47-f2eec7306754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89116cf5-b18e-4360-afa7-8c5cf3171448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17303f6d-f57c-4d89-a0d2-95c863c19744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b850242-5e5e-4483-a504-f810c829c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed04a260-0f2b-4a65-afc1-4bc6e708052d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee71e4e-497b-4d7e-836b-7b732e460c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5df9c2-b245-4049-a618-9f8bbe0dc725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed332a-e782-4d5c-9fe6-44de26fb3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5681ff20-b3e6-4714-bb68-aae874f2ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3299cf-484d-4bb3-81ed-ce0ed05d22a1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b6141b-b11a-4210-b98b-ad894cb0e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bcf1fc-91af-4435-8505-30992f7e6978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec80cbac-bafc-48e6-b0fc-5ff6771e06b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b47e946d-cd90-41e2-b8e6-3e054a82bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a6e736-0581-4ef6-bbf3-d2229e74d696",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dcf92a-ce1c-4cc8-8191-6214e4bc11e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325fc7d1-8027-4e41-a20b-f36f68a0e649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2ed09a-ab84-418d-a465-01b8901c820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b4fd39-cd3f-42a9-b5cf-c781fa61a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1f695d-3193-4c37-a38a-eaa5c82e32c1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d9100-2516-4143-bff1-15af545cebce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f712e7-3c44-4bb5-bd8a-834dcabfcfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4805ed-65fa-4bef-9a91-3ae9c8c156fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcc17b4-d449-4e8d-a3e9-75af109a303f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4510f1e7-04f7-497b-ac1a-8030cff867f1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15346d9-2312-41fa-9d89-2def9084383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba1621f-f806-4e61-bfc3-57ae98e40196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9866e1-53ed-4217-bdf4-120021b22c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "831d1a5f-1534-4c53-b2b0-923c30074aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db61df0-42b9-4e7b-8711-3d58a6cb812a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba60699-9993-4ce1-99d8-b28ff9873bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46b27c7-0c80-434c-9c2c-6a45f821f749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372473b9-5051-4798-8c76-24a8ac1b0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf7708-7f5e-4cf0-aaef-9614465ffd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d11d0d-e35f-4575-9173-da1f5d32e870",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d34a80-2791-46ab-ab6e-5057e672b736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302d0d8d-6150-47e4-9247-5b45bc23175b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223a62a8-53de-4b4d-9960-467a7d3bd934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74178a2b-c6db-422d-b2a4-ea28fd32c015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368e2686-f485-4b27-a23e-5b630a359a4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533145ae-fc96-4108-bcdb-9810d5ae422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a969b098-f392-40a2-8aae-1490b6bb253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8bea8-76b0-4625-b75f-369d2f9cc558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4a4794-3be3-47d2-aa9a-42dc8283d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eab2c6b-0e48-4d77-a39f-6f1e4c48d032",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf4b56e-3cb4-45b5-a3c2-619534ff7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fed5ae7-3fb8-42af-a366-7b36f6e413ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8728c258-5a33-4a4c-a72d-1a812575fe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138586b5-4844-43f3-86c9-63dd13313871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f25ed8-3aef-4025-aee4-90892c3962c3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc8ff8-d2bc-401f-955f-546951e533d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7375b1c5-0be5-4219-bf67-4fc1b7b8d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624cc150-0850-4a07-a887-86cce56a9407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f07996-6c3e-4f30-b713-7e64c3ad9e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cdcc1b-97a4-4bd0-a9cf-2c9e54ed56bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449baa4f-93cc-4d6d-b3e4-2dd230f8b93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2230e9c3-112f-49cf-80c6-e6fe0ca91e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a6046f-00c1-4753-a623-99fe3e7ef854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69b82877-5a84-4503-a593-164da0b4cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e8e1d7-d796-4d8d-af85-10078ab07a16",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1310802a-d5d5-47cb-9713-e476ad05b122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0654fb-9206-482b-b92e-1a4fc99a28d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9206384e-124c-460b-8d42-f10e67b65596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3339fd33-d462-4075-ad58-af4d605f5395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba2bff3-ed5d-44a8-95c2-dc115786ad71",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bce08c-817d-4b37-82ba-2bcbf972d68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df3b71c-24c4-4af9-8ab9-b069ef0b8b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942ee8f0-3bfa-42bb-abf9-933c986fe508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a162225-c178-4041-b249-6a1b1cf0a1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eccf89-8ca6-4bf2-9598-e7e06bd293a5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7819698-e778-4bdc-8aac-53b62e4f0059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a066f5e-3787-4fed-a284-e4a5fd2343ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25adac89-d307-4152-9c45-8e9ffe4bcd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da87c33-28a7-41d3-a9e0-a2f846c1703e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d285d6-4527-4cb0-bd1f-dd17c2ba40b0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac8595c-bbb3-459c-83f2-5601077589a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a86294-609f-42eb-9771-c4250aee9a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d42f640-5ad7-42a5-9429-dca356dce578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68602ba4-931d-4461-9e7b-eaf1cf197090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a723e7fb-fe29-4720-87aa-cb190533072c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752379f0-48fb-4296-9ae2-0b196d40c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93799a40-d269-45d8-a24b-4e4211c57141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394fa978-13d3-47dd-b317-4317ca713d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "834201c1-4a47-4289-9c31-6f25688a5539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f7bbe-2b87-4ac4-b734-a73d151db2e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdd613d-0c02-4fc5-93a4-a62747477eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a47ba0c-8310-4dde-830e-c49307421e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea991ef8-07c4-475a-a7ca-129c020ab5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edd6f69e-874b-4430-977e-826aa8011f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c34ff1-a826-47a9-be0d-4e4dd707083e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d231c876-684c-4e6a-b455-b21b10e4c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db079889-564b-45e6-8e9f-f1d748e52f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c499f6-9b46-449c-a452-e8d3553ef7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "055f26dd-6e69-4473-81d4-a7ae868111f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a39cd-cf0e-4a8d-92d3-2704eb6c8318",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61391bdb-cac0-400b-a8c0-9a31fbf34412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db55f87-12b1-4c3e-99b0-38aa70b4016b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd1e7c9-5ee6-4dc8-9706-112cbbde09b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d108fc63-d08c-4d5e-bf71-2a3a18181734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb6b40-3bc5-4f67-a5fd-e7b0f136664a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b14f12a-3bc6-4107-8aeb-307592757531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b3e088-6be4-4ded-b68d-25769a309d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f1e62c-6aa9-4a43-b6b8-44b9a723ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "58655d36-f94d-4d19-aa6b-342454828387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1749e279-90b9-4115-98e7-bf51370309e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ade879-a7c6-4edf-8a9f-940a2c9dd55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e68c2e-f331-43d6-b33a-985e9654a863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d32afe9-025c-47cc-8f9c-f38ce14729de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dea0456-cb32-4863-9b2c-19a74ce1d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2784577d-e532-44d1-9165-b04283d61014",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356621b0-5fdc-42b2-ac56-5e3d7ea41ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547cb80c-ff8f-43c1-9b7b-233b4e5ca616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde86a5d-03f8-46ce-a38b-7f3f73951a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adeaac9f-826b-4208-92fc-f2f9e9e8d473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0415b284-f33e-4668-bf9e-b17c46f853cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88cb1e1-3d25-4324-8827-4dacbfa6f5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02a4220-5d75-4643-a08c-04142c5823f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddf7211-06c9-4471-95c0-4f522dbd3589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ef6a0f-423c-4095-9edf-00eadfc58b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a629ae-3a83-4ca8-92fc-7f6e4387285b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc3971-d670-4e42-bbd9-8073e19393a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc74100e-8ed9-4d58-ae4e-8a0e79c35fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96d96dc-4e78-4db8-9c75-0ab0ec1f84c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c26e32-296f-4456-ace1-3064f4cdba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608da060-7d76-41f5-a4b4-1139557590b8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc80d38d-fe7d-4991-8247-fa93190fee97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27176148-2b05-4cf3-bad6-ea21fae83083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1cecb4-1b91-4dbd-81d3-3efabedd4819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec20115-0936-43b1-adfa-ad65ff58d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ecd8c8-fd60-4bc7-a70a-46358e347e30",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58265ec-fc89-4101-8fb9-018eb26b6c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbac3c8-f3c0-46d2-96b9-06305763a06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3085e6a6-3766-4d10-bca1-069f761734e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b974c8d-d24c-4436-9049-e003c338b733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a1974e-6b63-432e-a7c7-51128c39fdcb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6af5d04-348d-4aae-afb3-27dbde580953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8651677c-f0c3-42f2-8a02-f5da93cd74be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a78b5f4-9327-46bd-8bb0-8fea35f6bf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c532809-dc67-4643-bf86-92aa4e3ff808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410e4877-3493-4da9-bf9e-b74123b138c9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ac32fe-225d-469a-88de-7b27fba7c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118a5da1-9a5f-4763-ba33-8ef6190d11eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f149f-e80e-4f8f-974b-1194946a2b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfbfc7e-37e7-455d-9853-dd2b80ecffeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb15df1-8048-432b-b650-81ae3c2bd926",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383f53a6-9ec3-4268-b81f-c5aafaa4fb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90ea0c2-34d9-407e-8845-fe8ef9e46b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf96f05-74ac-48e3-ac77-7b1cb1d7610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "703e594a-cd48-4aaa-aa58-a6eb26498daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb1367c-e9eb-4884-8109-7d4f6c0b425d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57e273-00ea-4ef9-aab2-ef71b8f1be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3990f586-482e-4fcd-b1cc-a913918a1463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d722807-417b-4da4-980d-d642555e37c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3e9db0-38b3-4b5a-ae93-70d221be63ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acea24d5-3e57-4977-86c0-bd6feec614a0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626f5aa4-ab2d-4855-8091-890aa31298a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724fd207-4ce1-49cb-acd0-b3cffce15e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc7a3bb-3867-419b-a711-d1b15f52c979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2549a63a-ed2f-4d59-afc5-8e2c8d376127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b47255-fc05-4de5-8ad2-24fa8385984a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d40342-a20d-428d-b01b-feede3a33937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd96aed-f49b-4318-b39c-72907ef689cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65f6f7e-c210-4480-8e6c-edf79606f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5befcc79-0247-499a-8f79-824ece1f159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce5571-d42e-4f48-9f64-2e8340b02ea1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7c5fd-866b-4660-8d9f-4a5bd4dba473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c802484e-2bdf-44b7-b30d-cb130279a141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b86c876-174c-4003-9cea-eede132f3817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c43df63-be76-44d6-9113-fb1199e116ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0cc415-6e1b-411a-bb4f-017247083e99",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7768c1-9a97-46dd-a7e5-da163c0b61f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d74b68-70cc-4edd-8ec2-2314e663c8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6d26e5-f91a-42a6-a582-b30d75a3b2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7edb3fe-6cac-4ada-82c1-4c672476ab43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a641e2b-9ed6-4a1b-96c4-9dbb2385f4f8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e5dd5-86a8-4030-920a-36a62a1b4621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c33264-aa39-435c-a586-194555068885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc6d022-e5c9-4250-a687-8fc543cf67b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "878fcfd4-62d9-47d8-9ad0-c41d15d6eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa3d69c-0f12-494d-aef4-68a1f6a645cc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df6e7f6-9983-45bb-a66e-4cf635c365c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7346bb16-e855-415b-8d50-f474edf51483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ff5686-56c1-4c6d-9b11-e52ca118be8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9432a7f-66ba-4eb1-bc6d-efc8720fd571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f88ec-4a19-402b-a486-72ddfa109335",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441c1643-e75b-4117-83f3-2893b661e605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96ef335-691f-4d44-bae1-c17e17bdc3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0b6e8a-bee6-4665-a958-58acf95f4cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14395949-44a4-428b-b23f-5d53e9b52596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923f8b24-b0d5-4cde-a6f7-4d599914ccc5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c302b0-6f55-4400-8121-dac520b441ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c93e2a6-2c61-44dc-a17f-461bcf40112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272566a-a8a3-46c8-b1c7-3ffdddf66a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4cd6f3-5495-4965-a5c4-1abd9bc98632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4c248-291d-427a-b82c-05d3216a96ea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c433f73f-eca9-47c1-ac72-4bc387732092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90de2ecb-e252-403e-850e-8da99187543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09efd14-336b-466e-9665-8c6db085a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae09d8-9ed0-484b-9736-8485533f89df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f89776-349a-44f2-80c1-a174c4b298c3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4932b56a-a9f9-4f70-b922-ac12a00fd453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be108510-e039-4b3e-b24f-84483499afbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe63d1a-7147-4995-a4ea-494d5c2c0188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a922af5b-ba9b-4415-bcc4-901be4326da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9fd2d1-882c-4189-a4c6-3d721c635d09",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c751de8-a30d-4df8-aafc-a85ccbf388c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36fce80-6db7-42bf-b938-9f135047d6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74993cd9-d04f-4f9d-ae6e-d6b9054143b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0013975d-b8b8-47e7-abd6-c841641b6c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be06836c-8b49-4b4f-b944-7b80d55213d9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fb3399-2cfc-4cc7-a979-71bccaa049db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77a7cf7-9039-49c2-bc93-100bf18cfcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea2bad4-4d32-484a-9f1c-4a58b902a598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee0a7a3-3b8c-4a7c-b0ff-97cb34a785cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d208193-e7ef-4893-8282-26a43f1c3e19",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d93b9ec-2e41-4224-8c84-3a739bf05905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8be40e-cb27-4c54-8db8-205a6af37656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060e783b-b2b5-4a5f-b57d-cb2e18cccdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb309d89-bcee-48ab-94f0-f56ea5e17f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95f510-5fe1-4c84-825a-7777bf0fcf81",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e64f587-2115-4e10-a3b9-ae38021bd599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda2887f-2a3c-473f-a2d4-7442bed1b7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f0e157-4f6f-4a91-a08e-9890f9df82f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e557e2f-941b-4b2f-b494-51b0563e72b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047f5ff3-8aba-4d5a-82a8-e4271cba4c2c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acba0de-0546-4421-8135-ba1f081751f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c563c78d-a812-4e9c-9060-6281f6539d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a4b5b7-582a-4103-8a5a-156a420ecb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adff8cef-e6b5-49a8-a386-c3dc7c1e2549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002bbdde-fbf1-43db-acc9-62157cc4c756",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e20d9d-2e6f-4448-968b-0f6399bee808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affb8c66-bbdf-4780-b003-018db2c8d955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82290a38-5389-49e2-903c-6cc0a87d2c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3a60c4-bf81-4c82-9861-e421d1e23fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd2f61-1401-4ec1-b760-daa7a22c0580",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a59799-2329-442a-ba57-c95c4b229967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb9403a-813c-4ab1-a0d5-c82ccca3db0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1498a5ec-4af5-4fe8-a30d-f5b5508c8629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a210d2c-a342-4bb5-95e2-feeed548d0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3417dd2a-f7ca-44c4-b8cf-75d70b81241b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364a20aa-4fbe-4971-912d-a89d231ba8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ae6cf-f13a-4672-94e6-2a1c41e20c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c1910b-05fc-4237-abbd-dfe28bca26e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15fb6796-e8e8-406a-a4e8-bbe9d9fa5bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08211ca-087c-4679-86e4-4b27d51db249",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2cbde9-f1f9-404d-9407-6e2eb0ac565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad58fc4-1e01-40d2-9295-584086a34434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cad888-2eb7-4c1f-8c26-4c87d1950432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "491eee6b-a7db-4b16-871f-cda52388d134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c90e16-1e27-415c-8e08-6d1161f2d9c9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df940b75-438d-4d39-92f6-5393c6f9b592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e12e41-4b27-4158-9520-30c2f93ff119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333f1e49-9468-4f26-a827-8635b959c051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef232d8-0584-4c54-b543-19794574503a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fab1e1-84b6-429b-93c8-b5813caef9a9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd32f0-7afc-42df-9998-88a858bd9cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3decf7b5-c00e-448d-8dad-06a83d38f45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de1c4f-bc32-4273-b2a8-3cbbdd307149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f00211-6f61-4c6c-8535-5f5347acdcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbbd4a9-6fa6-4569-9a1e-f5d2ec577580",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d4012f-a699-4539-a5d9-26a08084e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e75be9-60b3-4d35-9064-0f843deb1b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967139e9-8e35-4a12-bebb-acbaa08d5732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01810a00-6e62-416c-936a-c897dd1d7a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cdcc55-12bf-4cf2-a568-2841a9cf43c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccd7633-e3e4-4e00-bd12-c57ea3c10413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f505e14-8f55-4ca2-aa71-b5fbade89612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bbc5cc-d0fe-4246-8ddc-ef05f3545401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db0e2263-8ce5-463d-a3be-3150fb25c746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d48656-9f4e-4102-8d3b-27c538aea03e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd6959a-265b-4eef-b6b4-4c52fd0accab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38c94cfd-ec55-4205-bbac-84f9a27adcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1510f275-6e68-47f4-be54-3f329d29617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a7f90d-969f-4cd5-ac9a-7e2946313e6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1243f02f-73ab-41a5-a30b-4f942e6a25bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "609b0da5-01e9-4545-8a60-6576f5267249",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b190953c-66f5-4cf3-baa4-ac4e33ae409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c37d8d12-dcc3-4532-9008-ede5a6fd7894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67915d1d-cb91-4144-b107-5e20c21001b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12331e35-c8ba-4351-b13f-08edfea1ca99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af72c64-92f8-47de-a83c-3ca4a30f07c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b60ef44c-f1f7-4c19-8c60-b602b8e3a6ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5de8751-da28-46ad-bca5-f50c65278155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce2892f6-b2d3-4ba3-b315-7659082d2873"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ec8c9ad-2351-43d2-96c6-cbcb6e4d6402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e996e85-4aaf-4199-b779-b4d614175661"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e1a75af-d9d3-41e5-9660-7c7c0f75bd2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0831f24-a342-4cb9-acf2-df239baa4ae2"
                }
              }
            ]
          },
          {
            "id": "8e0d8e69-dce6-459a-9894-a7f86b43eaec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b90acaf0-e5c6-49cc-9cbc-8d3592c39035",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "329ae534-df22-4e1e-89f2-a281d5a2db80",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766fb67b-d501-4c9d-8fd2-6d2de8186fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "94010002-950b-4362-82ba-a48992acc982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91f6291-0a07-406b-aed7-04ff00590059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b21e8b-384c-4e1a-aa57-bed38f981399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cccc2c24-13c2-4af3-a573-cec49b5a40bb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83db5ae-a609-488c-847a-f8a9516f941e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "242d89c4-d778-40d6-ac80-6a46d163e1a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6defd26-ab10-4fb9-b88b-565b9fb46014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4931ac0-60fd-4f76-9161-6b45727f56f2"
                    }
                  }
                ]
              },
              {
                "id": "35ffcfe5-8530-469f-9fdd-6df223d72262",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac955743-6801-4454-85ba-23ae979a8952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a13682e3-2fcc-4ef6-be71-aa3bb974ba4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b33168-fcd9-4014-b05b-aca4a4ecc7d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd69b5a7-c58d-4940-a9dc-77b2fa17a07c"
                    }
                  }
                ]
              },
              {
                "id": "e0e5432c-c0d4-4eff-b7ca-23af3180421b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fa1ee2c-f43d-441b-985c-967e053e7d7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78f9a136-df21-4efc-9974-af192ad4115d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c92bff3a-ca59-4a1c-90ff-be632bce28c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5700dc8-0250-45db-b09e-3d51a343ac39"
                    }
                  }
                ]
              },
              {
                "id": "507a0988-b008-4297-9381-ad86bea27638",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3155490-5232-450b-a0fc-13ec658efbbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63006c58-fdbc-4752-a891-7996f4c69e77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8e801cb-36a1-40fe-a1f2-4fe4ecd0e206",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0ad94e07-36b1-4990-88ed-cc21d2f9b0e7"
                    }
                  }
                ]
              },
              {
                "id": "5b60cf0b-7f50-47cc-864b-223e5ace32ae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b387611c-3ef6-4501-a38e-22d45f1b9a16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d30f0496-3d9b-499d-abdd-7243206f5399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dbecbf2-5232-4d62-b155-dcbffb2e7da0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "874e9d27-b1e1-4fdb-9649-380b0ab35b4c"
                    }
                  }
                ]
              },
              {
                "id": "f6f25bfc-104c-4a93-be1a-9506421633ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d163e39-5efc-4587-a8af-188d46f4a209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb7f540d-2e82-4000-a914-3be7517cc021"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f48fc3c8-647f-4da5-8887-f50fddf37e26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dea7de5-fb61-41b8-8dc3-97957652432d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3ebee15-5172-4797-884e-3ba5388279ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed2ed3bc-f095-4d65-96ec-d9f0d23fbd53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fc79149-a412-480b-a55a-b8768c1aae20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7ec76fa-9086-4e6a-9efb-ddaa5f86416b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "128a043f-aac0-4a24-b40f-dba656653971",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3a598d09-4564-4d72-9ca2-4ef402697706"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ddb204-25d2-498b-9b3a-953991ce8bf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50a01039-4975-457c-9447-b9411be9d966"
            }
          }
        ]
      },
      {
        "id": "70ade1c1-b51d-476b-b1c7-62662de15f68",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a13ad915-6aa3-4311-a2c9-456f661e69b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc7dbc82-e57b-465a-b8e7-d3c1dafe7d74",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4021667c-1812-4f6a-9c61-859681578f36",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8d9d4-2fb5-4a36-8682-dc73411c7025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d9f240-1217-4011-a308-482bad87d261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22521d5-a419-4dab-b356-e588ce88dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "67849a1b-b3be-4eaf-85fd-45498aa70df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8511e1f-cddd-4f82-a53f-b241ea4b0c1c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb4c4fb-6668-4b5a-93c6-6452c4a7ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07df2bb3-3eb2-471b-80e0-76524b488a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5549c5-480c-4f0d-b871-79c8ea3e67e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2691409d-9d9b-4c79-afad-df6158cbb883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebac7ef-4552-40ff-9e84-2b1df32c088b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4cc402-dbc3-4cde-81e3-e172a6fb95da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc97f9a-4ae7-4e96-843e-c12bd6a22163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a1d67a-8ab1-446e-b59d-dd091bc9322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a018dd34-f090-4763-8305-8e706a25beaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b91555-32aa-4399-80c1-117d97618cc5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826eb262-211a-452d-ac3e-9bbfc18c9781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efcaf02-840a-48ad-b988-7dca4c03beb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d4be8b-882d-4bfe-8694-786765c4fc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cabff7f-0242-4637-b8be-f83843c00a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed6937b-1bb8-4b6c-b5e7-e683cf73d3fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379bea88-8e32-4c7e-ad9e-6fe7e26c9356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dfbd91-2e99-42a2-beb7-ac852f8d0733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9538561f-bbb6-4fa4-94a9-8ddd8efb8721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65ecacd-f81e-4502-8106-2c77f8de1bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0a8462-54fd-4c0c-8d9f-87407f533384",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e2d089-cb73-4936-803c-6b99d4227952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb886487-7328-453a-8f85-9bcaf2a728d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5653f020-0524-4857-a5b0-3f49ccf97c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b15c0b-1c6e-47d2-845c-b3eba22c671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523e4626-0916-4173-9d5e-3af0872dfdac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e946e59-345a-43dc-a12b-dfaba09a62af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b272bd-fab7-4983-8ff1-6d401b040ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be204cd3-1b81-4bf4-8054-8ee6e4846616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f5784-39ff-43f6-b69f-b453dc7ecc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4afa14f-d610-45a8-8b7f-034f31256991",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb612d8a-b24f-4f8c-bd9b-7ebc21a70291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc255cff-ac5f-4ecf-8ac6-c6205e8d8e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca24f2be-10b3-4c99-933f-9709e2258bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddf39fd-e4f2-47d7-a5e8-2de784e6c189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ee2913-5708-44d9-aa0e-ae4175fb3550",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ab0f82-ecd7-4377-bb05-df125796701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e98f3b1-bbb3-49bc-9533-39ae29931b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95ba13b-a4b5-4ee4-aee7-c72e7fa2ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e13d26f-c925-4227-a03c-60ba74af6160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495d58d0-d9f0-4d52-ac94-4fbcd93ddf18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0947f6-eae6-4005-a1d6-2584052506f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0cdb10-ba0d-4b41-8beb-7a49c4ed50b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d8bb89-7082-4293-9e46-146b69d1beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d732a7d6-44e3-4f61-8edb-70ddd000a50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a3d94d-000c-44e3-8532-79063e624c0e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be65a956-8858-483d-828b-5a63cc5aaf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0481e10-5073-4ad9-8df0-82c2c30cf471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00121cf-e9f6-474d-8fae-a31dad87de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f80265-0f69-4058-81d0-79052a324979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ee7d4-3b4d-415e-b938-61f574f3520f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab200e6-626b-43bc-8851-4fb703459acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617dd02a-2367-41e0-99a3-118af375a906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da65a435-43c6-4000-ab0c-325b9b3afabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "978d3c57-ddf7-43f4-8bcd-66f8bc8289a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eef74d-63a7-49d5-b8e0-d357b67c7137",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aac4315-78d0-4448-bcba-c075efdc4153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d79b0d8-2504-4916-9c37-6800fc454111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb388a9d-1285-4640-bff2-8efe1253df20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31bf5a57-3b4c-46f1-ac60-cf0b2354ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f53ddbb-cfff-47f4-993a-d251a22c0a2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cf3c2d-dc90-4ce6-838d-2e47b41bb0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b46723-04d1-4926-9be5-300586e85723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3b3766-a6c6-4c77-9355-dd402b87f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34cd09a6-92a9-45af-bef5-182b0cdaa7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b7e00e-062d-4c6f-9166-c5705011a1fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5672e389-6a69-477b-ace8-e07c33bc6a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dd0ee4-ef20-4c58-9503-b5d903b7dbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db6206-ac90-4a49-bd0d-f56286833cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f475d8-33bc-44ee-962c-b9de70dcb5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2b7db-0d2c-4a38-9f91-a0a73983f729",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464355a8-10de-4a7f-b9c4-61db19e5a682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e889dbe6-99f5-4462-b885-920ebd8bdd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bcfeac-8022-4052-af35-ff8e2954273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a4df26-7ea3-4802-8162-f5e5cc775284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1270f1-5a53-48c6-8137-109b72bcd152",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f45af8f-31ee-4cbf-94fe-01245e009add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591fb1aa-de5d-4b94-b330-70758bed70ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99334bf0-1597-4336-a7ef-3a898adadf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60cc5d1-183e-4dff-898f-135a7172c4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb15b30f-85d3-4ca6-a05c-ae00f010f32d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e40e7-3163-40d5-b69a-f9bef2b375f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab4cfbf-6f1f-497d-994c-4003b9b49246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f22fbd-dae6-4367-a6c6-bec5e4697bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73c61d6-7040-48a9-b01d-f15e3e71a709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a586e9-3c70-4227-94eb-50f302834b3e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd374adb-09fb-4685-a0e7-f06180f77db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bd2601-ba70-46c8-ae27-eeb90ed7b5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c774262-4085-4ac5-ad27-d5004cb779f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4009fa-6ab4-44bf-bd7f-c6a2f5cb2890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3be9e4a-7a90-4e54-848b-5a28f1d240c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f2fc6-e7c5-4959-90c7-c19b6c7d6365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51be2693-0ae2-4f7e-a3f5-2b903d5a3c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4157bf-8ecb-4a39-b1f2-8f7c8b0ef77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17d078b-6728-4d79-88e0-3791690117ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843a12bf-a01a-435a-8c58-4653b0c665f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0ab170-1ef9-4a6f-9a38-5caf8eedefbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5fca33-bae3-4ed2-87dc-6185418b6c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b85b982-9a48-4bc0-b330-f73b15daaab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a302c0-a04f-487e-875c-773842f06ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ba0452-c563-4fc9-a2e6-bba074c86b14",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dae68ea-55e1-4d1a-b388-85acbe27e43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf8f100-1818-4160-bf15-26e791afa1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec06c9f-de5e-4d10-af45-54325717104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7e25f9-023a-4db1-b7ad-aa727916a8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cba6a4a-5564-4f6a-9948-baad1b19fc19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a976ec5d-18ef-4ba7-b4f6-53f130bd796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53873b3c-f197-442c-9b31-1f6e2b5ec3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04556d9-c7e5-4874-bd27-80123f2437df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c291eb63-48f3-4dc0-8cbc-be73d069fb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d3729a-0d4b-435f-8f3f-89e140bbac7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02217690-4d36-42cb-bd03-24dad8d55134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd75d0da-c7ce-4ae0-8247-a0872f545190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c802a025-c424-4090-b051-eacc652505a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99903a6c-8c54-4234-9810-6f994aeb1ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b7e2c8-9be4-4d66-a3ec-7e54160e50e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2558379-5062-469b-9066-2c54ccc1fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72efef30-92f9-42d2-9ebc-fbe625f1e981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb023c5-71cb-4de2-9da7-ed95b1731e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a165968-9a90-4343-90cc-7519ec2ca04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f355b3-4d03-4adf-96f3-15e42eafb171",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70020422-7124-45bc-bb2e-26a14ff22b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beef690b-be79-42c0-abb5-6fd17c6b5f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaf1e48-285f-4fc6-ac8d-c4c380f1cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8332db0-fbf2-418d-92ae-bba606ac9992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f73d56-1270-4397-9b63-12636dd45ef3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f344d025-20cf-42e2-8afa-4c58d1f9a57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1f2a98-5763-4cc3-9c5e-c9b513cb995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696eb1d0-f82b-446c-bdfb-e191c4d3b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0699bbb-b2ef-4098-bc79-ac8760830ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7189661-ce23-4c5f-9325-cfff4fe85466",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ee84a5-05e5-4fdf-bc20-b1447881a14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61b56d7-ec0a-4c2f-a630-bf463c540c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4790b31-ddf7-4a8a-8f24-a0b413765d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04cfbb8d-47de-4842-a657-487cc60e28d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3ad2ec-3b8c-45fc-bb1b-0a5f3a0809a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427cad4b-721f-4cdd-92e6-157bf9626ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b961d8-b08c-4554-bb19-5c938cbbd6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333e3c45-c44e-4873-8006-cdec8c88f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b498d11f-65bf-4dfe-a997-7a0115cac04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad614a1-380c-4e97-9f61-8dcbd188e977",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242accec-94bc-48a0-86a2-68f9a6becd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70554efd-bbec-4553-988b-5a175f394f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de204a50-486e-48d3-b2c8-b3258e544190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a36f59-3351-40e9-8ff7-5018d152ccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4fc3c5-d9c3-43b9-bcde-17c40be76934",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9929d6-fd6d-43be-b376-846e33d0f25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd6c91-b420-4eb2-99bc-22c4381421bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e664d19d-b68d-48f3-aeb0-65113dba6888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "785a45e1-04d0-4b6c-869e-a071c4e6608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca00e2b-422f-4f12-8077-d5f1a23cc207",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ddf11a-07e8-4c4e-8a4c-3dff2e671809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d1bb85-fbe8-4e55-a660-39722c847f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea5c13-e0d3-44fd-abd3-78cc7809320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d95572b-e748-4fed-9375-7c4b441de986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f45aab5-9646-42cc-97da-7ef5d38362c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae75e223-1e52-4377-9d3e-6490744b23b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d434149-ef30-4130-9ffd-f4acf810087a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63fb7e6-7824-4239-bb9b-7290784fcd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfa8108-e473-490a-b34d-f4705f8f56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c75d0c-cdb0-4749-9f73-f637ed08c655",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6cf3ca-59e5-4617-9946-8d4b69548a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21303647-c4ff-43e2-ad1f-e95fcb534360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec710ea0-6c2b-4991-90f0-b8a8c6072587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4beed6-2be5-4802-b03e-f33dd1529a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adb797e-4393-45b3-87bc-d7b7c87098de",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72f1738-e697-43fb-af27-0d5965124064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa8961c-de90-479e-a1da-2f365cfe0b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f793877-290c-4a5f-b0c3-434eb7ea8f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08db1f81-500a-4f24-97e7-bfe34872d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bbc4ff-79b3-4d4f-8c4c-b59f531c99cf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b4ff1e-5e62-4d26-9c48-0c4ec61b34bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f8319a-ae6b-4902-9e7a-25ec58c09617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff757e7f-120c-419f-9d9e-af1ecddd6a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6533fc7e-2ddf-47b0-8bc6-55551f3f6a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2fc946-cdf0-435a-b66f-e27f007a86a5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55417109-d70e-483b-9ca0-5ec1198b1445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6203ba-077a-40ec-ae4e-dbb757a28692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c9bbbc-9adc-4f53-bb80-cc071a66acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5f18f4-c7ec-49bd-8a6c-52b4305222f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d69d917-8097-4221-b1c7-4f47aa74f517",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e78a29e-9f62-4fa6-af06-83c37aed246e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b4f00-e248-42a7-9ce4-6686e838bb63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e457aed2-94e9-48e8-b2a1-1fa6e47ca233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ffeee1-f692-40b2-b71e-78eba827e818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7134861-09f2-4f7e-a3ae-6c409e99a5c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0e59551-1473-4638-b90f-f86578f0aa88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb8b94d7-e60f-40e8-80b8-1ccae84face7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b07488f-58b3-477a-85cd-088bb1f822b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6785dd08-cbea-4a48-b934-c13a2b9acfec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce2fee80-23db-4a71-8d76-c2be3c1771e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d28f266-def6-4f9a-8c5c-1993954f8547"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38bd4339-65e2-49d8-ad70-86a585b39250",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10230214-df70-43e9-9734-933eda4ad3eb"
            }
          }
        ]
      },
      {
        "id": "b80a77f4-3da5-4df0-a32f-d3f44d3e223e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cefcc9d3-d69c-4589-921f-908eec857368",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f5ff61c-50f1-46a3-93a8-6d3b1268f80a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1f8cb20-b9b5-4306-9466-09d7b609abf7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b5857-b115-4d5c-9257-c36520a2c917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae299d9-b6f9-4465-a586-2d3816a1abd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2667d9-6c65-4916-9286-a23bd508bb60",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd2c03-3272-48f3-90de-2381d83d3897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4528ed8b-9b18-4545-89b6-d684323b3154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f89922f-7280-4d1b-a87a-b914c42136b9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d160d-4124-4c1f-a1af-a083ad01fb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf58b25-d080-4ec3-9c18-80302e9755b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80339c5c-dd8d-4b79-8620-be817a7ed42c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b37939-5edc-43f1-857c-52f8e71123c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8407cee-4117-4f2c-8a01-c1895fdfe828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1e885-5899-48c1-a73e-3f024bac0766",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8405ba9f-3b19-4d49-bae1-9f7b40e64480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5d2382-9d89-40d5-bc83-7288e69ca6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc982896-4640-49a4-81df-6f3666adeed7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010daad-d2ce-498e-81da-eb81783c91b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cfe1f2-2d82-4ea4-ab4f-47df205f8943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b418b2-f360-497a-bc7d-0207809e066c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f84ab-34f8-4c4e-895b-f60110537e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbaf28f-c912-4d23-b071-4980a9f0f3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb76de6-985c-4c26-9a04-d5ae460a4428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c21b83-eb8c-4b28-a695-e3d094921dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c05d94-31de-42ef-8f70-242fa7b0ee58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b916c32-e607-4f85-bfe1-5c182e2f13dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215db960-f15a-4ef8-b318-a77703a45343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523c14d7-f715-41e6-bd1f-6a74e254deff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7794808f-74b1-449b-b459-92717fba356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d14ff6-0192-4aab-8d1b-fb725962c527",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d4db88-8556-4565-b055-8953b5b0a601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53282940-9332-4260-a980-285a288d6913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd1bed-1679-42bf-bccc-82073906719e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c389c73-ce69-4504-a1c9-f5ac4a1a45de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600bf2b8-9999-4d7d-a5d3-a470284a9df3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41385728-70bb-4d3c-8609-346db8d01e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d552c346-c610-48a7-bf96-e1642a5fc7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bfea6-aca8-4b86-a4c9-ce0bd26f673c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a35d46-22dd-4701-91d5-0f676337c183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487819a4-b030-4349-9f35-6c2ba45043a6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26cfa89-f170-4439-83c9-115dc5e8ed59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e8fa12-6d1a-4d5c-91a5-c6fa87a50439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f291a-9642-49ed-8fd0-bf57deac517f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd278104-295b-45f1-bc49-1ea29647f6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d928c9e-3699-4c69-bf61-4694cf04ec0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fbf745-f6d6-4db2-a108-63fb51166439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144ec437-7b50-4fa4-adc2-949408600249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eb20d2-ea82-48d5-ae81-031d7b981e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4baa570-265a-4acf-bf2a-2b3537916e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c721c8de-4abb-4594-a1db-2f0b74e97f38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d67ef11-091e-439e-9a8c-0ab4f476f7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963de585-7978-4ad0-bae8-d20b919b7f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7547af84-0042-41a1-a1bd-da09d1a898c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b85f50-3ba9-4dde-80ee-0f325f22e73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0946c1-7f8b-4499-92ea-d3e41f70ec94",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b568d0-7202-4b47-812e-799b14a44b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88bc78f-9dc3-47ec-9bbe-f070f8beaff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8316f0a-927c-48ae-8bef-35e1f89b9496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebb5cbe-3dc6-4db0-b19a-3c704c717679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6f3f3-ae87-4c5c-94bf-89be32e0bdcf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666a4397-e76f-45cd-8f96-e1f186661ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3dc14d7-f9ec-4c20-8761-d9a18fb36850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd7277-a17c-44b4-af23-bb97252493c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b990a8fd-93e7-4a6c-a84e-3e8c2c5ba479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e78a010-179d-4cfc-91e8-65b7adc7a560",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c39f122-558e-4429-80ad-b014c10916f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc679aa1-e0c0-43a5-9318-1e07accc55c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b8b489-a24e-409d-b54a-0fdda1781ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471d6cd1-73fa-4fc7-95c2-c46cb1d0b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae112e9b-424e-4c8b-b9c3-d19d0702d48c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943ed2ce-c043-4fb4-a33f-bb1537557cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96ad91c-0f7f-44c5-b8d3-8a2e135e0c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c57f18-88b0-4e45-9ed9-4611338e320a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574f3076-cbef-4847-9d81-7e89facc93af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad2e05-bee0-4366-b6bd-8ee070bbbbc1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ea23e-851f-4596-9f59-19ebc7a61357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06a981d-d4b5-49fb-81bb-9e5a0474d532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2f2f95-6ec3-44d5-a118-e2498c41998e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6c4d81-dcb9-4cea-a010-32a01b289b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf36e6a-ad9f-4e2e-a8a8-e9f206cfda6b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4b3291-4d42-489c-b3c0-987fee3631bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227e37b0-37e0-4780-afea-5dca00a37004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eb46a4-6163-4aca-9a70-caba7157cbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd3de33-ec14-4fa0-b086-059ece695e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029ad4db-44f8-4894-84da-35fb89b6a0bd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8538317-5484-4dd3-8faf-59d9baeb9eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d255d033-a310-4b08-8841-15861968ff80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea6fce-f59f-4f97-af59-04122b9e419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec4b288-6d90-4d90-a3ce-76b7ef2b805d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4339ec4f-c2b3-41fe-93a3-6ff30a2027e2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b439732-8bea-4201-9fc7-68b6acbf2f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808686fe-b386-48fe-9c85-2a5098b10564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef8afe2-ff49-4270-9c6d-6ea68c2f136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455adb43-01c4-4935-ae28-1d7d47c5c9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e55f746-a698-45b0-8586-b6b0e796140c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598af435-9ad8-4e2c-a4d1-a3656cd54205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3cefce-0ff6-43ac-a348-82996f796b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52957a5e-6a71-47d5-b4d3-2bca382c6d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f293d8b-fc2b-454c-8509-fd894ee2ef4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6257775-5220-4dd7-bdbb-b17a794d1dd6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00952e19-993e-4734-b922-cd0a6f815735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0693a56-39c6-49e2-b235-ccc80821e374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c126b0-4052-4ab8-b8ca-c9e834d82fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d970e624-c80b-409f-b5ec-1f1da5db3839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae66327-3300-484a-af07-5b5a9a9268f5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d5957f-14b5-4f74-914b-234e1aca8794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e611c340-2464-4601-bf5f-ae9f525f205d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab1f321-010e-469d-b7f6-9bf8b95e2b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f41c78-4fe2-41ad-97af-61095626f075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d832690a-c0b5-4645-9826-57d3f2e7e37c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613ecea3-dc31-405a-9516-1ac3556c0fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8443beb1-2ac0-49e7-8971-32f7e051a4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45787341-47d7-4802-9bfc-84cd4e79f910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed498f29-dbde-4bd5-87e1-ac3522699452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b948d0dd-2df9-4f9f-8a9a-183813640227",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f051ce-2694-45f4-9337-6e8502e020e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b667bfc-7e00-40f8-a306-4c17c7d8d586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd27d5d2-8a85-43c3-975f-fff38c42d721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b25d9a-4f40-4319-8a3d-e3d77b4b86ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c914554-f34a-47ea-b551-eda797579818",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e460372f-7d2a-47b1-a32d-37e32544864f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d6dbff-1187-4b93-bdf6-4f8a69108ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2595676-7b64-4cf0-81c4-02f292cdee06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede5a7da-ecf3-41a1-827a-9525c3b9b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1178780-3d11-4b4f-b39b-c275c4a652ab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43264a95-59a3-486f-80e1-afd19423ef44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a620ac24-6bdf-417c-a3d5-8cdb1236a092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20ca2d8-9c14-4d3f-a885-09a938ba7f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a434a752-8580-4772-9ea8-f639ae49fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d420e5f6-86c7-4e6b-b9ea-d87c94ba46e0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4681d05d-2119-4530-8afa-cf8b66210a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe519e6e-0270-40c8-bbff-76a8e07a83b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1caa058-72c1-47f2-a5f8-4dc9405002b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd33e52-5204-49f7-9cfa-0ac8f1b33c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d050596-ac73-459f-9460-6f239ffa8be7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254319f-be31-4a2f-b0e3-2184b6b66e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c47260-6e43-4951-ba16-413d9c6e1511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67086a0-e24f-482b-afa8-420b7f98be2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37be444f-f9e6-449c-9638-526f0110ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8975f416-6929-44b9-9267-9e0ad14c4565",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735b8bf7-c0bd-4517-b32c-0321a050bebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df7cc037-acb2-4874-8aa2-aee065830258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dff404-1257-4c8c-94bb-79431cfe9375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50f753d-d60e-4a08-8275-3100617167d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55de557-0bcb-44a5-b3bf-58d9873260b8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b86fb2-9a5f-41d9-8d57-59bd2e4d3e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b6b0c7-b5d6-4753-a434-6f364da726b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29781d0-d013-4476-842e-364b3163d08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4a6830-c115-4567-839c-932da7d47756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cd0e81-ccc7-4a60-a38a-4533c7fa808d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb1cb8-3d93-4b35-9642-de06462c5d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "405aa091-ef36-4996-9705-479d98f67b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486cb2c1-41a7-423f-bc39-195c885e051d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f62755f-8062-46db-bf38-fd93c173ff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbd8fd5-d4ef-49f3-bfed-b06ef9b6805c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075a0535-c90d-4a19-9185-278d7096cba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187cb130-e41f-476b-bf41-441213aad810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d3e2c-8705-4462-a669-6b9d536c9262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e5ce4f-b8a7-4338-b382-a9373b177836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec03cf-332d-4ea4-b2ae-cbbc8f962aca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea862f3a-5339-423f-8186-35e040080c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aacd31-9db1-45e7-9259-2aadaa0cf5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca99a47-1476-4492-8296-ef47ccc407d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb42722c-d74b-45a7-8e77-c53ea9b32dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eebe62-a676-4f3f-a26f-7a6506eccd10",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e62f0-1e9a-4456-b2da-f4e3b3bca595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cd2bcc-9d15-4610-b12d-aae9f76bdd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f072c3-945b-4ff8-9051-ddcb619835ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c231206-0a7f-489b-81b7-70a23e84638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98821b5-c1c8-4bf1-a81b-00bb7323143f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373483fb-2de9-475f-8568-758e2eba994a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257a5b01-8d4f-49b8-a4a8-b24d3a654026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a4bd97-f0c8-469f-8e87-657964ee9f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c5d56c-fc02-49ab-8a7d-b446943d950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba328d9-b825-4507-93f6-3f79b7ea5dc3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cefc7bd-7139-4912-aa51-4dd533708494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418a7444-37be-447e-aad9-796fb02f64bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ce772f-e17d-4579-a429-0b1f88d38727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a96d96f-f201-4328-93cd-3297807247b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1c93ef-703c-4755-99ed-649dcd5a4cd9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311545cb-3970-4c07-90a2-18e810a9bc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2168f5a9-586c-4628-8309-85c195f5c075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71d1362-074b-45fe-b6d3-443ac79ed765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2da46f-c798-48a0-9928-08d1ba90d025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df284254-5e37-4cf3-a6ee-9ccc20221973",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae840c0-0bb7-4f77-8877-16dc5752dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d568a0-413a-4a39-8f25-cb805c0203d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c0b946-45f7-4263-87d5-22681c017e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adb36c7-da7b-46dd-8a5d-af0677776b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1808bb50-63d0-4e3b-8f79-32824ed408f6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5da8adc-3489-4769-ada9-bb631dd2883c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69372e8-cc24-4235-909e-954dd56d5362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baefd9b2-3dac-40cf-856f-473f69e4d086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287a4cf2-d067-42bc-9671-1a11f856f8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e3fbe8-3a52-46be-8220-1695edd5a014",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff2d8fe-d8ac-48f5-ad75-500b72288913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6906d2-21b3-4cb9-be48-0953ef4cecab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c63062d-ac33-4309-bf23-726e3a2d3f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d54057d-f7ba-4f72-be51-6790cf6940a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15216d2-dff0-4a1e-816c-fee139a2d2e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9800cf-9403-4780-84a4-1b4a22824792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2fe49e-f56d-4999-9a37-59e8c5a902ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3408619-c729-4e99-8bb7-148ca225a7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5d84f-73ae-47da-b644-94790b96508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fa6fb2-9091-4995-8001-287711c2f73f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef9ae1d-97e6-4527-a56b-88d0ed815d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c37e28-d2a5-45f0-aaa3-53749f0a4693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25deb392-d4ab-48be-8909-12f6a2aabbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82d5627-12c0-4e97-a609-e38bb4f6a7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97109d6-b561-4c1a-8ec3-cadadf1b0f58",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba28b70-cfee-47bc-a680-395efb2122d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9d71b5-3c1e-4d1c-b846-30bd64d86dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271886f7-2864-462a-8ac6-8f55a378b56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7beea1c8-09b7-4716-bbf0-fe18ac3dd548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e59bee-e416-4c01-a166-af5a510f2ca1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87569293-6664-4d43-ae9a-1ad08b05fde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee407f83-6cb3-4897-ada1-3ded42e2e397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc14614-5816-4f47-930a-cb33a5262eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb9becf-cba7-4bc5-84ad-507d7d8ea6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3830fd96-e45b-4fe3-a752-4978ae53a9af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b7e5d5-1349-405e-aa44-48485661ff2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49156284-571a-4469-80b4-4fd18068a112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75059068-a2fe-4bce-941c-d8419d597971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7bd5a7-e7d0-46a6-8616-9356e9433cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556e9a27-a839-4fc0-8cbd-561c3d8d38aa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ff13cc-d6b1-4005-81e1-8b5f531d814f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d30044e-dcff-4baf-9d1b-b703287fc252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfeaae6-d88b-4b5b-bd4d-30eb3538c327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232e81d6-09c4-4b5c-8b7b-6e07ffa16d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd10e62-6e1c-4b88-bb81-44f30704ed90",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed8f15-f92c-4c60-a45e-3c1e1cf87743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbb1263-24a6-47db-a464-bf7838f5a952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f2f5fc-04cf-4f83-b4d6-32d4c68aa8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e47452-e2c8-43e1-8ed7-c6cc8363a8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a693770e-9e5d-409f-8f99-7b5929035a5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e0666c-8569-403e-9aea-4793c148912b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7671d72d-ef09-487f-b63d-69768d31793a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af0422e-be20-4c3f-b3ca-264240b2bb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d8595e-d07a-4c74-b8e2-c2b85d632d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5a239-24e8-4e90-9f42-e90a92b8d218",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc40f617-ded8-4364-bd58-967f3c0c5fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73947d0-93b9-4873-8bf1-4c7319a6b568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817877d9-f036-4213-aa7b-77b4b114505c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d001dccd-f375-4ed2-a8eb-2b182c5baee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aacd7ec-5f4b-4252-80a4-7f8c8dfccf9f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dc262d-425f-4019-9079-89356a23dc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b73208-0392-46cf-b484-f1cb37f55cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d498d-6621-4fa5-8885-d259f954cd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd16b76-3543-473f-9ae0-74f31e9dc5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b21c1f2-7090-4b43-a007-67f420108e45",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c633ef-2a3d-4ba2-a713-35c98c03fa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a4e988-9d85-4658-b0d0-17a71dc40aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d50a37-b425-451f-81e1-7e92ff2bf52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef90a393-6c28-413c-89ce-952825127043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ac0fe6-7bb2-4920-966d-9e812143b8b6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0335ea2d-0341-4109-b4c1-1e2fee7f3b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42045870-48f5-48b4-9bf4-d930388cf1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715d4010-0040-4099-8778-8190154da062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1818a82b-e470-4d58-a6b3-809f7f6a48e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7ed13-3205-4447-992b-2dc34a61c11f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff5a6e3-f218-4085-acd8-deb3f5f18f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263aafb6-ade0-45c9-b882-05e87f893881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ecbc94-4d4a-4960-9849-43e5831dddf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917cf17b-965e-4083-b113-cbf4b260468a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e0c0f7-28c8-4060-ad4c-4ac56939667d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc64a55a-406c-4a5c-ae04-1967ca4d22ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680b5485-a0a2-4b27-9dfc-44ab7184a8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2819fbb-fb39-4549-952e-261efad66c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750e3062-2058-4178-8f68-b917b10b1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed78a99-1548-45e3-9ab5-df42dcde40f2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b155fe-4de7-4476-b752-45d258a95e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d609994e-881d-4aa6-88ab-52b5eb369bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65862673-0ee4-4f97-8559-3dbdb203d947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f791e8-6efa-414a-b4fb-094b0338fd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21336380-4322-4e53-808b-d8c2e6baf9f0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eca43e-d5de-492c-ab7c-e3e110513289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29265bab-fd2d-41d2-bdd8-b5cf855f7916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6f6202-bc36-4d14-b217-ac7a5b41030d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d51325e-58cb-47f9-a4a5-69d5abefd8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3acd0bf-24de-4376-92be-3dcb237e7e2e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade8622-3f9e-46f0-9847-367302f9c70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56be9a9-d0c9-4e3e-8fd5-0ff39e7c20c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537ff0d3-9106-478f-934e-615fe1d07433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60bc054-644d-4c97-8049-87dc958705fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c70f0-0641-4aac-a832-562c823e36db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcf3620-0611-4084-8176-6affaaf27bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2b2c67-27a8-48d1-834a-be2471b95dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c301c-3df1-4f03-85be-888ecc896d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5b5c98-473e-4d45-84d2-f4c74d354cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e76189a-d39d-4cd3-ad4e-836318363fe3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495019fc-0ac3-4d4f-9f65-a7881fd47a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcfbc6a-363b-40a6-b553-51fde27f0b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee799f85-3ac3-459e-a13e-5711f0fdabd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1552b62c-cdb9-41e7-b9ef-f48619b2bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d80bbc9-9862-4bee-a657-8dad939e139c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20839b33-f8b5-4277-b29c-9091033eacec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc96fd07-16cf-4a49-a7b0-e9bce6f542a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc94fed-0f33-443a-ad2f-229b74f7daa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c3a1f1-af0b-49a5-9d95-93af28647de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64233ef0-7fe0-4021-985e-45e7af304967",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ede5e62-8a36-4a62-bc6e-b3e2c4aee02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670ecae6-e046-4438-9c4e-3bdb6cc9889e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e01c88-3b96-485b-9ed8-31a0220d3e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30584a7-c89a-4580-bf69-6349d8bb00e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1371c9-61ff-4c2d-bc32-3f5078751f93",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937c93bc-9549-4a15-84f4-39190ae0ddea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b0dc2d-bd29-446a-a52f-c371f0911a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde243e2-2439-4d13-8dec-9e6eee05b29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2dfdd2-e84e-4ed1-8f2b-43e335f3e4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e733fa9-b55d-4119-aa4e-f97b3a720738",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2475fcc-60ce-46a3-8a3a-a145fce21620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dea47ae-670f-4184-9c85-6521cf82d5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d3ba6-09f8-441b-b777-6cd5069457af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e90b10-0fda-48f7-bf29-4e7743f1c16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70b315-7667-457f-8ce0-3c7641c3a260",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab0f0aa-264c-4e77-b8bc-ea2a3de660ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8eea19-a19e-4401-b2a2-7d31f761ecbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1824ad07-070b-41d4-a21a-20fe981d481b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5389ed-9802-4a59-aa91-432470be7897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30140b92-9da2-4c03-bfca-928b3841aef1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280b8200-9115-4486-8517-6d7fc2c8569c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae55b497-d480-483a-a4e7-6ec83d425657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bac973f-0321-40e3-bcf9-93460ba961d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b800da-52ec-455d-8f20-37787df85a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee17a8e8-b8eb-43ed-9705-e4c3fe829644",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63da75d3-39cf-481d-9a10-3882bb59414c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94394f18-6cef-456d-935d-59eeccd3ecd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8436558-3d25-40f3-a91f-5879faed7f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb59976b-df5b-4de7-83cd-04e026f3a69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a304e4f9-afa0-4001-b390-954493615f2d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bb42e-44f1-4f52-a678-3863b0238ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f596e4a4-06ee-42ce-86c4-c8484ebede37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa8f7f2-5fc4-4711-9172-a6ea8270e626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730629f0-755c-42b5-92c4-188ab0ab9dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2485023-e17b-4769-b195-6a14177fbd65",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfc1d23-f1ef-425a-b0f7-a18973879539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0108238f-834b-414f-8fa3-12fcf5a5c669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048eed29-4b95-4f5b-86d5-461ac9511bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ee4bf0-fe53-484b-8556-afc989d25dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96ff482-806f-48fe-a04a-99c7cc899bcd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fe798b-a3cf-4e55-b5dc-809a3fca947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efb6a33-0533-4598-b869-3145aeaa61f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdebf20d-741d-4789-b858-5f5b95f1ec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2fabbc-d2cc-4b33-95e4-ee8111a08e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec5f58-d234-4cce-9e7b-8de7e8888235",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec87d34f-4d26-46b2-a707-2a2b302b7ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ea25a3-0b90-43f9-952d-7e005092be66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aba720-07a2-4060-ba33-4c254fc869b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d702e0-0ae4-492d-b2f6-6a9a13dad696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68275522-302a-4d99-91d5-0da24ca7aa5e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1b1e9d-1970-4da6-aa30-0fd41f68e0b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97497195-ac41-4268-a70a-2bc4d48523b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e495d-d7bc-4b91-b38e-ad377dedafc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3984b354-1153-4738-977f-13ef0774014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bde7a1-ff8a-4040-a352-1732ab22b55e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ac37b5-ed78-4697-9287-dbea6758ef45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f80b90e-0a41-4a8d-8d5e-95ac27c486a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be95d4c-5bd7-4f1a-80a7-a48e90503e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540e9f66-7f1a-4fc5-a6ed-ca4153cd1ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78f7be1-e1b9-49b8-b1c9-13412d5e8733",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a697c-69af-4606-b8dd-6e33fb1240b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161c15ec-cbfd-4a1d-b708-1965bb597358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb5a9c1-4d63-4384-a7d2-965672d94473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b01981-2d01-4b5e-8548-4edabda9b727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955f018-eb1e-4ad0-9e16-1a7b1765c395",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ac2d03-56c9-485e-991c-1bfa03c8d180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0a418f-0c6f-4b69-8f9b-38278d39f3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9845399c-983a-4f09-96bf-40c334e80454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213230bd-70af-4e1d-b49c-02e69b9fd79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e86ac-b6d3-4fe4-9cca-1a93eb30d8c2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ce43ca-b74e-44ff-83eb-6ca7a4ed02bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ccbc36f-50c8-4397-a7b6-de95236d5a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50a48b2-08fb-481c-9e78-6c6bd858bbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d6a47-068c-42da-88a0-ec47393624a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d099acc1-9586-40f2-a21d-61a573f596b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e3afd-c13c-4259-a470-23c4fad56d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce61748-c5c2-4ab1-b34b-67b72c1e7f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcbb6f4-6f80-4153-8532-58dbbc86cbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88244446-0984-41f0-9aea-7f825554ed39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827b7bc1-8374-4598-8d67-f34a5f847f1c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f9690-8d8d-41fd-bc79-2b922b68a7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8055f34d-4e39-4632-81d8-872bfb8e2226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0b4228-6b39-4117-a4a5-b695ca2ac4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3702ed-43ee-488b-9dac-d70a097e01d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4bc1b3-3c82-4315-ae4b-10d7c80e61f9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768068e8-f5c5-4f2a-b2f6-97c25f8f86ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df9e50c-e6c4-4293-b1e3-f408efe2e2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac67be-ad0e-4420-a2bd-54f994bb1ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2f0008-2490-431b-a953-35cbb0a45d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b7163b-c51d-4e8b-a2a2-5b019701cb1b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e52d0d1-5630-4aff-b23b-0bf953f40215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05756b2c-5fdf-4cb1-b919-7669b6b7ab01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128cd7af-9b7b-454b-957a-54cdfd45910e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83da39c9-a207-4dd4-944b-2ef235b472c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdc254d-f5d1-402d-a63e-dd5b7ea044db",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e146f86-addf-489b-a707-c9502751abd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb59cbf-614c-4de2-b879-87a954597eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063703f1-9b07-482e-83df-1bde286a8673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9153267-78a1-4179-99a4-93f82d506600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630cf667-732f-487e-882c-74a2b5370353",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4e5b4c-c30a-4f6e-a0ee-926e9fcfed91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb3997b-42a0-4f35-8236-c3f61c17d0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df6504-4d51-4082-af62-7b3f53cb414c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ea9a28-a49c-4ada-b6d8-a3d993b93989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7d98cd-4aed-4598-8699-28e15b0be03d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f3f66d-96a2-46ab-abb9-a59da83b68da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ae26cf-44c6-40f1-bcfd-e482aa147453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea0fcf0-f3f4-49b6-9070-90295b8ef539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21616f4a-85a2-4e43-9ce8-acd8fbe5c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff306ee-3659-4ad4-996a-4e37f256837f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34133b42-ff2b-4e67-bf13-800458ca17a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8799f38f-e7f7-40ac-a699-89256e33ddc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f39341-33fa-4186-b364-b4b7b591c315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f7ea3a-23d4-410d-b764-5f86d648f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856df62c-a822-4cba-90f4-066d4b735e54",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839f98d1-eadb-4f5e-9cf0-1a8250e61c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63cc83d-bbaf-420d-b55b-2910d55c1628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca583e-361d-42c7-bb74-a407fd76120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b391de7f-432d-4902-96e8-a68473c1497c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7fdfcc-5418-4fca-9aa9-287316a9471f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffc7eb7-75c8-4322-b256-6956dd8b9b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd1d84ae-6557-4814-b64b-22b6d864e154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f70bb36-525a-45c0-bcab-bd0425d7c99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5908a7d9-be83-4637-b286-72508c79d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04953899-8ea1-49d1-b606-db82b8edcfaf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ca9fa8-8121-441b-bfc2-1631c3274ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3872c98e-a799-43e5-8dca-a65a55e1e955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32a40e9-a1fd-4149-bc2a-05c739f007ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30efdfb7-b13a-4910-a1ac-f9e284ee1094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9345c7a-672b-4e22-b361-9e81368ce873",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e41d63-907c-4cf7-8a1b-9ed65ccc3a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9d79f1-2019-4faf-b7c5-eaa4941ab30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160adf38-d448-48d3-9f0a-a77e606b65aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7fcc79-a304-4c44-8741-94d86728766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af04fac4-93cb-4fe4-b20b-8a9cf29929a3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c864cd8c-761c-461f-86cb-5d7027faf2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f3db31-e4d8-47a1-9cdb-895884305dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50443b3-c35c-41b2-95de-911ce3a27922",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711ffc44-68c6-4488-a67a-11b8a7c57081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98433b48-f2d7-4c81-8062-e403633692f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d0a2ac-0e0f-4273-a6ba-914685375ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31204006-c23c-4868-8f9d-89b75a55290a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d286716-92c8-4b1b-96dd-d4b0bf57fba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4e05e2-7863-4744-86d9-1047f76e62f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8001d5b2-2bff-4313-89f4-2e078f5fcd15",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765e5c42-0918-4856-9f45-b0a1e8809ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87b60ff-c02c-4172-b341-d94cb6772f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4ffe39-69e9-4c65-87d2-c49eec1df40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af6b03-7ecc-486c-889b-caeccddfbe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b86720-8f31-4252-901b-b17c22a75625",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b92de-a0f4-4436-86f8-875c6e33fd2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71774ec-1145-432d-9aa4-61851bcba5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098b1ab-f625-41ba-a345-8df1ab6099d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68086149-fc46-4fa4-9f09-0d5104c50d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce121da-baae-4b63-84bc-0bb6fd340d01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6617ed83-f807-4b66-852f-e26ddad25f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d191936-d60e-4eba-a27f-d0334932cfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896a658-8a2c-40f3-9e05-fd7640dad151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8d7762-7813-4dfb-901c-cf196bfdc5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca7464-4b5b-48b9-ae91-a0c4f488f976",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee382c-4db5-4926-8609-d3f009333be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35d7e1a-2a10-4ad8-8d88-bd3691c12e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1188f47-9b20-4c62-92b4-e2ec1356959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114e4922-71f1-465a-885d-0d905e6b453b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b34980-3258-4761-be15-74736ccd8ef6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cca7b58-6140-4762-9fec-4a9ac137b2de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d117ea8-4873-4fc1-855e-dcfc0ac1451b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181de70-e3ce-4ae7-b785-c448c2e7d4d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f46d069-120d-4ed7-9885-d912deabfc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e9a350-4c39-402a-9f3d-f5c301e17ad0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51762e1-4912-4abb-ba30-0dcf6125de0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfb675e-2a23-4ef2-8edc-83c9f5f8a6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5286d5e-627d-4748-abbc-7395025747cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5341c8cd-193c-4046-98c7-734c7cb58f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24734206-85d3-4c62-8412-a39535d763bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd3875a-1a43-41f5-9242-6bf9288ecf87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84179787-c983-4533-9dc2-45d4de67fa1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "600be46a-c546-4c1b-89ee-f7a62de4ce69"
                    }
                  }
                ]
              },
              {
                "id": "64cfded9-6acf-4424-bd6f-8ae3bfd70a91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "977fe060-95ae-413c-bc83-56a30ecba8e3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c67e5b-6f91-424c-ba5f-9e7f21d45c5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c5075155-f7ea-467d-9a02-493fc946aea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de34c19b-abc1-4b61-8c83-b6c76387c131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ec7a1b9-207e-413c-963b-cbd15a39b5aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0e03fa1-6380-4486-8bfb-152329e2aef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67bc83fa-7a20-4d03-b16b-776495db9b61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a902550-1f6b-44f6-bcdd-9c3a57b6556b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1878570d-4be2-4595-a496-fef4f2c6a438"
                    }
                  }
                ]
              },
              {
                "id": "930b27e1-178c-46db-b1f7-84c28b98dfad",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1afbff42-4a3f-4a7b-87f7-51174888b0f7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40a5c26-a14f-411a-9ed5-d17727fc7f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29a7957c-2954-4756-a214-20c45792b251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b76757-862e-4d5d-86be-211518cfaa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e3b2cf-8edc-42d4-a5ad-82b15e9f94fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8842b788-482e-4f42-ba82-9be7a75102aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f86d4443-ce8e-47a9-a564-b7669bf8aafc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ecb7061-fb9c-43dd-835c-70173242019f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "051ff0c0-8c37-4db9-8f98-468cc0cd9e6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7111b00-dd88-465c-ba10-0f63d1c94590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d87fb687-0f4f-4afa-8833-a75f607e4bcf"
                    }
                  }
                ]
              },
              {
                "id": "a62a5b2b-edc1-42ff-ade6-fe6c7661db6e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef3cf98-d963-43d2-832e-0c6948b0ee80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35b55b73-f532-46cf-a6c1-2bcf144286ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc3bd90-3685-4077-b85c-d1350763541c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac83d7c4-b77a-4f21-a2da-f9fc6417fa97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "148c33fc-86f7-48fd-ad20-d832492f2c5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ebc8554-beca-4924-b0b0-087e89a46c93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e052492-b779-42ff-97c7-9214ba531ee7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c129c44-eb75-4501-bd8b-f5c5b8666153"
            }
          }
        ]
      },
      {
        "id": "56be4304-3f34-4d2e-b0c2-4142f6441daa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06bc0dfe-d921-404f-9b44-c6f82d700384",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac629a60-6ed1-4931-b83e-99e266493122",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0465c56-f14e-4d81-bb1f-56e9f3cfd7fa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a70e514-d698-4f3e-882d-d7df8a30b487",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fb07f443-a116-4886-a0e3-2367b71fdc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd005f-26e0-4e1b-8bab-28fb47295aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25d58325-e78d-4234-bc59-21d7aff6e90e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a53109a1-7c78-4cb6-875f-2396d6b3dda4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f459cd07-160d-4808-96c1-4c3ce925edcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba23df10-72f1-4882-b5af-4ab85c40bccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fee1ae3-c126-4800-8739-6bbe4a15ec95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bcb8b75-5391-4486-8693-6cd04b7486e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "71e01535-277d-4343-9a51-594018a8609b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3f518ed-35bf-41bc-95cc-91e6351092e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1652b28-b910-4c3a-aa17-60165feae90c"
            }
          }
        ]
      },
      {
        "id": "d09ba0ee-f42c-4288-baa5-5e759122bfd7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "894db2b6-4a77-4ab6-abc4-d2f9634e9b06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50bd3e6a-370c-459b-82a8-9067cacc6d2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e173a99b-fa94-4f1a-a314-315c901feb7e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253aeb18-d003-4213-a791-328434b1ed80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "917389b0-865a-41a2-8099-eabb83f8475b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85088be7-9f5e-4538-9c3e-cc14b1921140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11d83a83-7162-4872-bce1-0f0d1adf96b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81be2f33-7810-4d31-9b76-4ecd5c5b49b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2396de6-fb95-4709-b5cb-2dc95d5eb864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c4ad2e4-3003-4af5-856a-a452bdd779c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37f8fd8b-d0de-42d9-baec-df1a7f293509"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9e9a7af-d665-4913-9f58-6db34e894e12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "596739ad-0372-47f5-9a33-2869444712b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f02e7cb-0bc9-46ff-b13d-609c0c959382",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cbee889-5914-4e82-b1bb-2aa45b3e5b2e"
            }
          }
        ]
      },
      {
        "id": "89a3c84e-d451-49f1-9020-f0b3a847790f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9c90ac31-bc84-445d-b47b-82afecbcea80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "523b7927-694c-4e47-a2ea-601be7e61e1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "003c822b-5ccd-4b68-b631-7c30d897ee5e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc72f51-e6f4-40cc-996e-e29b583c57a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "316ba5ed-3fc5-431c-856c-f97748ff3154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd08cd67-ae56-472b-8129-38ae625abd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7be23839-6290-47aa-944b-ecd3e99cde39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86547266-dbf3-490f-9c7c-646cd31bd633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "962140dd-da93-42f0-9654-4fcfa12a9eb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a604da30-fda4-4acf-b4ad-12f4e3365ac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a9080b6-c9b0-4426-9ca8-273d973a2bb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fb37e69-1938-428d-bf8d-d2a22f68a35d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c70f474-cc9b-4925-a1b1-9f3c9fdc51e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "290d8d0b-31a9-46af-b7dc-66c76dd1add2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69c8a95a-1595-429b-ae9f-3b1aa5cd5cef"
            }
          }
        ]
      },
      {
        "id": "c367a338-0209-47b8-8634-c6e6b81acbbc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac49abe6-6dfa-45d0-9f55-700631170ba6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "268cbf00-ccc2-4beb-a79a-42945d8dfa82",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7bbfa2a9-0eee-44d7-b10e-f57d4b74f8bd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8812f02a-e044-4c1b-833f-431a2bddafab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "115f7564-451e-4ce9-bac4-71b0a3fefde5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.904761904761907,
      "responseMin": 7,
      "responseMax": 784,
      "responseSd": 50.796814137607264,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727225167858,
      "completed": 1727225180097
    },
    "executions": [
      {
        "id": "bc8b7cb6-c656-465e-b5f1-e193cadae56a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "852f8cee-999a-41dd-9e49-f3baec5e266a",
          "httpRequestId": "44974e47-9273-43b5-b57b-d7caa0d77910"
        },
        "item": {
          "id": "bc8b7cb6-c656-465e-b5f1-e193cadae56a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "714eac02-db29-4b14-8962-9cbb68e39364",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "61b6817d-19ac-4f44-81f0-7b36bdc0fd01",
        "cursor": {
          "ref": "728a42c0-e146-4e3e-ba81-412145c8fd80",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d498a15-3098-4988-b8a5-91d0b5fe1c72"
        },
        "item": {
          "id": "61b6817d-19ac-4f44-81f0-7b36bdc0fd01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "61925bb4-f778-453a-8f97-b940898b2cf5",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "128369cc-e2d8-4c3c-baed-c79999d6e7af",
        "cursor": {
          "ref": "4c4a9c91-9cc7-40d7-9e0b-92ba950befcc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d4f140d8-1268-4eb7-be15-182c53ad3752"
        },
        "item": {
          "id": "128369cc-e2d8-4c3c-baed-c79999d6e7af",
          "name": "did_json"
        },
        "response": {
          "id": "6c856a57-ac9a-4cc9-815b-b083edbdb7fe",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6493cb3-de25-479e-aefe-6b7732699b09",
        "cursor": {
          "ref": "d55a84fd-fffb-459f-94f3-a342d191e16c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "efae6d72-2c50-4113-a663-4893a991e8e9"
        },
        "item": {
          "id": "a6493cb3-de25-479e-aefe-6b7732699b09",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0303f05-d7a7-46f6-acbb-287f29ac6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6493cb3-de25-479e-aefe-6b7732699b09",
        "cursor": {
          "ref": "d55a84fd-fffb-459f-94f3-a342d191e16c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "efae6d72-2c50-4113-a663-4893a991e8e9"
        },
        "item": {
          "id": "a6493cb3-de25-479e-aefe-6b7732699b09",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0303f05-d7a7-46f6-acbb-287f29ac6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b803ddf6-81ed-4727-9316-f4c4479597b0",
        "cursor": {
          "ref": "1a5093c9-e842-478d-9ac5-49b3ec897e5a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a56b1a1b-4d98-412b-8569-335d4ecb7da3"
        },
        "item": {
          "id": "b803ddf6-81ed-4727-9316-f4c4479597b0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ca9d14d5-03b2-46bb-b700-06c7d068a2ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b35144e-fe92-49ed-a0ed-fc18d8ef680c",
        "cursor": {
          "ref": "3552e096-7a85-4540-af49-40e6b55db1e6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e5744a4e-bbbb-4af9-90b6-35f473609909"
        },
        "item": {
          "id": "2b35144e-fe92-49ed-a0ed-fc18d8ef680c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ece1c276-2961-4aa0-a909-8b4ba772089a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c209b31-79fe-404a-a810-9fbb912b0c21",
        "cursor": {
          "ref": "a9e0c71a-3f86-4f3e-8c2a-d506a69a673c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc46473a-c83b-4242-8b35-edfd823750f9"
        },
        "item": {
          "id": "0c209b31-79fe-404a-a810-9fbb912b0c21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fc5b39d8-7ce7-4e38-aee5-c39996b514b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db1eb3d-ac75-4436-b191-5655743e5089",
        "cursor": {
          "ref": "5fd038fb-d051-42dd-9ced-a4330dd76ff5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5a87414f-9627-4ed2-b7ce-a1f0e4a38e62"
        },
        "item": {
          "id": "7db1eb3d-ac75-4436-b191-5655743e5089",
          "name": "identifiers"
        },
        "response": {
          "id": "9c5b08c6-2942-42e9-bc1d-f6f3d2e18ab8",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3ce5c-5703-4a9d-b5d3-1410cd5d4f4e",
        "cursor": {
          "ref": "56705a8d-01ac-45be-a3aa-3776474c128f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cd64a9f2-b0d0-430a-87a8-7ea44cc6ceff"
        },
        "item": {
          "id": "bea3ce5c-5703-4a9d-b5d3-1410cd5d4f4e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b5e03398-759f-4a6c-ac79-e79b54a68d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc028ec-6c72-4174-ac7d-facf39660116",
        "cursor": {
          "ref": "15d6fc9f-d01c-4daf-980f-b04be928d7e6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "68c83ab8-c03f-400c-a34f-79b8dfc8f02f"
        },
        "item": {
          "id": "6dc028ec-6c72-4174-ac7d-facf39660116",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b233f2bb-1d43-44f9-bb70-097ddc2b456b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9f69ce-d46a-405d-a027-119c4f7b38f5",
        "cursor": {
          "ref": "6aa3634b-4f4a-4108-8992-40067fb78909",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "40421527-aba6-4dc0-9695-08b42e837fa8"
        },
        "item": {
          "id": "cc9f69ce-d46a-405d-a027-119c4f7b38f5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aa560ce8-cf78-44c3-9d40-214252e727a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242fead5-3042-4aff-a262-5da9bba02a43",
        "cursor": {
          "ref": "5a3ec1d6-d0bf-4335-9a75-31a5345f69cf",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "35960325-1fc3-40b6-b104-ae39bf8c0d71"
        },
        "item": {
          "id": "242fead5-3042-4aff-a262-5da9bba02a43",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8ce87d3a-10f5-41ce-833b-c1a6666826be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fa9f2-84bc-4bbc-8785-da55e4dce964",
        "cursor": {
          "ref": "2459e12a-517e-4792-9a80-1941d0d53437",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aad64283-501f-4b81-afb9-622f4f5bce1c"
        },
        "item": {
          "id": "af8fa9f2-84bc-4bbc-8785-da55e4dce964",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "29443ccb-1731-48c1-9840-b33d6f74c588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e509b98-c68d-4166-bc61-fae276315fc5",
        "cursor": {
          "ref": "435e8214-5079-49a1-b7ee-00a45fe4ef95",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d6d2fe51-2c91-468b-bb7e-5cf292eea943"
        },
        "item": {
          "id": "6e509b98-c68d-4166-bc61-fae276315fc5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9840e91-2a41-472c-a077-d5812a184a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfc920f-1392-463d-a7c3-e6f6cf808f91",
        "cursor": {
          "ref": "16905a53-6015-4a06-94d3-c5a8695c87b5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "23e26867-c250-4c66-96b9-492e33e46157"
        },
        "item": {
          "id": "6bfc920f-1392-463d-a7c3-e6f6cf808f91",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "45ad2294-dc1f-4b93-8812-352ce13fb8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8795bc-d459-469f-a707-553cb52403ec",
        "cursor": {
          "ref": "d77a0975-290b-4ae3-a967-8e743a2e0df4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d9f5e1d-e51a-47b4-90e1-80b89745cef7"
        },
        "item": {
          "id": "fe8795bc-d459-469f-a707-553cb52403ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6257a5d7-1b35-477d-8dd6-3ae11c22bb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f76dd2-3873-49ed-a328-e252c68253c1",
        "cursor": {
          "ref": "9ce54319-cc59-43f2-bb45-aba34208ec7d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bfbdf877-6f3a-4937-bf39-674b051ed868"
        },
        "item": {
          "id": "c8f76dd2-3873-49ed-a328-e252c68253c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "68036e1a-fb93-4939-88e2-102c2922d3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96641d8f-548a-468c-be5a-2de7be8c7d0f",
        "cursor": {
          "ref": "1a82a0bd-9b7c-4f18-bc49-715b0c7fc962",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3b9fb0ca-843d-4abd-8521-ba98bc82e233"
        },
        "item": {
          "id": "96641d8f-548a-468c-be5a-2de7be8c7d0f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6b6ae3b5-4ee4-473d-8680-a84addb9e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469452ea-13a8-4fac-8ef6-72b96fe2f364",
        "cursor": {
          "ref": "3e9aa7cc-970d-40c3-ad64-be253dc3ca3b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "32a3ac9c-bb57-4612-a7d4-9e48cb568715"
        },
        "item": {
          "id": "469452ea-13a8-4fac-8ef6-72b96fe2f364",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7573bacf-27a4-4ba9-9c03-bb3ce6e9829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13d5c79-9c55-4555-93c7-8a32a19f362c",
        "cursor": {
          "ref": "ecc95bdf-f7be-4503-8d0c-6a1b182f7fe7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c2ea740-cb82-475a-bcab-32fe7e38376b"
        },
        "item": {
          "id": "b13d5c79-9c55-4555-93c7-8a32a19f362c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9417fea3-56d3-4bd4-b544-9ac61293aa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f1b68b-d1f2-4dd0-9ad6-fa89aa37d13f",
        "cursor": {
          "ref": "bea19f6b-8790-4e43-a92a-4d793c162063",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ff56dd02-8f2b-4456-b5ab-a17267e072f4"
        },
        "item": {
          "id": "d0f1b68b-d1f2-4dd0-9ad6-fa89aa37d13f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "124d8c13-a997-4eb0-979c-c1b3fbb368e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabb82d7-18f5-417f-9cfd-521dde2117e5",
        "cursor": {
          "ref": "7d8cdbe8-1d27-4fa2-a560-77da6e459b95",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c0e86ef7-92ba-4aed-93db-b46ef0a52baa"
        },
        "item": {
          "id": "cabb82d7-18f5-417f-9cfd-521dde2117e5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eecea82a-0a51-4404-b95a-aa74af57b62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19032b9d-40da-4f65-af43-8f8f5124e3c4",
        "cursor": {
          "ref": "295c6d2d-e1f4-476a-8b55-c116a115fe24",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9f3971f2-fd4d-40de-8d7e-f584f66268c7"
        },
        "item": {
          "id": "19032b9d-40da-4f65-af43-8f8f5124e3c4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6182b2a2-e5e6-497f-b181-fd0582ec29f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd0d190-81f3-4a9a-b190-e0bdfab68464",
        "cursor": {
          "ref": "edae419c-909b-4e9b-a031-184860a8d1ca",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b05d9e69-ca8c-4b41-bb84-bd09d6a9e082"
        },
        "item": {
          "id": "bfd0d190-81f3-4a9a-b190-e0bdfab68464",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d1b55b82-3e9a-482b-b52a-63d9d20060ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1a06fb-5569-4b94-bb9b-7b979f9f71a2",
        "cursor": {
          "ref": "d2c8f712-3faf-45bc-a6c0-e8602a3b074c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3b444d48-8819-458a-8c40-665809ef2a93"
        },
        "item": {
          "id": "2d1a06fb-5569-4b94-bb9b-7b979f9f71a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e99ae0d-c661-4a51-93c6-1f66457c7dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238239de-f10f-44eb-9574-31f97c31ae99",
        "cursor": {
          "ref": "afbf7d70-4548-43b8-b654-de05b1758cc5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a7a7a14e-e6e8-4551-9467-b85b9eac3cd5"
        },
        "item": {
          "id": "238239de-f10f-44eb-9574-31f97c31ae99",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "84012a93-0655-40c3-a15b-f8368e6fae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1920bb-1d3c-4bb7-a1d0-36d501535a62",
        "cursor": {
          "ref": "f34252b2-c674-4752-b986-4c2e27542621",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7a2c06d1-afb6-4c4a-8d9e-cd46e9e5f1ba"
        },
        "item": {
          "id": "4e1920bb-1d3c-4bb7-a1d0-36d501535a62",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9a7d44e9-b526-47b0-b6cb-b23f2cc45c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8bc56d-e9a6-45ab-99ff-f765ae8a1b76",
        "cursor": {
          "ref": "3df6a925-2980-44d2-acdc-7a0540e7b6a6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0d84fab7-4f41-43dd-9320-8de3f687e585"
        },
        "item": {
          "id": "7f8bc56d-e9a6-45ab-99ff-f765ae8a1b76",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4525d350-a8dc-450b-a730-94081c9d206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a9003e-6b45-487d-97f6-85f0f80efc13",
        "cursor": {
          "ref": "9efb285a-acf2-4040-930c-c396b7c28b31",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a9cab1a7-e061-44a2-8baa-a769a18a8ba3"
        },
        "item": {
          "id": "47a9003e-6b45-487d-97f6-85f0f80efc13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4e7a9ffe-53d4-4264-a4e8-cd5d4d5f4222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d7890-9afa-4454-831b-dff6d1bcece5",
        "cursor": {
          "ref": "fc51db91-c7e4-4a0c-9d8f-f5ee07f813fb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "233f5aa6-fbe9-4a3f-84ed-ce8540c5330f"
        },
        "item": {
          "id": "851d7890-9afa-4454-831b-dff6d1bcece5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f6a42b1f-2c17-4f80-90b7-6948f407b2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6101a55c-546c-46b7-b5e9-9e3e5277f60c",
        "cursor": {
          "ref": "147ce7f7-3d41-4833-bc49-8c35c563d229",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aa115820-3779-4015-99d0-18e8f4980a4f"
        },
        "item": {
          "id": "6101a55c-546c-46b7-b5e9-9e3e5277f60c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c3a4b229-708e-439b-aa45-5290005a582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67af303-b226-4302-8cab-f2f340dd791d",
        "cursor": {
          "ref": "b13cf6cb-a63d-4001-9968-220d7e4b9a87",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ad052c42-11ba-4643-861c-6fb7e09571a0"
        },
        "item": {
          "id": "e67af303-b226-4302-8cab-f2f340dd791d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "02912631-8c98-4e9b-b2f6-23e428d7be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c65d60-00b8-4722-9b61-98d0a9d3a015",
        "cursor": {
          "ref": "08eae8ad-e3e4-438d-b812-aed1a4ccb36f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "593c945b-9255-4843-9eef-e5df9014c1e1"
        },
        "item": {
          "id": "c3c65d60-00b8-4722-9b61-98d0a9d3a015",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "983b2109-d530-4f35-9eb0-5b3a47d3708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5026c728-77d2-4cb7-9c3b-73c4efb7bfad",
        "cursor": {
          "ref": "790eb51a-0f49-44a4-bb39-8faddb393fcc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "20443f8f-839a-488b-9805-f1de66bb321f"
        },
        "item": {
          "id": "5026c728-77d2-4cb7-9c3b-73c4efb7bfad",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "752d2b98-5fb3-43f3-b0d5-046b22207623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef64ce85-1af7-4918-9c7f-e6753f87a611",
        "cursor": {
          "ref": "54650896-4767-4f57-9eae-5aa2c5c50b47",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1b688815-1abb-43d8-a00d-d0e94c58e7b9"
        },
        "item": {
          "id": "ef64ce85-1af7-4918-9c7f-e6753f87a611",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1b6988e6-44c0-42ba-9025-e53c53e8db2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7734ae7a-2c44-4eac-94bc-ed1ce18d9b0d",
        "cursor": {
          "ref": "c74c2ae1-2f53-4128-bcac-5c950a60e183",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "20f2eeb6-bbec-4c9b-823b-031fae276ce9"
        },
        "item": {
          "id": "7734ae7a-2c44-4eac-94bc-ed1ce18d9b0d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "653857a0-d61f-4e88-896b-22e136525af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787a17a2-aa37-44b9-abc2-1aaab65f0d3d",
        "cursor": {
          "ref": "44d439cb-adf6-4ded-a1d8-0485569dfe16",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "87895e68-0a59-4fb9-b53e-b7323e17000e"
        },
        "item": {
          "id": "787a17a2-aa37-44b9-abc2-1aaab65f0d3d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4024333a-e9d2-46cc-8e40-b61f2530b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ae30c-9d00-48d8-a81c-3c88d4b1eaa2",
        "cursor": {
          "ref": "ba276686-56f7-437b-aecc-42e242380b0d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "420367c2-4a9f-40ce-b742-99aa17f96498"
        },
        "item": {
          "id": "d73ae30c-9d00-48d8-a81c-3c88d4b1eaa2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "26b6b53a-cd31-48d5-a0ae-43a82ea47286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b61a23b-dc4e-4f11-a344-93933d42b3d6",
        "cursor": {
          "ref": "72ca0d21-6e18-48c8-a615-55594eff87a7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "38549355-3576-4b48-82e1-e2e853e5e660"
        },
        "item": {
          "id": "2b61a23b-dc4e-4f11-a344-93933d42b3d6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "420b9925-1a98-4cb1-8fdd-3b0955fe125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb47e67-fc25-406b-8a89-67b9be528c8d",
        "cursor": {
          "ref": "3f2ae4a4-7c2e-457c-827c-2a1857011f17",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "64e4a9f9-12cc-4934-8d4a-490a7c7e43a4"
        },
        "item": {
          "id": "0cb47e67-fc25-406b-8a89-67b9be528c8d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "772e1734-0a95-4d70-8c62-cee926c51d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32415f5-91a3-4cda-8b51-efd4e5b3acbc",
        "cursor": {
          "ref": "0e96832f-2847-4716-a02e-a9536988fa7b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c79cd90b-c2b0-4329-b29a-5403cea3013e"
        },
        "item": {
          "id": "d32415f5-91a3-4cda-8b51-efd4e5b3acbc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "31846544-d9ce-4b8e-9cf2-fb004a1eb432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0c1487-aaa6-47d4-a852-0b3aa42f3e20",
        "cursor": {
          "ref": "29e05ff7-b5a1-4944-9431-647a363b57f6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4804e048-0540-415f-833a-de76117eb395"
        },
        "item": {
          "id": "fd0c1487-aaa6-47d4-a852-0b3aa42f3e20",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dd715ae9-1b84-4ae2-86c3-f2fd7b69278b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e486a694-fa12-4174-9073-79d09fd3c721",
        "cursor": {
          "ref": "06871f76-abcf-4ed4-bac6-cae5844735e8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c12a8224-ebf1-4437-855c-469e001942f8"
        },
        "item": {
          "id": "e486a694-fa12-4174-9073-79d09fd3c721",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9134116b-75b5-4cdd-9cef-609c015de5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83748d7-20c9-4831-abd6-dd89fbd952ad",
        "cursor": {
          "ref": "1268d777-2cdc-4d14-bf23-7b33f6a4af4a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "12988cf9-ab0f-4af4-897c-1922f7cf8d0d"
        },
        "item": {
          "id": "f83748d7-20c9-4831-abd6-dd89fbd952ad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bae03df8-e848-4a69-96b4-2a6c171b6696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d584764-2526-4e7c-8874-ff638feae3d1",
        "cursor": {
          "ref": "91a4e29e-4e8d-47d0-aa24-87584b802066",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f39edc5-b6f8-4a75-9a31-9a9fcc0b33f0"
        },
        "item": {
          "id": "1d584764-2526-4e7c-8874-ff638feae3d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a31b7354-9ae7-48f8-b978-910f5e5ba852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2a284c-de16-45f3-9d95-7f9d9abd3b88",
        "cursor": {
          "ref": "7eb565e5-b95f-4eff-a224-1893f780f8d0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d2fb2ac3-2103-4a10-8ed4-d39e7df95ff0"
        },
        "item": {
          "id": "fc2a284c-de16-45f3-9d95-7f9d9abd3b88",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f10d9c4-6a1f-4f4e-b719-e3c08fa53131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed04a260-0f2b-4a65-afc1-4bc6e708052d",
        "cursor": {
          "ref": "2531a852-5e96-47cb-951e-9b6ea5c59132",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "747c7f02-e5e6-459f-81e6-71576fcfc145"
        },
        "item": {
          "id": "ed04a260-0f2b-4a65-afc1-4bc6e708052d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "301b4f8b-402e-4028-b7c8-6a30528f19c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3299cf-484d-4bb3-81ed-ce0ed05d22a1",
        "cursor": {
          "ref": "39a028dd-4213-4e4f-b3bc-dc416cddbdaf",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d994c97-c73d-4f84-8dea-6c7e2d17f4cd"
        },
        "item": {
          "id": "fe3299cf-484d-4bb3-81ed-ce0ed05d22a1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bb52c050-c7db-4330-9603-b7f04cccd6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a6e736-0581-4ef6-bbf3-d2229e74d696",
        "cursor": {
          "ref": "d145540d-eac5-4cc4-b9b4-58c600821d32",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b20e0070-368a-400d-aa5c-f8ba4b2d34ac"
        },
        "item": {
          "id": "93a6e736-0581-4ef6-bbf3-d2229e74d696",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "543477b9-92c4-47bd-bac6-5d2483b81337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1f695d-3193-4c37-a38a-eaa5c82e32c1",
        "cursor": {
          "ref": "8e97dfd4-a7e1-4f66-b006-05f05f15c110",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "855a8553-4dd2-4b63-8a46-cb5d38490bd4"
        },
        "item": {
          "id": "2f1f695d-3193-4c37-a38a-eaa5c82e32c1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "89cf40ce-bc73-4e62-a80e-eec0778fc730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4510f1e7-04f7-497b-ac1a-8030cff867f1",
        "cursor": {
          "ref": "4451b84b-6218-4f38-af5c-61c96773ec82",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66472bf9-d572-4a74-97b4-bc60e7fdc247"
        },
        "item": {
          "id": "4510f1e7-04f7-497b-ac1a-8030cff867f1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b8000661-2da5-4055-ac00-c293eca7d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db61df0-42b9-4e7b-8711-3d58a6cb812a",
        "cursor": {
          "ref": "ea7f596d-0f67-4429-b09e-e3c735e579d8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cc196d68-d7cc-4244-b932-b98a427a24dd"
        },
        "item": {
          "id": "2db61df0-42b9-4e7b-8711-3d58a6cb812a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b5625b49-2687-4dcb-be65-e382c6bb6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d11d0d-e35f-4575-9173-da1f5d32e870",
        "cursor": {
          "ref": "120dfb99-7080-429f-8dfd-38f657262099",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c54b353b-2b3b-4b2e-863d-a9b4277fa2eb"
        },
        "item": {
          "id": "34d11d0d-e35f-4575-9173-da1f5d32e870",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ae326a0-c730-4f24-a693-ce538f7015a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368e2686-f485-4b27-a23e-5b630a359a4a",
        "cursor": {
          "ref": "30956aa5-4cb6-4624-82d8-6a079221d0bd",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f74763c-c5d5-4dbe-8223-13330c42f5fb"
        },
        "item": {
          "id": "368e2686-f485-4b27-a23e-5b630a359a4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ce130f9d-01df-4e17-aa54-b86cbaa98330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eab2c6b-0e48-4d77-a39f-6f1e4c48d032",
        "cursor": {
          "ref": "6587fccf-f960-480e-b01e-2b2b4fa80b48",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c3e0c88-1ea3-4b82-a31a-ba642a845558"
        },
        "item": {
          "id": "1eab2c6b-0e48-4d77-a39f-6f1e4c48d032",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ba9d746a-e8f5-46a4-9199-87e6c89275fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f25ed8-3aef-4025-aee4-90892c3962c3",
        "cursor": {
          "ref": "33a54c71-324c-40ec-88c1-1ef442d2c1a9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ec9acb5-0a0f-4bb6-add9-063b9fa5fe3f"
        },
        "item": {
          "id": "46f25ed8-3aef-4025-aee4-90892c3962c3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c1df7c7-2c3e-4ea5-885a-806e8b4be6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cdcc1b-97a4-4bd0-a9cf-2c9e54ed56bc",
        "cursor": {
          "ref": "8465ee5e-69ff-4ecb-8c5f-c77d10ffd94d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cd9756cd-e331-43a4-9abd-043ce45a2aea"
        },
        "item": {
          "id": "c5cdcc1b-97a4-4bd0-a9cf-2c9e54ed56bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6b4b15e5-b21d-48f0-a7e9-01d84e2f04d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e8e1d7-d796-4d8d-af85-10078ab07a16",
        "cursor": {
          "ref": "a586f227-2e7f-4eff-bd6d-5dbbbd6d74eb",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e9384b94-ab63-4643-a589-92448bbcc978"
        },
        "item": {
          "id": "14e8e1d7-d796-4d8d-af85-10078ab07a16",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "50641c39-d274-412f-bca5-3cc972ebabae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba2bff3-ed5d-44a8-95c2-dc115786ad71",
        "cursor": {
          "ref": "daccc6d1-f239-491a-9bd2-76c0df7cb3ef",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "710d6c92-b2ad-4051-8a6c-8d9f07b83b29"
        },
        "item": {
          "id": "6ba2bff3-ed5d-44a8-95c2-dc115786ad71",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3a89d838-3a9e-4fde-9b59-92e6efcbab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eccf89-8ca6-4bf2-9598-e7e06bd293a5",
        "cursor": {
          "ref": "97071f7c-81a5-44cf-b08f-3d6ef8c3da76",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef6d2679-a863-4ad7-8f16-fb3b101632e5"
        },
        "item": {
          "id": "b0eccf89-8ca6-4bf2-9598-e7e06bd293a5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4d6471e4-f301-46a6-8683-522865a9f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d285d6-4527-4cb0-bd1f-dd17c2ba40b0",
        "cursor": {
          "ref": "090b5141-ed9d-40fc-afad-376315c7ea02",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cd8530ef-ee02-4fbc-8e4c-64b51e76db9c"
        },
        "item": {
          "id": "a6d285d6-4527-4cb0-bd1f-dd17c2ba40b0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "45278ee0-9e74-4a0c-861a-75bd18b899ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a723e7fb-fe29-4720-87aa-cb190533072c",
        "cursor": {
          "ref": "202ef6e7-4082-466c-9a45-4b28020483cf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efc28b32-2dd6-43e2-85fa-a5f3db467bdd"
        },
        "item": {
          "id": "a723e7fb-fe29-4720-87aa-cb190533072c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "944376f1-5680-4725-9a39-c0b9ecfb9b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f7bbe-2b87-4ac4-b734-a73d151db2e4",
        "cursor": {
          "ref": "4d4882a4-dbf9-4e98-91ea-a7507a97ae41",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "89b56acd-7016-4cfb-85de-bd354bb578e3"
        },
        "item": {
          "id": "d37f7bbe-2b87-4ac4-b734-a73d151db2e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "497a0bb2-4012-4882-8e76-920a48ef3510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c34ff1-a826-47a9-be0d-4e4dd707083e",
        "cursor": {
          "ref": "44978d8b-5384-46a1-a7bc-3b93b6b86efe",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1892633d-b798-48b0-baef-3cd3b70b66b0"
        },
        "item": {
          "id": "23c34ff1-a826-47a9-be0d-4e4dd707083e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "400682d9-41f7-4051-840d-8bcdded9a7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a39cd-cf0e-4a8d-92d3-2704eb6c8318",
        "cursor": {
          "ref": "af5f64f9-33fd-4530-a4fe-3528bb1cfc0d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fcce70b8-f467-4f21-9943-51005d184f73"
        },
        "item": {
          "id": "b99a39cd-cf0e-4a8d-92d3-2704eb6c8318",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7498b738-d16c-4beb-9048-ba9b1a459d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb6b40-3bc5-4f67-a5fd-e7b0f136664a",
        "cursor": {
          "ref": "1d29f668-0307-47c2-b383-45c51f396024",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5e9007d2-2e42-4550-bbe8-57770d6a55ed"
        },
        "item": {
          "id": "aefb6b40-3bc5-4f67-a5fd-e7b0f136664a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7d92aed9-fbc1-484a-899a-66a9abe0acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1749e279-90b9-4115-98e7-bf51370309e4",
        "cursor": {
          "ref": "4fb26d06-6639-4ccd-9606-357df14b38ee",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "827fbe7e-d440-4ce6-885e-d86f0ab2b27a"
        },
        "item": {
          "id": "1749e279-90b9-4115-98e7-bf51370309e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9396a4c1-9db9-4c05-bffd-5a72719f8457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2784577d-e532-44d1-9165-b04283d61014",
        "cursor": {
          "ref": "df24eb7a-700b-40c7-a854-748e48968b7f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99d25dab-429e-4400-ad3a-d9de0075c861"
        },
        "item": {
          "id": "2784577d-e532-44d1-9165-b04283d61014",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "23a2c5b2-00d0-4260-b939-c577b480d376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0415b284-f33e-4668-bf9e-b17c46f853cf",
        "cursor": {
          "ref": "2751d6d3-4149-48f8-869d-064b4c13d397",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ca7ab84e-63af-4993-8f19-d7264412a459"
        },
        "item": {
          "id": "0415b284-f33e-4668-bf9e-b17c46f853cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7695e031-62da-4533-85e9-ce59d6a1d4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a629ae-3a83-4ca8-92fc-7f6e4387285b",
        "cursor": {
          "ref": "bd78c5d3-26ad-4cd1-a657-510e611b7935",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f6526e5-18e8-43f1-a4a7-0049104df87f"
        },
        "item": {
          "id": "c6a629ae-3a83-4ca8-92fc-7f6e4387285b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f5c19ace-dda9-4a7b-ad91-116e69cd214f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608da060-7d76-41f5-a4b4-1139557590b8",
        "cursor": {
          "ref": "894ac093-86cf-4bcc-b4fd-f49d03918be5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "41a1fdd5-dbbf-4d3a-a658-eae2b2538b40"
        },
        "item": {
          "id": "608da060-7d76-41f5-a4b4-1139557590b8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "25146f01-c674-4a7a-9947-59a5391bcdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ecd8c8-fd60-4bc7-a70a-46358e347e30",
        "cursor": {
          "ref": "52c26036-ee4c-4751-9e7f-e3a58fa8213f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c68f5a8c-c39d-4607-9442-f552b895c033"
        },
        "item": {
          "id": "74ecd8c8-fd60-4bc7-a70a-46358e347e30",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97ac25cc-067f-4c78-8d33-31b6c44eb46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1974e-6b63-432e-a7c7-51128c39fdcb",
        "cursor": {
          "ref": "50cf4ed2-c0b5-42f2-8c79-67a8ca87145c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a0cdec4-546e-4593-8e65-b1a782b07ca0"
        },
        "item": {
          "id": "f5a1974e-6b63-432e-a7c7-51128c39fdcb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6f46a6c1-2fbe-47cd-bc39-bd17c223db0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e4877-3493-4da9-bf9e-b74123b138c9",
        "cursor": {
          "ref": "ebd03e2c-c7d3-4d3b-90a9-7e4d6d05eab9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97d29380-4cd2-447d-ab94-3d7662c2bb13"
        },
        "item": {
          "id": "410e4877-3493-4da9-bf9e-b74123b138c9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9a2c6b4d-8e2a-47d2-9c9c-422865fb563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb15df1-8048-432b-b650-81ae3c2bd926",
        "cursor": {
          "ref": "e487817b-fc4c-4d89-9894-fc8c14a57744",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea987670-cfc0-44fd-a972-3eb65d3ca482"
        },
        "item": {
          "id": "2cb15df1-8048-432b-b650-81ae3c2bd926",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c8b3878a-bdaf-4c6f-8a7d-25b84f797ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1367c-e9eb-4884-8109-7d4f6c0b425d",
        "cursor": {
          "ref": "4aeb59b2-f985-482d-88cc-78ecb3aa92b2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed5161f0-586b-46ea-9646-d481f063f341"
        },
        "item": {
          "id": "ceb1367c-e9eb-4884-8109-7d4f6c0b425d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9457ea68-aa1b-496e-bacc-feabb7c276dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acea24d5-3e57-4977-86c0-bd6feec614a0",
        "cursor": {
          "ref": "540508e1-cb54-474d-b4a8-6b10b18252b2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "69150c93-80ff-4764-a4b6-ba347a5b3316"
        },
        "item": {
          "id": "acea24d5-3e57-4977-86c0-bd6feec614a0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "52da405c-7f1d-4114-a247-5550889aa9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b47255-fc05-4de5-8ad2-24fa8385984a",
        "cursor": {
          "ref": "f4dc2981-b747-4a73-8b1a-c74f9b81d98f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19dbdeb8-b990-485c-bbea-26f6017212b1"
        },
        "item": {
          "id": "36b47255-fc05-4de5-8ad2-24fa8385984a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83ef8c09-0e10-4620-84d0-f0f50df777ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce5571-d42e-4f48-9f64-2e8340b02ea1",
        "cursor": {
          "ref": "4a56231f-d79b-4cb0-9937-769177fbcd56",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8301e9fa-0096-4008-af5b-097266450181"
        },
        "item": {
          "id": "f5ce5571-d42e-4f48-9f64-2e8340b02ea1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "532fc04c-b7bc-42ee-96ff-60c7eaf04224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0cc415-6e1b-411a-bb4f-017247083e99",
        "cursor": {
          "ref": "3c28a155-e7ad-45f8-adc2-99f5990b9f6c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0e8b4188-fb27-44b3-83b1-017b4563a8ab"
        },
        "item": {
          "id": "dd0cc415-6e1b-411a-bb4f-017247083e99",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6dbfde78-b809-4949-b1a7-0bfc205beb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a641e2b-9ed6-4a1b-96c4-9dbb2385f4f8",
        "cursor": {
          "ref": "5f31dc3b-3c3a-492a-8384-1851f737815a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0027c5fe-ab25-4f20-a654-cde94d08f862"
        },
        "item": {
          "id": "2a641e2b-9ed6-4a1b-96c4-9dbb2385f4f8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7ef326bd-58bf-41ca-9f91-04230476771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa3d69c-0f12-494d-aef4-68a1f6a645cc",
        "cursor": {
          "ref": "4c8160d4-5879-445e-9f38-9f92eeee31cb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a721660a-9f57-4297-bc5a-ba63c9a7894e"
        },
        "item": {
          "id": "caa3d69c-0f12-494d-aef4-68a1f6a645cc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "75ddb1c5-02e1-4904-837f-c7faa63d00b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f88ec-4a19-402b-a486-72ddfa109335",
        "cursor": {
          "ref": "49882e77-31f3-4eab-af6f-ee3d1530f405",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "71fa8da6-d923-45ff-bceb-a9fb96518f49"
        },
        "item": {
          "id": "8c2f88ec-4a19-402b-a486-72ddfa109335",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1eb31669-11ad-4d46-816c-c5dbc0a85060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f8b24-b0d5-4cde-a6f7-4d599914ccc5",
        "cursor": {
          "ref": "f32b177d-a4b8-403e-8236-b0cdd6c56efd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "245a7d5e-fb58-4d10-8e74-ec4edb5683de"
        },
        "item": {
          "id": "923f8b24-b0d5-4cde-a6f7-4d599914ccc5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0907347e-d61f-42b3-9478-01947cb33884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4c248-291d-427a-b82c-05d3216a96ea",
        "cursor": {
          "ref": "752c3f5b-3187-41fe-a748-e9c188756b38",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "296f8a30-dc66-4233-b73a-ad865e624b43"
        },
        "item": {
          "id": "88d4c248-291d-427a-b82c-05d3216a96ea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ba0f8a2a-4cfb-48f3-bf32-547958726206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f89776-349a-44f2-80c1-a174c4b298c3",
        "cursor": {
          "ref": "8cf09b85-5cda-4a0c-ae64-9d5f2686ed32",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "967d2a29-1544-483a-a79a-5ae22805fa89"
        },
        "item": {
          "id": "d1f89776-349a-44f2-80c1-a174c4b298c3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4b6e5360-9fe4-4d3f-a053-eccfedaa87ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9fd2d1-882c-4189-a4c6-3d721c635d09",
        "cursor": {
          "ref": "cf6eabb1-c387-4b7c-af39-037e63a865e7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "926327dd-9c19-4d4c-b941-635578583931"
        },
        "item": {
          "id": "8b9fd2d1-882c-4189-a4c6-3d721c635d09",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2d9b7afe-345b-4e1f-8218-bfde03f96e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06836c-8b49-4b4f-b944-7b80d55213d9",
        "cursor": {
          "ref": "57d29e08-887a-42c0-8a9d-56d1a24b474f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cddd2eb4-c13b-4247-ab06-e778a66b392a"
        },
        "item": {
          "id": "be06836c-8b49-4b4f-b944-7b80d55213d9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bfc4e670-7104-430d-bc74-1c64db5121fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d208193-e7ef-4893-8282-26a43f1c3e19",
        "cursor": {
          "ref": "f0026b48-d567-410f-97f5-0578d3a0f610",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "00c3b4ec-afad-4c5d-928d-404059610d55"
        },
        "item": {
          "id": "4d208193-e7ef-4893-8282-26a43f1c3e19",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1d3c5496-8fa1-4aae-81e2-bc3e51a62883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95f510-5fe1-4c84-825a-7777bf0fcf81",
        "cursor": {
          "ref": "25faf06f-e57d-4f6b-ab53-6cf6922cc9f0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dc215c97-12db-49be-a5c3-e62ab78dd048"
        },
        "item": {
          "id": "3f95f510-5fe1-4c84-825a-7777bf0fcf81",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0d4c3004-cb0c-4e06-9c8f-f5ae24fbb3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047f5ff3-8aba-4d5a-82a8-e4271cba4c2c",
        "cursor": {
          "ref": "1c1ab219-e384-4c45-93bc-33fa0a443aaf",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9e0a7f25-e80f-4e12-9894-becc06a63a25"
        },
        "item": {
          "id": "047f5ff3-8aba-4d5a-82a8-e4271cba4c2c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2ec434ab-11e7-4a43-a295-0b914151e62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002bbdde-fbf1-43db-acc9-62157cc4c756",
        "cursor": {
          "ref": "c5fde52b-c90d-4222-8985-e276a24b211a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f07df675-b254-4949-a882-116047dffeb9"
        },
        "item": {
          "id": "002bbdde-fbf1-43db-acc9-62157cc4c756",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08e53419-2a0b-440c-94d3-8de8d7682842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd2f61-1401-4ec1-b760-daa7a22c0580",
        "cursor": {
          "ref": "c289a359-310e-46a0-aa71-707896c28f4d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c00c775-1c18-4ccc-8f65-b8c15c2d8c92"
        },
        "item": {
          "id": "aecd2f61-1401-4ec1-b760-daa7a22c0580",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b3140184-7d23-4fa2-81df-0e934029ab2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3417dd2a-f7ca-44c4-b8cf-75d70b81241b",
        "cursor": {
          "ref": "e37e57b3-453c-44c0-9df4-a73c97d6bcaa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "94959a84-c1c0-4793-8a60-6a4a435376e6"
        },
        "item": {
          "id": "3417dd2a-f7ca-44c4-b8cf-75d70b81241b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "650d6c06-7306-4fce-ba9a-bec89bb6031e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08211ca-087c-4679-86e4-4b27d51db249",
        "cursor": {
          "ref": "f743fdf7-6af1-4feb-ab79-99aab58be907",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "266b4f34-cf81-459d-955b-cd09a76891b9"
        },
        "item": {
          "id": "c08211ca-087c-4679-86e4-4b27d51db249",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ac1c46df-817f-429f-9d01-d1a752206e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c90e16-1e27-415c-8e08-6d1161f2d9c9",
        "cursor": {
          "ref": "3567a6a6-3ab9-43fd-af82-32cc095cdcf0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1b1026e-6d03-4662-abc1-462055496456"
        },
        "item": {
          "id": "01c90e16-1e27-415c-8e08-6d1161f2d9c9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7465bf07-916f-4576-9f59-0302ea242bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fab1e1-84b6-429b-93c8-b5813caef9a9",
        "cursor": {
          "ref": "498fd425-0f83-426d-9c24-c112de195045",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "888dc92c-0e91-443a-baff-45f0c7d76033"
        },
        "item": {
          "id": "41fab1e1-84b6-429b-93c8-b5813caef9a9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a13d067f-23ae-46b5-9171-e46cdd40b648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbbd4a9-6fa6-4569-9a1e-f5d2ec577580",
        "cursor": {
          "ref": "cdcd8fa8-df9f-4e14-885e-6278eb173d25",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "11dabb74-7569-4bd2-ab10-84bf0c64cf0a"
        },
        "item": {
          "id": "9cbbd4a9-6fa6-4569-9a1e-f5d2ec577580",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7273a639-9a98-4eaa-8ba6-6c0c69a0d667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cdcc55-12bf-4cf2-a568-2841a9cf43c2",
        "cursor": {
          "ref": "a071c0dc-a517-4706-846d-82b85c7af3e8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe7f7e9d-0c9b-4a28-a101-e62584005937"
        },
        "item": {
          "id": "83cdcc55-12bf-4cf2-a568-2841a9cf43c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "43bec6c5-8dc6-468a-96bb-8c92c8a42e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d48656-9f4e-4102-8d3b-27c538aea03e",
        "cursor": {
          "ref": "bca5d805-1850-4bbd-ae56-3f14f40f722e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "20323072-d4a7-41c8-8c39-ec8663392a0b"
        },
        "item": {
          "id": "b2d48656-9f4e-4102-8d3b-27c538aea03e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "edfc97e4-a389-4757-be61-345ce69c29a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609b0da5-01e9-4545-8a60-6576f5267249",
        "cursor": {
          "ref": "2aa1233b-273d-4767-97da-e4b2f11bc1c0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "47600653-baf2-4e4d-842d-f7e4b83e0b40"
        },
        "item": {
          "id": "609b0da5-01e9-4545-8a60-6576f5267249",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6fa5dd1c-a4b8-451f-b2a5-41cd3fb82ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329ae534-df22-4e1e-89f2-a281d5a2db80",
        "cursor": {
          "ref": "610881f9-b341-4c67-ac0f-4656a27cf3f3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "475422dd-1ff3-4461-b7aa-94aa64ab1ea9"
        },
        "item": {
          "id": "329ae534-df22-4e1e-89f2-a281d5a2db80",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9117b0af-5aba-418f-99cc-884402c97b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cccc2c24-13c2-4af3-a573-cec49b5a40bb",
        "cursor": {
          "ref": "335a5001-3e75-4ea4-8724-c2d20372bf2a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35609d83-6443-4828-8cad-f8889119f347"
        },
        "item": {
          "id": "cccc2c24-13c2-4af3-a573-cec49b5a40bb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "99eb88c0-b66b-4e36-8d32-08eaaa93fbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "35ffcfe5-8530-469f-9fdd-6df223d72262",
        "cursor": {
          "ref": "21ef857b-421d-43a3-9af3-16b05d4cbfbf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1cef202a-1d55-45a3-a966-4fffaef46669"
        },
        "item": {
          "id": "35ffcfe5-8530-469f-9fdd-6df223d72262",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3b200816-3bc3-474e-bd22-e837785d0a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e0e5432c-c0d4-4eff-b7ca-23af3180421b",
        "cursor": {
          "ref": "5aee96d0-44da-4372-a0af-4a1f34cdda30",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "06e7a44b-438c-485b-b3e9-c40b00f5d293"
        },
        "item": {
          "id": "e0e5432c-c0d4-4eff-b7ca-23af3180421b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8eea5e1f-6d6b-47c2-82e2-e2cf240ce761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "507a0988-b008-4297-9381-ad86bea27638",
        "cursor": {
          "ref": "9fe37d6a-fa2b-4dfa-8d26-5833eee42e56",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5eea5b94-463b-4d92-904e-c727fc4c1d02"
        },
        "item": {
          "id": "507a0988-b008-4297-9381-ad86bea27638",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "23d1ef0f-583e-4a12-9d56-478679e89f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5b60cf0b-7f50-47cc-864b-223e5ace32ae",
        "cursor": {
          "ref": "aeb33a16-ad99-43ac-a12a-26c704d1d569",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0702a62e-20f6-407e-acf8-f1e58d1f1ca2"
        },
        "item": {
          "id": "5b60cf0b-7f50-47cc-864b-223e5ace32ae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b8d87e02-fc0f-45a7-a7b8-9ee6dd1e2935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f6f25bfc-104c-4a93-be1a-9506421633ce",
        "cursor": {
          "ref": "5479ba12-a7d4-4195-a58c-d595cfc66392",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "afd1a8ef-9564-4073-b388-ccc1aad5da65"
        },
        "item": {
          "id": "f6f25bfc-104c-4a93-be1a-9506421633ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "468dcacd-dc43-4df4-a21d-7ae8cc5c61c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4021667c-1812-4f6a-9c61-859681578f36",
        "cursor": {
          "ref": "4dca3b64-a683-481e-adf6-927dec858f91",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1c121824-e7eb-4058-98f7-363f16374fb3"
        },
        "item": {
          "id": "4021667c-1812-4f6a-9c61-859681578f36",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c06cb922-e1a9-4d4c-bae5-686bc0089908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8511e1f-cddd-4f82-a53f-b241ea4b0c1c",
        "cursor": {
          "ref": "3187b986-da37-476e-b2f7-6b513c2a33ea",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "441e38b3-da58-4650-b236-724b23e1b3d9"
        },
        "item": {
          "id": "d8511e1f-cddd-4f82-a53f-b241ea4b0c1c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55d27768-5cc3-47ff-8279-4aea371b1390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebac7ef-4552-40ff-9e84-2b1df32c088b",
        "cursor": {
          "ref": "0da6cd3b-c2cf-41b5-b9ec-0cd95e5b3c14",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f301cd71-a9f4-4a6f-9849-3da646e7593c"
        },
        "item": {
          "id": "6ebac7ef-4552-40ff-9e84-2b1df32c088b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "efe636ff-f769-453f-bad7-19095f0dbc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b91555-32aa-4399-80c1-117d97618cc5",
        "cursor": {
          "ref": "0ad15947-7c2a-4375-9f2f-4023d732fdfe",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4afd46d4-ac89-40e0-b363-ea874a3b9471"
        },
        "item": {
          "id": "00b91555-32aa-4399-80c1-117d97618cc5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "411c666a-aa04-408d-a8fb-d8985c886679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6937b-1bb8-4b6c-b5e7-e683cf73d3fe",
        "cursor": {
          "ref": "db61fc2c-9aca-4504-af2a-3c1573e26a32",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "44fc4c7b-7957-4844-ad68-40aff64b1722"
        },
        "item": {
          "id": "2ed6937b-1bb8-4b6c-b5e7-e683cf73d3fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f1258e6c-b7bd-417d-9a2f-048513caa9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0a8462-54fd-4c0c-8d9f-87407f533384",
        "cursor": {
          "ref": "f7417259-57fc-48e7-9fe0-4f9c80c1ad67",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec8481a8-8dc6-4287-b424-a4b0dcd72b79"
        },
        "item": {
          "id": "1d0a8462-54fd-4c0c-8d9f-87407f533384",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "06c8c263-8cc3-4334-ae4c-b24a63922f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523e4626-0916-4173-9d5e-3af0872dfdac",
        "cursor": {
          "ref": "cbef1a0c-e9bf-4a4a-b1be-ae312391aa4f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c2809629-17dc-4b0b-8ada-1cefc53efbb5"
        },
        "item": {
          "id": "523e4626-0916-4173-9d5e-3af0872dfdac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "98f21461-a37e-4eb7-999b-1efea6798b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4afa14f-d610-45a8-8b7f-034f31256991",
        "cursor": {
          "ref": "d287cafd-8b44-4dbe-98f4-3e0041caabca",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e2a3733e-cd45-4c00-acc1-7efd29233249"
        },
        "item": {
          "id": "b4afa14f-d610-45a8-8b7f-034f31256991",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2b189add-274f-4c33-8af6-10a2b6bde86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ee2913-5708-44d9-aa0e-ae4175fb3550",
        "cursor": {
          "ref": "800e3f6d-330f-4724-9dd1-e5a08a9eec4f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ac9b523c-1c4d-489b-855e-cc3ce4c46ede"
        },
        "item": {
          "id": "00ee2913-5708-44d9-aa0e-ae4175fb3550",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29662c5c-3ccb-4f63-9777-8fc0e84d7afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495d58d0-d9f0-4d52-ac94-4fbcd93ddf18",
        "cursor": {
          "ref": "f5d74f1f-2213-473f-b070-4d21d59602bd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b1064ad8-e0af-4d30-b654-ad5888878051"
        },
        "item": {
          "id": "495d58d0-d9f0-4d52-ac94-4fbcd93ddf18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfc262b3-c500-4d39-984f-befd82a28a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a3d94d-000c-44e3-8532-79063e624c0e",
        "cursor": {
          "ref": "94b842ff-ac5d-4c19-8c5b-eef62c875223",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8c99f338-ffaa-4e5f-810b-1964c276aaae"
        },
        "item": {
          "id": "c3a3d94d-000c-44e3-8532-79063e624c0e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "25e40a1f-37ad-48d8-9b4b-47027ff09dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ee7d4-3b4d-415e-b938-61f574f3520f",
        "cursor": {
          "ref": "e3dd0a43-8754-4c71-913f-f8662ba07a7f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "18b3446c-9f35-4c7c-8375-9383bae98cdd"
        },
        "item": {
          "id": "e56ee7d4-3b4d-415e-b938-61f574f3520f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b2eaa00-65ee-43cb-8d4a-98a4c6e67ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eef74d-63a7-49d5-b8e0-d357b67c7137",
        "cursor": {
          "ref": "fe461a53-e39a-4606-949d-e718e9ba84b1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "478e97db-bf42-430f-ac1f-ca9306db226c"
        },
        "item": {
          "id": "b3eef74d-63a7-49d5-b8e0-d357b67c7137",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "607b1e53-e0ae-410c-8aff-b86a43efc6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53ddbb-cfff-47f4-993a-d251a22c0a2c",
        "cursor": {
          "ref": "1bed4b06-ccf9-41e3-9849-ba62682f721b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4fb56c6c-d0dc-4e87-8ee3-7c38b5ab9877"
        },
        "item": {
          "id": "4f53ddbb-cfff-47f4-993a-d251a22c0a2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "361e2fec-58c4-42b3-9d15-eda7db4b1705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b7e00e-062d-4c6f-9166-c5705011a1fd",
        "cursor": {
          "ref": "d518ef1f-ece9-4a77-9726-fd029c62b1e2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fca9e8b2-0186-4eac-ba0a-1dfb05f8c73e"
        },
        "item": {
          "id": "91b7e00e-062d-4c6f-9166-c5705011a1fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "af0e10cb-59ad-4c7b-b988-8fdff10a3d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2b7db-0d2c-4a38-9f91-a0a73983f729",
        "cursor": {
          "ref": "9c1f66a6-386e-447f-ab66-e71aea88ca0c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "22e48f32-1dee-4874-b283-588064b257ec"
        },
        "item": {
          "id": "68a2b7db-0d2c-4a38-9f91-a0a73983f729",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db438716-876f-4436-83d6-98833f9c1862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1270f1-5a53-48c6-8137-109b72bcd152",
        "cursor": {
          "ref": "2113edb1-02fd-449b-9ef5-f6ac09b4ecec",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "18f12ec6-6efd-4ebd-b6ff-a2b3249bae1d"
        },
        "item": {
          "id": "3a1270f1-5a53-48c6-8137-109b72bcd152",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68201b69-91fd-453a-9190-a12ec5216988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb15b30f-85d3-4ca6-a05c-ae00f010f32d",
        "cursor": {
          "ref": "400c18a3-1f7e-4869-83cf-7d28f60b91a0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e77ba9b7-3965-4802-86a0-3591de242b4d"
        },
        "item": {
          "id": "fb15b30f-85d3-4ca6-a05c-ae00f010f32d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17948f99-1e00-4549-a37d-259b0ae630cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a586e9-3c70-4227-94eb-50f302834b3e",
        "cursor": {
          "ref": "5c98040f-ea68-4b8d-a63f-061079402238",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "79408de7-c8ae-400b-a2df-af03677e45fc"
        },
        "item": {
          "id": "b8a586e9-3c70-4227-94eb-50f302834b3e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8e04ee3-60dd-4dd9-bc7f-59d25f6a1f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3be9e4a-7a90-4e54-848b-5a28f1d240c0",
        "cursor": {
          "ref": "6937f116-c0d3-46b6-a352-ee8a61b5c2c5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "83ba2d46-78cd-4e87-a199-e21b8caef86c"
        },
        "item": {
          "id": "d3be9e4a-7a90-4e54-848b-5a28f1d240c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a982d82-5261-49a0-af28-9b7194fbf278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843a12bf-a01a-435a-8c58-4653b0c665f9",
        "cursor": {
          "ref": "0b313f83-08b9-4d7e-aab3-ef0c3af9b3a3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1576c4b8-db40-4918-9735-d34082fa6d17"
        },
        "item": {
          "id": "843a12bf-a01a-435a-8c58-4653b0c665f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c735b787-c766-428b-b932-ce9b51433080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ba0452-c563-4fc9-a2e6-bba074c86b14",
        "cursor": {
          "ref": "84ca3296-5900-4027-95e9-47dceca7af22",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6fcb9fe4-8cc1-4410-b929-0634dac727e7"
        },
        "item": {
          "id": "05ba0452-c563-4fc9-a2e6-bba074c86b14",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d03ae7c2-7ddf-4eaf-87c2-5317c7546d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cba6a4a-5564-4f6a-9948-baad1b19fc19",
        "cursor": {
          "ref": "193b5ee4-2af6-4ab7-95dd-d52d8776f154",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a909986-c5ba-4e71-ae1c-3eae13bb17de"
        },
        "item": {
          "id": "2cba6a4a-5564-4f6a-9948-baad1b19fc19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5503c6ed-3cee-488f-952c-45bbe63dce2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d3729a-0d4b-435f-8f3f-89e140bbac7d",
        "cursor": {
          "ref": "d8ec5938-5b2d-4386-b35d-718e50cd31e9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0fbc5d0e-696a-425d-931c-0be6b06ab519"
        },
        "item": {
          "id": "d4d3729a-0d4b-435f-8f3f-89e140bbac7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "193f1ff7-db6c-41c9-b17c-46f371dd8a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b7e2c8-9be4-4d66-a3ec-7e54160e50e0",
        "cursor": {
          "ref": "b0de9fc5-7e4e-4f16-821f-dfd7eb7421dc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "016e5869-b52e-414f-be8f-578fd228d783"
        },
        "item": {
          "id": "10b7e2c8-9be4-4d66-a3ec-7e54160e50e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9b642c4a-23ce-4678-bc29-ff407bf75dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f355b3-4d03-4adf-96f3-15e42eafb171",
        "cursor": {
          "ref": "a1160236-5455-4735-a392-bc42d665c504",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a05f260-ea78-4d8e-ade5-a3a69f14fe7a"
        },
        "item": {
          "id": "60f355b3-4d03-4adf-96f3-15e42eafb171",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "edf51d00-c0e2-4846-aeef-e03d81915e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f73d56-1270-4397-9b63-12636dd45ef3",
        "cursor": {
          "ref": "87696107-c2bc-40b4-a0e8-bdd8937641ce",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "598be247-a289-48f3-8bc1-4ac03db1b68e"
        },
        "item": {
          "id": "32f73d56-1270-4397-9b63-12636dd45ef3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "048b3377-fd17-4d44-afbb-b751a5045019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7189661-ce23-4c5f-9325-cfff4fe85466",
        "cursor": {
          "ref": "4c463117-d3f6-4895-9904-185cc8a8b5ca",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "44b1ffbd-8bf5-4842-8d5c-5cf2c654f14e"
        },
        "item": {
          "id": "e7189661-ce23-4c5f-9325-cfff4fe85466",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5db58366-1935-4d14-933b-e061df6d6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3ad2ec-3b8c-45fc-bb1b-0a5f3a0809a1",
        "cursor": {
          "ref": "2f7a89b8-fcf0-41fd-9d85-3d76711fe2e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "eed3b3ba-78c2-4694-99bb-e859e8e65e21"
        },
        "item": {
          "id": "1c3ad2ec-3b8c-45fc-bb1b-0a5f3a0809a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66de8a52-dbed-4d65-a6e7-8d0d1baf2600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad614a1-380c-4e97-9f61-8dcbd188e977",
        "cursor": {
          "ref": "ca35dce8-1f70-49f3-9d15-733b0466a183",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "969f6f57-8341-470f-a91b-ab8cc57cac4b"
        },
        "item": {
          "id": "8ad614a1-380c-4e97-9f61-8dcbd188e977",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c860c19-f493-4cd1-a3c1-76c36865e216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4fc3c5-d9c3-43b9-bcde-17c40be76934",
        "cursor": {
          "ref": "6ae5a1bf-050e-45a9-a745-da2dfef7e6d9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e78fff9-898d-4ed0-a4e7-e561188be95c"
        },
        "item": {
          "id": "ce4fc3c5-d9c3-43b9-bcde-17c40be76934",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3597848e-7263-4995-a59c-4da7755b0754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca00e2b-422f-4f12-8077-d5f1a23cc207",
        "cursor": {
          "ref": "16a1b920-e9f3-4abd-85fd-f6d59d5e1b6e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5e6e486-7ce8-4007-9066-f7438d8f6282"
        },
        "item": {
          "id": "6ca00e2b-422f-4f12-8077-d5f1a23cc207",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7061bcf8-b669-45d6-9eb5-988b8ad3ca63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f45aab5-9646-42cc-97da-7ef5d38362c5",
        "cursor": {
          "ref": "11ba1a08-43cd-46bd-a745-6e0904ca2307",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a3a5e632-11bd-4c4b-88fb-75edf6c3aa72"
        },
        "item": {
          "id": "2f45aab5-9646-42cc-97da-7ef5d38362c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "536360e0-3ae7-4a44-9736-9902d1bb2d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c75d0c-cdb0-4749-9f73-f637ed08c655",
        "cursor": {
          "ref": "aada64fa-34b7-4aaf-a73e-b50de4064c86",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a9087b3f-4104-40c5-84c0-a26b103f4e99"
        },
        "item": {
          "id": "52c75d0c-cdb0-4749-9f73-f637ed08c655",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "877b0ba0-d9ab-434f-af41-cca88e3fcc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb797e-4393-45b3-87bc-d7b7c87098de",
        "cursor": {
          "ref": "c68723a1-719f-4a5b-ab16-d7d3ed06a615",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ea0835c6-b0ad-472d-8ab7-7ea6197d981f"
        },
        "item": {
          "id": "7adb797e-4393-45b3-87bc-d7b7c87098de",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "70040fa4-3ada-4876-9107-b18ac9a0585d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bbc4ff-79b3-4d4f-8c4c-b59f531c99cf",
        "cursor": {
          "ref": "5ecefa28-b34f-4470-9092-df61c94c0301",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a1d028e-cfe3-487d-9718-c4d84dbe6f91"
        },
        "item": {
          "id": "a0bbc4ff-79b3-4d4f-8c4c-b59f531c99cf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f9996e6b-b0c2-4a12-8634-50626b13ca3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2fc946-cdf0-435a-b66f-e27f007a86a5",
        "cursor": {
          "ref": "d0fa57fa-b9ff-4549-84ff-283cdc0d7f76",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d85cd4f-4275-4a5e-8fc0-73d1c3790745"
        },
        "item": {
          "id": "2f2fc946-cdf0-435a-b66f-e27f007a86a5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "69d28a4b-181a-4105-9de1-7d3722dad30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e78a29e-9f62-4fa6-af06-83c37aed246e",
        "cursor": {
          "ref": "7d822e52-95e2-44a7-9729-278818d7fab5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0e2a8fa2-1884-412e-9928-5b49724e337e"
        },
        "item": {
          "id": "5e78a29e-9f62-4fa6-af06-83c37aed246e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de4c0ad8-9e51-4ca3-80ae-6bff2a253c84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8cb20-b9b5-4306-9466-09d7b609abf7",
        "cursor": {
          "ref": "d4f8b431-defc-4eaf-8e32-f3d8b5c579d8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "53067d4b-3d4d-4a3d-b6c1-4c9d45e73bc1"
        },
        "item": {
          "id": "c1f8cb20-b9b5-4306-9466-09d7b609abf7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ca8fd6bb-6bf9-448e-bd67-192df0591955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2667d9-6c65-4916-9286-a23bd508bb60",
        "cursor": {
          "ref": "b0f67a6e-ab98-4500-bc33-8658876b79cb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ed0f8f05-96cf-4b2a-8376-a0be20676f60"
        },
        "item": {
          "id": "dc2667d9-6c65-4916-9286-a23bd508bb60",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8b205711-0e6f-4a30-9da5-d9036e6dc42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f89922f-7280-4d1b-a87a-b914c42136b9",
        "cursor": {
          "ref": "13c718a3-01e3-412a-8be7-77e24e0bd5f2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0ac5343a-68a8-4663-847a-e5657990d491"
        },
        "item": {
          "id": "2f89922f-7280-4d1b-a87a-b914c42136b9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b236e61f-c3ff-4a64-a04c-c08a641bdc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80339c5c-dd8d-4b79-8620-be817a7ed42c",
        "cursor": {
          "ref": "ed521d42-9d06-475c-894d-d7a53bbf5e2e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf48df3f-3b9c-4f12-812d-fc79a3e71a2c"
        },
        "item": {
          "id": "80339c5c-dd8d-4b79-8620-be817a7ed42c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23fe1e3c-df20-4dbc-ade8-0929db0daa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1e885-5899-48c1-a73e-3f024bac0766",
        "cursor": {
          "ref": "7ab6d8ee-0d10-486b-927f-d5f10dd7eb47",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c999c66f-4d8d-45e1-9d6f-ecfc9a6061a2"
        },
        "item": {
          "id": "2ac1e885-5899-48c1-a73e-3f024bac0766",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c21d63bd-80f8-4fdb-b2e2-dc2d2851bd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc982896-4640-49a4-81df-6f3666adeed7",
        "cursor": {
          "ref": "b2302a70-194f-430c-aadc-08ee5c2e4d4c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d5d3e06e-94aa-42b7-a0b5-dafb4f0c1f94"
        },
        "item": {
          "id": "bc982896-4640-49a4-81df-6f3666adeed7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9194c09c-73c3-4084-bcb5-d78eba2db6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b418b2-f360-497a-bc7d-0207809e066c",
        "cursor": {
          "ref": "3512ebcc-d8ab-4c82-b556-28f555481d85",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0eb09b71-fdce-4795-9ed8-233965de2d41"
        },
        "item": {
          "id": "74b418b2-f360-497a-bc7d-0207809e066c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a79558b3-97b0-4980-bbe2-309b23f41663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c05d94-31de-42ef-8f70-242fa7b0ee58",
        "cursor": {
          "ref": "70af0155-ae01-4048-afb2-bc664d743c54",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fef608a-798f-4d08-8c1b-4631579497e1"
        },
        "item": {
          "id": "e9c05d94-31de-42ef-8f70-242fa7b0ee58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b07c5bd-b254-49c3-94bd-7d4360a6796c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d14ff6-0192-4aab-8d1b-fb725962c527",
        "cursor": {
          "ref": "79e11055-b9b0-4618-8a25-4a10adbd52ec",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3489d935-4c63-4136-87d1-32e0c6bfbea4"
        },
        "item": {
          "id": "48d14ff6-0192-4aab-8d1b-fb725962c527",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fb37a143-fb4f-4dba-b3bd-41da50703c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600bf2b8-9999-4d7d-a5d3-a470284a9df3",
        "cursor": {
          "ref": "326dce6e-b450-4c5d-b7b6-24296d5bd3d9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ab54f90a-084a-4039-b8c1-2ae5092d25f0"
        },
        "item": {
          "id": "600bf2b8-9999-4d7d-a5d3-a470284a9df3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "084ec060-4412-46d9-b7bc-921a8a8017af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487819a4-b030-4349-9f35-6c2ba45043a6",
        "cursor": {
          "ref": "b9915808-c41a-4d0f-bfcc-70a0a1642cf8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ecdb351-6af6-49fa-8a41-a04e8103ceae"
        },
        "item": {
          "id": "487819a4-b030-4349-9f35-6c2ba45043a6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "32b69d20-aa39-4157-8afd-23855443408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d928c9e-3699-4c69-bf61-4694cf04ec0f",
        "cursor": {
          "ref": "fc9a020e-2736-41bf-b187-9e8b43997f43",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6a7c08ea-79cd-46b9-8d92-25a878466544"
        },
        "item": {
          "id": "2d928c9e-3699-4c69-bf61-4694cf04ec0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "543408b9-75b8-40a5-a3d8-59a45affede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c721c8de-4abb-4594-a1db-2f0b74e97f38",
        "cursor": {
          "ref": "d1f47839-8221-4241-8cfc-017c22d62e90",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c3e18c42-8e53-4278-a3a5-20885a97b527"
        },
        "item": {
          "id": "c721c8de-4abb-4594-a1db-2f0b74e97f38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "efc6fc57-fed6-4e78-973c-10f5c6274f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0946c1-7f8b-4499-92ea-d3e41f70ec94",
        "cursor": {
          "ref": "4550d69d-4eee-4e82-9d46-b97eb82c2069",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ee1816b-73aa-45d1-862a-7e5ed099acc7"
        },
        "item": {
          "id": "9c0946c1-7f8b-4499-92ea-d3e41f70ec94",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9099a2ba-454b-4e93-aec6-14038164f385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf6f3f3-ae87-4c5c-94bf-89be32e0bdcf",
        "cursor": {
          "ref": "2a8343d2-d50e-413d-9ada-42c503fbff71",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "912abdc0-3243-42dc-9382-c9b676c17d39"
        },
        "item": {
          "id": "ebf6f3f3-ae87-4c5c-94bf-89be32e0bdcf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "efd85f87-4482-494d-8a74-1e7574b92483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e78a010-179d-4cfc-91e8-65b7adc7a560",
        "cursor": {
          "ref": "cd93a244-7c19-48e7-b36c-5dfa2458a945",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae8869b5-3e25-4dff-972e-47b999e14cd5"
        },
        "item": {
          "id": "3e78a010-179d-4cfc-91e8-65b7adc7a560",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2226b2dd-e700-4adf-aa81-d8e7098ba45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae112e9b-424e-4c8b-b9c3-d19d0702d48c",
        "cursor": {
          "ref": "f6130285-d404-481e-b693-7e0a6656b75c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "84e13df6-cfb2-47a7-aaaa-5de10477ae38"
        },
        "item": {
          "id": "ae112e9b-424e-4c8b-b9c3-d19d0702d48c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96ac5703-b156-4bdd-82c6-086a85223cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad2e05-bee0-4366-b6bd-8ee070bbbbc1",
        "cursor": {
          "ref": "7fdb1ee1-1fe6-49e2-8ea9-76d618f1c539",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ddb9e6a2-eaf5-4b02-8c59-51f993966ebd"
        },
        "item": {
          "id": "27ad2e05-bee0-4366-b6bd-8ee070bbbbc1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "39dc9471-5398-4150-970e-d8f952856aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf36e6a-ad9f-4e2e-a8a8-e9f206cfda6b",
        "cursor": {
          "ref": "363806ad-8c95-43e2-b2e3-f9749c7025cc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1c01a0f4-8530-4727-9259-fb5a5064c648"
        },
        "item": {
          "id": "aaf36e6a-ad9f-4e2e-a8a8-e9f206cfda6b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "58a5c161-e80c-422b-808d-2a61c42e8201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029ad4db-44f8-4894-84da-35fb89b6a0bd",
        "cursor": {
          "ref": "22d72271-bc48-4f8b-a698-3e1acff8e08a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6572a78b-f03d-4387-bee7-6b3e02ee72b9"
        },
        "item": {
          "id": "029ad4db-44f8-4894-84da-35fb89b6a0bd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2f67a41d-2345-49f8-ac35-eddde66feec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4339ec4f-c2b3-41fe-93a3-6ff30a2027e2",
        "cursor": {
          "ref": "6e0d8c23-a403-4687-9de1-f6bef9eb545f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3bc5bdf1-ef17-4cd2-add3-cc3b19636f21"
        },
        "item": {
          "id": "4339ec4f-c2b3-41fe-93a3-6ff30a2027e2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "61da03b6-9d15-446a-ae4a-aaec70cdc74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e55f746-a698-45b0-8586-b6b0e796140c",
        "cursor": {
          "ref": "cb29876e-7363-4ec6-97fd-35545504b587",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5c6824e8-527e-476f-afd8-40706ea1a73f"
        },
        "item": {
          "id": "9e55f746-a698-45b0-8586-b6b0e796140c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a0a5a731-c124-456c-8cf1-cf70055e2c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6257775-5220-4dd7-bdbb-b17a794d1dd6",
        "cursor": {
          "ref": "386a1993-1a61-40d7-a2c2-a748356b65b1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "747190fa-3f85-4806-9177-80a380c19d58"
        },
        "item": {
          "id": "f6257775-5220-4dd7-bdbb-b17a794d1dd6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ac2fb565-2ea3-41cc-b5f1-3b2693f6dd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae66327-3300-484a-af07-5b5a9a9268f5",
        "cursor": {
          "ref": "a2e06bf0-2059-4e28-923e-c8c064c59f04",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3f1ac6f3-c455-4348-8ff4-08f13dad5672"
        },
        "item": {
          "id": "8ae66327-3300-484a-af07-5b5a9a9268f5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec71e64b-8aa6-4b3f-9635-863241b21938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d832690a-c0b5-4645-9826-57d3f2e7e37c",
        "cursor": {
          "ref": "ef99ca6a-3e80-46d2-9fdf-aabef0b3b11e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c9a7eac6-b461-4119-8e89-891d20793793"
        },
        "item": {
          "id": "d832690a-c0b5-4645-9826-57d3f2e7e37c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e193933-7f6a-4fad-b196-b6468ecb35f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b948d0dd-2df9-4f9f-8a9a-183813640227",
        "cursor": {
          "ref": "f217c953-2f9d-4590-a208-2cbaf565410a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "12d79777-7140-4f6a-b6fa-dd22953bfc85"
        },
        "item": {
          "id": "b948d0dd-2df9-4f9f-8a9a-183813640227",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4cdb0fad-ec95-4467-b30e-03f3012d66f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c914554-f34a-47ea-b551-eda797579818",
        "cursor": {
          "ref": "0be81ddd-9ce0-4a2d-a047-5ba490898d68",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8c2c0bc9-ab87-42b6-a09c-71d6fa51a46a"
        },
        "item": {
          "id": "9c914554-f34a-47ea-b551-eda797579818",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eac100aa-8a95-4f5d-aaf9-7fb702df4fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1178780-3d11-4b4f-b39b-c275c4a652ab",
        "cursor": {
          "ref": "a7634cd8-69ca-4787-8ee2-6dbbaa6cab82",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "77d15289-964b-4c09-bc5d-dbcb8ebb02f5"
        },
        "item": {
          "id": "a1178780-3d11-4b4f-b39b-c275c4a652ab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b981e07e-d563-4226-8ee9-6f0c5cbb3657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d420e5f6-86c7-4e6b-b9ea-d87c94ba46e0",
        "cursor": {
          "ref": "8c754f12-08a8-4122-b3d0-31f0fc90c5f5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b1882a93-6963-4792-8364-2b360e5a4779"
        },
        "item": {
          "id": "d420e5f6-86c7-4e6b-b9ea-d87c94ba46e0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "02738d4c-d279-44b8-8b52-72764d601ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d050596-ac73-459f-9460-6f239ffa8be7",
        "cursor": {
          "ref": "a4833dd6-7e32-42e8-b53f-0d305b8d4e84",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "72bdb291-ce90-4a98-816a-cb3dbb0a08ed"
        },
        "item": {
          "id": "6d050596-ac73-459f-9460-6f239ffa8be7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "920e1769-f502-49e7-90cc-987fc782684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8975f416-6929-44b9-9267-9e0ad14c4565",
        "cursor": {
          "ref": "7d20745c-598f-4c9c-9a28-ab7fe97083d2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e896ae73-40c0-434c-89ed-ce0c7e4243bc"
        },
        "item": {
          "id": "8975f416-6929-44b9-9267-9e0ad14c4565",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3d188cd3-06e0-4dd3-8199-9c7919caf0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55de557-0bcb-44a5-b3bf-58d9873260b8",
        "cursor": {
          "ref": "47389a44-1163-4775-95d2-ee8b308fc808",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cf794a4a-90dc-489d-8b43-16ae82ba1fb0"
        },
        "item": {
          "id": "e55de557-0bcb-44a5-b3bf-58d9873260b8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2fea45a-7718-4fcc-ace2-d3df07d3ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cd0e81-ccc7-4a60-a38a-4533c7fa808d",
        "cursor": {
          "ref": "ae02f8d1-5a1b-4539-bb08-01b78b512731",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d2801ec6-b31f-4c03-9e17-d41c18547239"
        },
        "item": {
          "id": "56cd0e81-ccc7-4a60-a38a-4533c7fa808d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "676e2c27-46c6-4cde-81bd-69f00b9e7b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbd8fd5-d4ef-49f3-bfed-b06ef9b6805c",
        "cursor": {
          "ref": "84bf29cd-c52e-4082-89c1-55904cf64565",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "254e62d2-4195-4992-ab98-46ffda163f17"
        },
        "item": {
          "id": "0cbd8fd5-d4ef-49f3-bfed-b06ef9b6805c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9358c96b-0cad-4664-a6a4-f65781e6d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec03cf-332d-4ea4-b2ae-cbbc8f962aca",
        "cursor": {
          "ref": "3873050f-7ed4-4cf2-8846-d8d889a27f00",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a51acb85-ea12-4047-85a8-bb56391c611b"
        },
        "item": {
          "id": "b8ec03cf-332d-4ea4-b2ae-cbbc8f962aca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1de43eaf-cf88-46db-b863-5b8a9e50ed6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eebe62-a676-4f3f-a26f-7a6506eccd10",
        "cursor": {
          "ref": "cccfbe48-797f-4a7c-861f-055fc3ee28ed",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8fb29155-b6f0-46ee-a144-61d460c33e2c"
        },
        "item": {
          "id": "a9eebe62-a676-4f3f-a26f-7a6506eccd10",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "349bfb26-0ad4-4559-83aa-844ea1879188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98821b5-c1c8-4bf1-a81b-00bb7323143f",
        "cursor": {
          "ref": "2f9b8d1d-24f4-4ca8-a08a-cc6d7cb95205",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b591f7a5-18c2-423f-9285-1bd04073f283"
        },
        "item": {
          "id": "e98821b5-c1c8-4bf1-a81b-00bb7323143f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e49eaa72-3c5c-4808-b0fe-34675375ec63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba328d9-b825-4507-93f6-3f79b7ea5dc3",
        "cursor": {
          "ref": "1dad1e7f-c877-4eb6-8666-3fbf712aeb03",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cfb03442-b4c1-4269-9dbb-8c62a5d6e3ab"
        },
        "item": {
          "id": "dba328d9-b825-4507-93f6-3f79b7ea5dc3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4b6c8ea8-b860-4e84-9582-60f6f35b2e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1c93ef-703c-4755-99ed-649dcd5a4cd9",
        "cursor": {
          "ref": "405cb85a-2fa6-4e12-b236-2aa419fef94e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "823e52a9-7c15-4069-80e6-2d81a39bcb84"
        },
        "item": {
          "id": "6e1c93ef-703c-4755-99ed-649dcd5a4cd9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d4ee5f64-cd99-4083-a8da-0766ef7af2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df284254-5e37-4cf3-a6ee-9ccc20221973",
        "cursor": {
          "ref": "9d2a5b66-8f59-468b-a1c8-f5f75531975b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "45d56fb7-afb7-496a-bdba-f19bab9d8252"
        },
        "item": {
          "id": "df284254-5e37-4cf3-a6ee-9ccc20221973",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "66a6e381-4add-403a-8165-84d3e0052ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808bb50-63d0-4e3b-8f79-32824ed408f6",
        "cursor": {
          "ref": "5943152b-06cd-4804-aa1f-677c0a4771da",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0291c25b-f79b-4ff3-a702-97a064035a0d"
        },
        "item": {
          "id": "1808bb50-63d0-4e3b-8f79-32824ed408f6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ad80f82c-16c9-4ccc-ae75-01da24a40c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e3fbe8-3a52-46be-8220-1695edd5a014",
        "cursor": {
          "ref": "499a33f9-4606-4d48-8441-4917a5f500f7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e4ef78e-ca00-4340-96bb-533106b24c48"
        },
        "item": {
          "id": "58e3fbe8-3a52-46be-8220-1695edd5a014",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "97f1d3f9-582c-4056-a5e4-2acdbad9384d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15216d2-dff0-4a1e-816c-fee139a2d2e3",
        "cursor": {
          "ref": "fb0fcc50-75fc-46fc-abb9-69a5c860211c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d9808ff0-bb5f-4a6b-b830-4442098a06a3"
        },
        "item": {
          "id": "b15216d2-dff0-4a1e-816c-fee139a2d2e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "41244dca-74b6-40a1-b6d2-b47471d4fba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fa6fb2-9091-4995-8001-287711c2f73f",
        "cursor": {
          "ref": "34e3efb4-ced0-4ed9-a5b3-46fadbea5c9f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "93410c55-92de-409a-b702-3732b2d637de"
        },
        "item": {
          "id": "18fa6fb2-9091-4995-8001-287711c2f73f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d5640319-ddb5-4bd3-ac22-9c47c15747c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97109d6-b561-4c1a-8ec3-cadadf1b0f58",
        "cursor": {
          "ref": "ee558f99-479f-43d5-8933-45ddb76fcf88",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e8503d62-b269-4288-b1e3-84f5a25d283e"
        },
        "item": {
          "id": "f97109d6-b561-4c1a-8ec3-cadadf1b0f58",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fcd1ec5e-2b54-4296-a0d2-482ba4e9c966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e59bee-e416-4c01-a166-af5a510f2ca1",
        "cursor": {
          "ref": "cba91a52-391c-480a-bd44-1af9ff025276",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e34a7d42-1fc0-43f4-a241-990ebf71607c"
        },
        "item": {
          "id": "04e59bee-e416-4c01-a166-af5a510f2ca1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "04bd65b2-9645-40e3-b598-520cb4a1e3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3830fd96-e45b-4fe3-a752-4978ae53a9af",
        "cursor": {
          "ref": "60e01660-1a98-4e9c-8e6f-5f8995279c6b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0a4f5af9-1161-4be9-a5ef-572420846130"
        },
        "item": {
          "id": "3830fd96-e45b-4fe3-a752-4978ae53a9af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b05dfa2f-2dab-472c-ab5e-9744c9eada25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556e9a27-a839-4fc0-8cbd-561c3d8d38aa",
        "cursor": {
          "ref": "d9472ce8-f3f5-40b8-bce5-2b0238f6aa2f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "19bdbf27-eec5-4586-84f0-e079894a7382"
        },
        "item": {
          "id": "556e9a27-a839-4fc0-8cbd-561c3d8d38aa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "80578303-16e8-4f24-af8c-7617886ce04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd10e62-6e1c-4b88-bb81-44f30704ed90",
        "cursor": {
          "ref": "336be9ac-1cfc-4445-8d5c-f1745a62b619",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "05e3fff7-6702-46c4-9e6b-757f8e107766"
        },
        "item": {
          "id": "2dd10e62-6e1c-4b88-bb81-44f30704ed90",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78a03671-1f28-4bd0-ad84-9ec1fe23bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a693770e-9e5d-409f-8f99-7b5929035a5f",
        "cursor": {
          "ref": "677d3182-f1d1-426a-851c-57cf214323c5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "64c7211d-995d-4a32-8cb3-4bc71bb4b03e"
        },
        "item": {
          "id": "a693770e-9e5d-409f-8f99-7b5929035a5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "17a2ba05-211b-4d38-bbf6-86c640a3fb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5a239-24e8-4e90-9f42-e90a92b8d218",
        "cursor": {
          "ref": "e2cc702a-2b9d-47c2-ba45-ab420dd8ab21",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "14fd19ff-0acf-48bf-8877-36a87ddc008b"
        },
        "item": {
          "id": "b2a5a239-24e8-4e90-9f42-e90a92b8d218",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f6866ae7-435a-4b11-8617-b9765059b623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aacd7ec-5f4b-4252-80a4-7f8c8dfccf9f",
        "cursor": {
          "ref": "94cb0323-6575-481c-bf98-79f53f86fe60",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d99aa023-55b4-40a3-abe7-51aba28d1dcf"
        },
        "item": {
          "id": "3aacd7ec-5f4b-4252-80a4-7f8c8dfccf9f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d34a3ba8-f65b-4402-89f1-0aefafef6e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21c1f2-7090-4b43-a007-67f420108e45",
        "cursor": {
          "ref": "5f239336-e066-46ef-a4bb-180671b51bec",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "defdcbb9-304b-4f16-80f5-6c20b6367806"
        },
        "item": {
          "id": "7b21c1f2-7090-4b43-a007-67f420108e45",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "88dc9740-d3a3-423e-a77b-071b2f9b658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ac0fe6-7bb2-4920-966d-9e812143b8b6",
        "cursor": {
          "ref": "044a1ffe-e697-46b3-a35a-87d292664857",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e97593dc-bcc5-4452-9c9d-bee35e282ac5"
        },
        "item": {
          "id": "83ac0fe6-7bb2-4920-966d-9e812143b8b6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "28390f9d-c74c-4121-859a-00e576d54093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7ed13-3205-4447-992b-2dc34a61c11f",
        "cursor": {
          "ref": "fced82b9-d0ca-4528-b890-7fde2e3278bb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b75c7c90-a9e5-4eda-932a-cb2c1b4745d5"
        },
        "item": {
          "id": "9cb7ed13-3205-4447-992b-2dc34a61c11f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "047dec02-db4e-42ea-8e6e-b3329d6cd296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e0c0f7-28c8-4060-ad4c-4ac56939667d",
        "cursor": {
          "ref": "518f1f35-be7e-4e4c-81e9-f7e34226fa4f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7ae9c29d-5d3e-43f8-9568-6a88b85e9139"
        },
        "item": {
          "id": "35e0c0f7-28c8-4060-ad4c-4ac56939667d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e3519726-cc7a-48f8-bb5a-f40caf233cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed78a99-1548-45e3-9ab5-df42dcde40f2",
        "cursor": {
          "ref": "81c21e89-3e84-4ca9-bd31-e75377f5e4de",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "960e6e94-86e4-4487-9dc2-ad1d4845452f"
        },
        "item": {
          "id": "aed78a99-1548-45e3-9ab5-df42dcde40f2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dbe6b35e-e275-4f59-afeb-a261812d55f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21336380-4322-4e53-808b-d8c2e6baf9f0",
        "cursor": {
          "ref": "bb6cc8ca-4844-44bf-8f4e-c8d6d2d833af",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ae26671f-5448-40ee-839b-bebddf2e588a"
        },
        "item": {
          "id": "21336380-4322-4e53-808b-d8c2e6baf9f0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "424b33ab-f6ab-48e6-a5af-290e4c68f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3acd0bf-24de-4376-92be-3dcb237e7e2e",
        "cursor": {
          "ref": "c4cee8e4-a51c-45c9-b2f6-b31d57d8dd2d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "47a201bb-7187-4917-b49a-0dec77a42edc"
        },
        "item": {
          "id": "c3acd0bf-24de-4376-92be-3dcb237e7e2e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0d3444a-9678-4912-bb93-f8c0eaac1b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c70f0-0641-4aac-a832-562c823e36db",
        "cursor": {
          "ref": "63ef28eb-8fa7-43e2-99a1-99d88709da1f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4ed8a7b6-957d-4a26-94eb-a6bd0ae97bbf"
        },
        "item": {
          "id": "cf3c70f0-0641-4aac-a832-562c823e36db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "51cbfe0e-add2-4785-8f54-cc7867986554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e76189a-d39d-4cd3-ad4e-836318363fe3",
        "cursor": {
          "ref": "e082da9b-79ae-4bb3-9288-e620f8b912d6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d548ce85-732b-4499-9b1c-e8106b7b03ae"
        },
        "item": {
          "id": "5e76189a-d39d-4cd3-ad4e-836318363fe3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7a50a763-4bea-42ca-b640-cb9db961e61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d80bbc9-9862-4bee-a657-8dad939e139c",
        "cursor": {
          "ref": "2ffc9752-662b-4822-b2eb-2b9055eec10c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "006868ac-63ec-4cf3-ac12-c0563d66591d"
        },
        "item": {
          "id": "0d80bbc9-9862-4bee-a657-8dad939e139c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "621254fb-a6b7-4973-baa1-9b14dfbe163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64233ef0-7fe0-4021-985e-45e7af304967",
        "cursor": {
          "ref": "8b8fa40e-7959-4bb4-a541-9c9d86365ed0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb9c4981-603a-4774-87d3-e0c8ce6a952c"
        },
        "item": {
          "id": "64233ef0-7fe0-4021-985e-45e7af304967",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f59929a2-67fb-40cc-b65a-7d80fa5ed3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1371c9-61ff-4c2d-bc32-3f5078751f93",
        "cursor": {
          "ref": "a3b82977-0d11-42be-b702-784d08eacaa8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "478260c9-2b3c-4f4c-85b8-ee7a98cf5a7b"
        },
        "item": {
          "id": "2c1371c9-61ff-4c2d-bc32-3f5078751f93",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63eead23-ba4e-49b0-9d1e-9fa4c6fb9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e733fa9-b55d-4119-aa4e-f97b3a720738",
        "cursor": {
          "ref": "e71fe520-28af-48db-b0c4-c75e4e3b7303",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a093ea79-9415-46db-a14c-5406c86a4c50"
        },
        "item": {
          "id": "6e733fa9-b55d-4119-aa4e-f97b3a720738",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ed9d3e14-262a-4ec0-8b5b-d3d11a04bda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70b315-7667-457f-8ce0-3c7641c3a260",
        "cursor": {
          "ref": "16a3e19e-e6aa-4f75-ba40-baff608a4dbf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee47baab-4f30-4918-b531-a5e4e1b4a6e0"
        },
        "item": {
          "id": "6f70b315-7667-457f-8ce0-3c7641c3a260",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f53783fb-0365-428d-bf14-8e6b4f517e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30140b92-9da2-4c03-bfca-928b3841aef1",
        "cursor": {
          "ref": "3ed83e62-0a28-4891-a772-c91f38a54195",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6d1b2b88-a87b-45a1-aca3-48b649b510f5"
        },
        "item": {
          "id": "30140b92-9da2-4c03-bfca-928b3841aef1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3c79b6f2-6cc3-4a68-a748-c733e0162fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee17a8e8-b8eb-43ed-9705-e4c3fe829644",
        "cursor": {
          "ref": "2e3e9473-0655-4fc7-8bd9-a61eddce031d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe4ab538-8b4b-4228-a927-e961dbe563fa"
        },
        "item": {
          "id": "ee17a8e8-b8eb-43ed-9705-e4c3fe829644",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cc8f6507-da91-4954-88f9-388361ffc9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a304e4f9-afa0-4001-b390-954493615f2d",
        "cursor": {
          "ref": "aa01c091-725f-402c-9a07-5c9ef2a0bcca",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b5c98d19-4cb0-4a7a-850e-396855a123cd"
        },
        "item": {
          "id": "a304e4f9-afa0-4001-b390-954493615f2d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d03306f3-6df5-4c88-902c-ec3d8b74680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2485023-e17b-4769-b195-6a14177fbd65",
        "cursor": {
          "ref": "1597effe-3b5f-41c5-a3a0-e6048dccf735",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e679fe6c-3ee5-4359-b824-a4cc57746ca9"
        },
        "item": {
          "id": "a2485023-e17b-4769-b195-6a14177fbd65",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ac5b612c-5f0d-42c6-94d3-b1f2561eedf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ff482-806f-48fe-a04a-99c7cc899bcd",
        "cursor": {
          "ref": "490b04dd-165d-4ae5-8225-6a5400afd2a8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bebacb03-dbdf-4e51-910c-3bb7dc0fde5b"
        },
        "item": {
          "id": "a96ff482-806f-48fe-a04a-99c7cc899bcd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df0186f7-5c6c-46fd-ace5-0a94db381f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec5f58-d234-4cce-9e7b-8de7e8888235",
        "cursor": {
          "ref": "d39ecb7e-e11a-4005-8cc5-91d16de392b2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d9cf9dc6-c421-4ffe-8ee3-6bdf77aee390"
        },
        "item": {
          "id": "3dec5f58-d234-4cce-9e7b-8de7e8888235",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5dbabc31-e19a-4ccb-8e20-6e434ae8b1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68275522-302a-4d99-91d5-0da24ca7aa5e",
        "cursor": {
          "ref": "a7a4dfea-03c7-494f-9426-26ffa20afd84",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2568662f-1f49-495c-aea3-29d3d596afd1"
        },
        "item": {
          "id": "68275522-302a-4d99-91d5-0da24ca7aa5e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3c98fcca-89c8-4593-b57b-30aaae291196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bde7a1-ff8a-4040-a352-1732ab22b55e",
        "cursor": {
          "ref": "cd754f7d-8df7-499d-ab3d-74519284f261",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1f5fd57a-5c75-4174-8a67-570cf9e29aeb"
        },
        "item": {
          "id": "e3bde7a1-ff8a-4040-a352-1732ab22b55e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d3787315-2e7e-4895-8cec-4a511de51716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78f7be1-e1b9-49b8-b1c9-13412d5e8733",
        "cursor": {
          "ref": "ad62011c-4f63-404c-9336-5e97afe8008a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fd4e2fbf-b9db-4642-9b16-88d6a763bc81"
        },
        "item": {
          "id": "a78f7be1-e1b9-49b8-b1c9-13412d5e8733",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dd8582a4-0201-4927-ad7d-9a27e6c43718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955f018-eb1e-4ad0-9e16-1a7b1765c395",
        "cursor": {
          "ref": "7fc42275-3f3b-4da2-b30c-34259b6276bd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ee69b85e-a786-4fce-9b36-76b364bb209b"
        },
        "item": {
          "id": "9955f018-eb1e-4ad0-9e16-1a7b1765c395",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79629917-d55a-406d-b4dd-32407799ceaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e86ac-b6d3-4fe4-9cca-1a93eb30d8c2",
        "cursor": {
          "ref": "06a12cf4-68ed-47a9-8050-23d5d466d4a6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5e7e48f2-9177-414b-bd0f-19b238e0d85c"
        },
        "item": {
          "id": "fe8e86ac-b6d3-4fe4-9cca-1a93eb30d8c2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "70a9f7f5-148d-4dc7-a49b-32f89a1a1b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d099acc1-9586-40f2-a21d-61a573f596b5",
        "cursor": {
          "ref": "46b3adfe-57e5-4c7e-befd-9a878f6b2642",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cd32d8fc-e9a9-4c79-ac1e-045c34c87d48"
        },
        "item": {
          "id": "d099acc1-9586-40f2-a21d-61a573f596b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ad1b43e-1521-489e-bc4e-9bfb46d3ae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827b7bc1-8374-4598-8d67-f34a5f847f1c",
        "cursor": {
          "ref": "90e3af11-937f-4da6-8226-afa878cd548f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9ed1a796-6ea4-44e5-915c-680767ac4dec"
        },
        "item": {
          "id": "827b7bc1-8374-4598-8d67-f34a5f847f1c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "10e30161-d10d-427b-9c06-46b0944b6a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4bc1b3-3c82-4315-ae4b-10d7c80e61f9",
        "cursor": {
          "ref": "30d7a08b-a80e-443d-800c-687b4a7b0474",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dc8d7d32-0609-4038-b7b6-8f02da11e7d9"
        },
        "item": {
          "id": "bf4bc1b3-3c82-4315-ae4b-10d7c80e61f9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7dd7da9c-f054-4aaa-b964-83141d977ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b7163b-c51d-4e8b-a2a2-5b019701cb1b",
        "cursor": {
          "ref": "61606676-e47d-4d60-be4b-069946178b65",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8627bb91-0190-47b3-9ac3-8d37969f2cd2"
        },
        "item": {
          "id": "67b7163b-c51d-4e8b-a2a2-5b019701cb1b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c0b73b13-d0c1-4c5a-8f2c-aef64f86c167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdc254d-f5d1-402d-a63e-dd5b7ea044db",
        "cursor": {
          "ref": "9c3e0698-495a-4797-9499-1e77ef64a1b8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "42252644-f02a-4f51-a301-6b2b39069522"
        },
        "item": {
          "id": "3bdc254d-f5d1-402d-a63e-dd5b7ea044db",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d3989342-7a83-42f6-b4b7-13b3b36ebd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630cf667-732f-487e-882c-74a2b5370353",
        "cursor": {
          "ref": "72fbbbec-1819-4bf5-aee0-017aedbfe18c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "54b595c1-82da-4bb0-a2d4-120248f4af3d"
        },
        "item": {
          "id": "630cf667-732f-487e-882c-74a2b5370353",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1c72f398-783e-4d4f-834e-929c61229131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7d98cd-4aed-4598-8699-28e15b0be03d",
        "cursor": {
          "ref": "bb1f373c-fbf6-481a-9d8a-91d07b4bba31",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5f0cc72-0ff9-4372-a6b1-4345b107e038"
        },
        "item": {
          "id": "bf7d98cd-4aed-4598-8699-28e15b0be03d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8ef410db-181b-4594-9e68-4547bdeb556b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff306ee-3659-4ad4-996a-4e37f256837f",
        "cursor": {
          "ref": "3883d375-ac6d-4fb8-b6b5-2b55add25701",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fac00c00-1bd4-4f7c-83ec-178fbee29a43"
        },
        "item": {
          "id": "bff306ee-3659-4ad4-996a-4e37f256837f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65904bdc-3aa6-49b6-b017-4c1f4684330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856df62c-a822-4cba-90f4-066d4b735e54",
        "cursor": {
          "ref": "655bf50a-8a45-4701-91ec-c8b46d836a7b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c6546dd5-badf-477b-994c-eeaac49ab19e"
        },
        "item": {
          "id": "856df62c-a822-4cba-90f4-066d4b735e54",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "88a8621a-72e6-42c5-93d3-202f0e00b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7fdfcc-5418-4fca-9aa9-287316a9471f",
        "cursor": {
          "ref": "b2e1be3e-ebd6-4039-8e07-501127a5e0cf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e49654fc-c5ba-4d79-8a60-8109306ab204"
        },
        "item": {
          "id": "de7fdfcc-5418-4fca-9aa9-287316a9471f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c0e69a34-783a-4d6b-9e7f-f3a63dfdde00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04953899-8ea1-49d1-b606-db82b8edcfaf",
        "cursor": {
          "ref": "e2e463d5-d22a-4aaa-a94f-2bcc5d77f42e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78452aeb-581c-4e08-a029-21f9d04a1c10"
        },
        "item": {
          "id": "04953899-8ea1-49d1-b606-db82b8edcfaf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b81fb5f-b5c1-464a-8191-15ecc9c60198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9345c7a-672b-4e22-b361-9e81368ce873",
        "cursor": {
          "ref": "df9a3470-875d-43c2-8620-b13ca15d6a8f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c122eaa2-4c88-447a-9f2d-cdf0a1ffe76b"
        },
        "item": {
          "id": "e9345c7a-672b-4e22-b361-9e81368ce873",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bcc1e2ac-0426-47c6-94d8-b2b809fc5e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af04fac4-93cb-4fe4-b20b-8a9cf29929a3",
        "cursor": {
          "ref": "f208cd69-548e-4f23-9477-4710e96058b0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "54ca1158-8c9a-427b-b3a3-167b2801c04d"
        },
        "item": {
          "id": "af04fac4-93cb-4fe4-b20b-8a9cf29929a3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9e39399-abb4-4d71-a04a-eb2166046b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98433b48-f2d7-4c81-8062-e403633692f5",
        "cursor": {
          "ref": "7e54ac3c-7486-451c-a92f-0b7751cd3ccc",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "46f88556-36c9-471e-9c2e-960cd4e29f14"
        },
        "item": {
          "id": "98433b48-f2d7-4c81-8062-e403633692f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "96e8a767-4359-4475-8914-69889dea2b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8001d5b2-2bff-4313-89f4-2e078f5fcd15",
        "cursor": {
          "ref": "3b741bb3-dbb3-4bbb-9026-d32ddd3696e5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "84ae6b28-9454-4939-9a95-c9150676204d"
        },
        "item": {
          "id": "8001d5b2-2bff-4313-89f4-2e078f5fcd15",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f425ce3-0e95-4677-baea-830c172856ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b86720-8f31-4252-901b-b17c22a75625",
        "cursor": {
          "ref": "0db70ecc-6c84-4e6e-be6a-5b4bb125ba3a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ab41e28e-9317-47b3-bb08-f545074fe307"
        },
        "item": {
          "id": "98b86720-8f31-4252-901b-b17c22a75625",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b3e0e29c-7c8d-4041-8b66-ab67f48d12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce121da-baae-4b63-84bc-0bb6fd340d01",
        "cursor": {
          "ref": "98c657df-e1f2-40fd-a1cb-6e326e9e7be4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "93173e36-f78c-4df0-af99-1ae6f10ca879"
        },
        "item": {
          "id": "4ce121da-baae-4b63-84bc-0bb6fd340d01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cb815536-68e2-46bb-8212-b59e1f3c3087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca7464-4b5b-48b9-ae91-a0c4f488f976",
        "cursor": {
          "ref": "d423dda3-d4e5-4dd4-887d-a548986d09be",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fe4cb8d1-f889-4a73-84b8-842bea6d9d9f"
        },
        "item": {
          "id": "cfca7464-4b5b-48b9-ae91-a0c4f488f976",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff95b32d-b6a6-434a-8101-54ff95a0ad9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b34980-3258-4761-be15-74736ccd8ef6",
        "cursor": {
          "ref": "9ccab1aa-66ac-42e8-9189-7393f12426a7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "944dbb59-dd3d-476e-8753-06d83236feb9"
        },
        "item": {
          "id": "47b34980-3258-4761-be15-74736ccd8ef6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1f867522-7791-4e5b-be42-775b3e65c3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e9a350-4c39-402a-9f3d-f5c301e17ad0",
        "cursor": {
          "ref": "c0385511-7322-4a96-82f4-f46c92829c61",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a1d29e7c-9a30-4587-9b3d-922c9fc897b3"
        },
        "item": {
          "id": "54e9a350-4c39-402a-9f3d-f5c301e17ad0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dccbf5e8-d7b7-4cf3-ad11-3a0dbd96067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977fe060-95ae-413c-bc83-56a30ecba8e3",
        "cursor": {
          "ref": "4fcdca43-ff5b-476c-80d8-c48a4a35ba30",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f065193b-66dd-4ce1-88f7-1a50fab9d551"
        },
        "item": {
          "id": "977fe060-95ae-413c-bc83-56a30ecba8e3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "591ec259-b60c-4cb1-a986-4f3003e613f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afbff42-4a3f-4a7b-87f7-51174888b0f7",
        "cursor": {
          "ref": "84b29406-53fb-4e12-90a2-13662629fe7e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "149a4ba9-a578-40df-a1a1-6687441ba465"
        },
        "item": {
          "id": "1afbff42-4a3f-4a7b-87f7-51174888b0f7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dc4b6b27-b320-4b77-8cde-5ce0d4130607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "f86d4443-ce8e-47a9-a564-b7669bf8aafc",
        "cursor": {
          "ref": "2096118a-617f-4832-8a43-44b55b12b078",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c883db6e-f9fc-4db0-8ece-c2a548ebb6ff"
        },
        "item": {
          "id": "f86d4443-ce8e-47a9-a564-b7669bf8aafc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "423bae5b-726b-4e85-86ee-338f14ff20d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a62a5b2b-edc1-42ff-ade6-fe6c7661db6e",
        "cursor": {
          "ref": "e9ed619c-f710-421e-9911-d3767cb2719f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7ecabdfe-6a40-4b23-917d-2632955466ff"
        },
        "item": {
          "id": "a62a5b2b-edc1-42ff-ade6-fe6c7661db6e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5820c233-61bd-4faa-a3d8-21143bfd7d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c0465c56-f14e-4d81-bb1f-56e9f3cfd7fa",
        "cursor": {
          "ref": "35bf02e0-d3bd-4900-94d4-12174be260e7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "533d971e-8eee-4f83-8cf6-6ea596839278"
        },
        "item": {
          "id": "c0465c56-f14e-4d81-bb1f-56e9f3cfd7fa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "934fba8f-e4a2-4f95-b70f-7a04c2e6de59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0465c56-f14e-4d81-bb1f-56e9f3cfd7fa",
        "cursor": {
          "ref": "35bf02e0-d3bd-4900-94d4-12174be260e7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "533d971e-8eee-4f83-8cf6-6ea596839278"
        },
        "item": {
          "id": "c0465c56-f14e-4d81-bb1f-56e9f3cfd7fa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "934fba8f-e4a2-4f95-b70f-7a04c2e6de59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e173a99b-fa94-4f1a-a314-315c901feb7e",
        "cursor": {
          "ref": "27765c69-5bbb-4f9f-bce1-1ed7897401ed",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc490b19-9d4b-4624-928e-1c3d09ea60c5"
        },
        "item": {
          "id": "e173a99b-fa94-4f1a-a314-315c901feb7e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8690769e-f22e-4639-8ed8-023b2c968e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003c822b-5ccd-4b68-b631-7c30d897ee5e",
        "cursor": {
          "ref": "92c9bcd6-4bb2-41c7-a713-c0b9da4fe226",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a6cf3ade-6890-40c4-9009-7ffdb7ea9877"
        },
        "item": {
          "id": "003c822b-5ccd-4b68-b631-7c30d897ee5e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac21fd98-6ff3-4872-90b8-383eef2803a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}