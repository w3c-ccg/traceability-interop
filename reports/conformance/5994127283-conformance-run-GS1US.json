{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ff889cbd-5494-44c8-9628-60cc8ef15afd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "956877a1-f1dc-49fd-b51f-05824763311d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "371e4b86-98bb-496c-bcc5-b93eda584f54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9703bd7-34aa-4cfb-882d-f20952db31d2"
                }
              }
            ]
          },
          {
            "id": "2ac3366f-0c03-4c7c-8691-28bfe164f8c8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb89bc5d-35c9-4810-b2b3-574e4258ac1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e4d980f-ba1c-44de-b76b-ed07ed943591"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "da9d672f-71f3-4b06-bc16-55a8b56f4459",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e93bf59-9840-4e14-9018-bc0624dbaa6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83a91d86-bdd5-4e93-b581-4d9944961ec7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "351a7509-dbd3-4ef0-af30-cfe3cb43fe1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80dd6d7c-3135-4c48-801f-6310dec57468"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11b1740c-7953-4a87-a7bd-b1b88f2760ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7c5ad4e-e228-4ae5-864d-f003e0d408ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80429c8d-44be-42c2-9b88-e3f8988ef865",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4fed130-4a48-4947-92b3-ae227671bbf4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a692bd48-3410-43c3-8305-a6ba40dd3277",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ada38914-a723-4983-8f1a-20c4702d06bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "265f454f-7332-42d2-824e-2c0ddf8873c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "880d479f-76b8-48dd-b649-101ba3614a1f"
            }
          }
        ]
      },
      {
        "id": "6abb026a-313a-4d61-8e59-6fa2d057273a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8ae10e2b-f878-4f55-b85a-57d034253e1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0f20003-61bc-4693-a2d9-204536306e22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e774f5b4-5267-4b24-b5c2-53a7a8efa1f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0454d84-3ef8-4c24-a761-c59e69ec2947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "973d0cf4-0295-4977-a909-e29fc3edaf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fea391-f81c-40ef-a1c9-54fe03f17faa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1463bbf0-d0e8-41f3-aae0-dfa434bcdf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec0dc763-8aa9-4009-a954-817a9b93e6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8abf23-d2de-4bdc-a69f-be7164f7c0f2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be15bf63-0d4e-422f-b48b-1326ebaf01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1867a7c8-b541-4c43-bf2b-bef67c31bd66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe5dea18-48b1-4636-9af9-d39318462c11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ff8668b-357f-4fdb-97f6-cc5d2a8e5367",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8377afe0-649c-4da4-b59e-d4713451492e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80712325-391d-47ee-95a6-81b543f450e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fa80cb-7c98-4337-9287-2edbe7913e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cddf7e-cf0b-4fc1-86ba-5298e9f75da5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1cdf2689-36a8-428e-a70b-1ff3255d03f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "356403f0-a437-4f24-bc1e-09150cb1177c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6bcd173-bef1-4777-9d25-be012d4b4d4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f2852565-9ad5-4c70-a887-55ce7ca7ca39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "158150a5-dfa8-479e-9055-125980f1dac7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a40c3c3-034b-4e03-8139-a5c1a04dc259"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa9b20a8-f66a-4e3a-a874-0de085cf10d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d77006bc-1fff-4d97-8ef5-675c5e16b8fb"
            }
          }
        ]
      },
      {
        "id": "cbdde8c3-3787-49c1-8218-d13f3fd06cd0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a1372ba6-9301-4a71-a0fd-260ef7a6c648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a68cf1a-4e1b-451a-8f9a-117f8d06a181",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2e18ebc5-5e85-4305-ae97-d64ff7e980f3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f67316f-a3c6-4db7-8ef0-fcf4a37f43d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248e648e-02fe-433c-b553-30c23cdbf80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3348c1c4-ab6c-4dda-9f7c-c801b34468cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d7bf25-5835-437b-b1a5-551579595c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41960993-d9d4-4c90-a150-4c6e616a6563",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcd2703-8b9b-4290-82a8-9f7c26039066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3205b845-00ba-4ec5-a65c-a172562d7059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c4ed04-8643-408c-84a3-7811df765e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eebab37-ed48-4e13-9bd2-c12cafdee114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6d67a2-40bf-4237-94f6-782c4a2f0605",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cc2b7c-4e38-4315-ab74-aa9ccf2c4c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e8e2c5-f085-4727-ba76-3a9dd57deb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eafc20-ffd0-41a3-b7c3-288218e70e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d12cc0c-d08b-4f58-a3d1-2e6d1d183fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5122f312-87c0-4843-821d-0e29048bb0b5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04ffc5-b0a0-4116-8c82-91f19ace8516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ab10bc-16ff-44e1-8460-934bf94e985a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7fd31-8aac-4416-86d1-9bb3c42f122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0585f04c-6a56-46f6-98c2-98b383e1551f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9edeb10-2f1f-4f0f-9c6c-5acfb06ab419",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4394e83-686e-4b0e-9d33-bd85698ce1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed8cd96-8cc8-4089-b51a-766626f9bb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fc8225-3cc9-4e48-8497-420f254fef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60cb6c53-20ce-458d-9368-169c862cef55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe24e16-2332-4a78-8c92-a50f06af4b3e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e6afdf-ba16-4137-9848-f0d3ec11ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40634c3-41f6-4d94-a863-56e4b7302344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d693a-41cc-4efa-a0fb-7bc5ccbb0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10ff5ec8-c286-435e-b8fe-9ef7e9ec45a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e3146b-fa6f-4b50-ba71-ac91229cca2b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f45cd48-4c15-41a2-ac2f-17f0ee23ff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb8b46-62ec-4a78-93be-3e9ada255c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51af420-536c-4dee-8cb4-affd1274be8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8917b671-3f57-4f72-aef2-6e75bd0e224d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad111e39-381e-4195-90fb-7115da75534b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7498ce-7a58-46f1-b6f4-59b45193ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6f0aba-cd83-4b6f-92f7-a2c239b81cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a4746-55ed-4d52-9427-aebf7b404342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770c599b-bcea-4d5c-9ced-ff867eb5deed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f799d13-46b6-403d-b2ec-09f5da5cb7bc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1756b8c-fd2f-48b3-9414-948d0c13c46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31941602-3b98-47ee-81e7-d605c8c92585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db4be52-22a2-4b80-843b-e61c5da66067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22b1e3c0-5904-4f47-9fde-985966ecdf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64acce-52a6-4ece-b31d-168ca4178ce0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b50961-9fbe-4f69-8ca2-710cb95a6e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aec50ab-e47b-4802-bac6-f6291252c122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51fb75-bf46-4970-8d4f-034a8bd31d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b8db5b0-588c-430d-b6a1-f2bdf4b6effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a88dc6b-fae2-40ca-99af-63ed6ed7c612",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849675bd-0749-4d43-b0c2-de3a66618748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc564e0a-b9d9-4e21-836f-393530b751e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b06ee7-f399-4b8e-81ab-076826a63eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95bab9a5-a9e8-4c21-a3d5-9c66c09a4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da7c609-3a51-4a4c-a17a-a9add53e2d43",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35080c2f-5516-475d-9211-054b67ef3b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8011fd19-a460-4611-a4bb-e1b7b2efc42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7106c6-4ca2-40e0-9bbc-10185ad52ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a69a70d-e610-4130-9011-867df09a4217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee55d738-cbf2-428a-b92b-22b8639ac399",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0aa8cb-b877-4e09-9df7-243a981bea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf6a78b-83e8-4e1d-8d0a-88418d77f0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d976b84b-0b06-401e-9a90-8832688c25fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe238c0-fe72-444f-89ed-92056fa092fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a82c6fc-32af-47d9-8db6-6c6b0aac7955",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b6ec27-cfa0-422c-aac4-a90580d6f689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0b006b-fdcd-41f3-8295-fbff02b0460e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a8725-bfd6-45bf-b993-6a30a33c749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70ba40b7-1e5b-4f92-928a-b20303c25676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ecea9-ff35-49a2-b42f-279f41bf1a6f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdddf2fb-e125-45b3-8877-fb1a59e67336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b9e7b-a344-4883-8cc3-ebf5bcdddf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccd4f9d-1184-4460-96d6-e8b0cb7e5f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a7a1077-86ef-488d-858e-ae0a42d6a600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d34b1d-3686-4c18-a1af-94274bbcb184",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d43921-0083-45c0-b580-d7185a702292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f65423-9a40-423b-996e-c9d7e9ecaf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999d81d-6374-4c96-9ab7-e02adf36549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2c307a0-c128-418e-bdb1-0eca22da0c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46972a2c-12f4-48d1-bd04-1937d7a70845",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badf4d29-2284-4436-a16d-d40f03cab05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d1545c-5e79-458a-ba3c-819346914c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa39a0fc-7d32-44de-b01d-a450610dfe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6da9c791-14c5-4116-a4bf-526475db77b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa4342c-4c18-4f63-8dd7-149207a6d47e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6332cc-b436-4908-b5f1-2868beae5e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ba34bd-b6ae-44d4-a3d5-7f26335f1a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabeecb4-4fb8-4575-8d84-24c54a3c1624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "075395d3-1f5b-4c5b-bc0b-00efbe71d6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698f851f-1b14-49fc-87fb-3819fb858c21",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a34d8e-ba5c-4436-a77c-d37cfb63d542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1b0e4d-1387-4ec6-a155-2a68f5c59b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1440971d-3c02-404a-8938-30805dfd0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80450170-85f5-4c32-bc4d-a51ad08e4bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd131c41-bfa3-4d0c-a8f9-ce3755e9f63e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94d134a-358c-49b0-8c41-cd0325b4e99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdb52e9-753a-46be-a8a0-9af2b0216a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8858bf4-e04d-4a9f-a451-11e75706e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0645a95c-1495-4a3a-9e77-9943ff6dea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba158352-db4f-4e8d-a864-369ad5a7dda1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d928046-c2ba-4021-b480-0072623f56c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92569903-7c7b-4714-9241-b38e673b9330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865f6262-0226-4fb1-960d-f2888e17e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de64e8b-747c-4007-a3ee-64687c582920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd9fe0-32ff-4d66-98a5-a165ad3d97fc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a2da3c-1550-4357-97b8-9d70986bf09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5f45a4-fb0c-41c4-8116-1a5a379f4028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec21f37c-4480-4c01-acca-01611d7eb339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b0e049-cd1d-4937-81bb-91700d0b3c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc37f8e1-0538-4a32-b48d-56f860785de8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea116d34-0283-41a0-8e42-e8ce81b169ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a93cb8-be71-4c3b-86e9-94f02078fedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee58539-63c2-4c25-bb43-435d2bb15b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7195b57e-e1bb-40c6-a9a9-7b369a5199ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511fd4fd-5c95-4522-b942-7d364fad99c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f564f-000e-4e6d-a8f5-e1b6b00a82a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a1ecbd-b5f6-4fb1-b9d8-5fd0223653f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8530af48-d88f-412f-a400-846c18d350a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7064388d-ec13-4ecd-b68f-fd0c5a89e7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7159dee6-2b34-4f37-9ca9-56e4d043e250",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e27ef8b-6e88-4c51-8837-27e1ff1fe579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c607b419-ae72-4b86-a344-f1d963fdd9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07068096-1e1d-412a-a845-49e068041cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ac687b-f9ae-41cd-b7cd-f70d191fc413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9838135d-41bc-45df-8d75-2b0ac45fcbde",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c030f-8d04-40c6-89e0-ccaf6977cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a126995-7b9c-43a0-a090-60f99e6e58d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0d90e0-466a-41ea-af16-ec677ff51ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b45144-b434-4a7f-9eb9-858cd3138483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fcd331-6e74-476d-955b-4a8dd43a6409",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa3055-992e-4deb-938a-66c811849319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052184a5-8bcb-46b7-a75f-1c4c269ace5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779dd1ae-6ca2-436a-b9e0-c02b9089be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7297c6b6-976e-4c76-8375-149526f489a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ff240-7aab-4646-ab7a-052d469760bb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b313a3cf-9321-4988-8b19-54e2fa5af06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221e5a2c-df5c-43d5-a737-d13942d874e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0c3d3-4e27-4480-a715-485a1083e4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9bbc75-8618-48c4-8ff8-b5fdcfb6c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cf204c-c084-4f0d-aa33-1eb4188761f3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d894b-7d33-4326-a851-368bb1d0a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632e07df-5264-416e-89ec-543602a3fe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91348881-819e-462b-a169-ebe7fdb27161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61e2f9c-3a9a-4996-8dd4-a531dad4d317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1005f-1d6c-4266-a040-e39f57ec738a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a82769f-cfc4-424f-8686-55b517c6af25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea23bb51-4d8b-4616-acc1-526a447501df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91b01c-23b6-4324-ab4c-797ad9111b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1cf0bb-b36f-4230-96b0-a94c38ecb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c7b0f-b505-4e98-9a45-d5f43c08fd61",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83276814-b3f4-45bd-92e8-f85e0dd9c20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbe98d6-eecc-4e87-b75b-d521b8afee56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8576d5-073a-4064-8778-2296fb639e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4946ffb2-5a8f-44b3-a1a0-81c65a562a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596fbe7-b8a5-4d0c-8005-d82a68010e97",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eee88a-3f62-4551-93d0-6d9d213e0460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f37ac9-2522-4ed5-917c-17a47c851677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6e14ea-6582-45b3-8e6e-c2509b86438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "add1e89c-696b-46d7-8f0a-e7740478fa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32882140-873b-41dd-a26e-5cc3acd7cb6d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37635a-f289-4ba2-8930-0aa793663fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390345d1-bda2-4167-8742-979f0ae2ff30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c1a923-ced5-4637-be5f-7519cf6470c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5930b7b6-a373-495a-8bae-93bbf7203fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb708bd-c0dc-43fe-bb9a-daeb03aefc81",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786ea398-78c2-44cb-8b73-4f3ffe5b299e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee88aba7-24b1-4433-97b6-1211d20d8b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417961d8-f205-4c54-a531-99d51994fbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a8df00-c1a8-4afc-9ed5-053abe4d8b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f390586-d367-4325-a7e7-da416d41b2e4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a881816-57c7-41cb-93f9-647854b55414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436588f5-e781-4352-90d4-8cb656fc7ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07fe093-be7e-466a-84d0-9e89c6b04727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "009d3f37-1b29-4220-8034-693dfa4d4206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc21514-620e-4d72-ad13-a070037d569f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fe706b-5b5d-48ad-a6ac-5343887fd3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f272e89-66af-4815-887f-797b1488d01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0560cc92-46b1-46d9-88fe-b3feaff72ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23422378-0c9f-4007-814d-bb01f0de123c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ef3bec-a9fe-410b-ae13-66d1b6bf165d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71692844-a713-44f9-8afa-10373f5d431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57161472-e1c3-4bbb-be72-dacca388b860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46d47c8-56da-4998-b84e-4dfeef1a2259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6eb357-8475-4647-9227-67392d8e273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9606b5-597f-4f74-89c0-c2e8f77ed908",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e22ac06-b397-446f-a2e1-44db5b08c579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fadcdc-08b7-4dec-8021-056717d8345b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e808b1e1-642c-4006-83af-5c653d767453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00ca0f0c-ff55-412d-9088-b35a26439a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7411b14f-1395-4e19-b058-960099e2bbf0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0510d0f-1c9d-4df5-89d4-54d5b47f3e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150c7489-ffb6-44c6-8f5e-faaacd06437c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f7d201-6ecf-4030-b728-cd273ad9073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37bfe3bd-10cb-44cf-960d-88ed50e5de7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25a8ebd-bd1a-46ad-b9fd-9bea51ec8f74",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b680a3-ef8a-44d9-b8c2-a9c6b64a6733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d668b608-ac1d-4109-b37d-024a4dc42c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed7b6c1-4067-4f49-ae3b-07828cd4ed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aadd2d0-3141-41e7-bdc7-646c59544462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8740f9-3bc6-4247-91df-e545d8eb8703",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c28f448-d3e7-44bf-aa1d-f773e2d12da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3ebbd5-d2bb-47eb-b0bb-9b0530a282c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03618e69-e01a-44ae-924c-b0895592a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79efb1d4-27c2-44e2-bbeb-6648a11536cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e50b757-2cd4-4d23-8f34-dc3044614c69",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6802924-4ac2-4ef5-8c97-eb00f95d6dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec10b434-5098-45e6-b80e-af6c555c4113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7757e8-dc66-41a6-9992-3733167938fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "584f4c32-e19e-4ab1-96d7-8bd274c6a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a93424-f97f-4b2d-80b7-2a9b48047a37",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c95b33-30e2-48f0-a6c2-bb38d1a3f1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d90c42-6a2e-4278-8307-fbe3a96ee566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0538497b-43b4-4544-a6a0-f608ab58b0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e86ea49-e2ec-4913-8d3c-a6cd40579a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709709f9-7812-447f-a70f-f85a18a4391f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbb74c4-6320-4a43-af76-7ead73f1b7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c011b02-ee15-4cc8-92e2-9a281c6ab07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3484ac-0542-4f35-b823-998d2330435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cbf89a-c8a1-46e8-a95d-9f87d79422af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d2605c-349c-4f99-b60d-72c098b054f0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bb0398-4c20-4698-a3e8-4338eec703fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8cddc9-1a5c-4f61-97dc-65690a5ba793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f95c5d3-678a-4ec7-95f1-5a8e978103ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "504042a3-5148-4189-bc30-321b934ba012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d215e9d8-444e-468c-9caa-6b03af1c3f10",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2613f04b-b630-4bf2-abd9-d5c75f640a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae0a596-f351-42fe-be5e-58d71bc478c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d0831-30ba-4b66-a203-3c9ba2514478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a31b61-30f0-4bef-9b2e-8983953fdedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2567c18-250d-4d30-af6b-91c892bd2a8c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc4c08-fb08-4776-9b7c-2aa396f4ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fab52ef-0cc6-4acb-a035-879050f9a818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba56291-1548-4692-8a29-31dbd1978fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fccc32c-b85f-412b-bb94-ab294b12a877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad5dc21-1648-4f38-8804-e07a662ffea5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9642dbf-f7d0-432f-a2c5-dbf84b911b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770074e3-8ceb-4484-a5e8-c5dd0ebf7eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4a77d-7541-4fe5-852d-c6690b868ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a1dbe7-c441-439f-8c06-5244ffa716e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f57010c-903b-44c2-8b21-53d5e8375a63",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545084d-8f30-4f62-8e2a-810beb64ffc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490d02ac-37f2-4aba-8fb7-0e1ed564dd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40b29d5-1c68-4051-bdb7-d381f40adc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6a354d-5e3e-431c-a0e9-3ef83aff49a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f64905-937b-4caf-9049-029def686ec2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6eb7b7-9fc6-432e-bb16-c35d1a71a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2ff608-e3fd-4213-acf3-fe2492d79da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d3f63-00ca-4304-83f1-803e039d8726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8970d504-8149-44c6-a384-a46095311455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7c6486-939e-45cb-bb8f-2fce39828fcd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e68e5-7c89-4f6a-831b-ec38cd6ea1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c95306d-2475-43ce-bf34-c9bf589582f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5496bc-13fc-4676-bcf7-9f4df5bada59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b074acc7-5d34-41c5-a062-148ddc7d50c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c6f2fb-3517-40c6-9074-e11f2e44f1c4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f290bca-1891-474f-a0b8-f660e9c5e185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ab8efd-2b98-442a-a369-5ea0aa53e380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f199ea9-0be4-46d9-8336-fd33f26e5119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf331ac3-f113-4e0d-b27f-112f2811af61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6d99d7-a0a6-4f2a-ade5-33dcb8c7f863",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21526930-8562-4715-8cd4-03458c4ef1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a70a54-cf70-4105-a92c-9b6e5ef13c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5aae99-fc11-476a-ad52-0899f290068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf3ef49-305e-43d2-8e53-70030ebf21db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689b907d-eba9-4fd2-a8e6-9d24e2beb70d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecfcb4e-0a2d-4b78-a953-07b69c66e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae5be9c-6bb3-47f7-8e9a-c0b268a3d42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92071675-2e5d-438b-b635-5d38c9b0f5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee98897-7d66-4c3c-bdec-2b116f63c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255c5424-5c70-47f0-bbbd-b81b0133d7ae",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a4796-fc5c-4a9c-be50-0979838b222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f318ef81-57b2-45c2-8687-e2e06a3062b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8512044-98dc-4bdd-87b9-b7a1436b9a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b7d5aa-d286-48aa-83e3-d35e53844b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c67122-444e-4e25-acef-c55c48e93307",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c75b71-e7a9-405e-a89e-feb8a07ac6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14458fde-80c6-4e54-931b-0cf7dec24405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63c3b14-c461-403e-9853-84b71ba84adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b0567b4c-4a51-422b-b43c-37ba39d9b59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10af7c2-d10e-4d3a-9ed5-0c57af1355a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cae323d-0e3d-45b5-b23a-b7f54bc828b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97aca00-b968-4c57-9836-a016a2b5e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba422e95-f0bf-4c29-b5d2-6fa540d16671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2862ed83-52fe-4a92-bf7a-ce6bccdee6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c8a6a7-d23d-4dcc-88e1-2937c5b84586",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d2dd34-c44a-469f-bc3e-9c9745d60022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90dabe1-2e78-4249-aad1-b7278be63ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab09e81-2868-4494-83c8-88e490cddf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a8b07c-9710-4869-ae8c-8efcedc08f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78e8630-6841-4ad7-ad61-d40c5205c896",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f32d9c-1413-4120-ac12-32827a97fdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34d6e7f-c404-4faa-b7e0-a3d9590bc163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3dab33-e4a6-4ab1-8165-14bf1594423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c71c2f2f-f137-407b-aabd-1e39940e09da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a39764-4865-432a-a1e4-c5eb625b7d7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d654db-81af-4e08-9134-c0ab8ad43cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8d9e72-2456-4cfc-9ac5-ccb0db9d86ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7c1e1d-26fc-43a4-a6f2-e37b3cff9bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23b85d1-2158-4190-a4b5-e1061fa67dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4f011f-7ea6-415b-891f-35e12f30aeb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46a4ed8-585b-4b8e-89e0-2defc262e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebeea40-04dd-420a-a5d4-20230f31741d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50866b2-dd04-42f6-aeb0-e681aef7edb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc96f2b3-8520-4354-b9c1-909afea3fc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77faead-35c8-4c33-8018-678580f67f49",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b7360c-34a1-49a2-b048-55ffbe7e2f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b6ac54-b5ec-4b4f-82d9-504f84616a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded80fc-bb32-4576-8668-761192acfb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28171aad-9187-408c-a184-911174006c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d77b94-6c03-4302-8ec3-4114843c05d0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03ac891-492e-474c-87f9-826bb84e3a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf74595-3841-4afd-9b40-f5c6490eb948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb3f728-84e0-48df-882f-d492793c038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "599fee42-4fc3-4b69-8e87-fa8f6b379708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefb336c-f23d-4e95-8888-0c3d2a746bd2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5175572b-fc7b-4e33-b50a-a743f9a4c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b6c268-2f6e-4fda-a442-63c07db25ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ba6236-0574-4bf8-a069-9148c372ed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daaec37-fa80-40f9-8ae1-3b4376b7cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f468c9-87ee-4169-9ae7-07b50d605daf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b17aa4-7374-4284-9ebc-2b8eefbdff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131b7de7-2ece-4ad7-9d70-e89af621ca6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caed898-762f-48c6-9d28-2bd738039a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6406dd3a-84b4-4baf-a0fc-bb04c9367402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd95c1d9-fd24-4bca-bc18-ae9452f1d02a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d675003c-fdfa-483d-a88a-6882c41be2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463e76d1-8b7b-4113-9996-fd7df47c648e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d17e7e-930e-4cd0-84c0-c95e3a134513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc43477a-6e78-4e26-a81e-cd84de3e2df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426e5dc4-f5bf-444c-9e21-aa890009c2d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba08e36-8a13-4459-b2bd-dcd2c94c8388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534b6354-195d-4deb-92b1-609c04d187c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d3ccc4-3bdd-4af1-b4f2-9a709e89f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fa1c33-4cac-4554-bc12-fe1244032e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa357a05-d289-455b-9fcb-7f5f36284d8f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16de404e-4202-4205-a3f6-6ef85d336e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd92f56-fe45-455e-b186-7af74c3a2032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18493fd2-9eba-4885-92d7-4ce5df41e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1acaf6cb-9fe5-4696-a3e0-989270cede2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a89622-17fc-422e-9b39-594fcf0b71fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb7acc-f722-4f34-a11c-b9d753b39349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b647c92-e629-4e68-b1ab-c47f3a87051c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d42a5e-6e31-4b4e-b7c7-db9dca270576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb2207b-99ca-4eea-a9e7-b1a7a1efad5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7294217f-e02c-449b-91fd-b88af18107e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479e3f03-5b18-4cee-93e3-cd92c85c1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178c2660-b8b8-4774-97ff-3fc6c1f3f905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286cc960-4a9f-45b8-9fa4-a3f5e71ad3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a867cd-d954-4de0-b54d-a5ec12897a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cc789c-9a6f-4ef4-806f-8edfc1c7d8ae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183aff8a-0478-4592-b947-ac16f6ad6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570f7a53-a53a-4911-84af-e1175d17b08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad341bc-2242-4a81-b5b5-8d4489df3855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0328d84-7633-48ef-b7f5-834ecf715b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe387b-5c1a-4472-83ec-d793467a5092",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b61b80-d180-4848-b837-70dcf9a70548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94873533-2e51-45b1-8239-c029132b61f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99efe3b1-4cb0-45f9-a115-36311e9dd5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f44560c-485a-4553-970b-29bf048da2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d47f8-c0b8-4e88-88e0-a6292f319763",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae05a64-7a20-4750-959c-b15410027996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0043ffca-f34c-4218-a391-9a3dcaf4184a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef80f27a-c78f-4e5b-adf4-fc8552f7823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa851149-8dc4-4cab-925e-2c95859ba608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefc69ba-6cf2-4e6a-9413-fa196e4c037f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae73329-561a-4551-b699-11c260609af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e911b69-9b95-498c-8890-f10bc0c63651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0caa13d-8c1d-41b1-9162-7bfcaa0b73d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3accddc6-9d73-4341-82ed-0880a7fb4a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad16360-df16-46d7-a2bb-d378d297e232",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789867a8-ef62-4bd1-9405-aaab2ccf01ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5872d8-17f7-41c7-a2b1-2d15cbf11a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89296c54-56e3-4bf1-aa98-49b67f937dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c699d031-1692-476e-945f-2bb0ae548437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bfd846-99bf-4531-bfc0-12709b09f173",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378dfa29-5d77-40a9-8754-3202683b3d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdd54e7-81fd-4f5e-b88a-e6d75698fc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1af97f-8b11-4294-9389-b9ad0104c319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "893728b2-b227-48f8-8140-e28e2a4616c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ff282-fb5b-42a9-8fe0-457c223d7d23",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa42056-ed47-4c7f-b8c0-16419f4289fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2e9ac5-4493-4c5b-85d5-4af68a961366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d574832-1f37-4ebb-af96-eca2fe8090a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c23615-ec4b-4720-bcdf-f8396301e8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f238ae-c619-4728-a103-6f9ffb48b510",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d87b0a-c640-4cf0-96c8-64dc5fcaf0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71030b4f-66ee-4692-8e48-57e7d4e1e400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d2c48-7abd-4e66-b7eb-72ceed947acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e15ab76-1956-447d-a2ee-a0ea1c668f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5addbd-500c-4bf2-9493-4049d26c3c1c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08c844d-68e3-4e65-a0c9-e8b5bdb05df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c14375-13eb-4909-9627-d1fe660847cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36bb31d-c166-46cd-9269-f88c6cd8198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c297ac5-7448-411b-afda-c684100d265a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffa7a03-1f63-471d-ba78-8a94809d0b39",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f7d1e5-3804-4662-927f-4805f4d463fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243fbe57-1963-4129-b2da-52f0f1eb5e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6c71ce-b99f-44a5-a522-486bab10eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2b570e-4af7-48aa-96ef-01cf22b0aab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197fab7f-8969-4d9b-bae5-ff53dc988ff1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb36395-f092-4a42-a268-8c3405614961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207ad67a-1671-4e13-bfff-f3d99c521e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e390c93-f321-42aa-ab08-44db2985fe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a058fa-b9b0-4111-8c88-20615f27b8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8383e9b-634c-452a-813f-8ad52382be56",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a039006-f64c-44b2-a325-71f642bc5381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a005de94-f562-4e42-b4d5-9db60a69da15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4085fefe-1a39-4d7a-a604-5eaf6a30d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b072fe-fe47-4601-b09a-243fa2d08621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f11f7f3-e8cb-4348-9723-d78f1eb9952f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39c8e94-0b32-47e8-b841-c8b87b3ca9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe58da5-5706-48dd-ac2f-e7424adbc135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f7608e-1024-4245-ab2c-3798d88ae187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c61922-4e4c-4169-95ea-2896f0976f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4ebfe8-c50e-4a63-8b2c-85fa6421ec8f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e91ba47-bef3-4db5-a074-54a205b55574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ad82d-62f4-4aeb-baad-59f01c288e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56baaa63-440c-4ace-b080-f1c17b4ce2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a227392-d522-4994-8ef6-b8acdc2b78fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b3879-f509-41f1-887e-d7c6eea36d8f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf910d7-ede5-4f53-a7ac-4dd6ba4be130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009dbe99-1644-4f62-a2de-48957f51a790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18af4ab-f80d-4e48-b17b-d703beeb86db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6092a3-bb13-4ab7-92c9-bc5019fa37a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041280a5-22e9-40de-9236-821c73bea5f6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e3d9cb-d439-4297-94eb-83b4d34184fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc9d711-6b20-4f14-9846-bf4839597dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e254d87-c53c-44af-acc3-bed790643e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f65516-bf99-4691-9c05-94dd65aebc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c0c0f9-a114-4539-8dbe-30895137bce6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebed324-4040-4bd0-a065-56d2453398ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9a6b6e-9769-4595-9b69-c4f17ba8853f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43e7089-77c3-4843-b8da-5d387d78952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5dfc85-fc5a-4877-bde9-03adda9030ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8637e3-218a-43e3-8675-469b3aad08d9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d80214b-80cd-4302-8f51-137fd70fbef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902ab87b-0edd-43b1-be1f-f6896edd66b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac0b605-f56d-4c76-927f-90de3aced2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "674d62d5-1ae7-42b0-8fad-2d57796a9777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45edca2-4571-4602-88e7-237632535ce9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29601815-7b66-4365-a534-767dbcddca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b9a312-b22a-4384-99f8-3cfdb88cb756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03954a86-5100-4343-92cd-f2b12b4d70bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa838fb-adca-4956-a507-81a5d3f920fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e30b5b1-15c1-4ee6-8068-d2d5ca704218",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e0dbe8-3971-466e-ab15-6a8591b37057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c41342-445f-4c33-9c5d-c77f13a33cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac58bf1-1a6a-4e24-8af1-7fba251adcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67671c3-8ac0-414f-9ab7-d59d0672f49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195e57d4-c814-4fca-a99c-ea860c5e5871",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4701c4-56cb-4c71-bb64-213e1186f45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7804a5e2-4dd7-424a-a454-c621f9b0e6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3baedd3-3f43-4ab9-a48c-9d6985bc196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a986e1df-8214-4c21-9586-028b817849a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a420e4b-808d-4d65-b783-66de6d8c3e10",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea9ddcd-bef9-4274-96bb-6073a4b00e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0def9abf-2fcf-49af-9558-b0c87fbc467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e249a68-dd55-40fd-b50b-367659fabdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93775f5-7aaa-4f21-ad21-52024e970f71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6eba0b9d-d0dd-47f0-a47b-442ebb03f5ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5297d393-6629-4c96-ad73-26e1e01281cb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12649d74-3072-4aaf-b6bf-3ac17b14e034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85f36b5f-62cc-4be6-b50f-e6046544af73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6d6900-aaae-4372-b0c0-762158df2c9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79ee8c5-f282-4342-8db1-56ef4dfc9c4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79f82e3f-51ec-4c86-aa73-68500d71a806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715c21fb-4e9d-48b2-b20c-bbc1c6e407aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6987cda3-7a17-449e-a73e-e7ee4f932c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0afd73be-cf2c-43c7-a325-cf958c0fd469"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64f6411d-6202-444c-8e8a-6523c432f076",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcceb5b2-fd30-4034-ba62-00fdb6eeffb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bf1c22c-6fb5-4c04-ae1a-b5aff12dc9a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7285a18-355b-43e3-a1fc-e8d586e6f924"
                }
              }
            ]
          },
          {
            "id": "0bde55b9-6573-4fcd-a028-07af44d90fde",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17f65bdf-e3d1-4bd6-817d-8ffb391a384f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b40b251-7193-4200-903b-dd48b7b23984",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96af8ac8-0fcb-4f79-8214-bc6b53be3756"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc2256a8-1f3a-4ea1-9e43-37a41cef7a62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d013151-a134-4782-a54d-9bf11117efa5"
                    }
                  }
                ]
              },
              {
                "id": "3a1aae94-bb14-4778-a3f1-270646cf3145",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8eb8dc4-af46-4abe-86b2-7708606d958a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b27c76d2-31b6-4f18-b713-b18a40483cb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0b76781-ec23-4d1e-b60d-c57ff6e31297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd0738cd-4ecf-44f9-825f-9f4f505d245d"
                    }
                  }
                ]
              },
              {
                "id": "f23f356c-c6e1-41a1-81fc-8ea70b8806d0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efd037c-3fcb-449e-9653-14a9da420d9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f72baf7-e44e-4c21-9fe6-cc3b63a4f9a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3977e386-cd00-46fc-8cc1-e14b90abc9a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17e6343a-1c33-4470-98b6-f341d0f24309"
                    }
                  }
                ]
              },
              {
                "id": "5bd5e360-bcd7-41f8-abef-e952ac9406a6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e41158a8-88bb-479f-85e0-bb7063a252ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4af1f0a-c8e4-4c1f-92c7-18e87844de00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aec1d88-f014-4801-9877-944e3e2e0fc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c589f940-4bbf-4752-8276-c2fc723856e2"
                    }
                  }
                ]
              },
              {
                "id": "1626d18b-423a-4a5b-9e2d-a8714613a8d6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "451be38b-97f7-4e06-a142-f594d393c942",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42706847-7a79-44b6-88d6-33ed500d3d35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7369c64-b419-4342-9570-c8e49429b77e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7263ea69-4170-4d73-b5ad-fe50c2a07c7f"
                    }
                  }
                ]
              },
              {
                "id": "735fbe77-d11b-4782-bb40-728228231888",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ab45893-3ba8-444e-891b-f55f0cdad880",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "600e9c2c-ce82-4769-a156-5aad9ac3cd15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1faf6534-a596-4a5f-973f-f10d3911fd06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a03010d-f8ea-4841-8aae-bbb3b1a1ac08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6392588-fd84-4cde-953e-dd832c972fb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e973869-53c5-4a34-8dda-7459e2ec376d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40193ae4-1c8f-4b3d-9b7d-ec6498fbd7c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "444da6f0-b0a3-4b95-b684-39e19d186a58"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b64d37f-5604-41dc-9783-3a612f427bb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bd6bb004-40bb-4b46-b2ca-526c76563471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b26c8097-435b-4537-90c4-54af3c89d4ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a4f8d52-9ca0-4d72-bc85-2ac139737e36"
            }
          }
        ]
      },
      {
        "id": "e3a44272-f0e2-44fa-8c8a-aa5f27e7dd41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3749efcf-22fe-4245-8b36-1a6f01e91c11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b96889fd-8db3-4f62-a44d-ad09162cfbe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67c5f52a-dc83-4b11-a979-5db666e1f268",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d1c1e-f7bd-42ed-a2ee-a7ff496c8c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2c74a7-3f6d-40c5-baaa-6481f184955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8456eed6-b0ae-429c-a549-6b2169ca70af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae4b295-a03f-4f85-8b74-2161d14e04a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba67354-6d3d-471d-b11b-75a2821d4ed3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3758aa9b-b938-4b6d-8fcb-c9c7421a6649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80bf299-2c75-484e-b08c-116cdd5b8299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383306ac-4f5e-4f01-97d1-e88f65a00531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "202a3107-931d-40cd-8851-9dfa9d86dabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c271eeaa-abba-47b3-b325-fad30df0ed22",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ad03c-eff9-4be5-82f7-50729be0e779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37349837-b10f-4395-a6d8-43041acb7979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e808e638-422b-494c-b863-582f963b3411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06aa037-7be1-44cd-ab20-616e5d4ebde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa35c9-b5f9-4a5c-b5c1-011052dc23d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325f22d5-c0e5-4550-ab77-d1617b245ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f7feb4-c0a2-4b41-baef-900b60db896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c25927-37c6-40f1-9a4b-79b32ed30765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64468ad0-a8a8-4903-9a58-99cfed18dc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b908416f-8e67-4aef-aac9-7f00d5a03dea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2da2512-0992-4021-9fef-1fb3c1d426ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5165ba3b-141b-4e27-b893-ba6db0d9d7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907b6288-3325-4c17-8683-38ca3ef1e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "175ad41e-8d13-4aad-948f-3ea4a59fbea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85082f2-37e5-47f8-9616-ea99604387bb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876e09aa-4319-49c4-b2a2-c833c2c2fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bfd0a5-6176-4283-bcad-ff84633d3d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d26e6c-8bea-4cb1-b143-179a635fd5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa5aa50-49dc-4da0-8694-451f91fb888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e687b41-5f35-472c-b5f0-21b9b5d8948a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e609c-e2e4-4d18-a474-0b85e1e602c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad2e686-f339-494a-b3ce-3ae0e616d47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c1df2c-beaa-411e-b4e3-fae802f1e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2bbaf4-3e31-4b77-b4c7-dffa1bfb50d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b998063-5ca0-4ef9-9806-14d25abc12f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d8fa1-6a52-4926-8e3d-a3c00580112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779a0235-add5-4093-a790-924456848821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349654cf-ed14-4ac1-83a3-b8d82bc5b9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94426215-d7f4-4011-bca5-a0c7e2ecd3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d530a4a-44ab-432f-86dd-85c222533892",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb860955-da11-477c-b390-d23084bb636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72b45d7-f139-4ffd-8706-5189bd5d0884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e68aa1a-f77d-498f-b15a-381d3a3f99db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48741b96-4dd9-459a-ae90-6bfbf0235083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d37d67-f40c-4348-8d59-5859490e8542",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111a93a4-c753-444c-bfcc-c02241c75545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422adc5d-afe5-4cfd-8b7c-fb801bcdbbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b6fe88-c5ec-414f-9cf8-9fe86c803ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f2594a-e04d-49ae-aa82-57359119cedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1b9bb-46fa-455a-8b89-086f95e412b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e58e68-4498-43c2-b88c-5626e828b78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8679f608-f2f3-4acf-9b30-1a9b5b3c13ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763af315-0def-46c3-8fbf-6d642198ce89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "56a3b913-eb38-46f6-b862-bff42d995182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6b1169-896d-482a-a5d0-663e6aa12cb0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a363f338-422f-4215-8649-8446b291f3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f619d73-0725-4e4a-a04d-f9c978b9ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a2abcc-81c1-4d62-a509-7f7ca177ad8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6aa8c06-d9da-4306-a79f-6a208eb4936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d4f074-a841-47f6-9da0-72f2a20e90e0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ea128-d913-4c98-80bf-b151691fafe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77013931-d1ce-4175-87ec-b322548b6670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7319aff4-80cc-4056-a670-6225b9482fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82da8f5-b269-4fb1-8cf2-33af583e2beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8947c905-ca9b-4732-86b6-7da32bb6eda2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ef023-33cb-4a42-a495-8d47e2ca5e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8ea6b4-d30f-4998-8d8a-f48b6f470c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9401dfa-ba44-485a-9d0c-6b2ec6602f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c433646b-5099-490f-bc54-46cb0a8a0eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d482f1d9-dddd-43bc-ac53-b57493f23cfa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bfd563-f14f-45a5-a722-c8c1bb47759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc60168e-4592-46d5-9bdf-5fd12ae79580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bf3bad-0521-4d5b-93db-c03e9471db85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba29e77-557a-4801-9123-6c2a4ed997a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75e532c-a529-4521-ac02-668009d1e260",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703132cd-b763-472a-8177-941758891e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84e1cbc-7a49-467a-b706-5c5b3185c901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83f7549-e6e5-40f9-9a61-4fb668ca1841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "813956ce-1b9c-484b-898f-e3b16011bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175256b0-9f9d-4691-a8d7-285415345e57",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3662923f-3f7e-427c-ad5f-16e3dd49f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b0ef0f-1696-4397-8fd1-bb5f6baaf743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39e14a7-8ac9-4be7-bc91-eb9d44bad96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf26efb-bf87-4900-8e36-ac3fca905465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a064f77a-4817-40cf-a9a5-64f4d05006ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e03e5a-d077-40bd-bc0a-10c238876401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d934f18-6230-46f7-8436-3d8d38d29b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec8198-7249-4672-a2f7-82f93e14a8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c63ad98-b912-491c-819e-a2a722c50017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9d4975-707d-4709-a6d6-ff6026120354",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d3da8a-1dba-4b48-8d10-6ac9a0fba4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a35fb36-31c7-44e4-9d0a-6083c66b6e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdc29bd-1bad-41f3-80df-03779fdf2875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4ac804-196f-4173-bf93-83be592c35c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad2ba4b-87b8-4124-98ab-4f6de6a7f547",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3dadf9-be7f-4883-8834-1e159b154454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7cd322-504f-4934-a51b-ed7a0c26f04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c08823-305d-436b-8955-e03d757922b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5e68fc-ff79-4d8c-ac5c-893f4e8f9092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6236d3cf-7f7f-44f7-9583-d7f97bad7d81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32f8615-33d5-4aad-8fb3-3c928142aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea37e76-5efc-450a-8913-6c7d31530191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d91d377-79f1-4d53-8b47-bc4d98435111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df15852-2df1-47fc-80f7-6cf892edd8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa0cd7c-ff62-4f7a-b61c-1e43b0527c84",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a844d4ce-51d3-4916-9df2-2d00a89e7478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623c30b2-264f-4325-bf4f-854908d1e5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a961ff-791b-4eab-9521-ae4e3ae0647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dcadb6-cb7b-4b97-895b-ccaef37d1fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d55554-827c-4d6d-95c6-bd0be9450542",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002d4c46-ce81-4ca6-bbb4-08e7a44fd3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25dadd8-b4aa-478d-82e3-d3939ba44e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6892b751-fd4e-413f-bd68-c077f696ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb5ed81-e698-4834-b2e5-2cfdd3904245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57544dc-a748-4066-8746-57230bcaa373",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aecfc26-68bd-4e59-a098-7837397a465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ff4bc9-e2fb-4888-b844-06e305a7877e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d414b0f-1fa0-47df-9fd9-c46513681338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7ff297-6b24-4954-b51f-3578d7544c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc54401f-0e64-4787-bd59-6b9bcd9f294d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aded1d-9bc7-4e96-a50f-5154ccaf6788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43d3a19-f3b8-4b05-91a7-3ae074f0e95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50f88f-9e98-456d-99c3-ae332c0800ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a58a7f9-6ca3-4eec-8340-3c772d3af475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5002d1-c9f4-4d5c-a6a0-ac843a2081e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b0443-88f6-4594-90d3-374875ac37de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5b203f-832d-437b-8ef5-964ffc4b11fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a689d01a-ccdd-4d85-ad33-82d5871214a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ab117d-0a90-4b7f-a5c5-314a395b73f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654fa102-1949-4248-8786-e50edaeac8f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3bc3a8-08e0-42d8-95d1-06ad035a0106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b6b15a-0e11-43c7-ac8a-90cb61ea4c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a585198-1171-4ba1-969c-79b3b1c73024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6619cb-d327-4cbb-9bd4-bc727ab720d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa21ee8-472f-4123-a832-b71a5d5e2b3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86224727-bd1b-4504-acea-ba862f466760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479e552c-8425-428c-bda1-078d5aef023d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c17e69-f6e7-4a3d-8d7e-6c11ba85d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4669422-ce3d-4f1b-9ef9-01453da4ab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b87fcc-6d8e-4c64-b38c-5af1d9d187af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a09c498-e43e-4b15-84da-094794950ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a575a97f-503d-4c52-8881-5701729ea7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf50cf8-cd8d-4b11-8d5a-d7afe02257f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6413f2c9-cba2-4fd1-9ff0-0a4b30af27a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0536022d-3ecc-4e3f-ac0c-92cf4d4025bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a8d54b-67ae-44b1-b17a-539e9798c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54576531-3bf7-40a8-ac98-a8481939f350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966be4df-3c11-49a4-8471-0787dab1596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b3d77-6fad-44e2-b7ea-fa33d959cdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f705606-f84e-48a0-bcc0-f044996d0568",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d3a66a-4b7f-47ea-b127-a13204cc8ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ada25b-16db-410b-88d6-5d9467f7df58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00aee32-1e70-4eea-b459-8b693d9c5e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e621c96c-40e8-4ed2-a542-7b7ccd4153db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2ff4f1-b21c-4b6a-8132-ea57134fd3d8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe79e65-70fc-4a7e-8ad1-dd3785df3041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39138207-2bed-41bb-b130-d87e284e745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1280df2-02d9-4bef-8b6c-01c9c6f8dcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af63c756-6b60-4063-b0f5-7892c311e05c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d0b3f50-cb53-43b6-be14-b39cc02b977c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76db0809-9dba-4b05-9b0b-5bc27011375b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c87acf-c245-4cff-a249-c364ab8b1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c1046c18-009c-4dd7-b9d3-a17cc1b13177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad6bd75-cb3b-4365-b079-49ffe7077b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f7ec5f2-ea97-464a-98f9-6e4a7030d30b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af9016c2-ba14-49ad-8972-a546594bf862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba617367-84a9-4d91-abfb-db428dc5a941"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fc1f2f5-62e4-4f13-8d60-e4b3ec64ccd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d645fd7-26ce-415d-8ddc-135e448f965e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e38dbfe-6601-4d01-a5f0-ed40072b51e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51bbd9db-9377-44b9-bddf-b88ef986a685"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ca4e4c4-9fd2-4448-a53b-7ab67050b361",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79b9fb81-5f69-4a52-9615-eb9d3c2a4f45"
            }
          }
        ]
      },
      {
        "id": "bd33fae7-05f2-48b1-8d97-1f0d34b2683f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "63da5453-de2b-458b-a276-fff8661fc576",
            "name": "Negative Testing",
            "item": [
              {
                "id": "464e930e-c0ce-4733-9043-8b8777e231dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a906e017-bcaf-4942-bfff-023f2acbcad4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e740c5f2-beb1-46c4-b5ec-dc0802c1ef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368c478f-85ed-46e0-9cf8-4849d86f1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ccbda5-d6bc-4efc-b674-e3b61448b57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "780db9fc-9ec7-4e54-9f40-007dd61a6f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51322eb9-3ba0-4395-806f-28162f085540",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5801e9b-3778-4862-a314-a949a282b33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc1932e-8941-4de6-b5e6-eec5dd0dc808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e509cf8b-38d7-4ad6-8878-f16e389ae369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ee3c26-63dd-4cd8-a11b-70b332718fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f036a0-2ef3-4448-87c4-cab40170e761",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452e5cdc-bd17-4f07-aa9c-5f0ed4e0c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8b755e-5e4e-4978-94c6-7809047b2d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b062a5-fe39-4244-be77-71f2dba08788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a50ef9-9704-4aae-b786-01960b022a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b174428-3888-4a2f-9afc-107458759027",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1103bdc4-ed63-40f7-aaa1-22ce08dfaac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b520ab-9695-482f-8cec-0acd13285ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54cfb2d-60c4-4142-b801-ab78715ec765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "232c34d0-fa7b-4ecc-b211-c391a46e482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba1fd4-4845-4031-ae3d-f49a395cd08a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a67cd-cf5b-4b87-be94-351484ea9669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cefe65-ee97-4544-8de6-65123b49cf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d539a360-8095-453b-b06a-05aa3885c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a1393-d467-453b-9f53-af71feb57364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f8919-da17-49c9-8c4c-f49afeb30553",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbd7f48-f0ad-4466-ae40-16bf350b9cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7939da-fab1-4267-b02e-7f52d11770cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dfea9e-35f4-45d9-ab99-69a9feae1bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24239eb-9742-48bb-b8a0-5280c6e7d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa0409-9e60-4056-9c92-3587b7b65b9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d3cadf-0843-45df-acb6-164293884558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5072cb0-cf39-4c67-93e8-7fcaaef62fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd66f728-4676-4724-9dfd-601c71b81562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee71251-9542-44e2-b873-f604ffec532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f519c4-dcdd-404d-b019-b47393012062",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029c4881-4cc6-4f14-81bf-b8ff1b4a2319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf670a-cbcd-41b7-ac6b-85d760d2a50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf54cb-9e31-4bb2-9b44-91252751eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d9e626-d9ee-4c6d-82aa-3641ccada49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b01216-cd27-4ab5-9508-de54fafb6175",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74849fc3-c86c-45a5-85e7-fd50e4295cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a5f7e2-c26c-487b-a167-84f6e7d1dd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8479faf6-b48f-4c6e-b308-167551177d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7dc1e1-480a-4126-a488-6a31340faef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799f071e-2a74-4174-b2c9-0a4d17bd9b29",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55715eea-db49-4848-93db-2f9a823146fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b903b68-35e1-4e72-ae51-0e2e114d0348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4300a6a6-1a43-4e7f-81f9-0448cf10e7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43dbd75-27d9-474e-bc1d-8ca92cf4b4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3552d97a-42a3-44b7-a056-58f9c1263a60",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a09b06-131e-4980-a3a5-b3ffe63c3b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79c48c9-f084-4453-8301-933f60207744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64285ea1-beaf-4b8f-ab3a-e72c0bed2fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23250b07-6761-41d4-bc9a-12b8509610cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f78a10-80bf-423f-a177-6a116823cba5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2d4340-8f31-4d7e-a308-2dfed1225d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5051bc78-e97a-4d03-983b-d5528ca600aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760db0b6-845b-465b-ad90-f14869361955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b47d895-7b39-4f75-839e-0e29f3198ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7ba169-d0a2-44c1-98f8-85a9a89c3e5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f32cf1-638e-401e-a40c-b4f592826516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a9c79f-f955-4c86-b30b-7fab1316f09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cfdf19-36f1-4a2c-923e-fd21c0ec26d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda2d427-4cfd-46a6-b09f-85ee1e9b92f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f71606e-d882-495d-a934-608a529cab44",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17453500-5548-4f87-9c0d-0eae604b0fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4307f5-1304-4cde-a3c1-d0eea168232a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb1dbb-9b95-4c1c-a74a-b6cfa268cb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97199ad1-c4ee-49da-9226-c464e1fc8dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a24a8e-79ad-4440-ac41-63026fa9963c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f98cf4f-53ac-4be3-aa65-d50d8dc93a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b709866c-c5f9-455d-8f89-89ff593e83b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57612cdf-dd49-410a-bcc5-c5893293710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16c5417-d3c2-4284-93ce-84bba5b9e3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30510102-eb55-44fc-b904-bfa098a72853",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a0ca1c-8d00-4eb8-8b6a-6a0beb81740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f87694-ce8c-4bba-8178-59c7522911ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb59c4e2-dc14-4b54-8754-88abf8db0676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecb2b43-2213-43e6-b691-b07b8ab7ce50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf6d971-abf3-4224-b91e-43b9bcf0fc3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636f3879-f454-4732-9d33-7312ed3b6673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3123b0-0655-4f64-ba1d-0cd6084f1ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae06e00-11bc-4bb0-a046-670d6f7567d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d497f8d-9fd3-4b5f-84e6-fe8e80c1acb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f264ef-4abf-476e-80c9-8dd282274fe3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31159c03-1097-4609-a9ea-18ebfb468c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e15efd-d1b4-45bc-af1f-ac610f8740fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699a9ee0-207d-4d23-a3a4-a35b56a3a518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6b02bb-cbb7-42c0-905f-b8379164199f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abc27dd-7634-49e0-8ce8-958214471aed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aedda1-b95d-4293-a4fc-7235036502fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad27ae2-17d6-4060-acb8-c603d456c7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fdc4da-0e7c-4adb-b335-ec8797695345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7ae952-7f11-4b93-bc6d-ef0a7f6535fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6ced64-f8a9-4e54-8f9b-4c1d330cf9ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db08d37-9c2a-456c-85b8-4d8c6b060f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7cc002-0341-4651-9d9a-2b4e39790bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90affbe-6d77-4b28-89c1-81097d7cac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d738a5c9-343f-41f9-abd6-14a9f219cb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed74e271-0f69-4504-8b68-0d93a951696c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14cdbfe-d2c0-4a20-bf1f-7c058deacfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab6ea2d-2c10-4a7c-a6bd-acd8deb6f6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cdc6c7-cc82-4932-8f89-2212bfdfc76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a05ef7-07cc-4f27-b286-58410a4dbd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c4ef00-fbab-4a19-9d9c-6f6b8f37b502",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfe19e4-a27e-446a-952b-d3958ae04a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278fbd48-adeb-49a1-a835-4189a813d890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef7658f-a4d5-4214-82bf-cffaaf1bbdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae77122d-cf64-4739-b7a8-ef8f736da768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9962682d-4b52-4bc3-b0a9-aa6a00a2d397",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50779a81-14a3-4844-8149-bf8bad1ea346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527d38a9-7d1f-45bd-9591-43a39ee71a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4aef0-9b8c-4bdc-9c4f-5c47c8e4dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7502a4f-f594-4308-b580-55fc384ecb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7df3093-2991-4ab8-a48c-09c97ee17ee3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dfdc33-a2bc-49f5-898f-09df2dfa5171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1533411-6088-4d99-976a-74d3d61867c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0637411e-0da8-46a6-8628-574bddcaceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd5db89-055c-4d17-9338-6c418e28bb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a3a02b-50fb-4f31-9802-62f468955237",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c1eeb2-4199-4561-aec7-f355945be9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7944f365-ff99-4658-bd05-ce860c1f101a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4451dcf0-c655-4688-8699-24b5e3d11a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1835990-64f5-4b28-bb3d-6e5414cf5fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8969b733-8be4-4256-921a-16679ab4dbba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c96c42c-4cf8-4a32-b555-c27beae5102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d62bf24-e156-49af-903a-08c115dde1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d20ea7-ba69-4d00-975d-8d81f9bcbd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93d5722-ddf7-4cbd-8563-fe43c6392ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030de925-1ea2-486d-8f36-be4bfd6a2df4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf707fbc-9d52-4c01-be85-6c155b03fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab31bcc-7093-4de9-ab99-c3ff496531fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185149e-06d1-4fe7-861d-7217d2b7d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2e2be0-71fb-4d90-9b41-848e253435c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20f59db-3bd2-4c89-932f-7b3366bde352",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf7425-5bc0-449a-8c57-ed3a4eee1121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8566a6fd-23f6-4ad6-8e6e-878b59f5ba53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a8ce59-bc42-47c3-8808-51dca81ee350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f51975a-74e9-433f-aae3-a6b35890f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cf1b88-ccde-4b76-aa66-b0a9e9113aaf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ffe9f8-ee00-4517-8fc4-a798dedf5441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d316db-16a4-4eb3-912a-754eb9a18ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bfd7d0-fe49-4cc1-adc0-919822237733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa43433e-18d2-40cb-bb2d-56537bcc6fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9d8e40-d302-4ed5-aed3-8637c0f368bd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f49f303-1c28-46d2-b423-404d89f8cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708a8959-8f54-4f92-8d83-96d2f2b544ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c8a5e9-4ee2-42d5-86cd-7ddd885c6081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b565b3be-690b-43e0-916a-452b3c7b8fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd87f76-b920-4ea2-96e8-9bae0b60d988",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888746b-7d14-4a01-a422-d69f2015ba80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d8860a-27d7-4a1b-b314-62b2fd59e940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7077a53e-e080-464d-8a30-50a45558b58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6994cac8-60ca-4b56-8654-db2f2fffb904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca637915-238b-4056-b8ca-037afdcc861e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80195a0c-b06b-4454-85b5-9e9a7772037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de73dd2-b982-447d-8d6c-7cc83f1ba0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95513f1-bf39-436b-9a3b-7050c6d05f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbca3e9-01c3-4270-a845-b991d068f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9121b616-79a2-4c9e-a373-4f88a4334d61",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9549650b-b6c9-45c3-ace9-e4eaf15389eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24345e8a-cc4e-466f-a224-cd7e797347e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22b4bf9-2037-4aad-8129-bb14eedd6622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbceec0e-8c85-4e20-a934-e144ec907b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802624a3-7086-4b96-8c8a-e4aef05f203a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7173d7-3bd8-4ce0-a650-4083cb3a8216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a56ae4d-92e4-4ef2-a013-ba10e57454ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc45a4a5-a84c-4f83-90dd-e9fa794cb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20eb3817-a037-40e2-9c10-f6be52d912bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa588e8d-a12c-4b66-a12a-694f0ad87fb1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c5df2-c7a1-4f89-8b90-155804e417ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247d6e64-7dec-4f75-b012-88d1aec7385e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df61076-f9b6-4b65-8aaa-9671dc3efcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0f7a61-5d3c-41d3-bb6c-17b68452439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2be7ed5-3d67-4d91-bb6f-d6acd0578024",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3634092d-89ef-470b-aa11-b93eb428793e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a44857c-3ed8-4a96-9d6c-e68f41099efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ee87dd-29ef-4d3a-923e-95c84f169bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95d42b4-07bb-41d6-a2e1-9139eae97ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efd4495-f8b3-4b7b-b4b0-220fc3a541cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9be29-a881-44c2-911e-9f508d7762ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fc43c7-7606-43fe-8728-aab74a20dc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f22611-a97c-4f56-8f0f-b3faa449ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "617ce9d4-8845-4ef1-ab8f-b102ecfeaacd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce1f0afb-d7ac-4e4a-9ad1-5524aa7e7149",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaedb2a9-f27d-4127-b3b7-96057f5a14ac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f2f836-5435-4bcf-b92f-b6b5fc1c77cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3a5aad-3667-4e0f-a927-b806a6b22f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de68cfee-c7ac-43af-88df-c16c5d8f3e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fd0754f-dd70-4f16-b9ec-e5bfebacff63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc2789e6-668f-4064-bbbe-10db254aadcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72d8f6f6-358a-4a84-a7d1-ba2f19532ff4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b2c71f0-618f-47c8-ae8d-6e8a5b92933d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efc17041-ef09-4736-bdf8-f2cf5280baba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "313b1278-32a2-424c-a3f1-22b1941b0847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5788fed6-1395-4553-8713-c9126ed72174"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f93f359c-17d4-45ba-84ed-614dfd91e694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7c391a1-db0d-4bac-abd0-be068d7fc6c8"
            }
          }
        ]
      },
      {
        "id": "62a9528e-ee3f-4c83-9a6e-1a57c6d890d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cce955cb-e145-48cd-b614-12e6037c834f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fab2b27a-c89c-4f3c-98bb-caa3c877c1b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54eaebcb-a54a-4f10-ba8d-ea26d445b378",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc105aa-252f-47d1-a9f4-4e78a2038e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0811d4-7d80-4ca9-ac97-6d8a224eec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745bf587-2382-4ab4-8904-61b99c540673",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f33a3d-c7f1-4573-9cbf-79fb36a6a674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e1adb4-5f90-4b97-84e1-562339062c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00269b6e-adf9-46bf-8698-a9751fe05441",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762a46e0-a916-40db-8e69-8ffb4aa17699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e387dea-341f-4bb6-b9ad-135f1ab0fb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84800c7e-22ca-47e1-87dd-ce4f0a8f9d7b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e0460f-fd00-49d6-9c72-23808e50b524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2cd68e-1b65-405d-b0fc-fc2b88cf9f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12439f51-de0d-4107-a7fe-791b4ad36244",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce71987-7c51-429d-a9d1-00f5ff9b6f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede389ad-06f1-48e5-9d39-2e223aec4818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae846570-acc1-4328-b0f7-19a1c56ce684",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1050052a-b636-4b0b-a310-810763adad47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e70158-cc5a-4140-8409-769e0ca299fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b062d68-4cae-4cd5-8d8a-7c7b1a8b130a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a63741-44e6-48a0-b436-189876d28f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9137be3-8089-4462-b502-0392f48a5e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce640262-90d2-48a3-ac87-a637e808044e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf34d14-821e-46e7-ab48-558d162df471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be87a33-bfbd-412d-8138-72d81b2ee731",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf36727-1d0e-4154-89b1-36a07761a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e96cc2e-f415-4e65-bacb-4e3e426fb578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f72c233-0487-4f12-8004-6958cd0b1d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f15447-fa85-477e-bb09-be0c54f92d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be85fe17-fa7b-44b9-b06b-341a1e65bb37",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cee4a9f-5719-464f-980c-32ffb3278bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa35d2f-df66-4424-a4d8-5b132a9c367b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a4e6b3-2089-4e61-9898-eef43a084584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8507e12c-b952-40fe-913b-fe78e0fb184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22bd850-36e3-48ec-9b83-d324ec3820f9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84557b4-6269-4529-8413-8e5816e40eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f55f284-fb6b-4a9d-b502-72d76865b349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b33105-f7d2-45ba-aa45-41cc52b1c5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169c631a-2e8f-4259-8b93-af8d479020cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13621692-d3a0-4af9-8903-52029a215fb6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada9ff67-53f5-4bf1-aaa4-5df94e81fc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a496bd03-c437-41c8-9ca1-8060f72cf952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658a84b7-4f40-426a-b626-83813f20f5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e196422-5fac-4d27-abb9-21d72cbca2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b102c1-ab89-49ee-8984-cad183591bd1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed44fa-9100-4781-9b89-11d80ef59e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829a40c8-3a0f-412f-92d4-4191be9bcee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f132b17-f07c-44d0-a99c-9d578bc43cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb83e4d-7fe9-4ca9-8e87-123db70c9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f38380c-53f4-4caa-a2e5-d3af5b8696b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d2f500-f13f-4b21-8de5-c249e4a5cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7ca7d4-a90d-4aa4-b892-3a78fea4f807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788c82b2-b596-4bc0-9fbe-43dac409b505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c046004-766e-4e88-a136-826b2b2dcde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90d7c7f-5872-4d5a-925e-3e59ce7ec84e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1ace5-ee49-483e-a003-e7cf0ea6ac14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ea7f84-8df9-4144-84df-f11d83d49483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217b16d9-410f-4f82-aad8-d8643ab42ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df45d74-eea5-4dba-952c-24523a246fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fc72ed-f417-4f1e-9104-38df284b7b87",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f19c391-4928-4402-9aa7-ba93f8019cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fbc18a5-c564-4779-823b-0289fad72fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb7238e-2602-4191-a64e-478c52b30854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62c4eac-084d-420f-ae2f-25fc654e966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce770e9-431e-4200-824c-e89581af6f4d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17107a7-e4a8-4845-aaf9-34084f17a4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d73a3a-f296-4b34-a7da-5d4b350dce15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3605e8-8ea8-42e9-8910-e01acd2bc789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618c85c2-b1a7-484d-a005-a92695b51f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd857bc-8626-4022-9a32-2ee6793dc103",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8123a21-e0d5-4723-bb3e-c217ef54cb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16db4ff9-d5b0-4356-b3e6-bdc7e0c8ec29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d89719e-885d-4969-a015-3c4cc582bc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4787bfe-48e9-418b-ac6e-ec9ad5d98cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e68c23-c357-446f-93a9-a390160562e9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d46981-d26d-4922-b54c-1ebfc5ff2824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d66d97-972a-4023-b772-b96c9a535bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9613a5d9-5b4e-40f5-8c04-4595aceb01fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04523f8c-936c-4acc-81e9-aee032c5f8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a81ef33-fc40-458a-ba79-5cb57f210c2e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa168226-c57c-466e-ae63-f3945ae563b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae7cc42-e0df-4073-82b1-b5eaa816666a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f7e10b-ddee-49de-88f0-c6981675d6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8d360d-697c-479d-a3cc-16333638359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e90746-7180-47b2-aa01-8639a22febe1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a316ae0-439f-42c4-a6c7-4d3db86696ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3da73a-43ff-401e-8c8e-dd5c47482d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a824c63-122c-495c-b138-4e5b8a24929d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d328ee9-53cb-48fa-b6cc-95186a8863d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bde6ae-42e2-4e31-b506-0487003f05f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af505d6-0dc1-4563-a8c1-a4078fdf6789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69709f5-d8a1-4b11-8eaa-1b91a07ac313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc74d9-9d23-4aff-b28f-edad78056d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2883dce7-56f0-42de-8e7d-45a5a2a0910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d3ac8b-4e8c-4ae7-a9bd-4cd7e9cbeb81",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97274ed1-48a3-449a-8454-c7a4d6e0d935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bd6b0f-3c26-485d-b2f1-abef7df4cc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b872c-c367-4035-8a32-cac1a0df52bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc7dc53-5316-4e4d-af7b-a82b13b2a28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28463a4-5384-4dc1-8693-f95045b13653",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d0bc9-7fc8-4388-8721-d9becb1b1c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca9e861-3cb1-4fd2-a684-51b7d158c6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba983558-b897-410b-b73e-92d439fb0a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852e723d-6bf9-42a3-b908-891d879b8586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee64a103-011a-46df-b224-4d1f2e2fa250",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfbde2a-1e5b-4616-85aa-562a508799fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922aa015-6924-4a0d-8595-a1094726ef89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebd953e-3090-4bc5-a9b8-6c8a0ab526ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fe8ae7-286f-4aa2-ae64-cb8cf5609628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef32afc-5de3-4d8d-8f2e-a332d947bb55",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eb0d64-da2e-4d9b-9232-81c4e33e6d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3120a18-2b76-42ae-bf0b-237c71443219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff57cbb5-05bf-48a7-aa0e-607f6d7ac9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a49502-b7ae-4800-b645-1510df483713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eebd849-0d11-413c-aab5-c29117ffe2d3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d8466-5b4c-489c-a6b7-a353244327b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7be8431-d733-4fad-b012-5eb6fc941a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b778b097-0c78-4c8f-ba86-0ae6802ed5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b2878d-eb05-4301-bf80-964d83377344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee41b0b-f3ae-4e2f-9914-6579494f0a3f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b645ea7-51d2-4c70-b42a-aa73dd855ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ba7ee1-550f-4cc3-b30b-cfd32657d599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba5b141-b6ce-47e9-a8ce-b1595b04f8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed0aaf2-990f-4257-a51e-9f0014ef11b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aee536-1b58-46cd-8d42-a0bac9fc9722",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c5b19a-29a2-4a82-a146-2b37db5ea3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5910ab6-89d8-4090-8435-74a0829ad058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220d4c35-aa71-4880-972a-03462a170225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba8478a-9ba5-4ca0-8794-cb7fba3f39b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0277e22b-a766-4bca-9ac0-83c93ef1029d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa3629-0691-41e0-bfc3-0e58ed45c892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d854a21d-5dd8-40c8-963a-3d6e8b72cdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5eb581-d5f0-44d3-8232-7716700cff20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977589b-001e-48a9-9820-c8d2b2374829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e670210-adba-462d-ba04-52f0a15aa7f2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1202113-d8b6-4143-9bff-db4cd3999f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f500c8-7515-4911-be72-d9fe575bf594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d946c-04b3-430d-b09c-6763f37c3442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85905248-d626-4dcf-966b-c961c3e6a408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29efbf5d-fe07-4ab2-a605-7f2324027a02",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b6ab7-d435-4617-95d9-6f4541f303c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86f88c2-1dc4-46a5-93ea-13561471bb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d4887-7b48-49e3-b09a-8045dda11028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b433f91f-9c8a-4c78-a53e-7db56c198b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6934e8cc-1fef-42dd-a3c8-3a8f192b75c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf798a-1d5c-4617-997f-55b0b80c225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b5861a-aca4-41be-8c17-3ca47c0c8159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d93bc5-7f19-4303-98ec-9fbc508a8a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a862fd7f-1f36-4502-85d5-25bad153bc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7484e7f6-dd8f-4db7-b240-7c8d0f498fa6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0c440f-4b91-4225-b9bb-05f7b30e4e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39160446-9dfe-4b61-aa67-6fe74b896138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3679c7c-8ede-40b2-a746-56ca4e5dcfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8685b746-93ed-457b-8980-be27012e9582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a5fb23-9d58-4d1a-b2fa-761ac08add91",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62cc695-9c71-49a0-b1c2-80488035547e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cf4e23-6f78-4a6c-b6f8-20a840221186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2cb9e9-35e2-4bc4-8dd2-8574c6a1b821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c3e263-593c-4d2e-b194-5c223ce23c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67530f04-8447-4adb-a91e-da2386097b87",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92f664-1093-4e0c-873a-b808db6f88e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce2474a-e458-49d0-974e-6374e5cdb46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829aa54-e12c-4d61-b07d-4afc236942a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e29f14-0aa2-4091-a758-5f71b2b25c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb13c835-2b7c-45ee-b633-6be93131de1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733fd181-1a45-4adf-882c-bfa79a0cc96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c047b95-f1ac-41ec-b8da-0d5a65643a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd22ee-edac-4e90-b109-92bb7fb1dd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5a2e71-63e9-46ac-a22b-e68fb1735655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62958c1-c9ef-4f91-a04c-ac2046f5409d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e25341-b2ee-46c1-93e8-fae88ed0db4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d951c-4b37-444a-9194-5070f5537e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809bb42f-3af0-4399-9c09-7c1d9981e5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a99e33-7576-467a-9671-d58f20dd40d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2788054-5d44-402e-87b2-d261439811f0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c9c752-a655-4c27-928c-1d6cf9e0f088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3545e361-3f49-4259-bd14-25c7b245e684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25acd921-ed2c-4e83-b136-9d6e28efb105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e1485f-81b8-4d3b-90e3-8322718019ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e105d5d-ea3d-4f02-b530-db684e12cf20",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e0e69e-f55a-4fc5-a6e3-3d16c8aaaae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0ea752-c3e9-4923-a62f-4a886126123b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef77f8f-5785-44f8-8ce0-6964de2f672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f669b402-ba9c-4350-9f32-ce0e05b38541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13a2021-c58d-41c4-a31c-0a6a106db361",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f57effa-19bf-4b21-8bd4-c4175537e4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943de56c-0502-44f1-9118-388c43eebbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7012ac-8cba-4ee9-be1a-66f7520953a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1f5818-8443-493c-96a4-28d6aa5058c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b042fb54-9de1-4eff-9adf-cad00d27c57d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2439e9d0-21e3-4912-8d42-d3472b204415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea883c8-a528-423e-800d-654fda25f618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa46564-09fb-4370-a643-8125e9dd3ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41284662-aba4-4400-b0c9-06ca20e21b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88094764-4ca9-44b3-b6d8-9bebf3cefce1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41d870d-f9ad-48c0-8409-8259a6ee7fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dcaf31-16f0-4b62-a15b-66d49c3123d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8caba46-2bfb-4756-86a3-a44dc78a5a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c427c81-561a-4cdd-ad08-f6112e5520ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25137b49-eb61-46bf-9acf-1606b86132bb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1290611-6b9d-4688-9736-079748f60962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5218aa59-0212-4da5-bdf7-6322c5f239ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4f2aed-8a1f-43a0-a5c4-5daf8027ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defc3a51-bd0a-4259-9c02-2387548875d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e980c7ea-dcf8-446a-87aa-c795ebe50ad8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d98c476-9a22-4c88-9f2c-06374bf31742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdc908b-8d74-425d-8031-3b9e769bd5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcee99fb-a977-4ef7-b9b8-81c03cefc0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac64cd7c-799b-4a43-9497-4a820c6219b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a19e78d-6212-4ada-8528-44d51fe5740b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00f2fa1-3bab-4886-8dd9-5f157e55ee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7807074-a13a-48c3-8771-cebf58042c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a371945-9fbe-430a-b133-df2943b02fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3d4b35-a626-476e-bffb-b88552c45a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee55b70-cb8c-4ccc-a4c0-57709cf47449",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb47f9dc-9b50-4de2-bd84-fe150840074e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c51889-6f71-4e5d-a14b-fa6b819f1eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624ccff-f72f-411d-bd55-4ea6c85df5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea363bb-f2ef-431b-9373-3245815390c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375816be-caf4-4128-a804-feaa909e0256",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462475a-5bd9-4c99-bd13-2fe50ea9b7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f475580e-6ecf-4a26-ae63-386d5ea4865b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa74492e-2146-40e8-8d8a-bab72042eefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce276eb-889d-45e2-b104-81c241078ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3b2a0c-6eb6-4ad0-aa9e-c6f253ffbc66",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b11675-1faa-4179-9624-0d0a5ecde774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57996a6d-a518-4b77-be63-f82d85b0166e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df61ce3-dfb6-4533-8a96-6d8a4c7ca12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d568f7dc-a30e-40cd-a249-890e91db131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73203a6a-6013-42a8-a3b4-251461da1a8f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf830bf-77ce-43b5-9c65-6f11332b4d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5360ba-ff5c-4ab9-b695-4704a4280db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf1f66-86b4-42f0-b060-b441106e2b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0413e4-7e8e-49e9-aeed-da2249cfe0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c7dbf9-3660-4638-a7e3-153c6e339976",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11893e8e-b2dc-4341-b189-3da896b796e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf1da7c-1f11-4f45-ba19-5246d405577c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac470c7-4a3a-4049-a27c-3d4b0db91b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f274a2a-0621-4663-8c0d-dcdaee46e44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db57b06-14bf-46c4-812c-eebf015b73e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630c6ba4-b52a-41c9-ae2c-2dc9c56e5cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01405c33-b254-4a59-a7af-12bc50c92bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcc49c4-ca7a-48ff-b285-78a613c7c0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823d3994-5dab-471f-9278-e84760d14848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065339e3-8d0d-475c-8a30-da15bb31d12a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ab62f0-0a4b-421a-abea-badd98f91c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec599bd3-591c-42e1-bf87-06339a78ec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c20dfa-d6a7-4550-bec9-bbd639e8bf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efa6ed7-9ab5-400d-8410-950ad82619e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbee5d5-b92b-4c95-9bd0-298de126f44c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5032de94-d70e-44a3-960c-04966e91b23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54241812-bf5c-4985-b6ba-4ea3416e728d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eeee8b-921c-4246-9624-1a5c51451903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a62fcf-0560-47cd-8b4c-d4866bb97693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e37d7-3133-4ec1-98a8-22e7e5837144",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1471e-1909-4951-ac74-54a16defffe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517a3155-9769-44b4-8761-a39a0e2bfbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a77c55-f753-4592-b4d1-ff6f9a74c068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a4471-97a2-4060-a3ab-51d3e422932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93f7794-a310-4b98-be30-d8a1d085476a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95549de7-aba5-400d-8464-ee1d447d4e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3ff835-8003-4ad5-9219-245f4396d7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b702b-900f-4bf0-b646-f1c2ae38a820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00a187f-93ce-4064-9e16-1c02c031af26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a7836c-344f-4b46-8e8a-d53c5578343b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7a662a-ff1d-4fc1-8038-de6a4367480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604f091a-cb82-4136-a4f0-f06a0873cf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4a4f4-0470-4579-9a9b-942a9adb6380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f6d48d-2af2-4826-b92e-8f3b730a4c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90131e94-dab0-420b-81b0-c24a405e266b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1176bfd9-f69e-4a5e-ac11-c8f219feb41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1910f3-85e2-460a-bcbd-f02dfe71ca52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d82ab-162e-404b-95a4-5386bf55cc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec08b33d-681b-4bf0-a1fd-2ed432425a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b4e4a9-0ec8-4454-85a0-23d84d0502fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea5b65-26f3-4bd6-ac46-98908de8bc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc08b09-d001-415b-98fa-dadfed2d33fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420db6b-1314-4733-9e28-925f9dd521fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2884f0e-93fb-466d-98f3-a4b91e882e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be19d231-9543-43a7-963f-f40489959006",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae5a40a-df2e-4702-83ae-cfd1d31ec924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e761c7-e279-451c-889a-31a3db1e8883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e669789-2caa-4b66-81e1-81cf0b4fcd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744b1776-a92a-47ec-ac48-563931ad8c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d486c3-9b53-4728-91a0-2c183a87939d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e9c5b1-5223-4bf6-a1d8-b07670decdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c75aa4e-95bf-422c-ab22-2be578ea2930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e24e043-ac3d-4876-8d84-bb7123d8489e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163a5c3c-8cf8-49e3-9bc0-e6a92cc6ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40a333e-f628-4559-9b3e-68e284ea8f45",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d6c53a-53cb-4473-88e3-19f0ce53e723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d277166-81cd-43e0-a5dc-91c442174be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516a861e-a780-4aa4-a35d-8c9806c1a4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b58e3d-c6b5-4c59-8e33-b88e01a8e24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8eb087-b73b-46c8-88ba-9e3a04035b12",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307895c8-8fe1-4055-9536-d632aca646a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad2087f-dc95-4b25-a163-475d548bfee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e023f504-9435-4303-939b-b4df361d85b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1185fcdc-ea2a-4317-92ee-924f849137f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a419bb-b7bc-4e08-9056-d22c48887f3e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25f7807-f81b-4992-96c8-fc8d0c51e95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5068399a-1668-46c3-b9f2-b9af10b6df04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d87a8f6-d0f5-40e3-8807-efb5ad037916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e445a2-fbf9-44b4-bbfe-fbc5edfcccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8327412-9bdc-42d4-96b9-9768db210ee8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0323c5c0-1d1c-47bc-aa8f-bfa7d7c30517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f50fd6-ee57-494b-9019-e9311d0be4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53520ed-018d-4124-9fd4-aadebe7b2f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58822173-20f0-4033-8868-dcfe44400fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675870dc-2081-43bb-9c51-fe0ee58ba239",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72056ac-2c70-4627-9431-674b06e03fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da1931c-bedf-4995-a7d0-c45f4c6146cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4bd7fa-8e9f-47e6-9437-adaded288f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d8c84c-69d5-4e6e-b5d5-e1d370bd6891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0947f0a4-ebc4-452e-82f8-471b143d4848",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96879f00-3ef1-4655-8acf-14ee82d7e8f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9098cd2f-8241-4465-8fb2-b837bc73cb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494fe9d5-4f82-4e69-b8a0-f543cd6f1383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596ae00c-d1cd-4d38-8c73-774c545aa927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3905013b-bb69-4448-a85a-a2a3a136c424",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b6279b-a76f-4a83-a42d-dac2f7185838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8693a870-ae11-44a9-971e-3233cd2011b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef506aed-0be9-43c4-a9d5-b088d5e0113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab29510-93d3-4c18-8e2d-6c14cbd2d07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ae5784-5f30-46ef-9c04-76a95414588b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c9dedd-db9a-4c91-a77f-f3a8231a29dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b915e1-aae6-411c-976a-24fb10052822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e50dd38-5c2a-40bf-a5d3-3a41f400d3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e184a6-a555-4e2d-b160-5402678c8c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295fef6a-4ae9-48d2-bad2-839cd9d09c7e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b4c3e-ed7c-422d-a0c9-9c89e8de10a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773c2ba1-4367-4570-bec3-974715d2fefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846b8e28-35bf-4e4e-bbdd-94e70f3f8666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de781760-c34d-4fc4-bd6c-5b7f559e6c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07db11c1-9697-49e6-bac5-a1ec06a7de2a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0548e897-85f5-4170-952b-ac7a9070f136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9a6ce6-a4f1-467b-b399-35d96db27019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f6bb5-b845-410b-9702-c1869ac7b002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895c4647-9b67-4e37-b983-3bcbcdaccd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a1c804-e514-41f0-9021-4821ce7873c7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a35242-1edb-4617-875c-ded0343608c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e27061-df95-477f-a314-3e37e008c24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4997a9b7-5bb5-4b92-8dbf-0cb9a2b55250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80792358-a267-42cb-868c-b20558a6d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2307aafb-15d6-4cc4-9243-bf9ab390a7d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23d38c1-7d75-4760-81a5-b75cb17f071c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597bfe3f-5b9e-4c7c-886b-b3b60bde5259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57231d2f-d6ff-44d6-a92c-3de2b5e89d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4f4819-21a2-4d80-a433-ca8de43079ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337caf27-05a9-4538-8070-0986ceb42280",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51ade42-7eda-4b37-a8fc-274bcf904939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c591da-8c4d-423b-b6e4-14baf4969d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d96a2-7e0c-4c83-a56c-ddf8c5715e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adab5fe7-e299-4b33-9f69-9191c0f70cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b5c3d7-2d89-4eb5-903d-18ccb04b230a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5580b99d-d8f9-47a1-80ba-9026e1c7e986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00010ba5-1fc9-4d8d-943a-785f4ca9d3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6d8431-d5a5-4aae-b266-6afd6a5dabc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9e3d04-6128-43ef-aa7e-8e60c543e3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea6518c-75d6-4d47-83db-1c63fb82a27d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0810dfe-aa52-4b19-9218-e87f72b2031c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf212a8-d133-47e8-a025-f075ccdc4097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f0d6b-2b8c-4ebc-b2f2-53e432ec91d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ed487f-9897-431d-9780-c30f2b3d99ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51f391f-72ea-423d-ae49-d054c35a9a37",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd8d6d8-eca0-4388-b8b6-453d8809c243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f779d4e4-748b-4450-93e1-c7088228ed9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923763c7-8122-40bf-9cdd-5b7888e222c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c621c6e-f1a2-4b5a-adb7-3702b7e75bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf2eeaa-ccfa-4581-972d-bf141798e8ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a939b25f-e0fc-4cdd-a8b5-387329466100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c83b0c2-3f8e-4b86-85e1-9a7f72102cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239090e9-7458-4367-b78e-155d8e279c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7148ddf3-21d0-43a3-9103-3c01b35a8990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f04a90-9451-464e-a9a8-cf4317aab7ba",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc7562f-7865-4749-8799-79402521babf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d27116-f61a-4b18-a242-30fd2979ee3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0c2211-fbd9-4838-ad70-223b184b7abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ade8408-c60f-42ac-8e6a-568a59b2abb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be545220-32ed-4a7b-9103-9cd7df2c5f75",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15adb1e5-d3ba-4c00-a755-ce450847833a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff65df72-1ae2-4e25-baad-24b535c31c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00ad95b-4a93-4f75-9f26-c750de2b53f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d07bd3-c3c5-45b3-b7d3-2c0ca34e4d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee84e5f3-5a59-4f75-8a44-fbc361a5edba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b791d9-0d6a-4a05-ad2c-2c704cf261e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3902cdd-c25c-4231-a2e5-5e36c385eea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d44538-4022-4efa-878a-4e1c91ef0b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d877d-bb07-4f90-9bc2-5f19bf4d7a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91985389-3b3b-44f2-9f2d-7cdf49820814",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef77da9-38ae-480c-a340-417a13290189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d543f04-e322-4c84-92b1-524cea2bab3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1d94f-e1f6-4b71-b2ba-eef780654ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef2e1c2-60eb-4c45-b758-b6ec641d40e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d684a9-d698-4f04-b62b-b422395679e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0cce3-bcd4-4fa2-81b9-3fd8d29f46aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e84778-627f-4fe0-aa04-2068e580f1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43161ccc-7756-468d-b224-42da7a5aa74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01591355-371e-4888-a02b-3fe42c067297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98561a9-20c3-40c4-8952-fceed85a2b94",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8385f4-346e-4e60-9d09-23398c7e6bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f74e29-6473-43c5-8036-8822ddaf7a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d626973-cd39-4157-a80b-2fdb0f8150ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92e9b6d-12ea-465a-94a9-1381bad32380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949e24dd-9f74-48f6-8660-0dcd225a7c0c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeab4bb-73a7-4c76-8f3a-622a53e194a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9003738a-67ee-4978-9530-b22f10a20295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5589b6-e6ad-40a0-91f9-4c26082f008c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec649098-bf55-40c2-aa33-123e2235a4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ae3423-eecf-4058-8ea6-7130a2fc4e53",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35430fc9-b02c-419d-b5b1-4bf581028919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a5541b-b6ea-4bc4-aac8-f8a23c59b202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62af3a7-52a2-4976-be2a-bf4ade2ca8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f58d19-6caa-4cb0-b729-844e40965a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4626d9-83af-4278-b964-a76584d18284",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1dd2c5-992e-488c-b891-31e02137ff2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f26ef81-2e67-49c8-bc5f-d928c2e5772a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f849b2-1fd8-482b-a8b7-a71be9cc2e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3227aa0e-3085-4ce9-8ebd-424d29e978d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe2b472-8999-40ad-bf8a-0086f7d77a7a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba7016-5d67-4bca-a254-abc13ce90e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed166f9e-bca5-4312-81c8-d6368230e2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b420d0f1-6fdf-4076-81e5-0b276f29b98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f5232c-2fe7-4dbc-ab11-3cd7cb021b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40d55f-5cb6-4ccb-9395-ebfc7ff8d6d9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea31d2-9bc2-49b9-82de-b882baa4774d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab583b4-0746-4050-bb7f-ad39412ecf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d670af44-0758-43c9-8112-7b3438a70f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b826bf7-37a7-4e06-b2d7-8df615e8a0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefd878f-3946-4aaa-a151-7cd2a03769f0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42219808-98b3-495b-998e-9a85aa227c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9208238-af95-49e8-b246-0a4fe055e44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d13e85-d158-4d41-a76b-3f25e6629628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956a71f9-ab41-4d94-9772-0ee79c75c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29cc5e-f498-4733-b41c-cd77770103a2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcddbfc-ae0e-46f3-8a47-4cb0256a501a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833cb450-8066-40ac-b5ec-4983b4990405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e75ce0-1cae-4060-be9c-ca2804bf136d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b071be29-ab8b-46fa-889d-79912d9090f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38587eca-7421-43a6-9309-bd175a0a6d26",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf3f1c7-ed0f-4a4e-9f9a-1bc45af93a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cca3ab1-d6da-4fb3-b76c-cd3ba97b23af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867121b9-b908-47a3-8350-03002a6a3976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66ddc33-894b-4312-b54c-1fd65367947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2022d9-720f-4e19-9f6c-61ca115ee2fc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056b80ac-eee0-4a12-a697-a7f3a5a05f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a56c458-6b4b-4fae-bc16-cc63795028a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ad49db-0125-4ca0-b6aa-d5e89df7a695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a49b341-7f05-4e62-b875-f98c987e8c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b2e05-0e5c-4c1e-8d3d-d3cf5a561d1b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8b61bf-4c17-4e06-9726-122051641ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66319b7-16c8-4228-9fe0-e1738b7ca14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8e239f-9b49-4d1d-aba6-993e8f921d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78ba88e-3792-46fb-80a8-e0a304375ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba10f1ea-3bc6-436d-92c9-ed8401bdfec3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b204b5-11d0-4a11-bda4-e48e3d425070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf42ba1d-4dc8-431c-8e77-84b7a8060c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d071dfe1-795a-410a-8a69-17d382e20758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dabd4b0-b79c-4cd3-b0db-85120a0c0d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b2da3c-6622-4a86-ab70-15c1539ddac3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300562a8-2ccf-4f45-b91f-ea93b13e1d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409f2775-4474-466a-8ad9-170168f6f339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c11ea-ba88-426b-8c8e-6719023b0ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2803bff9-b9d5-40d5-841a-30ba5048e2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c254409f-a53e-40b3-9524-3524046094dd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1716fa26-2c52-4149-b8e9-cb9c2810325a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09097b4-ff23-4256-91e0-c8fb21bd1623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5051e97d-684e-439e-9634-4cb8e5c42cec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb7eaff-083b-4a03-ac33-490e6219ded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc33390-80c2-418d-95dd-a75e1811b0b6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a5b87b-76f8-49d0-895b-05554fcf9956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d58088-2115-4190-a0d1-b29a62e4c368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b50b29-4b23-4385-8472-5519ac673a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9db5f75-51e1-49bc-9f36-68f05eb1c7bb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f31b97c-ff1a-449d-ab4e-0d9b7440f037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9848ddd1-edbc-45c4-893b-d45098056101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfdeb198-ed54-4036-88a2-ef14af8fc621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c64b4e7a-590a-4e3f-94c2-1c8725d3b245"
                    }
                  }
                ]
              },
              {
                "id": "51de8b17-7346-49b6-8d7d-391993972aec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc07195a-2892-4d13-a889-dd3a3f7dbf2e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6e3674-1fdb-438c-af5b-94c7109ea94e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "78625fa5-0311-4359-8d21-8fc5cf0e1c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501f4d20-deaf-48b2-a29e-1ab4c8196a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f6e9647-34fd-481a-bc49-9570c9f5a4bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27e30cf5-cb71-42c1-aea7-0d3f69ee4557",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64ce1b3-30d7-4e75-ac9a-a0c06770e99b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f89c5a5c-bb88-4a3f-bd03-08d1ae2b9147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a61601e-da48-4baa-b1ec-e9bd2381b126"
                    }
                  }
                ]
              },
              {
                "id": "b5abb1cb-f807-4d14-9ce6-667d22bfa33e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "67542a44-5341-4ec4-a700-131911ef47ab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c432e744-8071-4adb-bc3c-c7d982b79bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f7bc9902-2412-4faa-8bc8-e5af7056e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97276fed-adf1-4422-bec0-53edfb8b4b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b46540-a75e-441b-8a14-c07b1253f796"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9542826-6f65-496f-a8de-c814c8520088",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a7d6c6d-3f9f-41d9-9f07-e8a88b3f5297",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83226b9-97ac-4d63-b2e9-14b968b33c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2fa3a22c-7caa-4142-80cf-c59f51828399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90e83e22-efe3-49db-a870-e6d4f3794673",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbb2253-2a82-4c37-8979-d78e10bcfec3"
                    }
                  }
                ]
              },
              {
                "id": "f74feac5-5cd2-4b76-a221-d71386627658",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e58e6f51-ddc2-4d32-84f6-c6b82c51fb66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98b5c2f3-9094-4555-81df-0de738eb55cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20071036-ceb6-4afa-9976-791525b9c6b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f18d5af-bed0-4867-b547-e89fcb1a90e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec89c33f-7c71-4f8d-ac07-053dc2e4470b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5a354009-8dc5-4142-88da-6b5374bd106f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8255feb-bcef-486e-9a2a-e471840fd794",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0529efb-b069-4b33-b505-df78fe0c2d17"
            }
          }
        ]
      },
      {
        "id": "a65bea09-ba61-4a2e-b5b6-6407ff152707",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "52cff8c2-bfa1-44af-bc58-0969db210300",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2957407-4216-4b70-aa9b-dbfef2012687",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57a5de2a-2205-4e4a-a59a-5044d7537148",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c834d15-2c6f-44a4-87c8-ef0fd8ee748a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "729f86b3-8dce-440a-a589-4e6eb82f2b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962645f1-420b-4c12-90f1-4f9b3c1305f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48966d30-a7f2-4829-a4c4-9b98f0cb89f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42d342d1-94dd-4f65-b61d-edca2e1832d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53ddb0d5-b014-4d26-9548-1d1cb3020aff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc72c308-7d78-4d41-8a65-a6df3fdbf0a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7af8c118-907b-4671-b5da-e8138db74c1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "324e6e43-fa8a-405c-ad82-2015de71fd5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24c5f1d3-25ae-485d-aee5-a5cf789f8e2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2402dc52-4775-4b99-982e-9b4ee6622628",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b749ed6f-5e38-48fc-ac00-507469c1cabe"
            }
          }
        ]
      },
      {
        "id": "a17b1443-acf1-4645-8a93-58597f3fb76b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d87ea6aa-325e-4aa8-860a-4637d3ed1483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c27b44b1-4a87-4bc7-8864-664cfe33d12b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afd36362-b9f6-4e51-aef3-295baf7d77c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50c82e4-d1db-440f-a858-da6c93b297c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eadfde29-65a8-4d86-84a8-80a8bc15a9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79267c7-67da-4eef-bdc7-e35a9f7b05c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c0abc12-bbae-4006-9c59-11a9ee19dcf9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849b6034-cb7e-4e56-9cb9-25d4f89da19b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56d6a126-545e-4cdd-9c7e-0d367deb8876"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f5fe7cb-8174-44a7-bef5-b02f1839f38b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6ac8a7f-37d5-4a0b-9dd0-3dce3b64adfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e6fa67d-6172-43aa-951b-b566607eb336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "334591d4-ddfa-448e-9ec2-9ae04a322515"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f2b8710-4050-4743-8e3e-490d9d27ed69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba42aa84-32f2-4f35-b5ff-c7d141ca5093"
            }
          }
        ]
      },
      {
        "id": "6b3f3104-99dc-4524-965a-cc55d4a3fdaa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f8e47d95-1704-4007-8830-6bdec59dd284",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01bbb8f6-1b5a-42d4-9da7-63b2713e654a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aae4a6ea-7a43-4751-a545-e24241e7bbac",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7fd016-ea7a-44e6-9c9b-ae7c980bbf7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56f7f67-c7e3-4683-b6c6-7f5158748f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad70b93-7ed8-4891-b425-76c5d077fec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "594a811e-2a1f-401f-a698-720400e5033e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83514daf-1db2-4e50-92f9-f8a942d68a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63626cd1-e35e-460b-b6ab-3048cf2200b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d32baf48-7b7c-4fce-b21b-30ec2af0f9c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18a4934e-a85b-4911-9071-ac9699d24268"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0f1ea84-5282-48a5-af3c-f5e120456335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1137fbff-f54f-46e0-9729-8c6323861f5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9814ffd9-a487-47bf-8ed2-36b68738aad0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63b5e1cb-4cd2-417b-b33f-4eb04ab1fc92"
            }
          }
        ]
      },
      {
        "id": "2b8efb10-1b44-47fd-b964-b6236cf01d2a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd70e962-9f53-4499-87b6-85f0d94ae39b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de431834-261c-449b-8d13-4810758ffe42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b741e47d-be37-4ff0-99a4-c44832caf222",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6b363fe-25ce-4c45-a3f9-3aa47c33201e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6338b5f-028d-4299-824a-0b6f7f7137ed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.88732394366201,
      "responseMin": 6,
      "responseMax": 6247,
      "responseSd": 459.0077878162172,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693182784658,
      "completed": 1693182823593
    },
    "executions": [
      {
        "id": "956877a1-f1dc-49fd-b51f-05824763311d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d76190f8-3d74-426a-8ce9-9b0d83741f51",
          "httpRequestId": "bdbc9093-5f20-4714-bafa-18d6deee77c9"
        },
        "item": {
          "id": "956877a1-f1dc-49fd-b51f-05824763311d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8352c272-f6d1-437f-b714-5de721d6ebd5",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "2ac3366f-0c03-4c7c-8691-28bfe164f8c8",
        "cursor": {
          "ref": "cbb9040b-2576-49a9-83c0-f1d55d15c693",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c23a7682-0b21-4f85-8f99-c8742a770eb5"
        },
        "item": {
          "id": "2ac3366f-0c03-4c7c-8691-28bfe164f8c8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bbac2ce5-d556-4082-88f8-06ad3baa7349",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "83a91d86-bdd5-4e93-b581-4d9944961ec7",
        "cursor": {
          "ref": "7df68bf1-65c2-4bbe-a337-758776896bac",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7e36fcad-8d5d-4787-ac22-4f9d693c9c2c"
        },
        "item": {
          "id": "83a91d86-bdd5-4e93-b581-4d9944961ec7",
          "name": "did_json"
        },
        "response": {
          "id": "f8605554-df68-4846-9065-b3286c78630f",
          "status": "OK",
          "code": 200,
          "responseTime": 281,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e774f5b4-5267-4b24-b5c2-53a7a8efa1f5",
        "cursor": {
          "ref": "0cacaec0-19e5-480e-b9a3-69d235d7bf39",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87ce2af6-a82c-4008-87d3-c4d40ec95500"
        },
        "item": {
          "id": "e774f5b4-5267-4b24-b5c2-53a7a8efa1f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "240a47ec-35df-458d-b23b-976c9e95afc3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 851,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e774f5b4-5267-4b24-b5c2-53a7a8efa1f5",
        "cursor": {
          "ref": "0cacaec0-19e5-480e-b9a3-69d235d7bf39",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87ce2af6-a82c-4008-87d3-c4d40ec95500"
        },
        "item": {
          "id": "e774f5b4-5267-4b24-b5c2-53a7a8efa1f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "240a47ec-35df-458d-b23b-976c9e95afc3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 851,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fea391-f81c-40ef-a1c9-54fe03f17faa",
        "cursor": {
          "ref": "4bb72cd5-629c-46f0-9ddf-827f09f8c353",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4fcb964d-90ec-4dc9-96ce-137ab75e9bc0"
        },
        "item": {
          "id": "c2fea391-f81c-40ef-a1c9-54fe03f17faa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "092bc166-5342-41dc-99c5-6f316410b2b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8abf23-d2de-4bdc-a69f-be7164f7c0f2",
        "cursor": {
          "ref": "29d59ea4-f813-4255-9ac1-aabbf40dffc1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ce7cd75-82c5-4aca-a5c3-1e8337509f5e"
        },
        "item": {
          "id": "2c8abf23-d2de-4bdc-a69f-be7164f7c0f2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "02bbd5c4-97d7-46df-9e81-225e21f31ce7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff8668b-357f-4fdb-97f6-cc5d2a8e5367",
        "cursor": {
          "ref": "1c6869a6-e522-4a75-ad2a-f6a14e529588",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4abb51ef-928c-42e8-9f20-9f4c14cf5da4"
        },
        "item": {
          "id": "8ff8668b-357f-4fdb-97f6-cc5d2a8e5367",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a4c49ec5-6a08-4cd4-a11c-0e0108f6c007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356403f0-a437-4f24-bc1e-09150cb1177c",
        "cursor": {
          "ref": "d64e0182-846c-4c22-82de-d613be69d008",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a5961f15-44e7-4024-9f54-b0cd25e2ebd6"
        },
        "item": {
          "id": "356403f0-a437-4f24-bc1e-09150cb1177c",
          "name": "identifiers"
        },
        "response": {
          "id": "656af03b-a081-4509-b95c-6d222b63af10",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e18ebc5-5e85-4305-ae97-d64ff7e980f3",
        "cursor": {
          "ref": "58a9bfbc-03af-4a08-ae30-aa924c8db77a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d4e5d2b5-b831-497a-bd95-8a5e8c3fc894"
        },
        "item": {
          "id": "2e18ebc5-5e85-4305-ae97-d64ff7e980f3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d29a8292-505e-4bec-9a99-11b57b3a41ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41960993-d9d4-4c90-a150-4c6e616a6563",
        "cursor": {
          "ref": "720c1f1a-85ad-4231-b084-6fc13ddc356a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95bd6b2d-3b01-4d44-b669-6363d9eb92fa"
        },
        "item": {
          "id": "41960993-d9d4-4c90-a150-4c6e616a6563",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d09e7d86-249a-40b2-8acc-2c771789fc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6d67a2-40bf-4237-94f6-782c4a2f0605",
        "cursor": {
          "ref": "ce053aa5-787f-4a3a-aa8a-06d0ba6fbbfb",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3a374502-748b-47a8-9be2-20fa06e76a39"
        },
        "item": {
          "id": "7d6d67a2-40bf-4237-94f6-782c4a2f0605",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b46355de-732c-400b-834a-8e2ad43f924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5122f312-87c0-4843-821d-0e29048bb0b5",
        "cursor": {
          "ref": "4e33921c-7617-46e9-b8c5-59201478cf09",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f177ae2f-0458-47da-b34c-5993bf2e2266"
        },
        "item": {
          "id": "5122f312-87c0-4843-821d-0e29048bb0b5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4efe6621-c9d7-4d0a-adc5-d420ce82856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9edeb10-2f1f-4f0f-9c6c-5acfb06ab419",
        "cursor": {
          "ref": "cf3d62b1-e1ba-483b-b209-bd3030629c42",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c8ca774e-43d0-4c5e-8f8e-b8593f0c56db"
        },
        "item": {
          "id": "d9edeb10-2f1f-4f0f-9c6c-5acfb06ab419",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7204a61f-6675-4f64-bb2f-1185ec20e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe24e16-2332-4a78-8c92-a50f06af4b3e",
        "cursor": {
          "ref": "02c4f9b6-b7ab-4661-922d-4a6f90a3b3cd",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eaca696f-f7ad-47c4-bd63-4855a100a049"
        },
        "item": {
          "id": "6fe24e16-2332-4a78-8c92-a50f06af4b3e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a194b86-a520-493a-b8c9-a44818a99808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e3146b-fa6f-4b50-ba71-ac91229cca2b",
        "cursor": {
          "ref": "435fd426-f23e-4247-b5e5-56e5479f489e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cabbc2ff-3d90-4c49-aa2a-652e3df4d876"
        },
        "item": {
          "id": "80e3146b-fa6f-4b50-ba71-ac91229cca2b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "24000fba-4837-4fc4-a3f9-aaa73120ffe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad111e39-381e-4195-90fb-7115da75534b",
        "cursor": {
          "ref": "7d990b4d-8d4a-4b6d-b614-8df1c66d6d9f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5c3174a8-738d-4f05-acc1-5fdaeec4e52e"
        },
        "item": {
          "id": "ad111e39-381e-4195-90fb-7115da75534b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b80f535-e101-4084-b50a-68fef688ee7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f799d13-46b6-403d-b2ec-09f5da5cb7bc",
        "cursor": {
          "ref": "7fc5cfe6-a563-4395-b7c6-9961eed83ed8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5b7ac77c-8390-473a-87e4-a6ee4013d256"
        },
        "item": {
          "id": "1f799d13-46b6-403d-b2ec-09f5da5cb7bc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "24b1c319-7691-4845-968a-fbd25aa963eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64acce-52a6-4ece-b31d-168ca4178ce0",
        "cursor": {
          "ref": "da0de217-9f59-4f63-8374-cb01b8d59d38",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ea531c74-6a1a-4c1d-949f-480f26af11b3"
        },
        "item": {
          "id": "ce64acce-52a6-4ece-b31d-168ca4178ce0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "07b5220b-e00e-4747-9d12-40df7afe20eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a88dc6b-fae2-40ca-99af-63ed6ed7c612",
        "cursor": {
          "ref": "95184eae-1395-4948-9364-e790fdc7a1b3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c9baec6-818a-436f-b13a-0f296f20eb71"
        },
        "item": {
          "id": "9a88dc6b-fae2-40ca-99af-63ed6ed7c612",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ab91536e-8ec5-43e6-9e6b-ff915bca817e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da7c609-3a51-4a4c-a17a-a9add53e2d43",
        "cursor": {
          "ref": "c1bff24f-7ca4-403d-a613-1fda45ec51ed",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8d0e8c2d-211d-4b1c-bc35-2fd0d6b9c398"
        },
        "item": {
          "id": "3da7c609-3a51-4a4c-a17a-a9add53e2d43",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "30cd19dc-075e-4b1c-ba8a-95ec4e03a1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee55d738-cbf2-428a-b92b-22b8639ac399",
        "cursor": {
          "ref": "3ab31762-02f5-4e89-ad61-8a91be0996ac",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1ade218e-23cf-4a85-92c1-39db49743441"
        },
        "item": {
          "id": "ee55d738-cbf2-428a-b92b-22b8639ac399",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e171278e-1ffa-4304-887a-fd1c79dbd051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a82c6fc-32af-47d9-8db6-6c6b0aac7955",
        "cursor": {
          "ref": "b42fbd2f-4b9a-4e3c-9e71-e1cf26ccbc5f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2bdf76c-4902-472f-9dc8-edcbe6f6087d"
        },
        "item": {
          "id": "5a82c6fc-32af-47d9-8db6-6c6b0aac7955",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "45ebddba-1357-4fce-a887-d0e1da7237ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ecea9-ff35-49a2-b42f-279f41bf1a6f",
        "cursor": {
          "ref": "0a06016a-a454-4639-a419-a72c456fdbec",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "09628232-0400-43c9-978d-a4e79977545b"
        },
        "item": {
          "id": "ca3ecea9-ff35-49a2-b42f-279f41bf1a6f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c0cfa5d7-14cb-4185-aaaf-22a8342f8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d34b1d-3686-4c18-a1af-94274bbcb184",
        "cursor": {
          "ref": "9e930b5e-7dac-4b16-9229-b1c5fe7b2513",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c072ab64-4074-4b01-81c6-62dff526cb5f"
        },
        "item": {
          "id": "d8d34b1d-3686-4c18-a1af-94274bbcb184",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5c411f85-7350-4b25-bc90-bb5166ceb0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46972a2c-12f4-48d1-bd04-1937d7a70845",
        "cursor": {
          "ref": "1ee56ca2-1e63-43a6-9442-ded440decb7e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20064fcf-de3e-4513-95d2-0cc956c68c5e"
        },
        "item": {
          "id": "46972a2c-12f4-48d1-bd04-1937d7a70845",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "261cc25d-a39d-4acc-9cd6-8ee0418cc0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa4342c-4c18-4f63-8dd7-149207a6d47e",
        "cursor": {
          "ref": "55901976-1b05-46ca-83be-1b2e296f958e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db1841be-4fc0-4d36-99ac-6d8684bb535d"
        },
        "item": {
          "id": "8fa4342c-4c18-4f63-8dd7-149207a6d47e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "314fb2c8-7be4-45a2-b1e6-2bb11260c6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698f851f-1b14-49fc-87fb-3819fb858c21",
        "cursor": {
          "ref": "8de73139-6aa3-48b3-aca9-64f1d41dd784",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f21d2c7-52e5-4c3c-8e9a-b1cd36e94f82"
        },
        "item": {
          "id": "698f851f-1b14-49fc-87fb-3819fb858c21",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "696b6349-35d3-4674-bb77-0db9e28285e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd131c41-bfa3-4d0c-a8f9-ce3755e9f63e",
        "cursor": {
          "ref": "1bf5a62d-0e54-48a8-a2cc-a7ecf0fb73a6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "39f865d8-de17-40ab-8878-718650aaf410"
        },
        "item": {
          "id": "dd131c41-bfa3-4d0c-a8f9-ce3755e9f63e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0202f277-9d2f-4e5c-9e0d-2308162f4281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba158352-db4f-4e8d-a864-369ad5a7dda1",
        "cursor": {
          "ref": "bd63ae43-f36e-4901-bf4f-ddf3c110be4f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7ec21b4d-dd91-4a42-b4eb-d9d367f36b29"
        },
        "item": {
          "id": "ba158352-db4f-4e8d-a864-369ad5a7dda1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f87e8646-1901-4742-ba13-9bc85002379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd9fe0-32ff-4d66-98a5-a165ad3d97fc",
        "cursor": {
          "ref": "8e881519-9245-4c03-a3dd-140877e26500",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "72c8e457-fbc9-432d-adfc-c93294fbf038"
        },
        "item": {
          "id": "b6dd9fe0-32ff-4d66-98a5-a165ad3d97fc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91af6720-b6c8-4d53-be48-3890be7ed365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc37f8e1-0538-4a32-b48d-56f860785de8",
        "cursor": {
          "ref": "5611474a-c985-498f-89e5-cd52d736461c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "07f27b02-161b-4f6b-bd36-b46c8fcb3b8d"
        },
        "item": {
          "id": "dc37f8e1-0538-4a32-b48d-56f860785de8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4cb96a88-5790-4f33-9c65-93b2289653f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511fd4fd-5c95-4522-b942-7d364fad99c6",
        "cursor": {
          "ref": "3a2390a0-d3e6-4e3f-9b4d-d3a789c8f674",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "60f0982e-5974-42e8-9ee9-91abd63911be"
        },
        "item": {
          "id": "511fd4fd-5c95-4522-b942-7d364fad99c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "11d91869-5c4d-4aec-914e-563648f2f048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7159dee6-2b34-4f37-9ca9-56e4d043e250",
        "cursor": {
          "ref": "208de03f-f83d-4e17-937a-43b98fff8b57",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "86955d4d-4271-4d5a-b7f6-5a97e47f2436"
        },
        "item": {
          "id": "7159dee6-2b34-4f37-9ca9-56e4d043e250",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aee81f85-b773-4787-aace-f6869fbebed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9838135d-41bc-45df-8d75-2b0ac45fcbde",
        "cursor": {
          "ref": "1f47f0d4-4f5e-42b4-90ef-2930ae65215c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cb058cfb-9554-4d2d-b736-0d1adc7799dd"
        },
        "item": {
          "id": "9838135d-41bc-45df-8d75-2b0ac45fcbde",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1f760637-aa02-40c3-ab15-a5e564cf9d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fcd331-6e74-476d-955b-4a8dd43a6409",
        "cursor": {
          "ref": "33d119a3-8d6a-40a7-9847-58ea69228796",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "317b3dbb-c6c9-4088-8d45-3a38e3575912"
        },
        "item": {
          "id": "95fcd331-6e74-476d-955b-4a8dd43a6409",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5082bf1-ac61-4ac3-a406-86488cf7a3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ff240-7aab-4646-ab7a-052d469760bb",
        "cursor": {
          "ref": "1aef10ec-194c-4a61-95ed-5b86d30157c1",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aa1f37e5-d752-4e47-96f3-f9e1fa93563c"
        },
        "item": {
          "id": "e52ff240-7aab-4646-ab7a-052d469760bb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0265d852-de39-4f3f-9775-9d010a1dc738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cf204c-c084-4f0d-aa33-1eb4188761f3",
        "cursor": {
          "ref": "25a5c3f6-b267-4488-8146-20a26290e708",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9f9c05df-88da-4032-809e-f2212c25e3d3"
        },
        "item": {
          "id": "53cf204c-c084-4f0d-aa33-1eb4188761f3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "847b2200-62fd-4eae-9a40-588789589b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1005f-1d6c-4266-a040-e39f57ec738a",
        "cursor": {
          "ref": "c23a8137-6123-4676-a71a-2ca66ac280bc",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9374ce55-65dc-487e-bacb-f6a9a62af919"
        },
        "item": {
          "id": "f4a1005f-1d6c-4266-a040-e39f57ec738a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3543ba02-de37-44aa-b09f-6092c8f520c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c7b0f-b505-4e98-9a45-d5f43c08fd61",
        "cursor": {
          "ref": "9fa04131-7ba3-481e-b394-da61a4e1cc16",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1faea468-6c3f-4304-b5bd-09aa8aa7908a"
        },
        "item": {
          "id": "450c7b0f-b505-4e98-9a45-d5f43c08fd61",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad2e7369-f385-416b-94f5-c0df27262a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596fbe7-b8a5-4d0c-8005-d82a68010e97",
        "cursor": {
          "ref": "7c93233f-829a-466c-954d-8db32d5ca04c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "026f9880-0f8c-4edb-868f-ef82335e46a8"
        },
        "item": {
          "id": "0596fbe7-b8a5-4d0c-8005-d82a68010e97",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "660de076-9a17-40f7-8b87-33e315b62d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32882140-873b-41dd-a26e-5cc3acd7cb6d",
        "cursor": {
          "ref": "53fc3338-bd39-4a41-b7d5-2949747154fe",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d0bab02-e52f-4884-a7ad-c685de95bc48"
        },
        "item": {
          "id": "32882140-873b-41dd-a26e-5cc3acd7cb6d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4981b04f-8611-46a3-9f11-c3ef6c2e3f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb708bd-c0dc-43fe-bb9a-daeb03aefc81",
        "cursor": {
          "ref": "13edd900-b2c6-409e-929d-aa24cf1f0b4a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "16a66cef-5c07-4ece-8ece-f77062f02f9c"
        },
        "item": {
          "id": "cbb708bd-c0dc-43fe-bb9a-daeb03aefc81",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6bb2157e-3b77-4fb7-8ba6-32de1cb2560d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f390586-d367-4325-a7e7-da416d41b2e4",
        "cursor": {
          "ref": "b97fc4f6-70a9-466d-a604-614b4ae79241",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e23dc542-7721-4060-97c7-112584961719"
        },
        "item": {
          "id": "8f390586-d367-4325-a7e7-da416d41b2e4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "88babbd9-6057-4de2-9d89-e8d2ec9b9d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc21514-620e-4d72-ad13-a070037d569f",
        "cursor": {
          "ref": "fb082b5a-20dd-44ae-9497-f7ac3afa98b2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "abbd213b-7703-49b7-99fb-cc7df006c7a1"
        },
        "item": {
          "id": "fbc21514-620e-4d72-ad13-a070037d569f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c3f8ea6-2793-4f3a-9dc6-40665bc7357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ef3bec-a9fe-410b-ae13-66d1b6bf165d",
        "cursor": {
          "ref": "46528762-aa86-4b42-9565-b60982e409b9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c2cdfed-537b-4dd8-8170-5c2e6b7c1acc"
        },
        "item": {
          "id": "b1ef3bec-a9fe-410b-ae13-66d1b6bf165d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "16f94c1e-beed-437d-81d6-2cc5132ee5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9606b5-597f-4f74-89c0-c2e8f77ed908",
        "cursor": {
          "ref": "5235eaff-2062-44d7-9ce2-a1fd3cdea75a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aec18800-ee76-4b53-b21a-ad055b01da6b"
        },
        "item": {
          "id": "2c9606b5-597f-4f74-89c0-c2e8f77ed908",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a5c84cd-1809-4e86-b15c-b2e5774ed17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7411b14f-1395-4e19-b058-960099e2bbf0",
        "cursor": {
          "ref": "4c6a297f-5d94-4d43-93f2-1445d6e1caab",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3215e1ee-7a33-448f-ae94-1c6cdde176d2"
        },
        "item": {
          "id": "7411b14f-1395-4e19-b058-960099e2bbf0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "313631c4-48ad-430f-9b2b-71a17b6a3364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25a8ebd-bd1a-46ad-b9fd-9bea51ec8f74",
        "cursor": {
          "ref": "05a96e92-734f-4125-b4a7-018ee83034fb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce5055ab-e59a-44fc-b6e2-11fc16001f60"
        },
        "item": {
          "id": "e25a8ebd-bd1a-46ad-b9fd-9bea51ec8f74",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "89acd6a9-d68a-47ec-9bb4-f5227b64f6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8740f9-3bc6-4247-91df-e545d8eb8703",
        "cursor": {
          "ref": "2e620248-0b5a-4669-af16-cd3906d86c81",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d60ee7bd-65ee-4890-ae23-16a1f5cd5d28"
        },
        "item": {
          "id": "ac8740f9-3bc6-4247-91df-e545d8eb8703",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "83dafac3-6428-4da5-add5-324f62e6691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e50b757-2cd4-4d23-8f34-dc3044614c69",
        "cursor": {
          "ref": "c6cf570a-b0d9-487c-9cd4-830e3fefbaed",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cffecd74-61a0-4ef3-a120-9a565305dc1a"
        },
        "item": {
          "id": "1e50b757-2cd4-4d23-8f34-dc3044614c69",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9054f2e9-418c-43a3-80b3-6d8baed89011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a93424-f97f-4b2d-80b7-2a9b48047a37",
        "cursor": {
          "ref": "647f32aa-1b7f-42a3-a74d-dc4b1078bee0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "59980d6d-c016-4551-a338-32f4f8f9f196"
        },
        "item": {
          "id": "d3a93424-f97f-4b2d-80b7-2a9b48047a37",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5cb5e075-cbcb-4349-a7d0-864b2d2dffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709709f9-7812-447f-a70f-f85a18a4391f",
        "cursor": {
          "ref": "18ddb71f-fb5d-4ceb-86cb-4ec67c18778d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3cf01efb-07ea-45e5-b153-43502987da1d"
        },
        "item": {
          "id": "709709f9-7812-447f-a70f-f85a18a4391f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bc4e53a-35b7-41ae-8448-13dfd21af8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d2605c-349c-4f99-b60d-72c098b054f0",
        "cursor": {
          "ref": "22ed1279-a7a7-498c-ac42-3070cd7272a9",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f444df5a-3bd4-4836-bb4c-f646978ae05e"
        },
        "item": {
          "id": "e6d2605c-349c-4f99-b60d-72c098b054f0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e51bed33-8102-48b8-8f7c-30aaf307678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d215e9d8-444e-468c-9caa-6b03af1c3f10",
        "cursor": {
          "ref": "10423c98-2e97-400d-96eb-e09e32de4865",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd403c50-4d46-4e0b-b6aa-8d42ef107f57"
        },
        "item": {
          "id": "d215e9d8-444e-468c-9caa-6b03af1c3f10",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13c59cce-0587-47d5-8732-980cfe20b82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2567c18-250d-4d30-af6b-91c892bd2a8c",
        "cursor": {
          "ref": "47e39466-dbd0-4b0c-bd7b-4075ff6c4aff",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6526c3fd-b55d-4420-8877-3e7a9bd34a73"
        },
        "item": {
          "id": "a2567c18-250d-4d30-af6b-91c892bd2a8c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b649da5b-ad5d-4b42-a92b-786ea7488012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad5dc21-1648-4f38-8804-e07a662ffea5",
        "cursor": {
          "ref": "564a7ffd-9823-412f-b96c-fb05bc80c74c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c87750b-b2ee-4057-aeae-bcae5a9f1431"
        },
        "item": {
          "id": "fad5dc21-1648-4f38-8804-e07a662ffea5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08e96eca-0044-4348-92e0-deafab66cd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57010c-903b-44c2-8b21-53d5e8375a63",
        "cursor": {
          "ref": "5a90044a-ebe1-4537-a1c1-46931f7fa711",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "45cdaafb-32ae-4646-884e-abeb613e37a2"
        },
        "item": {
          "id": "5f57010c-903b-44c2-8b21-53d5e8375a63",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "665a2e74-7fb3-4c2a-8d63-e734ebf1b952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f64905-937b-4caf-9049-029def686ec2",
        "cursor": {
          "ref": "7bf98628-1e1c-481a-9ab5-6441c040c17f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0b6ed37-355b-402d-b1fa-64fa26173015"
        },
        "item": {
          "id": "76f64905-937b-4caf-9049-029def686ec2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10d0694e-f3f1-4b7a-bfa5-2e120fdd5879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7c6486-939e-45cb-bb8f-2fce39828fcd",
        "cursor": {
          "ref": "0b04c71a-d02c-4239-88e2-0a72228a0f74",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "69bbc79f-051e-448f-a158-535727680390"
        },
        "item": {
          "id": "ab7c6486-939e-45cb-bb8f-2fce39828fcd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fd8d86f5-73a4-4fcd-bae9-969f3c5229e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c6f2fb-3517-40c6-9074-e11f2e44f1c4",
        "cursor": {
          "ref": "7207b2dc-5288-4059-a8a8-774075c42cab",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b2cb0d1b-812c-4c9b-b8fc-3b7967b89aaf"
        },
        "item": {
          "id": "d7c6f2fb-3517-40c6-9074-e11f2e44f1c4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "30c0bda1-d25c-4556-aa1d-2b70ea3d9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6d99d7-a0a6-4f2a-ade5-33dcb8c7f863",
        "cursor": {
          "ref": "ac8028a6-2d6c-4fcb-8916-f4081fdc21df",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "95b981d2-2bf0-442f-8955-e22fb9c5bd52"
        },
        "item": {
          "id": "ba6d99d7-a0a6-4f2a-ade5-33dcb8c7f863",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "56059d4f-7511-4a01-897b-ce8f47f27087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689b907d-eba9-4fd2-a8e6-9d24e2beb70d",
        "cursor": {
          "ref": "cb456d4b-bc67-40db-8b8e-e2f449178f89",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e70cb982-3554-4a70-a95a-b0fdfe1ff5bb"
        },
        "item": {
          "id": "689b907d-eba9-4fd2-a8e6-9d24e2beb70d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "48d3cc3a-f5b7-4566-855e-2e46992d65d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255c5424-5c70-47f0-bbbd-b81b0133d7ae",
        "cursor": {
          "ref": "fc0e546d-f262-41ec-ae22-3ec1c04e3dc0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6f79cf7-6614-4682-a536-85464b0f4537"
        },
        "item": {
          "id": "255c5424-5c70-47f0-bbbd-b81b0133d7ae",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7234f0b6-9782-486a-b9c3-984d44858869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c67122-444e-4e25-acef-c55c48e93307",
        "cursor": {
          "ref": "c62c1625-cd90-4b36-8560-bdd833f41f31",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8225253b-531d-4ee4-969c-949aaa4d1110"
        },
        "item": {
          "id": "c2c67122-444e-4e25-acef-c55c48e93307",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f078939f-698d-42af-a052-89635e48a73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10af7c2-d10e-4d3a-9ed5-0c57af1355a7",
        "cursor": {
          "ref": "a7dd9658-9f70-4a43-b3b8-77a13ee349b7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e7d9afc5-51fa-4d96-9c91-1e49fdaef0f1"
        },
        "item": {
          "id": "d10af7c2-d10e-4d3a-9ed5-0c57af1355a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90746cd1-4596-4945-80f2-a15958be3074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c8a6a7-d23d-4dcc-88e1-2937c5b84586",
        "cursor": {
          "ref": "760db644-e501-4d1c-9b28-bb131dcb036e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "878d2176-9a06-4a66-a817-5c6adb38d177"
        },
        "item": {
          "id": "43c8a6a7-d23d-4dcc-88e1-2937c5b84586",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "17750883-5fca-437a-a4cc-72f835477c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78e8630-6841-4ad7-ad61-d40c5205c896",
        "cursor": {
          "ref": "b34389d7-2ab0-41e5-b504-b5253803fe4d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f441c2c4-bc8d-451f-9643-1c2ac2efbc98"
        },
        "item": {
          "id": "c78e8630-6841-4ad7-ad61-d40c5205c896",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bca59a59-b2c2-4faf-afef-45e26bb983ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a39764-4865-432a-a1e4-c5eb625b7d7e",
        "cursor": {
          "ref": "6678ae3d-b159-4cd6-985a-cf7a8a7a473b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d5e3407a-2eb5-4e9f-8a15-f82176f801e9"
        },
        "item": {
          "id": "70a39764-4865-432a-a1e4-c5eb625b7d7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e9980ea-052b-4c1a-aa90-dae97182fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4f011f-7ea6-415b-891f-35e12f30aeb1",
        "cursor": {
          "ref": "5c781b81-b4d2-468d-98ed-fcba5a9b59a5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68ae5897-defd-497f-9629-4e7dd9da70bd"
        },
        "item": {
          "id": "7c4f011f-7ea6-415b-891f-35e12f30aeb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3e22fc7b-9fe4-4dfc-bf61-c63f32dcd371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77faead-35c8-4c33-8018-678580f67f49",
        "cursor": {
          "ref": "da3d378b-2314-44e3-bb08-ba579330d0bf",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "947474b3-87bf-475d-9917-41aaecfba3f4"
        },
        "item": {
          "id": "a77faead-35c8-4c33-8018-678580f67f49",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e436061-70c2-494e-8159-4180d4169be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d77b94-6c03-4302-8ec3-4114843c05d0",
        "cursor": {
          "ref": "13c5be75-814f-4158-8120-92663acb41c4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e25be4a1-af20-4bbc-91cc-97407a41c288"
        },
        "item": {
          "id": "a1d77b94-6c03-4302-8ec3-4114843c05d0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5e4d82fd-b4ce-4bbf-b016-653ecc16b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefb336c-f23d-4e95-8888-0c3d2a746bd2",
        "cursor": {
          "ref": "668d2575-ea43-41d7-b18b-58ade7179f76",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "317c3a30-dc01-4133-9cee-50fee7f605dc"
        },
        "item": {
          "id": "fefb336c-f23d-4e95-8888-0c3d2a746bd2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "18411c6e-de8e-49c1-8aa6-f0398ad8fdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f468c9-87ee-4169-9ae7-07b50d605daf",
        "cursor": {
          "ref": "f0fdebd2-747b-4697-bf6f-2a2570961a7b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d66c36d-9d6b-4edb-a0ba-ff56d0b7346d"
        },
        "item": {
          "id": "81f468c9-87ee-4169-9ae7-07b50d605daf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6136c3fb-b180-4d34-b9f8-b8365c3e75b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd95c1d9-fd24-4bca-bc18-ae9452f1d02a",
        "cursor": {
          "ref": "61b3c6d8-10b1-4771-9c7d-1ef9a78d0381",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "11abaa32-3bc5-4e90-ad03-8d36e7e1db65"
        },
        "item": {
          "id": "cd95c1d9-fd24-4bca-bc18-ae9452f1d02a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b504a77-578b-4b7e-b80f-aab64ee03b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426e5dc4-f5bf-444c-9e21-aa890009c2d8",
        "cursor": {
          "ref": "a3ca0ed6-a7b7-42ae-bf8c-9f697dcb2bd8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bd82c870-e34c-423d-98c9-c998b530a642"
        },
        "item": {
          "id": "426e5dc4-f5bf-444c-9e21-aa890009c2d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dc744d66-4658-4675-863b-9f691024cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa357a05-d289-455b-9fcb-7f5f36284d8f",
        "cursor": {
          "ref": "695dd5fe-74a9-468b-aeea-ea38aab3afd5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60bb7e40-b073-4906-89b4-f54a5ec30b69"
        },
        "item": {
          "id": "aa357a05-d289-455b-9fcb-7f5f36284d8f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0d634e6a-0ac8-47df-add9-2c4f6efd837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a89622-17fc-422e-9b39-594fcf0b71fd",
        "cursor": {
          "ref": "52042ea6-020d-4e2c-ac50-9535b4644f63",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea3e6afc-ea6f-4958-918b-7afce0191427"
        },
        "item": {
          "id": "96a89622-17fc-422e-9b39-594fcf0b71fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d1970dd-f37e-46fb-8c25-fb274d9b689d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7294217f-e02c-449b-91fd-b88af18107e3",
        "cursor": {
          "ref": "50a0eb9e-8125-409a-bd7b-be7d97b145bd",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ab5de7a4-17b7-4377-9312-cff947d0b1ff"
        },
        "item": {
          "id": "7294217f-e02c-449b-91fd-b88af18107e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4667ff83-1422-46d8-b54b-328ccfff1bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cc789c-9a6f-4ef4-806f-8edfc1c7d8ae",
        "cursor": {
          "ref": "4c56b959-4fab-4685-888e-1a510d71327c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c2a461c-ec60-4769-a8bc-d939e4221a15"
        },
        "item": {
          "id": "f2cc789c-9a6f-4ef4-806f-8edfc1c7d8ae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "55aaf27d-b134-474c-842e-49bf103d138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe387b-5c1a-4472-83ec-d793467a5092",
        "cursor": {
          "ref": "37c654f9-d1bd-4b75-94bd-f7ae5f8c214f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2db122c0-734f-41f6-be28-fae8913e0f5b"
        },
        "item": {
          "id": "8cfe387b-5c1a-4472-83ec-d793467a5092",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "77619568-8b29-4109-a8c5-fa7953efa32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d47f8-c0b8-4e88-88e0-a6292f319763",
        "cursor": {
          "ref": "165c3ad4-ea43-47c8-a152-753ff48cf597",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "688fe7b4-9446-4e9d-9c7c-e20cd34082d5"
        },
        "item": {
          "id": "8a2d47f8-c0b8-4e88-88e0-a6292f319763",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bd9442aa-c4fc-4a16-96b7-7639ee615389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefc69ba-6cf2-4e6a-9413-fa196e4c037f",
        "cursor": {
          "ref": "0e0ad9fc-ee9f-43f8-875a-8828bbcdeb6b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "24f1b0a9-4bff-4833-ab14-e7c51319552a"
        },
        "item": {
          "id": "aefc69ba-6cf2-4e6a-9413-fa196e4c037f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ac5fe84-f12b-4216-9766-674d130a1790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad16360-df16-46d7-a2bb-d378d297e232",
        "cursor": {
          "ref": "2e3d3a6b-7223-4663-aac0-3dfaa3139ad3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c388e7f2-97f4-4991-95e3-5e9f9e6ac6d9"
        },
        "item": {
          "id": "5ad16360-df16-46d7-a2bb-d378d297e232",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "035a79d4-a106-459d-82e3-57a5de8d6ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bfd846-99bf-4531-bfc0-12709b09f173",
        "cursor": {
          "ref": "5db676fe-5a18-48a5-973a-c277ff4aaa09",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3fc8f086-3262-452b-914b-239d588b65f5"
        },
        "item": {
          "id": "d5bfd846-99bf-4531-bfc0-12709b09f173",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "38574508-a845-4604-bc12-f7385733afd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ff282-fb5b-42a9-8fe0-457c223d7d23",
        "cursor": {
          "ref": "4d40d23f-c38f-4327-b947-0e4bbd4d14a2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c66198ec-c47f-434e-8f65-750e674fc689"
        },
        "item": {
          "id": "ef1ff282-fb5b-42a9-8fe0-457c223d7d23",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e38095c5-9eab-4d0a-8c9b-50f55b2f5940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f238ae-c619-4728-a103-6f9ffb48b510",
        "cursor": {
          "ref": "16db6043-8163-4b39-b03c-dcee932db4e4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "437a2942-f936-4855-8197-6d31366c6788"
        },
        "item": {
          "id": "f5f238ae-c619-4728-a103-6f9ffb48b510",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "886a1d97-a258-4948-a361-21810452d418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5addbd-500c-4bf2-9493-4049d26c3c1c",
        "cursor": {
          "ref": "29594f4a-6f7f-45d0-b3cd-c614939ec42c",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "54cea6c9-776a-4e74-aa80-3b8e2eff5abd"
        },
        "item": {
          "id": "3b5addbd-500c-4bf2-9493-4049d26c3c1c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7562390f-aca8-49b9-a3ae-d4d4e5295813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffa7a03-1f63-471d-ba78-8a94809d0b39",
        "cursor": {
          "ref": "7635a26f-31a5-4363-bbb7-83e723ebd543",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "93d175ca-36c5-42df-a4c3-06c0e957b4d4"
        },
        "item": {
          "id": "0ffa7a03-1f63-471d-ba78-8a94809d0b39",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bc5685fb-109a-4e93-b53c-bf4d9543d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197fab7f-8969-4d9b-bae5-ff53dc988ff1",
        "cursor": {
          "ref": "887cc3a2-7b68-4103-8322-07d18ff4d19a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f06c3db3-819b-40dc-9f69-643e55aa6d17"
        },
        "item": {
          "id": "197fab7f-8969-4d9b-bae5-ff53dc988ff1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1f73e51d-4d3a-4a7d-9f8c-53831dc4ce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8383e9b-634c-452a-813f-8ad52382be56",
        "cursor": {
          "ref": "075a6f9a-9a32-4e99-8a95-6405fbd912ac",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fa1bf230-145b-4a9a-969b-91fc0e884bc2"
        },
        "item": {
          "id": "b8383e9b-634c-452a-813f-8ad52382be56",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bb80561d-9131-43d2-8942-73ab9ec8a3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11f7f3-e8cb-4348-9723-d78f1eb9952f",
        "cursor": {
          "ref": "a14a9fd9-b926-44c4-8218-b82bf48be624",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0fd4543e-fe75-4bd9-bc86-18390af5eca6"
        },
        "item": {
          "id": "5f11f7f3-e8cb-4348-9723-d78f1eb9952f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d6ff9758-a26f-409e-9fcf-094443212100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4ebfe8-c50e-4a63-8b2c-85fa6421ec8f",
        "cursor": {
          "ref": "010eee6e-1406-4664-b03c-a6bdcb588b7e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d6c2d4b0-d07b-43a1-8cc9-9d1d2d12275e"
        },
        "item": {
          "id": "6f4ebfe8-c50e-4a63-8b2c-85fa6421ec8f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4033a63b-7ca5-4b44-a0fc-114f67604aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b3879-f509-41f1-887e-d7c6eea36d8f",
        "cursor": {
          "ref": "e73b2f09-8ca3-4ac5-911f-1ddfad678bae",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4c2bbfe1-ea19-4d09-b652-c0dfae1bb909"
        },
        "item": {
          "id": "d33b3879-f509-41f1-887e-d7c6eea36d8f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "776ad63a-9d2b-4e09-a436-bd867247a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041280a5-22e9-40de-9236-821c73bea5f6",
        "cursor": {
          "ref": "7b8e0118-c23b-4388-ac61-a3dc4ccbf7cb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a5bb38c-6168-4333-9887-8d5f7e984547"
        },
        "item": {
          "id": "041280a5-22e9-40de-9236-821c73bea5f6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7dd4e3c6-eeef-4708-84e6-d872515e98b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c0c0f9-a114-4539-8dbe-30895137bce6",
        "cursor": {
          "ref": "0f0e7556-16a5-4c28-8122-81c459b53537",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cef66fa7-c82e-456f-ae02-0380351cdcd4"
        },
        "item": {
          "id": "a4c0c0f9-a114-4539-8dbe-30895137bce6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "04ac4a0c-aca8-48e2-a4d6-2f2dfd34ac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8637e3-218a-43e3-8675-469b3aad08d9",
        "cursor": {
          "ref": "838b3a63-3d47-48a6-8234-93c06e2c7a93",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bbfb2736-8202-41c3-982c-812afa67e138"
        },
        "item": {
          "id": "5c8637e3-218a-43e3-8675-469b3aad08d9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "782553d5-61e2-40b8-b56e-b23b07d17114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45edca2-4571-4602-88e7-237632535ce9",
        "cursor": {
          "ref": "07b3e27f-60fc-411b-b610-6b5e63f5d973",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "368f4083-9f9a-4fdf-874e-41b051160efc"
        },
        "item": {
          "id": "b45edca2-4571-4602-88e7-237632535ce9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6007d4c5-6cd2-4c40-8d39-1f084cec1ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e30b5b1-15c1-4ee6-8068-d2d5ca704218",
        "cursor": {
          "ref": "cd66c268-1fca-47e7-9452-455ab01276e0",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7953be84-8fa5-43cc-865f-0f7f0183786d"
        },
        "item": {
          "id": "0e30b5b1-15c1-4ee6-8068-d2d5ca704218",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c68631c-1c9a-48cd-9617-b5f094e1b5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195e57d4-c814-4fca-a99c-ea860c5e5871",
        "cursor": {
          "ref": "cf62dd8d-440b-4bb9-ab9a-46be5999e423",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b150add-dad7-4dca-b607-0a7c2b75551d"
        },
        "item": {
          "id": "195e57d4-c814-4fca-a99c-ea860c5e5871",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eeaf16d7-adbf-4f22-8eba-238537d7eac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a420e4b-808d-4d65-b783-66de6d8c3e10",
        "cursor": {
          "ref": "96eba130-79b1-4df9-8974-4ceba60376b6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a321115e-0f46-49b9-91d1-414ffe19123c"
        },
        "item": {
          "id": "7a420e4b-808d-4d65-b783-66de6d8c3e10",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c78c764c-1728-4b6e-b5ff-88b362c371ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5297d393-6629-4c96-ad73-26e1e01281cb",
        "cursor": {
          "ref": "cc959329-e954-482e-b72e-80a499cb9f91",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "966a4c3f-7bea-43e4-b9a3-a7d6e9b214f7"
        },
        "item": {
          "id": "5297d393-6629-4c96-ad73-26e1e01281cb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "437e1062-a0cf-495c-a5be-81127614448b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f65bdf-e3d1-4bd6-817d-8ffb391a384f",
        "cursor": {
          "ref": "dd0f3e52-1ef4-4ad8-9019-3727b094c957",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3af3cf0f-8e4a-436e-acbb-815ffc4befa5"
        },
        "item": {
          "id": "17f65bdf-e3d1-4bd6-817d-8ffb391a384f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1d8e5e00-6850-40f3-82b6-d91a4542bce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "3a1aae94-bb14-4778-a3f1-270646cf3145",
        "cursor": {
          "ref": "64491b28-3dc5-465e-a299-dfdb5678f1c2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0d63243f-4814-4770-bee4-bb3a29c073ac"
        },
        "item": {
          "id": "3a1aae94-bb14-4778-a3f1-270646cf3145",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ef1e85bc-1d30-41d0-b07e-e6a68c061c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "f23f356c-c6e1-41a1-81fc-8ea70b8806d0",
        "cursor": {
          "ref": "f39fa702-3165-49f8-bb56-bb45d83ff415",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f1ce3da7-8c91-47b7-bc70-1de6c1d6f82f"
        },
        "item": {
          "id": "f23f356c-c6e1-41a1-81fc-8ea70b8806d0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5b08e4ef-15b0-4d95-b07e-9381f7bc7ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5bd5e360-bcd7-41f8-abef-e952ac9406a6",
        "cursor": {
          "ref": "549dbfcf-1909-4c17-922e-d0cf94fb8906",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4459cbf9-84c9-4ec6-820e-85985b47ac75"
        },
        "item": {
          "id": "5bd5e360-bcd7-41f8-abef-e952ac9406a6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1252fb9d-3058-4460-8381-676e8e3f524a",
          "status": "Created",
          "code": 201,
          "responseTime": 6247,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1626d18b-423a-4a5b-9e2d-a8714613a8d6",
        "cursor": {
          "ref": "6d0c51ee-7484-4764-83fa-5b732e330faf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba71371b-3084-4a48-90b3-d93a05312ba6"
        },
        "item": {
          "id": "1626d18b-423a-4a5b-9e2d-a8714613a8d6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "15a0a008-8d57-43a8-8c4b-87e86a9b3770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "735fbe77-d11b-4782-bb40-728228231888",
        "cursor": {
          "ref": "aa904b30-7347-41e1-afa1-48fecce821f0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8ecb62ac-c909-4fea-a252-a3e4da5d3f4c"
        },
        "item": {
          "id": "735fbe77-d11b-4782-bb40-728228231888",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4d8d70b7-b1bf-4217-b9ff-a2abfe1a1a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "67c5f52a-dc83-4b11-a979-5db666e1f268",
        "cursor": {
          "ref": "6f40ef5e-8d10-4f6a-9554-901d9db7903f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da890933-853b-4b29-8e9b-7ccde4d97ac5"
        },
        "item": {
          "id": "67c5f52a-dc83-4b11-a979-5db666e1f268",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dff0b3db-d9fe-41f6-b971-64d465cd01de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba67354-6d3d-471d-b11b-75a2821d4ed3",
        "cursor": {
          "ref": "0f270cf7-5286-457a-bc16-dfae4c4ff76e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a95cdf47-5dc2-4cef-a739-324f2424c877"
        },
        "item": {
          "id": "0ba67354-6d3d-471d-b11b-75a2821d4ed3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba87db2a-ba3f-4c5b-8613-4c78454398f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c271eeaa-abba-47b3-b325-fad30df0ed22",
        "cursor": {
          "ref": "df035d4d-8d22-4d63-a71b-93348b48c24c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "741e0012-c974-4662-9ace-8a67c8d81ec9"
        },
        "item": {
          "id": "c271eeaa-abba-47b3-b325-fad30df0ed22",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49f5cd1d-55e5-4f57-a03b-e047f7b3d458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa35c9-b5f9-4a5c-b5c1-011052dc23d8",
        "cursor": {
          "ref": "e45562bf-2f1a-4b5d-9c1d-1eb593195c5c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24124f9d-9ff7-4cd4-a950-29bca7cf62bf"
        },
        "item": {
          "id": "61aa35c9-b5f9-4a5c-b5c1-011052dc23d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "656ba2d0-85c9-4f6b-99c6-8840b1350ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b908416f-8e67-4aef-aac9-7f00d5a03dea",
        "cursor": {
          "ref": "610fe088-6e56-40ec-8dba-fcc6c29d0a09",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7766cf90-4642-49d4-b127-a2508390d00d"
        },
        "item": {
          "id": "b908416f-8e67-4aef-aac9-7f00d5a03dea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4d5d3332-d742-45fe-a7df-7a0b5d2c926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85082f2-37e5-47f8-9616-ea99604387bb",
        "cursor": {
          "ref": "c91f8197-0938-46ab-aefb-a9f7789f37de",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "53b4ad76-f4f3-4796-a6c4-73b069c2e221"
        },
        "item": {
          "id": "e85082f2-37e5-47f8-9616-ea99604387bb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c67c723d-f514-41ac-bcb3-7ea77378db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e687b41-5f35-472c-b5f0-21b9b5d8948a",
        "cursor": {
          "ref": "84fcc1cb-c34f-4f4f-afb6-de2ad929c0fd",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7e0737e-6822-4028-aeef-b6bb1e0b1978"
        },
        "item": {
          "id": "6e687b41-5f35-472c-b5f0-21b9b5d8948a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9134d18-0059-4df0-873c-03b722fe56e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b998063-5ca0-4ef9-9806-14d25abc12f8",
        "cursor": {
          "ref": "1db78353-d9f9-4fb7-88ca-c8a2ee541ae1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bea075fe-7d36-4544-b8af-3e4d994977f1"
        },
        "item": {
          "id": "0b998063-5ca0-4ef9-9806-14d25abc12f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "014d1074-3d8d-4160-8f41-3082db46b755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d530a4a-44ab-432f-86dd-85c222533892",
        "cursor": {
          "ref": "fe426f58-1fa2-47eb-ba51-44bbe19ba079",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a714f36e-3bcf-4c3f-ade3-b71c538ab128"
        },
        "item": {
          "id": "1d530a4a-44ab-432f-86dd-85c222533892",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7cba0059-e21c-4282-bb8a-046ca40076b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d37d67-f40c-4348-8d59-5859490e8542",
        "cursor": {
          "ref": "e0919cac-8b81-4642-8c52-643b020c2131",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "079e19a5-8802-4c41-a52c-92c935798e0b"
        },
        "item": {
          "id": "a2d37d67-f40c-4348-8d59-5859490e8542",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a4c32d0-753e-4397-83d0-83b18461e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1b9bb-46fa-455a-8b89-086f95e412b9",
        "cursor": {
          "ref": "8b7a24f7-dfcb-4107-971c-23c7831886f9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84edcc96-0d8e-4e59-961d-53f91aec909b"
        },
        "item": {
          "id": "2ac1b9bb-46fa-455a-8b89-086f95e412b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b31fd811-3db7-419e-af77-38f87409ac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6b1169-896d-482a-a5d0-663e6aa12cb0",
        "cursor": {
          "ref": "db9286da-fad8-4fca-ba30-1fa36ad80024",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06ac4319-db00-4dce-a044-c57b91d7c8df"
        },
        "item": {
          "id": "fa6b1169-896d-482a-a5d0-663e6aa12cb0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e743766-3e60-4126-b260-87b006b4b26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d4f074-a841-47f6-9da0-72f2a20e90e0",
        "cursor": {
          "ref": "3931b4ef-305e-4437-baa5-f23daf5a017a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4fea2f82-09e3-465f-8207-5576fb5ec729"
        },
        "item": {
          "id": "d5d4f074-a841-47f6-9da0-72f2a20e90e0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16e6f5e5-32df-4c64-a83e-90edae5197b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8947c905-ca9b-4732-86b6-7da32bb6eda2",
        "cursor": {
          "ref": "6d0e6252-c234-4dec-b412-af48e625b99c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ac609956-0bcc-42dc-90cc-548f5e477d55"
        },
        "item": {
          "id": "8947c905-ca9b-4732-86b6-7da32bb6eda2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d315887a-7672-4481-9b3c-bc34965415e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d482f1d9-dddd-43bc-ac53-b57493f23cfa",
        "cursor": {
          "ref": "7925454e-bf69-49f6-994e-6448b797183a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "650ca8ab-4c9b-4543-b57d-9a29ed64cad4"
        },
        "item": {
          "id": "d482f1d9-dddd-43bc-ac53-b57493f23cfa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "67ac4556-44e9-49aa-aa14-4c871aecd39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75e532c-a529-4521-ac02-668009d1e260",
        "cursor": {
          "ref": "79a3c06b-0e8e-48af-8f47-6a04786d67de",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "60946443-d751-4a35-bbbf-a863eb4236f4"
        },
        "item": {
          "id": "d75e532c-a529-4521-ac02-668009d1e260",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04831a27-5634-4386-ad5f-79b546b531af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175256b0-9f9d-4691-a8d7-285415345e57",
        "cursor": {
          "ref": "9222e857-b5ce-4e76-ac03-afdaed9b8b95",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "68181b94-e05a-4600-a2ca-c15ae99d5f9b"
        },
        "item": {
          "id": "175256b0-9f9d-4691-a8d7-285415345e57",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b30648f5-279c-48f6-ba17-0cae0458113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a064f77a-4817-40cf-a9a5-64f4d05006ce",
        "cursor": {
          "ref": "33a42389-1051-404f-9d17-212111ee840f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0643f595-f1e2-4e1f-98f5-27b92512b41e"
        },
        "item": {
          "id": "a064f77a-4817-40cf-a9a5-64f4d05006ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e64c0fb-a393-4a71-8492-239eb273e4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d4975-707d-4709-a6d6-ff6026120354",
        "cursor": {
          "ref": "ce8e1fb0-edd6-4e8d-be86-ecb8b67ae1dc",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38ce6c87-7530-46ce-a551-2eba357a1f25"
        },
        "item": {
          "id": "2f9d4975-707d-4709-a6d6-ff6026120354",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "926c0a7b-4fec-4049-ab5b-a7425b1f5eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad2ba4b-87b8-4124-98ab-4f6de6a7f547",
        "cursor": {
          "ref": "cb4b7b9d-f45b-4244-aa05-a3014179fb51",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a0aa6387-ba3a-419f-b039-ba39709a415d"
        },
        "item": {
          "id": "3ad2ba4b-87b8-4124-98ab-4f6de6a7f547",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81067b0d-6cf6-4932-8c46-9581d465f4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6236d3cf-7f7f-44f7-9583-d7f97bad7d81",
        "cursor": {
          "ref": "4af7737c-b764-48be-b93c-66005a4ef077",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8bd7bcdd-abde-484d-ad87-e2494f3bfb25"
        },
        "item": {
          "id": "6236d3cf-7f7f-44f7-9583-d7f97bad7d81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf3c88b4-c567-4b53-8164-c8853d76f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa0cd7c-ff62-4f7a-b61c-1e43b0527c84",
        "cursor": {
          "ref": "aab8a481-5dc2-4dad-80d9-13999a41090a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c3135ed8-2103-4644-bef6-001cf99c67f8"
        },
        "item": {
          "id": "9aa0cd7c-ff62-4f7a-b61c-1e43b0527c84",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ab62af0d-d4b0-4378-b315-4d7c294d000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d55554-827c-4d6d-95c6-bd0be9450542",
        "cursor": {
          "ref": "4e789ef6-19c0-4b87-b538-b58da5224666",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "064ad1df-c44a-4b58-85b4-a3ce41c6bd0a"
        },
        "item": {
          "id": "a1d55554-827c-4d6d-95c6-bd0be9450542",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3f365cc0-458a-43c2-af9f-f98bc025cb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57544dc-a748-4066-8746-57230bcaa373",
        "cursor": {
          "ref": "e1f8ffc5-1322-40de-bdef-ac2f9b8f95e7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07efec19-51c4-4cb9-b858-19c1958e76f0"
        },
        "item": {
          "id": "d57544dc-a748-4066-8746-57230bcaa373",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6aed2ff0-823d-4145-bf67-3d6b18315f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc54401f-0e64-4787-bd59-6b9bcd9f294d",
        "cursor": {
          "ref": "f7b47fd7-1d44-4281-88e0-b969316469f3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10467244-bb0c-4e83-b542-864ccd0a9438"
        },
        "item": {
          "id": "fc54401f-0e64-4787-bd59-6b9bcd9f294d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a87e972-ce16-40c2-984d-a3f97381574b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5002d1-c9f4-4d5c-a6a0-ac843a2081e5",
        "cursor": {
          "ref": "4d15ae24-6cf4-4899-a8d9-5b1aabf4ade8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8adca503-f895-4ca6-9aa0-978f81f94e22"
        },
        "item": {
          "id": "0a5002d1-c9f4-4d5c-a6a0-ac843a2081e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "24e5460a-2031-4335-91b1-22748944d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654fa102-1949-4248-8786-e50edaeac8f3",
        "cursor": {
          "ref": "e28f206c-3f55-44e7-a023-0bbdbbce49c7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "869e5b51-45dd-4d63-a8ec-539bb2617ded"
        },
        "item": {
          "id": "654fa102-1949-4248-8786-e50edaeac8f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df5f1bee-3dfc-41cd-98c6-2dd5d5793a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa21ee8-472f-4123-a832-b71a5d5e2b3a",
        "cursor": {
          "ref": "ff2cb8db-b181-40ed-b52f-0b9b32b31468",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ddc3931c-9e0e-4267-8358-68debd936d77"
        },
        "item": {
          "id": "aaa21ee8-472f-4123-a832-b71a5d5e2b3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "316152fc-0560-4b7a-befb-4c3d5168aabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b87fcc-6d8e-4c64-b38c-5af1d9d187af",
        "cursor": {
          "ref": "d89b2cf5-841d-4225-b863-2604c41a72e3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e4883d30-0ecc-4f6b-bdb1-05a21dcc6f36"
        },
        "item": {
          "id": "33b87fcc-6d8e-4c64-b38c-5af1d9d187af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51ea9def-c227-46fb-ba35-11718a928a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0536022d-3ecc-4e3f-ac0c-92cf4d4025bc",
        "cursor": {
          "ref": "f04284be-b8d9-4806-b4c1-e622c569dc21",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "66c4f6a0-48d0-4681-ba17-dc37a87ebcf3"
        },
        "item": {
          "id": "0536022d-3ecc-4e3f-ac0c-92cf4d4025bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a5c6c4ae-378a-445c-a07e-bd20e0d29950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f705606-f84e-48a0-bcc0-f044996d0568",
        "cursor": {
          "ref": "cc5bc214-980e-49e1-8541-00d6597a7ecd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a210b000-2994-409c-b2bb-ef74781680ee"
        },
        "item": {
          "id": "7f705606-f84e-48a0-bcc0-f044996d0568",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f89bd895-5440-481e-9629-5d4f00aca6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2ff4f1-b21c-4b6a-8132-ea57134fd3d8",
        "cursor": {
          "ref": "2e27b6af-dabf-42ce-9ac2-902b688f8cca",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a184d0b5-6b0f-4b52-9f7b-ab19e06a4d7f"
        },
        "item": {
          "id": "5f2ff4f1-b21c-4b6a-8132-ea57134fd3d8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b0ba2ab4-4d96-4ceb-9aca-4041616a0f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db0809-9dba-4b05-9b0b-5bc27011375b",
        "cursor": {
          "ref": "8d8ad126-a089-4529-afcf-fb5682e40f8d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ce4d808f-e000-43e1-b835-cfcf2d766c4a"
        },
        "item": {
          "id": "76db0809-9dba-4b05-9b0b-5bc27011375b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c414b2af-fd04-42df-b1f7-ec6d4a2a5ba1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906e017-bcaf-4942-bfff-023f2acbcad4",
        "cursor": {
          "ref": "210fbf3b-c488-4f11-84db-7831084f7754",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f99b62a4-bf0e-492c-b446-96752c1528fb"
        },
        "item": {
          "id": "a906e017-bcaf-4942-bfff-023f2acbcad4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65eadc1b-8e76-4d31-b884-67bd5a5de016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51322eb9-3ba0-4395-806f-28162f085540",
        "cursor": {
          "ref": "90cf413e-bd77-4c57-b63f-e3ef356f7594",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a1a1817f-c3e2-43d0-98bc-0f81a630fd2d"
        },
        "item": {
          "id": "51322eb9-3ba0-4395-806f-28162f085540",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3817dee3-de82-4941-9281-bf4189582d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f036a0-2ef3-4448-87c4-cab40170e761",
        "cursor": {
          "ref": "a116f76d-ce4c-411e-8ab8-2a604fe86ea2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0d7243df-0ed6-4cc2-aae9-4c38d6de0bd7"
        },
        "item": {
          "id": "48f036a0-2ef3-4448-87c4-cab40170e761",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3758b3d4-a1a8-424f-94b5-8423d2300038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b174428-3888-4a2f-9afc-107458759027",
        "cursor": {
          "ref": "2b13bb12-b062-49d6-a2fd-75170f419893",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89af0b74-85dd-49b9-ab65-28f376470e8d"
        },
        "item": {
          "id": "4b174428-3888-4a2f-9afc-107458759027",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "232b4fb4-57ea-43f5-868e-b8f014a4dfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba1fd4-4845-4031-ae3d-f49a395cd08a",
        "cursor": {
          "ref": "5c110e37-3a87-4fea-ba14-68086bb29aea",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "590601ff-4aa9-474f-ba33-36aa0e673df2"
        },
        "item": {
          "id": "4aba1fd4-4845-4031-ae3d-f49a395cd08a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f466c5fc-4e29-4d9e-b95e-dc7a58aa83ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f8919-da17-49c9-8c4c-f49afeb30553",
        "cursor": {
          "ref": "f6858921-8b04-43e5-ab4e-adaa15e21864",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fb9e4ee2-bb3b-4aee-b453-afead9c4719c"
        },
        "item": {
          "id": "ee4f8919-da17-49c9-8c4c-f49afeb30553",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1909cc2-4e63-4ab0-84d7-9d727bdbe1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa0409-9e60-4056-9c92-3587b7b65b9e",
        "cursor": {
          "ref": "bb629883-a2ad-417a-b3e8-fca65f20cf9a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "51c56fe6-dc4a-4a2c-9af9-83ca141aca37"
        },
        "item": {
          "id": "cbaa0409-9e60-4056-9c92-3587b7b65b9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "847a0e6a-5fc7-4c64-9a53-008a85509f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f519c4-dcdd-404d-b019-b47393012062",
        "cursor": {
          "ref": "ca0ef7b3-b188-4725-95d5-64e54bb3ba23",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "969bd3f5-0bdd-4c0e-87c5-f0f4e29e1667"
        },
        "item": {
          "id": "e4f519c4-dcdd-404d-b019-b47393012062",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b9ec312-5fb3-41ea-8d96-c6658dd4250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b01216-cd27-4ab5-9508-de54fafb6175",
        "cursor": {
          "ref": "89212f4c-e062-44d2-9558-eb85cdd76316",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5fd698db-fbf4-4cea-9066-65b9f1eae740"
        },
        "item": {
          "id": "a0b01216-cd27-4ab5-9508-de54fafb6175",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39f98ce8-9c4f-4551-a6be-867e1d1f379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799f071e-2a74-4174-b2c9-0a4d17bd9b29",
        "cursor": {
          "ref": "0f75e41c-1960-482a-b871-aaba61dc1b59",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "18e85da6-3b87-4a35-a7a5-d050eaae4cb7"
        },
        "item": {
          "id": "799f071e-2a74-4174-b2c9-0a4d17bd9b29",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3eca13e0-e77e-44cd-8d10-f6c31cd1f36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3552d97a-42a3-44b7-a056-58f9c1263a60",
        "cursor": {
          "ref": "83da85e1-7237-47c1-819d-333181ad3ad4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b3c29b37-2eab-4116-91f6-da2de4ed8b2b"
        },
        "item": {
          "id": "3552d97a-42a3-44b7-a056-58f9c1263a60",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ab5d4bd-86aa-4ab1-86e7-87c97c01855d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f78a10-80bf-423f-a177-6a116823cba5",
        "cursor": {
          "ref": "6a35b8b2-c2c1-4818-8565-6f60304e01a3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b3322013-45ec-4d34-affc-f6d07b28fbb1"
        },
        "item": {
          "id": "f1f78a10-80bf-423f-a177-6a116823cba5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "541671a0-5dd3-4462-b58b-be503f651e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7ba169-d0a2-44c1-98f8-85a9a89c3e5a",
        "cursor": {
          "ref": "d91abfd2-b2b6-4785-9eba-af1bf527e04b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "625a2d05-6492-46bb-bb1d-878d7729ca04"
        },
        "item": {
          "id": "dc7ba169-d0a2-44c1-98f8-85a9a89c3e5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b88d5b5f-b049-4275-b90a-a8b57aff976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f71606e-d882-495d-a934-608a529cab44",
        "cursor": {
          "ref": "feddf43e-820e-4661-b09e-5a349e7f2919",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "74189c42-23d5-45b1-978c-c3e3153192f9"
        },
        "item": {
          "id": "5f71606e-d882-495d-a934-608a529cab44",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd819cce-0116-4cd1-8293-a607eb0b2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a24a8e-79ad-4440-ac41-63026fa9963c",
        "cursor": {
          "ref": "c717ce85-e0ee-4df8-beb8-3836759468e7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "edb980a9-4eaf-4728-867b-42e66424a02e"
        },
        "item": {
          "id": "f8a24a8e-79ad-4440-ac41-63026fa9963c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9693a88-d295-411d-8c8e-267a8bd5f5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30510102-eb55-44fc-b904-bfa098a72853",
        "cursor": {
          "ref": "e70d84b9-61f2-40ae-9b7f-eafb0d917335",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dbed1564-1e1c-4ab5-96fd-6114d3df7884"
        },
        "item": {
          "id": "30510102-eb55-44fc-b904-bfa098a72853",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c48e7b97-824c-400b-a615-9e2bb073260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf6d971-abf3-4224-b91e-43b9bcf0fc3d",
        "cursor": {
          "ref": "fd7506c9-1b04-4ab0-a7f7-110c78704924",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1271dab6-4cca-422c-b553-f7c65dd856dd"
        },
        "item": {
          "id": "eaf6d971-abf3-4224-b91e-43b9bcf0fc3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "57e634b5-d605-419d-9e30-a2ff7fc20715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f264ef-4abf-476e-80c9-8dd282274fe3",
        "cursor": {
          "ref": "3d242189-aef0-4aa1-9738-a09b99a11d21",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a0737b23-09ef-47c9-9b2d-a3766b9a8fb9"
        },
        "item": {
          "id": "23f264ef-4abf-476e-80c9-8dd282274fe3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d3a6dac-05ce-4cc0-9309-21d27fb928cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abc27dd-7634-49e0-8ce8-958214471aed",
        "cursor": {
          "ref": "e8da67e0-0460-4300-a4a4-3fbcfcd628ad",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "26c2947b-907b-44bb-980b-a935ae5e7cdb"
        },
        "item": {
          "id": "8abc27dd-7634-49e0-8ce8-958214471aed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f51da8b-7997-4226-89c6-96ad778c9ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6ced64-f8a9-4e54-8f9b-4c1d330cf9ba",
        "cursor": {
          "ref": "45d30c77-9689-4fb4-a8d2-07ce262289e2",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "740f375d-26d9-4aed-a968-de0e8e43ac3e"
        },
        "item": {
          "id": "8f6ced64-f8a9-4e54-8f9b-4c1d330cf9ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "965076a7-bdaf-425d-bfc2-d2de7560a902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74e271-0f69-4504-8b68-0d93a951696c",
        "cursor": {
          "ref": "386b9493-1e7a-44ae-9878-df116806ffca",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d9511bda-5a39-4b44-8f60-a7b8cc420de5"
        },
        "item": {
          "id": "ed74e271-0f69-4504-8b68-0d93a951696c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e6d7e883-251b-4822-b4e0-3083556f23e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c4ef00-fbab-4a19-9d9c-6f6b8f37b502",
        "cursor": {
          "ref": "5b4823ea-05d2-4bab-9d0e-26c5caea201c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bc578f93-2955-4d9b-98d6-3b34d539cc21"
        },
        "item": {
          "id": "87c4ef00-fbab-4a19-9d9c-6f6b8f37b502",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4993d918-cdcf-4830-9a2a-54b0dfd7f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9962682d-4b52-4bc3-b0a9-aa6a00a2d397",
        "cursor": {
          "ref": "992d6e8c-4b95-42d6-8c68-c2c40023c665",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ebc875ed-a3d7-4aa3-8d9c-87f87060fd73"
        },
        "item": {
          "id": "9962682d-4b52-4bc3-b0a9-aa6a00a2d397",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5bc0856a-16bb-4052-974d-a87a3e44c59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7df3093-2991-4ab8-a48c-09c97ee17ee3",
        "cursor": {
          "ref": "638bdf29-cd79-439a-a15f-11bc5ec26096",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "98209886-ec79-4d4b-a6bc-d783da5fb73f"
        },
        "item": {
          "id": "e7df3093-2991-4ab8-a48c-09c97ee17ee3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db3f6454-1429-4bfd-adc3-ca841d32dd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a3a02b-50fb-4f31-9802-62f468955237",
        "cursor": {
          "ref": "e0691b55-9bda-48a4-a352-0f4c4922924c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6593475b-2b9f-46e6-bd2a-2b2777ef4818"
        },
        "item": {
          "id": "c2a3a02b-50fb-4f31-9802-62f468955237",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8a5ced8-47ef-4314-8b53-2f0783fe9779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8969b733-8be4-4256-921a-16679ab4dbba",
        "cursor": {
          "ref": "1f6ee51d-888c-4179-bec5-997ae248242f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb28c39a-aec3-44df-9a5c-73e0cc287a59"
        },
        "item": {
          "id": "8969b733-8be4-4256-921a-16679ab4dbba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "55dd0891-8956-4e5d-8318-70ef887d8ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030de925-1ea2-486d-8f36-be4bfd6a2df4",
        "cursor": {
          "ref": "596db673-dcaf-444e-b78e-ebb3aa3613b6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "390f1cd1-1595-4a5d-9139-035a8f74350b"
        },
        "item": {
          "id": "030de925-1ea2-486d-8f36-be4bfd6a2df4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "62d544a7-9c6a-4bbd-a97b-bd2de88dfd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20f59db-3bd2-4c89-932f-7b3366bde352",
        "cursor": {
          "ref": "9ef9705a-fabf-4958-8e9a-502053c2636f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f1e9dc54-3447-43a4-8ec8-8b42c7a09e75"
        },
        "item": {
          "id": "a20f59db-3bd2-4c89-932f-7b3366bde352",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "89c98a1d-b7e3-4e95-b263-cf4a69ec0f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cf1b88-ccde-4b76-aa66-b0a9e9113aaf",
        "cursor": {
          "ref": "b79b4eb5-f28e-406e-bf4c-be15f6389a09",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "baca74da-701e-4340-8fe8-519ea408a4bc"
        },
        "item": {
          "id": "a8cf1b88-ccde-4b76-aa66-b0a9e9113aaf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "32a22875-299f-4cc3-b925-c487af86bdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9d8e40-d302-4ed5-aed3-8637c0f368bd",
        "cursor": {
          "ref": "554ca459-698c-460f-a108-fe7759f99d46",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e348760e-2d31-42e6-9c42-bc568ebca287"
        },
        "item": {
          "id": "0c9d8e40-d302-4ed5-aed3-8637c0f368bd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fb46d350-b1cc-4302-aea7-b1d65b5bac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd87f76-b920-4ea2-96e8-9bae0b60d988",
        "cursor": {
          "ref": "4b6d119d-5476-4e46-919c-4b3ea57cb2cf",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e3a0e840-ed47-4c3a-8101-40869db3f6f9"
        },
        "item": {
          "id": "fdd87f76-b920-4ea2-96e8-9bae0b60d988",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8079cfb9-1e47-4d25-a8bf-34ecfb15d815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca637915-238b-4056-b8ca-037afdcc861e",
        "cursor": {
          "ref": "314e7a57-79f3-4e67-bfba-172352c23453",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "332e2243-9e08-407c-839b-3354aca25a2e"
        },
        "item": {
          "id": "ca637915-238b-4056-b8ca-037afdcc861e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9ff087d-f041-416c-9907-41e4aa05cd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9121b616-79a2-4c9e-a373-4f88a4334d61",
        "cursor": {
          "ref": "8404f4d6-e8bb-4d25-8a22-bb95e27d582f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73472977-5a28-4d24-8e75-e48105cd51ee"
        },
        "item": {
          "id": "9121b616-79a2-4c9e-a373-4f88a4334d61",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "be61afc7-15ff-4192-af86-e8fe319760fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802624a3-7086-4b96-8c8a-e4aef05f203a",
        "cursor": {
          "ref": "fcff7a57-3c9b-47ce-a107-e6d530e72cc8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e4b880bb-9429-4706-8141-90ac84f45694"
        },
        "item": {
          "id": "802624a3-7086-4b96-8c8a-e4aef05f203a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a3d80a47-fec1-47d7-9f89-f04cf052afd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa588e8d-a12c-4b66-a12a-694f0ad87fb1",
        "cursor": {
          "ref": "a0fa6b83-e158-4c7b-9b09-d752b9e2910d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa6d617a-cb26-4dfc-85c8-1c8149c31853"
        },
        "item": {
          "id": "aa588e8d-a12c-4b66-a12a-694f0ad87fb1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f08e8bef-ecfa-40d1-b959-b4240636f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be7ed5-3d67-4d91-bb6f-d6acd0578024",
        "cursor": {
          "ref": "eea3cd53-63d4-4026-acb8-cbbbb569b750",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4b7fafe1-06f0-4619-93df-7da8e55f2142"
        },
        "item": {
          "id": "f2be7ed5-3d67-4d91-bb6f-d6acd0578024",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c2cd44e-7f06-48c1-a2e6-344ab36c79b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efd4495-f8b3-4b7b-b4b0-220fc3a541cc",
        "cursor": {
          "ref": "cd2fe875-791e-4593-a260-5cd9b103dfd9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51bc1738-af66-4cfb-96bb-e61aaedb1ab2"
        },
        "item": {
          "id": "3efd4495-f8b3-4b7b-b4b0-220fc3a541cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d57e661-b858-4152-bb3f-9fb9925c31bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaedb2a9-f27d-4127-b3b7-96057f5a14ac",
        "cursor": {
          "ref": "0273585f-238a-405e-81b7-7aa03335bfdb",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa131608-0070-4456-97d6-727f5175fbe1"
        },
        "item": {
          "id": "eaedb2a9-f27d-4127-b3b7-96057f5a14ac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "522eb762-1d4a-438e-b360-bb44f881e91a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eaebcb-a54a-4f10-ba8d-ea26d445b378",
        "cursor": {
          "ref": "ae31055b-6a63-4782-b9cc-cfc9c06ff9b2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "262d8ef9-6745-4d1f-ad4e-08cb6d13dd7e"
        },
        "item": {
          "id": "54eaebcb-a54a-4f10-ba8d-ea26d445b378",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0e2d89d9-4fa1-48de-85a6-df5f841f8a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745bf587-2382-4ab4-8904-61b99c540673",
        "cursor": {
          "ref": "d8d8273f-f82e-479c-bd02-545477cccb1c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "151ed9e6-3dba-4d82-864b-252dbc1c57a0"
        },
        "item": {
          "id": "745bf587-2382-4ab4-8904-61b99c540673",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be5ecb9e-addd-44d8-87fa-d83bf79008e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00269b6e-adf9-46bf-8698-a9751fe05441",
        "cursor": {
          "ref": "0573af9f-73b3-4f78-917d-d2f4a6f820e5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "63e237ac-f755-4034-9f3b-47eaaa96f356"
        },
        "item": {
          "id": "00269b6e-adf9-46bf-8698-a9751fe05441",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ddd95371-e4e9-49f0-adfb-cb4a583d6a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84800c7e-22ca-47e1-87dd-ce4f0a8f9d7b",
        "cursor": {
          "ref": "b5ebe9c1-406a-49e7-90ee-0f5bd153e1aa",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "37a41b1d-4527-42af-bcd4-029a9c352fd8"
        },
        "item": {
          "id": "84800c7e-22ca-47e1-87dd-ce4f0a8f9d7b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d8edae86-fef4-4648-b01a-a518cf73b674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12439f51-de0d-4107-a7fe-791b4ad36244",
        "cursor": {
          "ref": "e7f4f62e-2270-4c42-9128-29ef393537d7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bc99baa7-0318-4521-8bf8-060aa51a4f23"
        },
        "item": {
          "id": "12439f51-de0d-4107-a7fe-791b4ad36244",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b82d0fcd-799a-40aa-863e-50a424403ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae846570-acc1-4328-b0f7-19a1c56ce684",
        "cursor": {
          "ref": "433b841f-5e6e-43ff-adef-6aac4ce6db87",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a3a48d6-88b4-4e48-82b4-5319701c5dcf"
        },
        "item": {
          "id": "ae846570-acc1-4328-b0f7-19a1c56ce684",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8e495e61-5ce8-48df-8551-bea82ca8815a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b062d68-4cae-4cd5-8d8a-7c7b1a8b130a",
        "cursor": {
          "ref": "3720486d-a072-4a05-8da9-4908e673bc5f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c475cea8-8549-4adb-b8a8-e3c7c566fd4c"
        },
        "item": {
          "id": "3b062d68-4cae-4cd5-8d8a-7c7b1a8b130a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "703adedf-d3b4-4b9f-b41a-4a7946a06af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be87a33-bfbd-412d-8138-72d81b2ee731",
        "cursor": {
          "ref": "a6806f52-6609-4eba-b00a-01b33a8c82cf",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fb9f96a3-c575-41eb-bd64-bef494a0e46b"
        },
        "item": {
          "id": "8be87a33-bfbd-412d-8138-72d81b2ee731",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "548cd54d-3845-4c82-9d23-0092e9a3e32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be85fe17-fa7b-44b9-b06b-341a1e65bb37",
        "cursor": {
          "ref": "bcb1f826-22d9-41ea-a99e-8490e193420c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7dfc5112-1cfb-411d-9326-3aae13204cda"
        },
        "item": {
          "id": "be85fe17-fa7b-44b9-b06b-341a1e65bb37",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "202ee826-6864-44b2-934f-b5973c52284f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22bd850-36e3-48ec-9b83-d324ec3820f9",
        "cursor": {
          "ref": "ed3571d0-c8a4-4508-ae3d-c92f09b8a580",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "afec0593-03f6-40f4-9ceb-f7170eb4d272"
        },
        "item": {
          "id": "e22bd850-36e3-48ec-9b83-d324ec3820f9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b833d909-53cb-4c03-9f06-f371abba44ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13621692-d3a0-4af9-8903-52029a215fb6",
        "cursor": {
          "ref": "aa9db6a4-f1ed-420e-a128-b8f9d7699896",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8a6fd31b-5aad-4ef3-be20-0828adf789bb"
        },
        "item": {
          "id": "13621692-d3a0-4af9-8903-52029a215fb6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c95cb27a-4942-4f8b-a38e-d0f0e2b79fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b102c1-ab89-49ee-8984-cad183591bd1",
        "cursor": {
          "ref": "e20e0bd4-3a37-4366-a58e-2e34aa113c7c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9ba0769-3e1e-4bb4-926f-f491d3525608"
        },
        "item": {
          "id": "b2b102c1-ab89-49ee-8984-cad183591bd1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "78603867-c015-4bab-a4b8-e8f9c99311a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f38380c-53f4-4caa-a2e5-d3af5b8696b2",
        "cursor": {
          "ref": "012357a7-829d-4559-b71c-e00e481044b1",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "259a0f0a-bbc2-4232-9368-64b356d779d6"
        },
        "item": {
          "id": "0f38380c-53f4-4caa-a2e5-d3af5b8696b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bc6f34fe-200a-46d3-ae6e-31df001138c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90d7c7f-5872-4d5a-925e-3e59ce7ec84e",
        "cursor": {
          "ref": "68c59f31-b211-4ff4-b951-d011337e742f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5767c245-3d62-4928-afee-df1465d90785"
        },
        "item": {
          "id": "a90d7c7f-5872-4d5a-925e-3e59ce7ec84e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "58f334c0-1a43-4720-879f-d617a895aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fc72ed-f417-4f1e-9104-38df284b7b87",
        "cursor": {
          "ref": "e3a368de-bc91-4936-8c8f-16ce6083c76c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b46491af-f288-41d8-84b9-c0611cdfa8ee"
        },
        "item": {
          "id": "d8fc72ed-f417-4f1e-9104-38df284b7b87",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7150a123-4180-40af-9476-e5461abb2372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce770e9-431e-4200-824c-e89581af6f4d",
        "cursor": {
          "ref": "1c071b33-eb65-4e86-b1e5-cc8783f11b06",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d0c8b19a-fbb6-41ad-88f5-390bd57c1121"
        },
        "item": {
          "id": "dce770e9-431e-4200-824c-e89581af6f4d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f836b59e-8416-4ad7-ae19-0f29771f63e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd857bc-8626-4022-9a32-2ee6793dc103",
        "cursor": {
          "ref": "a96c2ac0-1637-4ad2-8a91-dcbc613920ca",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b6dcd70-ff96-45a1-97e0-d663a0f7bbee"
        },
        "item": {
          "id": "0dd857bc-8626-4022-9a32-2ee6793dc103",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "58fe3821-d7da-425c-883f-90c263438b80",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "46e68c23-c357-446f-93a9-a390160562e9",
        "cursor": {
          "ref": "039fe4f4-6504-4776-bb84-fcdbbae994aa",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d94b5a3c-2274-4871-bd89-9ec6a104e8d4"
        },
        "item": {
          "id": "46e68c23-c357-446f-93a9-a390160562e9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee25647c-f1eb-4150-a412-3f49716c485c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a81ef33-fc40-458a-ba79-5cb57f210c2e",
        "cursor": {
          "ref": "779fdd75-9239-4e20-9712-9361bb6c3eff",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87e45831-5f9c-4861-aab4-97d135becf5f"
        },
        "item": {
          "id": "3a81ef33-fc40-458a-ba79-5cb57f210c2e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a34d7b0b-9ff8-40af-b943-911c577bcbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e90746-7180-47b2-aa01-8639a22febe1",
        "cursor": {
          "ref": "32c62387-5a7f-45fa-8815-0b0f8b006a50",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "70c91d22-d609-4693-b3f6-b0e068bd8ffe"
        },
        "item": {
          "id": "f0e90746-7180-47b2-aa01-8639a22febe1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "53428672-1bc6-4dd2-9ca9-7f782550f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bde6ae-42e2-4e31-b506-0487003f05f8",
        "cursor": {
          "ref": "375bbd3f-47ee-448c-bec5-c0f92cef8386",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f66a7ab4-4339-4427-b1ff-aefb32a93021"
        },
        "item": {
          "id": "54bde6ae-42e2-4e31-b506-0487003f05f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b50d9361-ad47-4461-b20e-acbaa84c0fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d3ac8b-4e8c-4ae7-a9bd-4cd7e9cbeb81",
        "cursor": {
          "ref": "285dbf01-bdf4-417a-90d0-7064a629eb8f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "910f9911-df7c-4579-b0aa-1ce92e9b45e6"
        },
        "item": {
          "id": "d9d3ac8b-4e8c-4ae7-a9bd-4cd7e9cbeb81",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91ed585f-85db-4626-8ab7-dc1f7da10d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28463a4-5384-4dc1-8693-f95045b13653",
        "cursor": {
          "ref": "ba87e682-d4a4-46e2-8cfe-7cba918c6b90",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fda75fa9-9426-4b40-9f56-80d8bb3f6714"
        },
        "item": {
          "id": "d28463a4-5384-4dc1-8693-f95045b13653",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "71c21f74-f58d-4f11-a1df-78565714ba44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee64a103-011a-46df-b224-4d1f2e2fa250",
        "cursor": {
          "ref": "226ddd2a-98df-4d8a-8321-cd81b74e6dae",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac556028-34db-46c1-93f2-a2c0b441d3fc"
        },
        "item": {
          "id": "ee64a103-011a-46df-b224-4d1f2e2fa250",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5bfceebb-5edb-4ba0-938d-4db70a08870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef32afc-5de3-4d8d-8f2e-a332d947bb55",
        "cursor": {
          "ref": "f60c1e59-0679-480c-849c-daefd5a6fbb6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "36e2d728-67f6-47ee-9c7f-c9bb3c19df10"
        },
        "item": {
          "id": "3ef32afc-5de3-4d8d-8f2e-a332d947bb55",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9a6b8008-1fb5-42d6-adfb-4240ed4289fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eebd849-0d11-413c-aab5-c29117ffe2d3",
        "cursor": {
          "ref": "6ec9d04f-a541-4050-95cf-2edcfc939636",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd7c08ef-8ea4-4819-8b1e-e7c2b8854f91"
        },
        "item": {
          "id": "0eebd849-0d11-413c-aab5-c29117ffe2d3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8526be43-3b25-48f9-801c-15a26d45c1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee41b0b-f3ae-4e2f-9914-6579494f0a3f",
        "cursor": {
          "ref": "2895c631-7e20-41d9-88d3-d2b5dc577c95",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "42a5b71d-af24-40ab-bae5-70e7effc5706"
        },
        "item": {
          "id": "eee41b0b-f3ae-4e2f-9914-6579494f0a3f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3049f1ff-2737-489a-bae1-ae5ef56713cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aee536-1b58-46cd-8d42-a0bac9fc9722",
        "cursor": {
          "ref": "5ddfecec-ff78-4c51-b20a-7730dc31ae04",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "be71c110-125b-48fe-bb7d-6972ff59906f"
        },
        "item": {
          "id": "b1aee536-1b58-46cd-8d42-a0bac9fc9722",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "db4e660f-12ad-457f-8c0e-9aa5ad24c69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0277e22b-a766-4bca-9ac0-83c93ef1029d",
        "cursor": {
          "ref": "80b4141b-acbc-4ad7-b3dc-2e5702fe8702",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cce471b1-cfd5-4bbd-a926-b843ac97cc15"
        },
        "item": {
          "id": "0277e22b-a766-4bca-9ac0-83c93ef1029d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "699a1413-e24b-467a-8810-f4f05780c80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e670210-adba-462d-ba04-52f0a15aa7f2",
        "cursor": {
          "ref": "f91399c9-b458-4c50-bf51-a112e6d7cae1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e244b88a-1a26-46dc-92be-ed66a070619b"
        },
        "item": {
          "id": "2e670210-adba-462d-ba04-52f0a15aa7f2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bbc05c8f-eab7-4a53-944a-1c1d2f982b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29efbf5d-fe07-4ab2-a605-7f2324027a02",
        "cursor": {
          "ref": "3198d213-5c8c-4377-9b46-d98efe8f1db9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "246c4c6c-b200-4685-8bb9-338048c28415"
        },
        "item": {
          "id": "29efbf5d-fe07-4ab2-a605-7f2324027a02",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a8ed5a00-e188-4547-a53f-ff8f20b215a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6934e8cc-1fef-42dd-a3c8-3a8f192b75c4",
        "cursor": {
          "ref": "da4c99ab-a8b1-4ece-9fad-a1af66aa44e6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f64da145-5845-4a61-943a-92d879c66f6e"
        },
        "item": {
          "id": "6934e8cc-1fef-42dd-a3c8-3a8f192b75c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "290d3ccb-b776-45d1-ac46-2ad1deceee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7484e7f6-dd8f-4db7-b240-7c8d0f498fa6",
        "cursor": {
          "ref": "f6540774-dd95-46ca-a807-cd66fe1d8f66",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "40788330-037c-47fa-8a45-63fd6ea96d00"
        },
        "item": {
          "id": "7484e7f6-dd8f-4db7-b240-7c8d0f498fa6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "249a871b-a541-46a7-8858-2ed41adf638f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a5fb23-9d58-4d1a-b2fa-761ac08add91",
        "cursor": {
          "ref": "be2d6e3a-4ef2-46a3-bc5f-115246218bd5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b84d0a18-3416-44c7-9c1a-5bf175d6d7cb"
        },
        "item": {
          "id": "58a5fb23-9d58-4d1a-b2fa-761ac08add91",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a1f072c7-9374-49ff-a359-897767e86574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67530f04-8447-4adb-a91e-da2386097b87",
        "cursor": {
          "ref": "a3fdea80-face-4ad5-b1b7-46338cde380f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fb131e3b-cc2c-42c7-9741-94e00242edfd"
        },
        "item": {
          "id": "67530f04-8447-4adb-a91e-da2386097b87",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3365b9fe-5cf0-44ac-bc32-d4b07b360b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb13c835-2b7c-45ee-b633-6be93131de1c",
        "cursor": {
          "ref": "57512063-26b6-4264-859b-eb7d95f7f2d7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38fe5c20-d641-4d1c-a27e-5ef0b1f75085"
        },
        "item": {
          "id": "bb13c835-2b7c-45ee-b633-6be93131de1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dd3690a0-1fca-4f48-8ff2-b2ca46fef32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62958c1-c9ef-4f91-a04c-ac2046f5409d",
        "cursor": {
          "ref": "e6a6c14c-9b28-418e-ab36-6ff2aa53a90f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6acc3d75-24f4-4562-a837-09042789c119"
        },
        "item": {
          "id": "b62958c1-c9ef-4f91-a04c-ac2046f5409d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "65bc67d0-b131-40bd-a39c-1dd3f185abbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2788054-5d44-402e-87b2-d261439811f0",
        "cursor": {
          "ref": "50c409fc-19cd-464e-b070-2af22a4f9e9c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c52ef7d3-a194-47fd-97cd-8b2a5d0dab3c"
        },
        "item": {
          "id": "b2788054-5d44-402e-87b2-d261439811f0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51070134-9993-43b6-9a38-7187f239f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e105d5d-ea3d-4f02-b530-db684e12cf20",
        "cursor": {
          "ref": "ed0d40e9-d95d-4014-94f2-0709930cd314",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe38ab2f-be31-4ad3-a216-ed10e1ceb7aa"
        },
        "item": {
          "id": "5e105d5d-ea3d-4f02-b530-db684e12cf20",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "45acb148-1a31-4ac4-8fc4-5d76f6b9ddff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13a2021-c58d-41c4-a31c-0a6a106db361",
        "cursor": {
          "ref": "69384173-8a4d-47a8-a7ba-a838fb5bc066",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c830cb48-a40a-4ec4-8459-bb340e5fefff"
        },
        "item": {
          "id": "e13a2021-c58d-41c4-a31c-0a6a106db361",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3823d1fa-10f3-4591-b320-7c50bbd1b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b042fb54-9de1-4eff-9adf-cad00d27c57d",
        "cursor": {
          "ref": "688d52aa-b789-4e07-b85e-fa00eb2780bf",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0e626fb9-9d71-4ef5-9f09-3144b8e311cd"
        },
        "item": {
          "id": "b042fb54-9de1-4eff-9adf-cad00d27c57d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cfb24cc5-2e6c-4835-b314-bd77bb6c58c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88094764-4ca9-44b3-b6d8-9bebf3cefce1",
        "cursor": {
          "ref": "f97ecb1b-d6a9-45d8-8e2e-2dab7bd50be5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "41dae111-c486-4949-a01c-b520d4c6769c"
        },
        "item": {
          "id": "88094764-4ca9-44b3-b6d8-9bebf3cefce1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2cb2a925-9548-41ab-bca8-fc8597956a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25137b49-eb61-46bf-9acf-1606b86132bb",
        "cursor": {
          "ref": "2e1a3920-191f-4ad5-9945-6b3f5939e75f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e9c0fbd-ec66-4952-81c6-5d0ce109f102"
        },
        "item": {
          "id": "25137b49-eb61-46bf-9acf-1606b86132bb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bcc39bd2-712f-4cf2-b887-b0f9e594ff86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e980c7ea-dcf8-446a-87aa-c795ebe50ad8",
        "cursor": {
          "ref": "c1c8fc50-f43c-4509-a274-a44325b48df5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "55bcf8a0-f52a-4b4b-96ed-b65889c44860"
        },
        "item": {
          "id": "e980c7ea-dcf8-446a-87aa-c795ebe50ad8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f239617a-9efe-4319-a661-bee830046b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a19e78d-6212-4ada-8528-44d51fe5740b",
        "cursor": {
          "ref": "c61ed243-c012-4586-acac-c62ebbb0e920",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d271658f-5f9f-45ba-9438-450c04ab5db4"
        },
        "item": {
          "id": "8a19e78d-6212-4ada-8528-44d51fe5740b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ceed6fb3-31b4-49b0-ad99-b314323c48c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee55b70-cb8c-4ccc-a4c0-57709cf47449",
        "cursor": {
          "ref": "358fd9fe-20d7-4ea1-bc4a-02fc7178bac9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e3178a8d-db4d-4849-a577-c19e361d0ee5"
        },
        "item": {
          "id": "5ee55b70-cb8c-4ccc-a4c0-57709cf47449",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4f3832fd-2584-4495-9a41-ed66ffd6a699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375816be-caf4-4128-a804-feaa909e0256",
        "cursor": {
          "ref": "3e6002ca-13b1-4f23-837d-17d4c46a0e8c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7ee6b17c-5575-4979-ba0f-a381a85cad6c"
        },
        "item": {
          "id": "375816be-caf4-4128-a804-feaa909e0256",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "15f15d0e-faf2-4c72-86bb-68a98b80efbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3b2a0c-6eb6-4ad0-aa9e-c6f253ffbc66",
        "cursor": {
          "ref": "27633233-1a28-4b21-b5ab-8c34e40a9c34",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7e242d96-d040-4a4e-b7c8-b23c5b2d0d33"
        },
        "item": {
          "id": "1f3b2a0c-6eb6-4ad0-aa9e-c6f253ffbc66",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "11dea78f-d803-4d23-a5b6-acdf531d6aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73203a6a-6013-42a8-a3b4-251461da1a8f",
        "cursor": {
          "ref": "052689cc-8b2b-436a-ad69-52dc133c947f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e943857-e737-4539-855b-6f1189c5866c"
        },
        "item": {
          "id": "73203a6a-6013-42a8-a3b4-251461da1a8f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ecc78ab0-1a07-4261-ad03-fdf0df9af86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c7dbf9-3660-4638-a7e3-153c6e339976",
        "cursor": {
          "ref": "6491b346-1272-4224-b836-dbafd1d6c095",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "354add21-4fee-4a3a-a1f5-dfa511ed6fcf"
        },
        "item": {
          "id": "a6c7dbf9-3660-4638-a7e3-153c6e339976",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e7d22c76-32fb-45cc-9866-71052c7e4912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db57b06-14bf-46c4-812c-eebf015b73e6",
        "cursor": {
          "ref": "40dd49b5-f157-458d-a48d-98e5e267fe06",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ddcf3059-1c17-4d7d-8723-7a8afd8d564f"
        },
        "item": {
          "id": "6db57b06-14bf-46c4-812c-eebf015b73e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5556a1b1-8a64-40eb-b38e-379fff8d4888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065339e3-8d0d-475c-8a30-da15bb31d12a",
        "cursor": {
          "ref": "77e22890-3d5c-42af-82e4-104465cb01e6",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "85448d0f-e949-45f1-869a-f713d993ecd8"
        },
        "item": {
          "id": "065339e3-8d0d-475c-8a30-da15bb31d12a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "01e6a92f-6191-47a7-a4da-e106703e944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbee5d5-b92b-4c95-9bd0-298de126f44c",
        "cursor": {
          "ref": "c1cdd313-7b5f-446b-8fad-b6dff18ab1c0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a7887e21-42ca-4d0d-8ee7-d66162be3ba9"
        },
        "item": {
          "id": "dbbee5d5-b92b-4c95-9bd0-298de126f44c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a0ae401-2d56-422a-a350-a1e7a327d0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e37d7-3133-4ec1-98a8-22e7e5837144",
        "cursor": {
          "ref": "d77f02e6-1f65-459c-ab9e-07d84b3b5586",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b4c70b81-8f14-417c-a238-e2821007b751"
        },
        "item": {
          "id": "2b4e37d7-3133-4ec1-98a8-22e7e5837144",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8152e457-6acb-4da8-823a-2661992236dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93f7794-a310-4b98-be30-d8a1d085476a",
        "cursor": {
          "ref": "ab08d398-7955-4692-b119-0f9666975c0d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1b060250-1992-4562-9066-0291057ef4c7"
        },
        "item": {
          "id": "e93f7794-a310-4b98-be30-d8a1d085476a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b1bbaa51-34f1-4218-833c-121a90927aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a7836c-344f-4b46-8e8a-d53c5578343b",
        "cursor": {
          "ref": "b9d6f73d-a07c-461e-b1cf-dac1d7f43270",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dbccfd1d-ec1d-4217-868a-048cb6f3bd24"
        },
        "item": {
          "id": "e2a7836c-344f-4b46-8e8a-d53c5578343b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fd50adb5-57de-4f37-926d-065995271062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90131e94-dab0-420b-81b0-c24a405e266b",
        "cursor": {
          "ref": "4a2b8afb-2547-4a39-8ad0-5f36caa62fca",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "43624993-d6f7-4801-863c-be74043ce65c"
        },
        "item": {
          "id": "90131e94-dab0-420b-81b0-c24a405e266b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b23cbf16-1837-478f-9bda-ee89160e4692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b4e4a9-0ec8-4454-85a0-23d84d0502fd",
        "cursor": {
          "ref": "41ff01ff-6e93-4f06-ab1b-171fce56c9c2",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "58ff7c9b-c3d4-4321-95a8-2052c62a3de0"
        },
        "item": {
          "id": "24b4e4a9-0ec8-4454-85a0-23d84d0502fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "602ff74e-c976-4ade-8cf4-a9d2774149cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be19d231-9543-43a7-963f-f40489959006",
        "cursor": {
          "ref": "9fe6bc18-275a-4ce0-b704-888e97879f73",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9c46fa1a-51bb-4971-8d0c-9957a986d4d5"
        },
        "item": {
          "id": "be19d231-9543-43a7-963f-f40489959006",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9e4bfcf2-8aee-420c-a9c5-449eda31869f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d486c3-9b53-4728-91a0-2c183a87939d",
        "cursor": {
          "ref": "6fb8bca0-91e1-4edd-8da9-f231cf1ef656",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c4ed01d1-5d15-41c4-92b6-d0e4d7dc37ca"
        },
        "item": {
          "id": "b9d486c3-9b53-4728-91a0-2c183a87939d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d919061a-8f1f-499e-94d2-0c5ac3bc8f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40a333e-f628-4559-9b3e-68e284ea8f45",
        "cursor": {
          "ref": "c7f50f04-0f7f-4628-8452-9a0bc0e36625",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12240797-bfc7-4ef2-af99-3f7277b355e2"
        },
        "item": {
          "id": "f40a333e-f628-4559-9b3e-68e284ea8f45",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b994d962-f9f0-46fd-b25e-1e4c1526abea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8eb087-b73b-46c8-88ba-9e3a04035b12",
        "cursor": {
          "ref": "606d73bc-d1c8-4acb-a6b2-28d3effaef18",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1faa3c59-4c0f-4e06-9797-6bb55a6bfa45"
        },
        "item": {
          "id": "6a8eb087-b73b-46c8-88ba-9e3a04035b12",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e95e8c5c-2da4-43f1-a67e-42c0b0f33e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a419bb-b7bc-4e08-9056-d22c48887f3e",
        "cursor": {
          "ref": "6a7d2e3e-ed96-441a-9d40-1b0183d48db7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eb5db339-2461-42a0-9e2c-607b108afc4f"
        },
        "item": {
          "id": "81a419bb-b7bc-4e08-9056-d22c48887f3e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5d2f566-cb69-4b8e-9459-1e7446350537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8327412-9bdc-42d4-96b9-9768db210ee8",
        "cursor": {
          "ref": "1a441f80-5363-4466-b01b-e61da6c14bd9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "03eb0433-1b56-4285-a501-f893148fe19d"
        },
        "item": {
          "id": "d8327412-9bdc-42d4-96b9-9768db210ee8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1aff9af-bfda-493d-ae67-6b79d902508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675870dc-2081-43bb-9c51-fe0ee58ba239",
        "cursor": {
          "ref": "859020e4-e507-4553-a697-35a51e750676",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cfa318d6-e734-400d-9835-c4a44ada462c"
        },
        "item": {
          "id": "675870dc-2081-43bb-9c51-fe0ee58ba239",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1d5be5d1-622d-49b7-b977-923550293cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0947f0a4-ebc4-452e-82f8-471b143d4848",
        "cursor": {
          "ref": "5b6033b0-17db-421b-b600-19d2b67e7f87",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "10ff9316-e2fa-4466-94a8-fd7a9faae52d"
        },
        "item": {
          "id": "0947f0a4-ebc4-452e-82f8-471b143d4848",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7c13ff9e-23f6-4ed4-b147-aade58603c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3905013b-bb69-4448-a85a-a2a3a136c424",
        "cursor": {
          "ref": "2df928da-1ee7-4ee1-a7a4-1ea6b0aeb6b1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a4c9c161-4374-49a9-bc15-f8c72e29cda6"
        },
        "item": {
          "id": "3905013b-bb69-4448-a85a-a2a3a136c424",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f56933c6-b268-4ffa-a97e-adc7b6971d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ae5784-5f30-46ef-9c04-76a95414588b",
        "cursor": {
          "ref": "8f4b9e7e-f1e8-4c93-8877-08d731899b55",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "36235e6d-4a10-4106-8a4f-0f1d6a6cf55b"
        },
        "item": {
          "id": "e1ae5784-5f30-46ef-9c04-76a95414588b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7f64bd6d-ae93-4164-adfd-b43a837413a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295fef6a-4ae9-48d2-bad2-839cd9d09c7e",
        "cursor": {
          "ref": "dfe0b256-bbb7-4de6-970e-4152823f6cc7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "29466d6e-b1cb-4def-9c42-e236b06a83d1"
        },
        "item": {
          "id": "295fef6a-4ae9-48d2-bad2-839cd9d09c7e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e51c7228-5eda-44f4-9f54-e8fdecfb9ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07db11c1-9697-49e6-bac5-a1ec06a7de2a",
        "cursor": {
          "ref": "c3fffcf8-a2ac-4f1b-a975-e403df24bac8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7bd7cc6d-a469-4db6-b22a-b2706136098d"
        },
        "item": {
          "id": "07db11c1-9697-49e6-bac5-a1ec06a7de2a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "61adcbed-07ac-4dbb-b42a-16e05a273b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a1c804-e514-41f0-9021-4821ce7873c7",
        "cursor": {
          "ref": "f6722f37-a217-4ab1-8459-f419205618b8",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3e2c882e-7da0-4333-9c67-826a1ae0c554"
        },
        "item": {
          "id": "c1a1c804-e514-41f0-9021-4821ce7873c7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ded77677-75b0-44e0-9f1a-fd0d723bddbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2307aafb-15d6-4cc4-9243-bf9ab390a7d7",
        "cursor": {
          "ref": "8faed2c4-2ded-4474-b854-eb28634527fe",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "700c0a98-fd43-495c-8c8c-acb32b9aaea9"
        },
        "item": {
          "id": "2307aafb-15d6-4cc4-9243-bf9ab390a7d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8846748f-db9a-405c-bd96-252a115e737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337caf27-05a9-4538-8070-0986ceb42280",
        "cursor": {
          "ref": "3ae5f2b1-c642-4981-9166-7fbc2fc6d384",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7aa1b272-898f-4292-b013-19e1e01b9d59"
        },
        "item": {
          "id": "337caf27-05a9-4538-8070-0986ceb42280",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "442f4932-5254-41dc-8c90-017aac8b75ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b5c3d7-2d89-4eb5-903d-18ccb04b230a",
        "cursor": {
          "ref": "5df152b3-4766-4337-8c5d-837a73461f54",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0ba5d550-2e01-4034-b3cc-c6ce0add6e29"
        },
        "item": {
          "id": "29b5c3d7-2d89-4eb5-903d-18ccb04b230a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "10223f12-cdcd-4aaa-ab58-1999212cad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea6518c-75d6-4d47-83db-1c63fb82a27d",
        "cursor": {
          "ref": "5faa18ab-2ba5-4789-9a46-ce3ff065ac31",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "caad0bb7-521e-461e-9792-32d90a618365"
        },
        "item": {
          "id": "5ea6518c-75d6-4d47-83db-1c63fb82a27d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ffae4697-2c9f-43fc-ac6c-b0a68932c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51f391f-72ea-423d-ae49-d054c35a9a37",
        "cursor": {
          "ref": "afa09f11-1ffd-430a-baba-98bf55ba6e6a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cf7b613e-fc86-45c1-9742-cbea71893094"
        },
        "item": {
          "id": "e51f391f-72ea-423d-ae49-d054c35a9a37",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e2196216-23c0-4a7e-91a1-ad65c91bed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf2eeaa-ccfa-4581-972d-bf141798e8ba",
        "cursor": {
          "ref": "a1dbd90d-09a2-458a-8d8d-3c5f0ab98859",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "760f9b0c-086f-4056-a2bf-562475a9c0eb"
        },
        "item": {
          "id": "8cf2eeaa-ccfa-4581-972d-bf141798e8ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "89d2876b-762b-4c1a-ba94-23a3f339091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f04a90-9451-464e-a9a8-cf4317aab7ba",
        "cursor": {
          "ref": "a984d618-8081-4610-8767-dfb946de1d34",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e94c4cb2-311c-40a7-a7d5-68d7dfec88aa"
        },
        "item": {
          "id": "18f04a90-9451-464e-a9a8-cf4317aab7ba",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc993f03-402b-482c-b6c6-1b94c8b0deef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be545220-32ed-4a7b-9103-9cd7df2c5f75",
        "cursor": {
          "ref": "05cd47bb-bb8e-4d64-8f7f-d0a384761f1f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "151c6302-5ef8-4693-9f2b-8ab1df941777"
        },
        "item": {
          "id": "be545220-32ed-4a7b-9103-9cd7df2c5f75",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ecd7b18d-7922-4201-9482-a568625f8267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee84e5f3-5a59-4f75-8a44-fbc361a5edba",
        "cursor": {
          "ref": "cf61ba4d-1412-4276-9329-8107e226a80a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d29f2110-ff39-470e-b8af-3ee52b67ea70"
        },
        "item": {
          "id": "ee84e5f3-5a59-4f75-8a44-fbc361a5edba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2ac2cf5b-ec9e-4afa-b0ec-c7da522511e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91985389-3b3b-44f2-9f2d-7cdf49820814",
        "cursor": {
          "ref": "ae62d5d1-4adb-4597-8261-f869b92d0a98",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a2f0e45d-a13e-4878-8c36-f4af9970387a"
        },
        "item": {
          "id": "91985389-3b3b-44f2-9f2d-7cdf49820814",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1bf6bbb3-1073-442f-ad90-77ae1c120734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d684a9-d698-4f04-b62b-b422395679e3",
        "cursor": {
          "ref": "9f72e144-d6e0-462d-998f-c36ced16fb65",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "58fe28fa-1b51-41a0-8eaa-36b7137ae37e"
        },
        "item": {
          "id": "f1d684a9-d698-4f04-b62b-b422395679e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4d36abe5-d6b5-4348-a45c-4f388a7a7c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98561a9-20c3-40c4-8952-fceed85a2b94",
        "cursor": {
          "ref": "bdae843e-1466-43f9-ac82-771b0222a258",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b07d6a6-3fa7-4a5d-b649-4b039bef3433"
        },
        "item": {
          "id": "d98561a9-20c3-40c4-8952-fceed85a2b94",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ae7d8f04-a20d-4812-8034-313a49649112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949e24dd-9f74-48f6-8660-0dcd225a7c0c",
        "cursor": {
          "ref": "29896313-5c79-46af-97bb-c72edb7b98dc",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6390f024-41b0-4aca-998f-ef53d2a3cc56"
        },
        "item": {
          "id": "949e24dd-9f74-48f6-8660-0dcd225a7c0c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7dfa540c-cda0-4e78-83a1-2f0b24000fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae3423-eecf-4058-8ea6-7130a2fc4e53",
        "cursor": {
          "ref": "41deb871-0f42-4c99-988c-022b956fbf27",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e78876f2-d556-45b2-8fbc-3766ad2381cf"
        },
        "item": {
          "id": "d3ae3423-eecf-4058-8ea6-7130a2fc4e53",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7cad04af-41db-4310-9ea3-f1bd2dac7183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4626d9-83af-4278-b964-a76584d18284",
        "cursor": {
          "ref": "6592521c-cb15-4b6f-8fdc-3ac7064ef4e1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3b4e0c2c-9931-4f9f-912d-bf25b4641edc"
        },
        "item": {
          "id": "cb4626d9-83af-4278-b964-a76584d18284",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "77d9237f-9b7e-480d-bd93-aefe3c4732d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe2b472-8999-40ad-bf8a-0086f7d77a7a",
        "cursor": {
          "ref": "2e09a5fb-82ce-420c-80b2-2bc1ce7ee00d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "47fbe6a1-3a48-464b-960c-f1c8d985ee84"
        },
        "item": {
          "id": "cfe2b472-8999-40ad-bf8a-0086f7d77a7a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8f04f9fc-ce36-49b9-9604-864a4676ad72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40d55f-5cb6-4ccb-9395-ebfc7ff8d6d9",
        "cursor": {
          "ref": "6acfb49d-4f2f-4e00-9a1e-2323bb3cbf31",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b47dbbff-653b-4dd6-99cc-2e7b6d1e9e6e"
        },
        "item": {
          "id": "2a40d55f-5cb6-4ccb-9395-ebfc7ff8d6d9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2cb772f-eb82-4ea3-8062-0b3b54cf7439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefd878f-3946-4aaa-a151-7cd2a03769f0",
        "cursor": {
          "ref": "e16ea4d7-bf77-4e47-b9a6-0fcf64344b70",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f75e4a8d-bfdb-4cc4-b787-b8cbc0e107c2"
        },
        "item": {
          "id": "fefd878f-3946-4aaa-a151-7cd2a03769f0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "87a6a0fd-22ed-4cd9-b8a1-fddc18325a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29cc5e-f498-4733-b41c-cd77770103a2",
        "cursor": {
          "ref": "c4037c48-4a17-41f2-8761-8fb51ae1c89e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d477d8e5-b0bd-4d93-bf59-92aa1ef422f7"
        },
        "item": {
          "id": "5b29cc5e-f498-4733-b41c-cd77770103a2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9295b8e-6435-4444-8de8-dba8bfec2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38587eca-7421-43a6-9309-bd175a0a6d26",
        "cursor": {
          "ref": "ecfed823-3101-4a57-8d6e-f652962a5341",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bfb8ff87-4e95-4cd8-ad56-ea84118a9470"
        },
        "item": {
          "id": "38587eca-7421-43a6-9309-bd175a0a6d26",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d427480e-2fe1-4176-90f7-788ffece7bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2022d9-720f-4e19-9f6c-61ca115ee2fc",
        "cursor": {
          "ref": "ac04060f-d6c0-47cb-a561-317413611cab",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c80618b5-66d9-49ec-a9a9-5c359e51742f"
        },
        "item": {
          "id": "fc2022d9-720f-4e19-9f6c-61ca115ee2fc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "41578fb1-1972-480b-bc99-dbf010a6d2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b2e05-0e5c-4c1e-8d3d-d3cf5a561d1b",
        "cursor": {
          "ref": "08562e1c-d727-42d1-8f82-dcc03991c0c1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ef78590d-cdce-47ff-875b-a462a6dbfe2a"
        },
        "item": {
          "id": "d03b2e05-0e5c-4c1e-8d3d-d3cf5a561d1b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "073af14d-abf2-46b1-84b3-612e9ab865c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba10f1ea-3bc6-436d-92c9-ed8401bdfec3",
        "cursor": {
          "ref": "7a1bce59-30f3-4429-89a0-58d35dd59e5b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "67a99a3b-1cd0-46e4-bb57-6a92745b52bd"
        },
        "item": {
          "id": "ba10f1ea-3bc6-436d-92c9-ed8401bdfec3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d5db6aa-e26d-4b84-978e-7cb9ebc2bef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b2da3c-6622-4a86-ab70-15c1539ddac3",
        "cursor": {
          "ref": "d679a151-4658-49a9-8ab6-0c68310861e3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6d2f12ca-a77f-4d40-aa6c-c7134a2fa60d"
        },
        "item": {
          "id": "a7b2da3c-6622-4a86-ab70-15c1539ddac3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "554f5b93-a899-4374-8e92-84bf0ddbb65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c254409f-a53e-40b3-9524-3524046094dd",
        "cursor": {
          "ref": "a7f50741-8bd0-408b-96df-392d59762692",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3af3f4e6-adac-4467-9054-53a1159ad12d"
        },
        "item": {
          "id": "c254409f-a53e-40b3-9524-3524046094dd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aa8245cb-ef26-4914-858b-c1908b2c7b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc33390-80c2-418d-95dd-a75e1811b0b6",
        "cursor": {
          "ref": "73c61de8-137a-4b55-af31-26216b67a661",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fa1907f2-3437-419d-9fdd-c9455c477a44"
        },
        "item": {
          "id": "4bc33390-80c2-418d-95dd-a75e1811b0b6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5a4986f8-7227-480a-a157-44ebc7e69f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc07195a-2892-4d13-a889-dd3a3f7dbf2e",
        "cursor": {
          "ref": "8edd1c1c-20d8-4d7e-8ad3-4b5bdf3b0ada",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a6cfcde4-72dd-4828-8a83-9bbcc4af6439"
        },
        "item": {
          "id": "bc07195a-2892-4d13-a889-dd3a3f7dbf2e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dee19895-d863-402a-bc40-ef44105dc2a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67542a44-5341-4ec4-a700-131911ef47ab",
        "cursor": {
          "ref": "6e50b5cb-ba86-422e-bfcc-e95635fa3031",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ef1f0f44-747a-4717-8f57-9055a2866960"
        },
        "item": {
          "id": "67542a44-5341-4ec4-a700-131911ef47ab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9d581dea-0d2b-4bac-864b-a2964cbd55d5",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7d6c6d-3f9f-41d9-9f07-e8a88b3f5297",
        "cursor": {
          "ref": "84abfa1e-5549-4b66-afee-3c0c3173b6a4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1d1e0fb9-0f12-4d81-8514-c266ffa99a1e"
        },
        "item": {
          "id": "6a7d6c6d-3f9f-41d9-9f07-e8a88b3f5297",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c5b61425-937a-4f2c-8242-652222e7b50b",
          "status": "OK",
          "code": 200,
          "responseTime": 3401,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74feac5-5cd2-4b76-a221-d71386627658",
        "cursor": {
          "ref": "d344612c-d350-46d2-b053-93c448c77ff0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8b65168d-8edb-489e-be07-92c4553005dd"
        },
        "item": {
          "id": "f74feac5-5cd2-4b76-a221-d71386627658",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "32fb60ce-6a17-479d-8666-9e5abf4d0177",
          "status": "OK",
          "code": 200,
          "responseTime": 2706,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5de2a-2205-4e4a-a59a-5044d7537148",
        "cursor": {
          "ref": "4f78ea45-82f4-4230-8447-dd8a8130aac6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7bef517c-11c0-4774-8b35-a72842ccd6df"
        },
        "item": {
          "id": "57a5de2a-2205-4e4a-a59a-5044d7537148",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6f9b123-bd11-4bda-a07a-2823a07e1d28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5de2a-2205-4e4a-a59a-5044d7537148",
        "cursor": {
          "ref": "4f78ea45-82f4-4230-8447-dd8a8130aac6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7bef517c-11c0-4774-8b35-a72842ccd6df"
        },
        "item": {
          "id": "57a5de2a-2205-4e4a-a59a-5044d7537148",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6f9b123-bd11-4bda-a07a-2823a07e1d28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd36362-b9f6-4e51-aef3-295baf7d77c7",
        "cursor": {
          "ref": "4a3bbbcc-9847-4f0b-b278-3ddf1c05c87a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f58b8ba3-4fea-40fc-a8df-24a808bd74d4"
        },
        "item": {
          "id": "afd36362-b9f6-4e51-aef3-295baf7d77c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c8d40475-29ac-4de0-afa2-2adf32634d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae4a6ea-7a43-4751-a545-e24241e7bbac",
        "cursor": {
          "ref": "08b3bc0d-69cd-4d3a-947b-d5515237631f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "41c67abc-a4fd-4f6f-966f-dd517d038884"
        },
        "item": {
          "id": "aae4a6ea-7a43-4751-a545-e24241e7bbac",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "053882c0-52e3-416b-82a2-88456cad45b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}