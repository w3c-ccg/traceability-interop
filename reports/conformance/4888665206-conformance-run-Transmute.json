{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b503107-066c-4e5d-953b-76be7d777359",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d14347b-3756-46d9-9571-75e9f2771b78",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3b40581-1c3c-4e9e-8bfa-0667b97b1b96",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be9d39ab-ad5d-460b-b635-161e610ce92f"
                }
              }
            ]
          },
          {
            "id": "36050d46-c143-41e2-a756-4af47a838f7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dc8db75-e759-4320-a5a4-096a474cd4b1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d0754ff-c25c-40a5-88d8-0712961cbd0b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "67b2c68c-39f4-49d9-a3e9-7b36aaeeccd0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d0d666e-a16c-4c61-97b8-21f9c48041d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f531dc28-2f16-47e9-ad20-7b6428fe002a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7c63d18-3710-4c5d-8ddf-62def916bb06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bbfd0e7-b13c-4db3-a603-ac9f58cdb679"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d71a7acb-c2ff-467c-9e02-61e7d09e0558",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3fc2da6e-55ac-4e74-91c4-1b02d001a7eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73514806-f691-4779-9995-2b1465553b86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6357ccf9-e9da-4f73-a899-47748feea40f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89fe8f6-e106-499e-9658-fcb1380671cb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "77edee5f-4db5-4a6e-adb9-b9cc56c92374"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "547d947e-489d-4c94-9132-a5cfc095da09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d7524eb-9bb8-4832-8bb2-9450dfc7cd3e"
            }
          }
        ]
      },
      {
        "id": "8b4efff9-2cf4-46b9-9e74-2e3854454ffa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f9592dcd-42f0-43aa-a322-cb127a96dab3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9caec8d3-3a54-483e-a166-2cacbb89860f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e5a4a24-87b2-4996-9fe6-06390d6a7453",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e458d9-a56d-448e-9ff0-861616cff5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6d04d17-571e-4a2d-aec3-abcc6d590bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f9f1cb-5473-44f8-8ebf-f7c250b8872c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f0c6c-e3db-42c9-908a-47b1c7856b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba5c0a48-63fe-4db0-95f4-4ccf0b8dc1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39565e4c-761c-4815-8a70-f07ca191e001",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727186ab-9f0e-428c-8eec-a201091581ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffae33ee-f0ff-4e93-b95c-16f251cdaf94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2569417-5961-4b89-a336-4524965070e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8b845ee-561f-47a7-b91c-de2ebd723ff8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3297e04-ea2d-47bc-a0e0-570249b13a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "218807ee-cb83-4447-848f-767efdeb2b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e49081b-f273-462d-8187-8c37ad8ce05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2823add6-b0e7-431a-becb-9f48dc2ceeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242c3f56-beb9-474b-8e9c-f5ae2e887bd0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8f55d3-f7f7-4311-8cef-5742f228aeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed4d4f45-ff17-4dc4-a1e1-339b168582a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d11b33b-2382-4262-a9c7-7ddcbbdbfd3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b2b6f478-44ee-4387-b585-fa6720edb35f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3d36a34-a498-44e6-a208-3510d9c4ed2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72fafd68-03c7-428a-b824-74f82e00267b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd3c79a8-aaf0-4f9f-997f-2f55be95953c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "006b77d3-10c6-46b5-b592-f8642e10175d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de79a35f-cdea-4792-9aed-bd8fa0c4c621",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "01ee81e1-8487-4927-b5b7-87f7c4af0a37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d9d348d-9b5f-4242-8982-b2e065f789c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d7c6f31-324b-45a3-85e0-51450cafef20"
            }
          }
        ]
      },
      {
        "id": "33d2bdb4-05fd-4b7d-8c51-075674b28319",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "beffb93b-a082-49b1-95f6-9eb356686431",
            "name": "Negative Testing",
            "item": [
              {
                "id": "561b2f11-18cd-4880-a304-63d10ff6c4a1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d9c201f-fdb1-4457-86df-6f4f76039737",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3171971-84f4-467a-a447-c808dce61c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2872fa01-c3b8-4276-97d0-70c998dc9800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc5372f-4104-4dbe-ba2b-bc511078f190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af599d1c-7c9b-4103-b7d1-1f3d91da668f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70849c8f-a234-4409-a675-44a54c62117e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0f82f0-f4cf-49f4-bf3e-6e5e4df8bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd84ef92-a6ad-456c-804e-800bc3063427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a857250-f119-4909-ab8a-4ce9f0eeccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d45b9d-2517-4a97-922f-d2ef6769ab6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7158c2b9-7e89-4b73-937a-2b3ad183a222",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8899183-ae3b-44d8-bbc6-4822fd8710d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b446b5e-5220-4b79-b1fb-da8fb4a50efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2d68cc-5109-4df1-a684-2c6fea86432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11991371-648f-4cc7-ae91-3a5032941c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0304663-072f-462f-b0a2-9b690e2be8d3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce189bf-e02f-4f3a-b992-4b69e96c6bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3811bf-1e7b-4090-b33f-e745cee9ea22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eac6d04-54db-4b3c-95b5-e98f1604a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "508b7bd3-a8dd-4148-82ff-97e9904d965c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38da38a-f628-4667-b436-a21d58e1b9fb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51683164-21b4-46f8-812b-65f287bdbd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c36eb4-706e-4a31-8cf6-5a0e308c7204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb8378c-567a-4a69-bf1d-a0234de068c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3f54848-e869-4071-9942-bd539bc1c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a76dfb-40bd-41b5-aa7e-6f6825e834c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6aca7-ec4d-41e0-bf0b-5f1c2ddbcaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03cd20b-26f9-46a5-b7e6-5b6229e3c087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf65fe6-d422-42e9-81ba-b8a2a2c8b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abe6d59-21e5-49eb-a4a8-e1a2a7aecb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ebe9ad-780e-4977-9ffc-aa0d5b091351",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f43396a-5a52-423e-8a2d-0934455ac8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffebeab9-acca-4ab4-aeed-2fa8cc68723d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5736a195-f12b-473d-9082-52c28bcf5352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02cadd22-c598-4c1a-96aa-511c39b2ba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebef1c9d-53e0-4def-8ae9-41171d5165de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c42e58-363b-4e80-817a-2f7cb618fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040ece00-95d7-4794-9a77-d5d429f3a8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76194dd-e0e7-4664-b430-2e9217e2c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b89b6ab0-eae6-4900-a4db-89bc701eaec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae03033-212b-4259-9de8-e442258f5a8d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feac9fc8-7a5e-410e-9010-ad54d13b5999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382e31c1-b232-4a1b-aae9-d1634e95534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75df2b1-e88b-41a3-90ab-fe0ac1125759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83e5ac25-7fce-4a97-a2f9-6cd93a435ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f12e1f6-387f-4e80-a728-81bd4ee1835d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b4d68b-a6ee-4e01-a5ac-aa0083d73105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d5392-b161-441b-9579-6a62113306fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335a7d8e-18ce-48bf-a04e-01677b629a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0051cdf6-618a-4d48-9302-3501467763fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a9e8ec-c673-4cbb-8ba3-61cfd33bd20f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa593ea8-591f-4585-be81-6aef652b2243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4cb32f-d8f4-4985-afba-e55845f061c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151e621f-ddc6-4a4f-b57f-36fd50824c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cc0840a-3979-49cd-937f-2e5b14965f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8350fe36-f49a-4b56-8122-6faf85f241cc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a3936c-51c3-47cd-b2d1-757617f9ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce57c2ff-2089-4dec-a8ce-664261fd9b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ef4386-d59e-4dd7-8dfa-130a2f36a9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59b37d43-5137-46b7-b691-dfa0d0d552c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620faae1-1000-4f7c-bfcd-4abae159eab8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ca7d1a-878d-48eb-87f9-98c3634206b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10268df-d3e9-4d19-be64-14daf44750a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd27bec-df86-429f-beac-a9b2f6329395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b741b8df-761c-4dcf-b1f6-6f5f36f64370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7839b4-91b7-403f-a175-995fb52a2cd9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aa929c-65b5-4a65-9bc5-79e0d9217d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d12565c-6740-48bc-a1dd-be5801bdb38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d09395b-6344-462c-9028-0af18622140b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e000e753-1752-42b1-84ee-3acec74bc30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec607b-a447-444e-b6a5-96deb4d7da8e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2624d117-d82f-4d56-b382-388ab6bcbf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee11720-0d35-436d-a88a-f2510426eefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b660752-5d3d-494e-91ba-a1461eab325e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc7b82ab-3540-4b47-9ce9-cdc95f36e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3ebc54-a8c7-4460-91d5-3e4bdc3f64f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d0c74-b729-4f05-a58a-015e31814a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9a5a4a-0512-4341-b4ac-fe2bccde46ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d82bfb-de3f-4b07-b096-bb7b30ec7c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ed4e64-e2ba-447f-9c28-582437afbe83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9548c5-cdaa-41c1-a15f-ae07933b96a8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbf97a0-6bed-42bd-a97b-1ef6075c36ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ca929c-db11-4efa-a03e-c783d26bf640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ae03e-b6cf-409d-a616-89128233f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f939feb3-2dc5-4b53-b1ac-1023a6029ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7c42b4-8be6-4742-b34c-05915b0d2aa1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62852397-70dc-4478-acb7-4e0ddc4bdb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038a5299-a34e-4f04-8b9d-3e8a77415667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3929f9-f88d-486c-837b-a5ed34b997e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d074bc2-1e60-4b0b-b410-b8f00e7c1faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b172fa3b-a5b4-43b2-b7b2-57ea134d3089",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6ffa2d-45ca-4a72-894b-0259aece33e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a915e94-cf41-4321-bbe8-40329c108f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36622fb1-2dbf-4ad7-a479-e5fa867a0ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87235062-5dfc-43f5-bf88-d6adc7d2fcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aadce7-2068-45ea-9aef-c2c6b8851a6a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984712a-7ee1-4e32-8401-2a971f12fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950976b6-9a9b-4d64-99b8-b97b4ffd07ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ff7bb3-9b6c-453d-9448-b69778fbe619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e6bdf9-8b7a-4adb-b604-70d509de70d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5843dcaa-abd7-467c-ab86-65a318c57952",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae4d6d3-d3d5-418c-962e-dc4e82080d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96a2cf9-3908-457f-83b9-c588e22f9330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa95fdf-9c90-459a-b607-12c1b2f0a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f10a43-2a17-48d3-bd09-70f8e23e451e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3d73e8-d46e-4721-ac92-330db346d62d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfdd664-7d21-4dd5-b19a-acbf01f469bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393be8ec-e0d3-454c-8cd1-e19d033cefd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed309c-9844-45fe-9c3f-9cebbf7fec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b63df6c-3969-48cc-acb4-9daf0a2aa5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea602dd-6642-4393-8d4d-4add6c1e5ea9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d630fd-1662-4ba7-afe9-afa5b80c8a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10f2592-4412-4ad0-ac12-1a0541ddad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5af040f-e52e-4f51-876f-efe82cffaac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5b97a8-4365-4eed-ba3c-cc2b20d20ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8663fd0b-757f-477c-9b9f-ba559f1a9699",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5864b6-1230-43ba-985b-d429cb4fe2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eb1da4-a689-45a5-8782-ffcda408d871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdf0d62-ef0e-434f-bc2c-3c7d7d7a4daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c874a2c1-0d19-4133-baca-6310e6221233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc91ba43-0ed6-416b-a250-65c553120bca",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f969a-0d84-4dfa-9f30-60664fb9f8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5932f86-4986-48da-b8f5-efd44d037811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2cdc9-9ce8-4169-a1f3-48631e865e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c7ab80-6ed8-4560-92d9-aedd3b4257ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db0d97-4f13-44aa-b1c1-a004667cd753",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d27b097-bf71-4026-957f-94bf3314316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703bca19-b411-4e6f-8eb5-83b3bf8999f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1789dae2-69b3-4734-b9f7-55a10888b51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0610be-03bb-4766-b721-192994d45a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852fc80a-77b0-4748-b3b4-87a063fdd133",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44790a1-b2c5-498a-893a-ff98f6416f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef533f5a-d835-41bd-980a-cdfaace49ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0330ff67-cabf-4e69-a560-33f1916dcbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9003fb-b424-42c8-aca4-bfd208f3273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5000ef4-b0b1-44f5-a592-835cf1341489",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c9cff-50a8-48bc-ad06-f53520ff7043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc61c13-d9d6-414d-8f19-9b2346b2349d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc72baa-b879-4e9f-8758-450322698d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e190929-2552-4f15-9e90-a152ec5b646c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239df6d4-4ce5-4bca-a461-bcf9705ecedd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4853f012-a12b-4c77-b661-71c07ff92bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b62220a-b214-4ed3-864a-4c96dce05fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688201a5-5e9f-40a9-bf0d-2d63e91b3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4acdd9f5-eba8-4263-b08d-7a0b4415810b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a686a10-0d61-4d6c-83b3-2f4b2db6efcc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ee5fae-3ad5-49f1-b284-8fbfc8053760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c7b103-ca17-4c18-b15f-a35ea885d9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe5032-a65b-4c9f-898b-2960adef88bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "627389fe-45d3-48af-b88f-65686329724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101cd02a-0a72-4eab-9ad9-abbed2a851db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d85bb1-d5b0-4a3d-9d46-009bb44daed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7617569a-14a0-4953-89ac-51ca150beb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbee43f7-922f-48a4-bde5-d9597baf9351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a9250d-680c-4955-ab3f-81bf2db5fbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf1caf-3504-4da3-affd-d0bde9eab70a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28054264-358b-4a31-a944-158a5fa60b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146f4d42-1936-489e-af73-5cffbb4ed746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad122d3-9edb-4b8a-9502-2537071552d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "546b952d-6c5e-431b-832e-6ae18e5af2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a078d1c7-6ab6-4503-ae63-d03a3459dfb8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d744e9-c816-447b-af0e-3e95e16a8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e381d846-b884-43d2-9252-c60425f830ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15445323-c99d-4814-b85a-c6a3083983ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b6894b-1598-413e-b056-0ef6aecd0233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c2a17b-eef2-42c9-922e-b87456e73299",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fd958f-8c90-48fc-afe5-0260763aa85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f45231-977e-4755-bb56-2b55b8cdfd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b220fd5-1479-4eda-8dde-9765d064836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac02368-6aa4-4e68-a6d8-e0ee1193b65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d704076-e6df-47a2-9c3e-8cab8a82fa27",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3d15a1-ae5e-4b09-a15d-609141ac53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e079f205-d2b7-4faf-9f4e-783e2bbb84df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3bcedf-c43f-499c-bfec-f80a751002e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0246cf-025a-436e-9224-fc9cb6024ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe2a727-f11b-4681-aa5a-551920133f3d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d993c-f399-44fa-9e82-5a5d6db4010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5994b980-f1bd-4e0b-a40d-0812bdda6123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684d9f33-6a11-4e5d-97bf-0e9191cad82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b991829a-54fa-48fd-986f-d1d8c94731e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e332af53-1bd8-4376-8d55-3c0a8b6fd318",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652af367-9e4c-4a80-acde-fc3c7ace9963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae2ab86-c1f8-49a8-895d-5505e423531f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7453589-f09f-45cb-85aa-d94830d9745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1d480a-5bf6-4b21-a0c1-5398eaf07e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77864913-9453-472e-80e2-cb4e2ab8484a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb1d322-3eb2-4b6c-89ec-106f509d698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be31440c-50cd-4b3e-b379-8382f9c585d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b5650-4f60-4bdc-9a2d-6713e9a61268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcae590-afcf-4c1f-bd04-4e28e518cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b2b513-c6af-4e9e-a572-eba334b61988",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d7cca-f395-4b25-9707-90ecb3c39a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd55b2ff-7a02-4380-8a1e-c0cf25f12e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbd4721-79d9-4b77-b317-e1d4b8dbe31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f37c4d0-2d17-4216-abb5-09528647c479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926e0735-f805-43e7-9106-ea1a358bb821",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59da2c5c-1c38-45b5-bb33-ede9d78f19ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69971f96-9fe1-47fc-83b4-23576918f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d4d138-941e-45c0-a1e4-365ef168fd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12c6a91-4f22-4769-9479-9d9a499e5b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4b5b2-2940-402c-9f6c-e91d1c769bd9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260688c1-243b-431f-8776-e367d097769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9354f48-47aa-49c8-ac46-3cfedb0b006f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65523fdf-b021-4ace-b602-62753b345ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de75799-74a6-41b1-8ed4-6ef148810376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a599e23b-5ec9-415b-80b4-97b9e1bf34e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6c5788-d0dd-48de-9249-318edf1d1a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a973084-ae87-4a88-a62b-cd32e04e4552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f60087b-7ae2-4649-8338-6d3089ecfa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0727a9-b87f-4ba3-a72d-04fd1080e4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4dfc94-6cda-4bf4-882f-cc85d8c0c446",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89661576-2ee2-472a-96c5-bd9c98b77ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c67a628-965d-4645-a828-c70990b66475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcabb903-e578-42e8-9a5a-9b8bb132bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94803903-5227-436b-b204-6092fd3647ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d0b94-97ea-4742-83c5-d4e12622613b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4546ee4-3eaf-4151-af6a-5c14672452f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75e260b-234a-424f-a476-31b38a87ac3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fb6f1f-21ed-4a79-ac8f-17acbc6eb38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a04d7e1-23f5-4b8d-b9ff-d3e563b885e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8cc198-7dff-455c-be48-4473946181f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f775a38-55e9-43ee-b8e9-1244fe6e5137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeea8114-0f2c-49ce-b390-6a5f2fe86db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89660ac3-3b3e-4c22-8e31-b23ca5b5af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa6edd6-0f78-4269-a840-2c2a5a2448bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc580408-ff5e-47e0-b722-c77898d6660c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce84ac3e-3ce2-4468-b09c-e72711922e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81076f46-c9f5-42a9-9a69-79740b86e0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84766ed2-9491-432a-8c67-631b019dce63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf64e6d7-e316-4daf-9ed8-ae45defd4269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a25422-f7d8-4ce6-af66-c706e7449674",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ade720d-1b5d-4e80-b4b9-fee733a56cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d3e065-df47-4521-82fc-2b31882f7649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c469fa30-7c65-415c-aaa2-f715044935e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6e9126-4e78-411c-a591-ff17569ba32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e593d35-b0d7-4b68-be10-dfbc70242edb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9e3714-79d4-45bd-9373-93aa3d1d07a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2577481-3284-46e5-82af-0d0bd318bd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df2c0c-3afe-4e75-9db8-2b8c803c0a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "073034a5-ebf5-4256-b43d-d4c98f959a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1076a7ee-94f3-4ef2-8845-fea11da8cd01",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e82a5d-c10b-44d5-8c42-beafa9320a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adc1ba1-77a4-4de1-a846-1ca25b9364c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31cf047-8c65-4269-a878-eba6a052e1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e009897-217e-43c5-add1-82117c94a242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ce4148-9aab-406e-8b4b-e16fb955c44a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f393d5-5a00-4a40-95ae-1b71113c1cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e460c567-ba1b-45cc-9f0f-032e58bbb70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97df6e0b-1786-496f-b624-8501749de88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "789931f0-c272-4f85-8af0-3ce2009497c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd4def9-1b19-4d78-b770-715764bc534a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7047147d-a185-4099-bf7a-576871ecc68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66357a8-6d1d-4dca-8357-43e2ea9e1a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020871c0-5d74-4ba7-bab0-a08c0dc79c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df2abb8-39c8-4772-9a5d-17f74e122091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a23c621-413f-4ddb-8098-2e3c129522c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6110e87e-e6a7-40fd-b49c-69716db698a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82db858-1026-42d0-a1ed-50a86c54cbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcdebea-1296-4077-bd02-3720fa571fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fbec09-8127-404b-a2b9-1f0d15aaa3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e0c6e-4d97-4009-8f9d-230c2035defc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3d28b2-a77e-44db-9028-87c40f079d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beafe2c8-02bf-45e1-9dc8-152ced892af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1261ba1d-7cc5-4311-b366-059ea3de4368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc866fd-214b-4cc7-8117-312af9b31e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98800384-2a33-476e-9e95-75a09e7184fa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacf14b1-7861-45d2-aed2-54980c322f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dc7da6-6b3c-4403-9186-be04f21e6c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f1b3e8-eb32-4cce-b26c-a83354058aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d49b64c-6a51-4817-8c8d-02e7e025d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec004ce-3a56-4f34-b9e3-f7a81a6da4b0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc6f23-7303-4b76-aca7-3f1efe592b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e320c02-41eb-4a42-a352-60d7c649415b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbadac7c-6dfc-4c1b-be90-26ca960ce4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ecbc0b-7b57-4feb-9aff-e54157aee1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3364f7c-497b-429a-8ef4-164421d0af70",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b454e5-2458-4f88-8c53-1a4f80fb1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050c920c-0d2a-4514-aef0-ad59bc73c924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cefaa0-2c29-447d-ac87-5ca698aa1bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "37519f06-95e7-496a-ab43-17e1e8a500c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812961d2-d832-4514-a05e-d33cdb77df73",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d87b89-4af9-4166-85f2-e627e6674696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c61a6a3-d6d5-44d8-bbd4-e91cb57d2607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a6ab94-9ca8-4ea8-8052-5f42b7c4b2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d83a63e-e3af-46ad-96b6-56e3da6e8023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08ef854-e915-4218-b10d-e7ef0d7bec22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada02eb2-dd10-4ada-93e7-8d45176c00f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c70b81b-c6db-4083-ab15-671945e9a940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582443d-7c24-4253-8084-11f159ed5f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c46014-2fd7-41d4-a005-9051fd29f492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21fbf31-9adf-4eb2-add7-d9ee640ab008",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0357e528-e0b6-47a3-ae8e-ad7896a38466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c8dc41-45a7-4b7c-b573-0e674100d863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a8211-2fa4-46c1-ad9f-8d4a57f718a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed230e59-0b34-418e-a0c8-54f36aeb4d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5570fd40-7a3f-4e00-8e01-4f7b34dec848",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579338ef-4aeb-4580-9450-6efa0ea73465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baec437-bc66-40d9-940f-2a2a52bb1c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c6d665-c82e-4b63-a278-ffc842698b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "301c9a29-dced-461d-a5d7-ba3c66faef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ea04ec-5145-4849-a094-f7e65b8ab201",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95bde7-e6b4-4b9d-a8e9-837dfe28e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62346a58-cfb4-4186-9449-e8e6a7d3186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cffe55-a86e-4d01-8758-a839d7bed453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30aa44f-8922-4647-9147-2930d9708e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1092080-45a0-4744-82dc-ee0196dfdac3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a70391-5b4f-407a-a2fd-aebc92d39ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ad4225-77eb-4a0d-aeee-aa19b77b5ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fffdfc6-a07b-4a9b-a97e-45004d5a05f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae3d4df-0ce4-40c9-8cd8-6dc61788a495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddfd6b2-0780-4d84-834d-338f6c6347ed",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee18159-0dc2-43ce-b140-b7c1587470ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774bcf08-84dc-4bd4-b083-9a4697d77349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c4952c-1a61-4531-adbb-7371eb1b3d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4128362-7f16-4d4a-b3a8-943b43bbeffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9547242f-7bee-4e5c-9dd3-7cd541cd9ec4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27045bce-8dba-4f6b-ae1d-0df75f27c472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9e5b9c-2953-4a9b-80aa-b48e4c09deaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46039db9-5757-4250-b5c1-df309cef7ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc58984-d85d-44f8-8b91-104e31134076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09520eaf-329a-4d52-9076-60953ecde0c9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb5de1c-59b3-4f17-b3ae-33aebdeca4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbdd07e-b0f6-4169-b992-7a31590adeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a34bbe-e593-472d-beb3-e73463ce91c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88c269c-0e5b-410e-a0ba-86330d1aac3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905560b8-75ca-47fd-9792-734765f0da1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11767eb2-9656-4c80-bd64-8bfe760b5d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bac1fe1-295b-47dd-bdde-091596f38164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d80380-c023-41eb-9b3c-abbcdbf8dc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cb104a-d1d6-4d30-ab88-f6419e8c681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8dbed2-4f26-444f-a64e-79dd61774197",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2eb05-3cff-44d9-8ecd-b4f39a1035f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4008428-98f8-4829-8523-c4bbe8b3f670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d9ea37-9680-4e30-a0f1-14224aa8cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a26ca3-e265-4ebc-9bf7-56bf9b4acdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db123b3c-c2d0-4baf-879d-75e619e53d2d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b5dabd-02f2-406d-b0d2-309de538720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106176ef-c18a-4da5-b15d-ee0fe1a1ce05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd9267d-760b-48bc-afa1-09ce50f436cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2022cbcd-de7b-4ff2-ad88-0c6b36dfff55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dd8a4a-9a10-4610-bb91-fdf638db8e1b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75de3846-f5ec-483f-8fca-4312db4368ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91faa004-a321-4e9b-ae57-ae3ef0582f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14245034-4a0c-49bd-900b-25adf0b5b877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba13e9f-eed3-42a8-8bae-0d1b13063e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1483806-1204-41bc-8a11-a516b82682e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7be07a-388c-4caf-b4c0-1bf138a588e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f000826-f3b1-4eb1-bb7d-fbb93c26a379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eaf8d0-cbe6-466a-830d-4c6283b6dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47cda798-7668-4df6-b88a-6284f30b32ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefc97ab-72b4-4c34-9765-4f4788b030b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109ba750-e31f-4af2-8a63-887d5b81d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d8dde1-69da-4279-8499-d89015c8cc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c98ecdb-121c-465a-b131-9252c8279e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c293c597-6c95-4ddd-933e-9ce255e36803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28f48d-239d-4414-83bd-bfea38399cf3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e81a6bc-dc4d-46e5-b117-914ff2242ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff11d1c6-445c-4590-9688-61b1353f775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49324a2d-e662-4128-9664-868b99f41b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "346fa99d-2e91-46a6-a845-d246158e2d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de8daaf-1f6a-4ad4-b7ad-39e7b0cee2f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211fa2c7-b35b-4b8e-8f8a-a9de45140572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540f4f97-7cb8-4f2f-9fa7-84fb2343fe32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f6e970-73b4-4760-ae2a-9f9a264436a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf602543-a1a8-4979-8e2c-1632ec10881f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1560d54-7fe9-440c-842f-e25db1130ec3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09184a9-6bb6-4773-9cb2-1d59cfd30b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8425d087-5a1b-452d-83db-5a730aa79009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb96af5f-6f45-4c83-b5fd-d0e5b52d2787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e187b475-a9cc-4b5f-9e1f-5327d8fc69b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9804f5-7a8c-47f6-8ba4-7feeae9628bc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5acd62-6a62-46a8-af0b-921fb90ef122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79abd904-101b-4fd8-a3fc-3d01f1c3c6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a088c7-4f52-47d3-9954-e783ade576a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90d9bd4-d28e-42c4-bb87-bb2590b25633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ecca8f-50b5-447f-aebe-df7c79f864ae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c99be8-cbca-4710-8142-5b62efee1f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa69cfe4-eebc-43be-ab5c-9d100a294325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2632c22d-21a3-422f-a618-2338ec083af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26dd0d9f-68f2-4f40-b125-5fc33052a782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7af40-4917-4868-aa71-a6b78b0a9823",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f7e8e3-6fc6-4698-bf0c-1c819df7d50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd78f98-c8f3-4c8e-b6da-dd2cb1717282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a08d3f-21a5-4b11-b245-8c0e8ee8805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f5fdc3-bdeb-4433-bc07-02437d54b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d2366d-1739-49d1-8638-88f01d9ba243",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f972c9-a322-47e2-a38b-b9c98bf1b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46eb1c4-1f76-4978-813e-aeb95f97ec69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b907902-6546-4560-98b5-10366770a46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c09cff4-5078-480d-a944-7f8b7f3f94dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21960c3c-3f1c-4b71-8bdb-5859854309b2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fd447d-bf04-41f2-a36d-7eb1436cbccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8b5a8c-3185-4fff-9190-b494cc8b54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664a86d0-5a1c-45dc-a576-d789373ae49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4f3d45-b7a4-4799-9417-7f4ba3f03e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce2b6d-2535-4578-ae43-b4c455cb987d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb448f-f61d-4c75-97fc-a63b1442e7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c96902-aa93-4cd4-ab76-8f9d0bf1a620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b978d27-f2a3-452e-9d2d-74a29e5522be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3801e6f-3c43-435b-b39a-bb5684e79db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b446a829-abed-44c4-98db-bbb6097dfce9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b368b4-05be-408c-9e07-3021f124fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d69065f-d93d-4bd6-aa27-7705e947e283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2632d7-6ebc-4eae-8afc-b4f0d4b9778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d888c1-cc7a-4861-ae88-0cb12d6ddaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f21282-c556-4072-9104-8171e7f15aaa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d17fcdf-3d32-4a0f-8f7d-ec4e4a09640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555b9f0e-8f86-48a6-9e92-151f095696d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89616627-179c-492d-b9b5-e624137fbc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad6289d-e4c1-4764-9548-1177d96166d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed554b88-874b-4e6c-9168-a755c4686f17",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a50a02-cd89-4b53-8c68-9178bdc2de59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7141ba-f7ea-4970-ac3a-a9cb2812c786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1eb2b1-530b-4b8b-aee5-36a11f9efa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6975c34c-3793-4891-99db-dc82c7e8a470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a850f4-feb7-4fe7-af2c-fdcc06aa7741",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e7bc57-6e5f-41e4-afc8-c60070ad7540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7899382-7628-496f-a4fd-02e064d3b7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231c3525-541a-4b81-adf2-5e2358e72f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b98413d-1f0b-4ec2-a0d9-75884ceebce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba304bc-a3c9-433b-ad63-e4368a5c416e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963a0a1-9fd5-429a-bade-86a78f210b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43810dab-e4d2-4456-8204-20372da888e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e2476-17d8-40c7-baaa-b5b3067b6491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d23f9539-8d67-4160-9a95-85c84b2ad6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0220ea1-2541-42ca-94fc-b8eb465777fb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60802b39-b673-434b-9a31-9872d3eacc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ed7afc-6644-40f4-9234-35e9e186c0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67632cea-3f9d-4cb9-a4f8-d0ffe6d2ee0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c8e4a0-748f-41bd-ba83-af87930eb284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07f4ca4-fba9-45be-9d4f-a47f9cfd10ec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd97ae94-149b-4e8f-9852-66a61a1b5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16042b32-df3b-4fe4-9c3c-46e528361ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff82cb6-8243-44d5-afbc-fa905ef1d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff635534-7367-49f4-8cbb-091c1d69b033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e3078a-4af6-479f-90fe-11540124e4be",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e64c777-c995-4c11-a100-325574eccdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff06e9d2-81ff-4a02-acf5-f2e5ec3fec10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675c1795-5c3e-4f2a-b0c0-01356aa80385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "edc884c5-8ec2-4d56-8ab1-03d58e1aef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928c3b5-81ab-407f-9161-315f4e67c54b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b5a758-609f-4448-bafd-f54667721649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922581de-b2fd-413b-99b5-a503338df4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab33b0d-e2b2-40cd-9f23-a8db86af4d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7624883b-8f2f-4617-a00c-c611602658f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86066e7-c57e-464c-a5cd-5df9b6737761",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a92a89-671d-406f-8bd4-36f3081fa766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3373ec63-dd5c-46db-acf2-6a6bb9fb24c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c028078c-10cb-4340-99d7-c7534de6f2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec8185d-be3d-4486-92c0-faf05cb1f198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd999f9-7dd7-4f2b-9fd5-ec662a0547be",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca42138-268f-4e22-8d80-e178db60dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d32d59-c75a-4c08-9fc7-1ce2ec613e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985b2d2c-105b-4c25-b5f7-009b196f81f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ea9bf7-4667-4f86-a0dc-80a672f773f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576cbd5c-eb33-421f-8026-879c8c3f89ba",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e7a5f-39f5-426a-a5f6-28c3b5d6da79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7c40c24c-e41e-4c81-9b8d-1fe61fbcb85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f6e74e-a935-4f94-ab82-50e6955b011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "02720f4d-09bd-47d9-848d-af8ce1148f52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e03a2219-4f0f-47cf-a193-b20b015746a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69d0fb88-fd3b-4de6-951f-aa79a9efa17f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2565b3f9-c548-436a-a69c-764e50772b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfef100c-edb6-4038-8810-06243465f678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69acac11-ac80-4170-aeb4-0b8115e92078",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d2ccf4e-75da-4bba-bfb2-44d1b078cc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f519fb3c-7e74-4742-9cd4-52b1725d47b5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c59015c-1cd4-4920-8649-0849e8ad8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27f827e7-4df6-43ec-8d8a-63e08c3f9b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ae64e2-e7fb-4f60-b00d-6a6a3661d43f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a142268a-9541-47d5-889a-fdd7a163b811"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be9fdac-0139-495a-9037-59d8a9be7453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6d802b6-dfce-4fa5-be97-af1deb735a20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef1cd8ec-3d96-4de0-9259-dad730dc72c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "240fe734-fe71-430a-a914-6a86dfbb774f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63d258bf-e160-4060-aec7-20501fd26bde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a70df94c-9d1c-424e-8498-19e9b5aeea36"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01352286-e0df-4a1b-9751-7858c925e595",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb479a04-bff4-4f43-b65b-ef1f71cfac73"
                }
              }
            ]
          },
          {
            "id": "da0c03c5-1ad9-48e2-a2c1-771e6b2c375d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1341208d-d843-43fe-8e87-ebfd9b015a8e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a866916-0bc6-4f0b-bc2a-59bc97da2342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "078e7bee-67f3-4487-b201-5822a6114aba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c83e6d6a-48db-4eb4-be7d-dbb4d956cc11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00734f6b-b5cd-4a5d-ac80-3c23e001ec5c"
                    }
                  }
                ]
              },
              {
                "id": "6e4b3395-df74-4dd6-b0d4-a61b7d612ba8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a364771-b0b9-411c-b015-8dcdffe1ca02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fae1825-de5f-4774-a71d-88e4fd57b0e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac1c51a-56b7-4336-a6a6-bbecb40a0c0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16221982-ae39-4993-959e-7e1f0471f8ec"
                    }
                  }
                ]
              },
              {
                "id": "1f6bc879-bdd1-4fa1-bf70-7593ae72b77d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffb58808-359e-470e-927c-7fdc5f4a8b39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e85badf3-6e8f-44b1-8ee3-76eaf91b120b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65d840a8-06ef-480a-8b90-7b2325bb49e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "850623b1-8357-4ab9-b7a7-216583796d72"
                    }
                  }
                ]
              },
              {
                "id": "0faff959-a95a-40c4-9687-0f00169161cd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc66c6c4-a69d-487c-9a03-4c4e8fe68733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3ebd416-3104-4888-932c-3eab3cd44632"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "401072a7-2275-4b9c-8d1e-6d25c0e7ac85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4c80a434-787d-418d-88a8-44318215fd7a"
                    }
                  }
                ]
              },
              {
                "id": "5a7980b3-b56f-40fa-bbee-16f8227c4bfb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c9cab4c-1920-40bb-9f56-52bc7a643447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57b3f69a-43b7-4698-ab6a-5b88102fb243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa1fc00b-2ed3-4d3d-a6ee-3cc6cf070c2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "32335d26-fb46-4766-b955-ae1b16c97e91"
                    }
                  }
                ]
              },
              {
                "id": "df2caef4-74a6-46f1-9b4e-4d89b26c821d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fc49e2-4037-448f-a309-922ad4329be0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04b0a299-3863-47d2-bde4-87eabc91fa0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10996747-2f4a-42a6-8330-850ddbf4cec1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85f0658b-09e3-48f4-bec5-c17989e1ca3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85bfcd96-2971-46ed-b9e6-a95470bd8d39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1f85ce5-3fb0-4fba-92e6-50d3aaf6e84f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a9e04e5-331c-4fe1-b0e9-840a119f572a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3fb3249-155b-4ffc-b553-c8dcedfc912a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "231e15e9-1d75-4aa6-96dc-e95f4dfe5e27",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1dbe14a1-1ae3-4f93-8f89-eab89f2ae84e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1408e45a-0492-4603-9d03-033b96fe364f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65096cd2-c11b-4ffe-9678-95f80e2ebae1"
            }
          }
        ]
      },
      {
        "id": "9ea1252a-c31d-4808-a961-4fc225a661e6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "920bf4f3-5679-4e62-9e3d-aa290391708a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf0dbac-0384-49fb-8351-a0cb9523a982",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73e96d0c-d962-40b7-ac97-6ab100852350",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccaec4c-8a61-4ce9-b899-f1b91d8297cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a6b3b4-4d43-424a-858b-e234a80fa54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbec40ed-ae4a-4de9-81a8-66d34dcb54f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7373ae45-515a-4eb9-ab92-560893fdf584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c246922c-42bd-4d60-bfa9-a5c6ae025c0e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2219626e-57c1-4523-af39-17987c7b0ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0106af9-89a6-45c4-97da-b96f4501e082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc6031-c005-4a7c-8ce0-1a1db95b1f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be041b08-10cd-47b1-84df-d1b19f5ac1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f8df0-7b62-4751-a3da-dc4abf281bb6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6709ad07-0435-400c-a1b9-8dbdf78ab23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6523fccb-8b6c-4c00-bae6-5a76fc5dd781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562261f4-a8ed-48eb-84ba-03996bd5a725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e53973b-a6c9-46f0-b2b2-bf35f9102c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fc30a9-5df9-4236-b799-dcda9cfea8ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844a98fd-2552-427b-8cb0-d14d2a863467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362db2f5-d3fe-4a06-a232-0c28012d0d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce665de0-47f7-415b-a681-4757d2512265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac910cd8-cf66-41d8-b4f6-02af6e022ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8283a32e-6ad3-4a6e-9ed5-31948cc73b51",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9276d48b-67b3-4f59-b9bb-2031206e5f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffb3085-27e9-4fc6-9277-eabcc728a5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1db6f67-de44-426c-92e4-4a572200630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1bf13e-7589-41e8-affc-72ba727ed446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a531568e-7186-4f7b-8231-d364f72b2ed9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14178cd-4c84-4b88-906f-ed056252e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07dc8a3-c8fa-4fe3-8cb5-0b332026cf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a88a2-6f31-4773-8b60-e84a921fbb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbac0176-c858-4c84-b597-4c1345863da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a636e0a2-6326-4f91-93ac-10d1230e9d0e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d26fb-ead3-4e22-8822-bb6cac4dd3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc4e474-b788-456f-8cca-3ff88d6a5eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230669bf-2729-4823-b576-6c2ab24d015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21f0e79-674f-461b-a723-58f27af99754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57908685-f72c-474e-a7b1-dc259cfc87fc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141fc8f-d983-4b3f-814f-ae8ba9b87b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7229e2d2-331b-4fb2-a5e1-627297922ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ee0e55-c65a-42f0-8dbd-348b27bc974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2afe8c22-54a4-457a-850e-c287a92974ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b22b4b1-f6bb-4605-8cd6-9673c750ce4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa0408f-de7b-4a1a-84da-b3f9db5d60f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba7a16c-f5e4-40db-a81a-62300a5a1536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d775288-23cf-4647-8d55-51611c43ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a544ce9-a7bc-4cf4-8fca-5ee1e000eba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e66301-68c5-4ae1-849c-b894b640ff48",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e818d59-99fc-4f2f-8183-09e3dca6b16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271a88f9-ec7d-40f3-8cc4-73056735866a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811bf191-cff9-4bf7-9218-1b33224e4f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cec38cd-648a-4d91-b730-47b01a86e605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eaa947-f0f2-40ba-9360-f53b454bc0d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf3e712-e5a6-42f2-af89-14983094bd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec1c73d-8088-4cf6-af08-ff15299d946e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32a959c-73bc-411d-902a-15812d361318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a161e9f-1238-4075-96cf-e1ee94ac9a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11e3252-37d5-4155-8cc2-25a640ea4f0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e531f5-4645-430f-8800-db5f1d553ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2281eec7-bd0d-488c-86c0-ca50d3bd38bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1d5237-79f8-4a3f-9721-82ecbba454c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d554992-272f-41f0-8340-c6a083a0f241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ae8838-990c-4de6-9716-9ef15ac288c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aac1c02-18e7-48c3-a282-6602da0b6e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5439c53-72e1-403f-bccf-c9f3ff2bbc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc9296b-99e7-49b5-8068-5e3bd0e1382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21bf785-3d65-4ec2-b634-8a2e71dac7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7947ddf2-6186-46bc-be44-e2b06fa17836",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3b3c4c-f747-4aa5-911e-a11d1bad358b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e2f130-78f9-46d1-9989-72a39a39a60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce99b8a-16e3-47e1-beeb-5267becd1284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a86e92-6dfc-4955-be32-cd5a060d9eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125ab31f-e350-49de-a6e2-dafd94b5e450",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c34ae-0f3b-4b71-b246-fade28f598c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418737a4-c365-4328-b0d2-308065303306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8e8114-cf39-45fe-9712-b528c2924df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cba11ee-e59f-4f27-a468-1ac34ab8c27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e3c4ab-a2f9-4f56-bce6-476d43dfeec3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd884d41-74f7-4270-9bbf-0d9b77b337fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36fd939-e986-4f3d-aa14-1ac457840dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d18ea39-6ed1-4804-a53f-817afa1dbb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22565023-286d-47fa-a963-ce601ed7f18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7634531c-7013-49ee-8a89-5359498508ba",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df9ec7-e2f6-420c-97b3-ccc25c1e2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbbc3e1-61cc-42c8-be6c-6ac74019cf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e23fbc-1eb5-4b0f-aa63-560b9d5d90b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c5a1a0-0680-4fb2-a3c1-e96d19d8d40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a47acd-7ce8-4bb3-baec-96bc9d373b31",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7597913-f944-441f-9e53-1db62988e2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92e49a6-c987-4509-b9cf-31cdcd0c89e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcec06a-2433-4ca1-9e6b-8063d0d3d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab293705-51a1-4ee4-875e-0d41b98d83e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a041da-8531-47ef-92e2-951ae3558609",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d0ac80-b06b-4abb-920b-317937a21f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f35b4c-8310-499c-ab22-cc25e43d0808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84e558f-fac0-40d9-ae20-9b9bc9cf2a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f216bb-45f9-4986-a935-405be3c88e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae80d3e4-f53f-4e73-979a-c76f172cff06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12475930-93bb-4cb0-9c6f-b4dbf6a2607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a620ad3d-a71b-45f6-b652-bff5c4436718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac806d-0624-4051-9986-dbcb96ab0b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "492e5782-24aa-41a7-960e-e2348287e6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b4429d-9a70-4bfb-8299-baf0f0925138",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45586a4a-261a-4d02-ab77-e462e255f99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4a5696-1b07-49aa-9ef0-8c0d7b3b7adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd03de47-f35c-4fda-b27d-e62bc5244d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52de63b3-2219-4530-9f06-58c35bdde640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92577c2-0842-489b-9ab8-d5a2dc6178b7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5365be4c-102c-4ea8-b8c2-410334f4cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145eecbe-4a54-4d17-be89-838ecdde84b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470e4ba-89d6-4607-8287-aaebb8f4f913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49badcf2-a3c7-4823-be5b-494a3e8ef782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7436f722-159b-4177-9c55-d2baf4bb13c8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e1f9c0-bee0-490a-b386-173a0cf35f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76481e7e-7172-48e0-a43f-faa160ddab34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db02838-bda1-4e5a-97e1-17fea23cb96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49eb16b2-d194-4bbc-8de6-0942049c2cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c74b2-5a6d-403c-9c59-1cd7dde71cab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e68c54-cda3-4d58-b1b6-ef10d896bd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbff5b2-560f-47ff-9275-298965bdb119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6302cade-dcbb-4c65-8076-f4cfa86637fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8169b2cb-2ad3-4e24-95b7-f90a0d9946e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02950437-f8c4-46d3-9d15-cbd4a5674287",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d54c291-7873-4e81-9f9c-871050a86d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5655e1df-45c8-4cf1-ade1-542157969188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353d735f-989e-4172-92c4-e45c3f826003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba82a614-a82b-48b8-8bb2-f410324d317f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43056839-d4d6-43c8-8af9-cd5fc5f31f0b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e49d561-64db-4298-baf9-1f465158faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd80230e-594a-43e1-b414-b4d0aec4d7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e3713-73c3-402b-a0a0-be50d134153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93067ac-5d7f-4469-b543-d831b848189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d46104e-226e-4eec-bac0-4b51196fcb2a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eca920-4cad-4bc5-a5f4-59b26e83f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e396434b-be20-43e7-99c3-22e330307d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e190f75-6c4f-40dd-ae34-e802926b18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4165d2-8aac-493f-bc4d-6bd122fb47c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847aac87-103b-419a-bdc4-bd16c2e67e68",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b706ed-bc7c-4658-a172-d43f69519547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca65c36e-dfe8-481b-bc86-417f4d315cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3efa7c-99e3-45ec-bcf9-8975e64fb8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9a7e41-e878-4c22-91a6-10e0cfa56f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e491601-756b-4230-9d98-dd0996b90cea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e90e9d-f443-419d-aa3d-5cc24356535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0390dce-6a97-4b08-9fc0-3339ff70f4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1cee67-8f7d-48a0-bf84-a15314a626d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4dff43-7f63-4618-85af-fab52ffcd817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5670f0a-5c65-4a94-90f7-fda99553ac31",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e38dc7-ace6-49a4-a20d-5734cfff038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6c952e-f3f7-4a14-b1b1-29da99c904af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225c3a22-2a0a-4523-a380-64ea8b103559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0ad65b-f8f5-4782-ba1d-35b328709a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b8bb4-a5e0-4ec1-81dc-25dee15028c1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c343a1-25da-4001-9d01-8e2379fbdc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9530eb-dadd-4252-94d7-03677c1bad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364661a8-ae6b-41bd-bf2d-dc42f1e23e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9132d62f-d0c4-4d4a-856b-db0cb6690aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a91cdb-6532-43af-8bd9-0d606198b337",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c578e10-88be-41fd-8f5f-41c2b712bb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b4fffb-fc57-41a8-980c-29af9d8003ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c0e275-31c0-4c08-9b60-407e8bdc41d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d6ecfc-1dbe-45cf-9569-c7e226d95ab8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cbaa186-5c96-4fe1-99a9-f6dadd3b9fa0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "583d83c1-52b3-408f-8a79-1557f2b59493",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12badb3e-2819-4bcd-b7f2-aadd3996705b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb21c6bf-73bc-4e22-8633-b214de6f1315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1872b3-d196-4557-ab36-0f557d9c04c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3a8c2ec-4777-4171-95b0-e8628adf1903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe0ea7-d61b-4a0f-82dd-a3c8507bd9b1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9716f6-4de3-4d54-8e77-0f338a79d78d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fd5053-d136-4cc6-b06a-b145b5940898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff92a9de-be73-4773-a6bd-c7253a2307dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "886cc3af-9e13-41c5-b7f8-04d8e630a347"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9118ab2a-f0a0-4682-992f-9be197900499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad5035a4-b15b-4247-8b92-a1f138eb9a2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1226c7b4-26a8-4011-9823-ed7c37afe188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50ce14ea-7129-4a01-aa40-1255df52bc8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8fbc873-77fb-4bf2-aeaa-69a65fbcfecb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e46e123-b5c5-4258-8998-5e17575eab18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a414d16c-6f49-400a-a36e-46110f89d27e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2b1fda1-4788-4356-9bd9-bc7c28e6e876"
            }
          }
        ]
      },
      {
        "id": "9ab965ab-e490-4bdf-b4db-867dc26f6c0b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "50bcf6f7-7117-49d3-a929-68a7f3b48410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dec97ef6-4045-4dd0-80aa-02d1bf2589b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a54854f-0856-4b50-83d8-222141aa7381",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937964b0-9827-4043-add0-bd6390e9bd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6351c869-e01e-43ce-9b8f-a48653738613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5975477a-7043-4e66-9099-f4f0be8d6ebe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87bd7d2-314f-4db7-abe2-749e904d7a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da21c43c-7ee9-4c83-89e7-7cc5eb36eca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e57f58-5255-46ac-8132-7fbb932c0854",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a36fdf-7fd2-4cb0-b002-4288dd66b98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999efd3b-4744-4b10-a4a3-34dbdf71c315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0228e96-98dc-49fa-b47a-3a5c69f46746",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d717b8b-9172-4d24-a8af-d332768e0791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f4fe4d-be00-4207-b8d6-74dc08bea53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b07ba-e5af-4a82-94b9-ab6e78e50b9c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56906603-c6c6-443e-bfa8-2d3ac790361a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e05053-563b-491d-9916-152e2f78097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f841e13-bdd0-4656-ac48-67979d700029",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e98f7ae-eca9-414a-bbf1-dfb36bc7ae0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b424048-3b94-484b-bd36-2bae84033a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f6cfcc-708f-47e7-9664-2315bd695e66",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ec4636-cedf-4d8d-b287-fc77eaecf06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63450216-f5d5-43e5-a489-9a51716170f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175557c2-9b9a-474c-856a-947c0591af5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e219b8-875f-4041-b499-77a2e6cec1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba94496e-341a-4171-8dc7-97ceb6993498",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e2155e-cbaf-4839-9125-0f35dc44159e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0dc6d18-32fd-4f6b-a32c-74fa31ae2b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca688f20-8e07-4859-9e6a-2257fbea59b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076a0a7d-fc7a-41ec-9140-657715af6605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb08c694-6468-4654-a2f3-2a42951f126f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607b21fb-326b-43cc-8c5b-531a19e2177a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80f60fb-0894-4b05-9746-f4a907408dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039ce8f5-95d4-44df-b319-9bb9d6e4bdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2c92d8-aee3-47a6-ae17-c18db413f342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a37141-00df-4e0c-aa07-c41661c27437",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee6f26-f0f0-428d-8135-37d1d249deca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a612f43-11a9-4755-8d6e-de4d01b0186a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f940bb8a-580f-40ab-b053-a330d553b3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afc4bfc-4ef3-4c50-9685-bb5ae120b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcd4a8c-f576-4a8a-9564-a498f62e2d5d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e02f1ee-a341-4d30-9ee4-baa58143a181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca5db0f-1c35-4d70-a46b-e322d4f8a709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e619584-2c7b-4dd1-9ac8-70327e668f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa456c4-2b09-4215-be92-fff3c7296ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cf50b5-390a-4f06-b43f-8649004e7375",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe3c76d-258b-4ce0-bf22-7a34a44afc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b04b42-804e-41b8-b827-0a1a93a4c964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ac805-177c-48c2-ac0d-6e2718983fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1441f650-15ab-46e8-8d8d-84228e2b80ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e0a1f-4474-44e2-b1d9-cb86a861e809",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48650cd6-9088-4d1c-9916-a1649ffcf8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038227f8-c3f2-41a8-8c33-4eb18ba7d955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92673ab1-b21c-472b-b330-f16d9861e5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294cdc95-748b-4796-b129-335ca8d58f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326ae588-b99a-45cd-bd68-e3d690039c24",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f105516-9f83-4c2f-9ec6-1012bf5976d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd1a775-5bc7-42cc-8444-b6a5c8f7c888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a796cfa6-bd6a-4794-a717-cfed7c504879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d5392b-2756-483a-97b8-bcdb68d16d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf2f7cc-f7ae-42fb-83c1-670c76b3008e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a04945-93fc-464d-a58e-0a98be8f477c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5ed34b-d5ab-41ff-87e6-740cb9be635a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040bec17-0925-43d7-b1ba-0586301a45d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ae338-0ded-40f9-aa78-a1790be73723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4cb10b-9258-4018-8f1d-7099a45ba6d0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6d06ab-865a-487a-9a28-b64314cbdbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3b2e38-c9e7-471e-9e96-9cacc537d23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a48fa3-c02a-4153-960a-ab8bde23dc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a00fb0a-66b4-4515-9902-8279eaf8aca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4789779-2f7b-4c62-9e8c-23622263df11",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ee9016-8f79-42b7-81ea-099ffb92bd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3722822c-b6b1-42a0-9c04-3d53f943af22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03ddb2-570a-40f8-a471-5503a452e5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0af1b4-f3d4-4282-b47f-4e9191148810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28049a88-ab59-451f-a776-7cb3249c9a29",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940cbaa1-9bbf-4e42-b344-08b434f4f5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc0cabe-f5ff-47e2-aa04-8888e41c51b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34c7832-a861-4510-958b-9fd70a99706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b430586b-56d2-4dc4-81c2-ce960335d20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f0f3c4-b127-4b9e-a05c-caf2bf366dc0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6353bf8f-d4a7-48d0-b7c6-1aee42a0889d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080213c3-3b65-4d37-a0c1-7edef0de47dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bcf455-50d7-4c4f-8394-9ce69a4d6e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1f792b-8c2f-4341-ab4a-71f94e8e5c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb644e3f-c07f-4f1a-863a-755656b97552",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc080b-72fa-4dd0-be67-e58d1e55c4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267cfe30-fbd0-4641-b41e-eac467f86180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf2009e-840e-4c8e-924f-82160aedd99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6cd4b0-e46e-4ff2-8279-acbfe592a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6551770a-ea90-4b9e-a884-69f3242bc3ca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0d01cb-2546-4243-983e-5d5f6c7f7710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171b6db6-d8f6-41ff-95a7-c7b6a31e1369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ac6765-de3f-4043-889d-1e24769fdae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2618e247-d792-4e85-a414-42bf324e0e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0659a0f6-5c43-45e2-97a9-349311092092",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f374b8d-6015-46ef-9c88-3e09c5b58fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a81dce-5624-4e0a-87dd-cf4654415160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f0a6a-9a85-48fb-b38f-041185385636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979c4f7c-c70b-4709-a269-857e304d4ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b890f3d-de99-42c1-bac9-8a36b2faa41f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8431c3d-7018-4f05-8395-dda876dc3459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2842498e-5176-4917-9fb9-3e747e6f2e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796aa66-aa8c-4dd0-a09b-01aead3242a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b2604a-1fea-4eb8-87e9-13a3a30a9f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3a454-b4d2-49e7-9cdb-a45e1c1ca150",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f169e-e37f-4a4d-b2c7-7d5c2263cbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5fd0963-74d7-4146-94d3-5c29e4d54da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba08786-c361-47b0-8cd6-5272c7a3f083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff377e67-2bb2-406a-a95f-08d9fd4e8eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64bcfbd-935e-4d33-af8c-c5471e6b3ec8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a7eb19-2a3e-46ec-9ecd-da28b71b674f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec78fa4-56be-4ba7-9bcc-eb5f33ff93ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25560aa0-517d-4d9a-929e-72e39e791eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9adbf2d-07a8-48eb-8628-cb448b42b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7ac8b0-92f1-46a1-a55d-5dad26a4ce54",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ed064-e4e8-4dea-bc55-970785f5e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2a1c74-ee0e-498a-b60b-4c3490850b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d272706d-467b-4e60-9ee9-0a574c81a69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1226c3d-f2da-40b3-9b02-9951c52ab6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0406cb-0b05-4586-a123-9cffab0674e8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b7461-ccf1-4fdf-9742-64cc00204bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57c7334-0c16-4b80-98ee-353b4387389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0a98a4-d36a-47e2-9e29-044d30d7cff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215860d1-523f-4430-832e-48c142ee879f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b1fd7e-fb98-4ac8-93b4-d6ab96e2fc7d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224fb56e-ee82-4f87-907e-a01ee09c449c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ed0041-80f1-49ce-a50d-1c3321946f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e09ac-0f9d-46ab-a720-ac54eb12c699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85d5506-e2dd-4eb8-bf9a-66cc6281bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151afda5-15ec-4611-a704-54d43bc4b638",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1585b14-b4a3-4a31-a582-30e54a67fb6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5969e5f9-2ba8-4374-90d5-d3f9b386c05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cef5cf9-e22f-4d85-8d2e-4ca548b533af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e8d68c-3c79-41b2-ae6c-d34fdd4016f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4289c321-3521-4a45-8982-4db06023ebe5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae73b2e2-a166-4f8c-9833-7f269a825030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcad1e4-23ab-4deb-a11d-4122c6be12d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f11a07-5a27-4892-bb76-ed0e15a53670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6ee2a2-4113-40a3-9035-fa2240b09385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1f1f7d-6906-45ff-ac67-928b4952abab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3b8da9-7d9e-483d-8ec8-020dabedebee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f95a57f-e6e3-4c5f-ae9a-1088ae24c206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b610d-ca68-4718-a289-06a03aab3e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5112d710-062c-4c96-b63a-fef78cc20321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9438f-b0c4-48e9-b7b3-203e4ed32638",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485e109f-0232-4481-a88b-829a6057ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cb01b8-57ee-4c48-a137-bb4838e08e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb447856-35bc-4c7f-9396-621da803c79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7843050-1685-49b4-a361-49503026f910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8332086c-b615-45dd-8ac4-09e8204bcbef",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596d7254-3066-4924-abec-50e90ce40475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7460e00f-6981-477a-b0aa-c2ceeb8ae4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef532ef-3fb4-4b1f-8d51-3d5cd737355e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc48ccc-e5c3-48ca-a9a3-431e7ae8127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac51c45b-904d-4f2e-9421-5094d40b97f6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302891b1-bbc6-4a99-ad35-0f53d618d215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d4a027-556c-43e8-8c89-e77223bbc5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a65fa6-83b9-4d1b-b697-fccbc6c95d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c015275-e39f-4ebd-98d9-58ad89fb5410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f86ae97-7f06-4137-b651-eb9c06243b37",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d52de03-cf47-48b5-b064-dbae7be0863d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5403e821-cfdf-46d7-954a-128c4bdc074e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb1720-bd9f-4c7d-86dc-cce43b8d47aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049f10bb-53f4-41c8-bf67-d17aceca3786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6edaa5-7901-4f2c-ac13-b7be8f08ef08",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d281b-d249-4799-9f46-b63f7513991f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4275aa33-a4af-491d-b9ba-792127372358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0c30bf-9898-45c2-a52b-8fa65204fe72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b111cb82-0556-4624-ab4f-6c184a9e00e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8210d52-3a05-4366-9327-e3891a5e7a6d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422ca39-415f-4636-ae84-04fbb8849ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b104f85-2fb9-4642-9159-af136fbaf883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3aa998-f85c-4ab5-bb45-41b2af75b295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93b21ff-7b16-4028-8240-845fcab030de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e77e10-385f-4d70-955d-0596527acdcd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3b241b-01b3-418e-9b7e-de7480a30d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9351cc-55da-4364-9ad6-38731f54adbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdfd79a-f43d-4add-ad3e-69ad9123a509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23d0e1f-74f7-43ed-9c55-fc213344f2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c3d29a-69eb-46d7-b1d5-007c12aeedc8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc311541-f120-4282-b5e3-7505fc65d0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aea95a-5cbc-4622-bddb-43b4df44a7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ffec64-6812-4f65-a015-80c105b4f76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70576fc4-dff8-4759-a0b6-c18246f083d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d349e30-31cc-496a-ba67-3ea2772004ba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478b2558-eb70-47ef-8d0d-94d17e2d9edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2af9226-a907-47b1-9221-1959e431214b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a910a-3960-42a5-9bba-b4b85e9bf278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32e767c-2ed7-46dd-ac50-a000be72c1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c67969-63c4-4a9b-a2d4-1b6b627cd3f5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff7b7bc-4ce4-48e2-be70-a5faa8d5a65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db90256-e2b7-4e67-a026-088afac9c0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82542dea-4584-4017-97db-586d873f19aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c7f00e-f99c-4c8d-b396-3b34371bcbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd4bcc-1219-4053-a5ad-509d81772245",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bc6aae-18e7-4f03-ad48-927f16c098ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53989623-3d91-4004-bd13-4e887ee26ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f130f66f-6982-428b-a583-29d24be2de5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bd2542-3c4b-421f-ba98-fd31f39059ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8b1bf1-0a3e-402a-8bac-78af86c9fc3f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3de1b2-57a6-451d-af1f-fc75a9cdf872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d491290b-498e-4216-9e6c-63ed184cb3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36400e7-c9b4-42c1-85e0-d3a85604165b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f317b45-026e-45aa-81e8-dce257a8a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71d28f0-5d24-4fbe-b52c-71d12d54c302",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7a8233-acdd-411c-ad5d-49aa5bcd6807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e7b903-c136-4790-a579-863756a163ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a17931-2f56-41a5-b482-f76a53247ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a074e45f-a7e2-46d0-8471-84d4b7c173d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48331853-f06a-47b2-9bb3-e11c8477c44f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c1ec19-8a2d-46de-a144-9376e4a93be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c7cc08-3af3-4d0c-99f2-ab102467650d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96908268-2b9f-4ee7-84f4-15c0d494551f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac273d9-05bb-4b1e-81e0-36d841d28d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffdf23f-ca84-4d18-833e-0625be6447c9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70cb886-66f6-48a2-94f4-967fc3195cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01caabab-7a6b-4050-bf56-c0f0082d290f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3489872-c6bd-4869-a050-b4b05e8b5db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f33620-02fe-47f9-927a-4a9160631e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227699c4-5e98-4d12-9db4-c3eb7cb7a7e8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d703b6cf-dcae-4863-9e0a-a6d3306ebe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7265fa04-7ca6-4b85-b632-07785bc15997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dd8f0e-4f76-4fce-ba35-0f5273f7d1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20aa0b9-2630-471f-b955-22aa309dee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d99a48e-64e4-47de-8055-b5c8634b15d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c581780-bb13-4075-ae75-f4cc6032b739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f42f86-9f1c-4983-9633-58053c6b9b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d870bef2-4285-4531-b8d0-c107a2e18ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d73732-ea90-471d-a335-c91e62b5047f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499f34cc-37d8-4013-aab4-649b59536420",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5d00a-d1b5-465d-ace5-53b2e4dfe81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f99aeb-832b-4ffd-8e77-134977ec548e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fedbec0-bfa2-4917-82ce-885f9e43d61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3806c4-dca5-40b9-88e4-2f2a7b6bae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a72322-6da2-4e83-b40e-7660594f3047",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20c6e1b-1612-47f1-a11d-7fe4289de7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a66ee1-e088-44ae-b74c-4f8439541e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc648c4-640c-45ea-aec2-95cba43710f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d52f740-9e50-4a7d-b74f-7d5f4ff985d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eda042-4b84-4183-b095-0e317a23ed8d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcea24d-38e9-496c-a189-2c7a363020a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d471d652-f587-43a4-b210-1f91da84dd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d998f2f-3c0d-4a29-a501-9abb29c31095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6240e7-2c1c-4ca2-874e-2188a1941275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e990d58-438f-440f-9e80-c4889a1996ae",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ba9462-20b8-4adb-8c07-d93d00d954be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f55dde-52d9-4513-83ed-fb579e8a789f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c96bdc-3d41-4761-b4b6-e1ede5aacad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27173082-2ad8-456d-83e0-51dce6ebaa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64087ee1-6ea3-48ee-a555-b0d03c27ca06",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59e3142-e89f-4980-9092-75bfe1ff1aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2e2098-9818-47b3-99e2-e72ad7b41277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752d1d02-7f20-4ff2-85ca-06b9513c0b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c589b9c5-d114-4bfa-a73d-100942afba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa4e5f2-dff3-40ff-b5e7-e51087b6ad31",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acab5e00-f980-4e02-9463-803aa81a2259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb7524d-f957-4ab0-ae87-922f9a146776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ce54d9-e9e6-4f4b-90ea-10e12f3c4b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9133dd-72ca-4fa5-80a6-438effae18d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee93cc1-2afe-4bee-9c28-e258bc469668",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be0442f-cec7-4f8c-9983-feed41f25797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c46854-0540-4005-969c-0b90b04aedfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ec045-8015-478a-92f4-0d6dd7e1627c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb4ae51-3e05-4007-925d-5a3f56eada3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c58ce0b-4f29-4b11-91b6-9339a06bef0f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd7d7a0-6606-4bd9-b25b-a84c81d49609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2def053c-91ab-4391-b67e-22844df246d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f8d790-23a2-4710-94b9-48866d140f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16593314-c150-4fa7-8e33-c8ef3e29b5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19396ba-05f1-49c3-8578-91b587ed3c15",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16af8fa-5e6f-4286-8134-445cd08cb23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c6e8b8-c3e2-406f-82b1-7590bfad1fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ae0e9-685a-400d-8cdc-211b27ee2944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe979bc-d08a-4185-815b-ad91572b7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f165bd7-5d2b-4328-af9e-7acf7a0e7ba9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c30331e-562c-43ce-aa90-936eb77e703d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07441531-607c-40fb-93f1-12d12d9690e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a919a949-ab9c-45e8-b43f-1dfc8a49dbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78bd17c-0b79-4c86-bcdf-b3e6d1fd917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a16d270-1e8f-4bd3-a300-b7c5c5851923",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0400c7-3a97-4bd5-8144-1bae278513f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50daa605-3f25-4111-ab7b-8a90b571c652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c9f944-fbfe-462b-9890-774cb735e931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c047eeff-5e00-48ad-ab50-868e96204806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e59b5-d88c-4528-95a0-e16495711090",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff157cb-f59e-4a59-a559-1ede8a761f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58694309-b22c-4f3f-ac1c-b1050cfe013b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce7eee9-5ec9-4c63-85c3-348d6f4e4bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee70e329-8f69-41e4-a55d-94a6c636add8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ac9860-ccda-4e7d-be32-5c1620e08327",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a68a5e-49f8-4e2d-910d-7b14b81f0200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea6ac3b-040a-43bf-bb4d-c74536791273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be822d3-a041-4b91-8cdc-21436ef520de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed6e685-ae05-463d-9e1d-af853c8f2a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9a11ae-9c2e-4b8e-ab9b-bc3b3f500f25",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45921838-edea-44f3-816f-63ada081f78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb94fdb8-67ba-4720-a857-b133a0277c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba5db98-9dbb-42d8-a6d8-939d1e40342c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b58b8b-677b-49ab-813b-e38be995f562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bed050-9749-4b99-958c-fa1f11e769ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8232a7b5-1a66-401e-aef2-b949aada8336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce6607c-4927-4687-a330-6fdf250d2178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf78e3-2819-4b4f-b13f-23c620b4c2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495bf43c-93b8-48b5-92ca-1125060c57c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e69ef6-0771-4407-a029-b7a0e17a876c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220d76e2-5728-4c72-abeb-204950e2c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656931a1-7ab5-438d-b205-1a68a1c50c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f9ed64-f148-4c96-907e-18a4597dd4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06439b8-16ef-46b5-b403-2a6691db2ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f94e44-bbb6-49b8-98fb-5fa559206360",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c715b-c30c-4e03-9544-542398cf04bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeca3582-d3fd-4fca-9c2c-83bb97d88b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091fa2a7-f418-47ca-af2c-817c78f19f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c430fdf7-a444-4fd9-83a4-ace24fff45b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b295702-576d-4b63-821f-66c7355feb5e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163a30cb-da57-400a-b138-1ebc26143668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee2e23b-8738-4fff-9a9d-7202ce09ba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46678be-c34e-4f43-9593-bbb620db2d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bd1ca1-a2b5-4308-98e5-4b76496506ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62534684-7a28-4834-807b-7bc66bb3c57e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaec349-5ebf-4702-80a5-7081fd5cc562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504b15a0-d7a7-4fc4-822d-1f1b930f209a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f275f5-79a6-4966-99bd-d173acc39198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb75fd9-aecb-4324-b668-298677c4836c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f964d9-ad55-45d6-82a1-7e8519e91c9d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cd25ce-d5aa-47a4-b7be-94a1a17b6edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736d8842-7f10-41dc-8813-a5dda8061f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5574de-f318-45de-94ed-ebfe41edfc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0754e1-16fe-4106-84ee-110a3ec378d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51991ec2-a0aa-4d1b-847f-c1c3e309c3de",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5262abcd-7e15-4504-a17c-5cfc29dfdee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a67cd0-3047-4327-83a3-f9c6b4bee280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90855fb-d676-4a3e-8eb2-c016595a2449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e750a0-d407-4e27-ac25-154014c876dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8e155b-24b6-4eba-ad28-a0b4d038069c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428999d5-b3d6-4750-b242-3dd331161fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f28fa1-d5c2-4b6f-ba0a-6fe51b977b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b97a453-c4cf-4660-bf94-444faee82d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb0e772-9a0e-4544-ae15-e7a41f89c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff19c41-0c97-49b7-b937-496d163d74a5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad19b88a-b2a6-4d44-aa24-1458149555f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b19260-1106-48dc-948d-5ae6c0c8359a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d3521-b688-4533-a54d-b0d9ad1f59c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f034e731-3238-4b2e-a6b1-4ceda179a9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60338c8-3863-4410-baa4-3a5c8b5f7e40",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a7c06d-4755-4029-8866-5287d6c94698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73d5c6ef-4a94-4ec4-bdee-ab7f2283510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9d524f-c31a-4921-a5d4-fb56f604055f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d552dfc-4b1f-4f2d-9a85-c5f532c08397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368a6f8a-f2d2-487a-ad29-ad0087b46c9f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9e4eb0-5276-4e0a-b2c5-7af827def45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b77a0098-646f-497f-911b-34a75ce10a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bc79f0-1481-47fa-8d70-f8181439e218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed7cf8b-c97d-4b7f-85d8-719b42b48094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef0ad4b-12f4-46ae-909a-47acc635d29a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19765cef-7640-49b6-8747-c8716be0d548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776ed49b-368b-4df0-9b3d-81ce7b095c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32563b4b-5677-4bed-b3ae-818c117e7c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2386535-411b-48bc-a279-c31b4543af07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e9bc4-00b2-4a24-b9ef-45e56cce5a8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d355be1-5e62-496b-b697-c5b4c9ee1664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2190c6-6c6a-4e54-8fb7-50cbc0e0f1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f737ec5d-9b8f-48f1-af92-533128d7e021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d56408b-a154-488d-ae9b-4f80a5712919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9daa06e5-0063-44ed-a80a-01c3bfab4378",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de93ffa-0a50-43c5-b1dd-ea8a79c028a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0ac8e4-948b-4403-a3ce-ef591e7f5dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90952e70-e359-4024-a7c7-3ad884303416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f613dae-c84b-40c1-883d-c7d7d6cdfe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06857c50-b6ab-42d2-b2b8-c5098ec8cd19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e319050-54f2-4652-9e44-fee7b527f603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f1fa35-b23c-4193-bfda-2a7d0d385607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9657c528-e354-48a4-9e4e-81c226167fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf05b4d-e2f2-45e7-b7e0-85dc22063e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8333d6aa-cdc9-4540-9b10-08834807f17c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c0695e-068b-46e9-81c3-7ff6b22bfc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351854af-2b8b-44b0-b092-2b8f8d24250c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48557354-b11f-4b00-ad5a-42389d401a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4283ee-739c-40e0-985b-7d772e66a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ac70e5-f72c-49bd-9f09-5119b537cb89",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae90692-2991-4ecc-a114-9b95ca17beab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a543e1-96bf-4f67-8381-96072f91220d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef0fdff-fbae-4cf5-931e-27ad6c6d369a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b8ee5d-0235-4767-8d6f-ba248fdeedf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48807809-d28f-4533-a988-390fd400207f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f433463e-0866-41ec-aa9d-17e5b364a1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3841f0ab-d89b-4514-bc16-8dc140c2557a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb8ee53-7340-4c56-8b70-ddf0a0dd6308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba6c1c8-8abe-4def-9a34-9933afa2f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151a522-ba7e-4037-8003-45779cd66b61",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c6ab0b-a717-4736-b27e-82697911a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a867eb2-78e6-4489-ac2e-4bf73d10f7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bd1ae0-5bae-4b47-8954-99ba2f871dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a7438e-8d75-4d35-b265-80e3165007c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6fcbde-593a-42ff-a67e-5611e8c001a7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc6624f-0f21-470e-a33b-0cbc82212bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c7bfc0-4f82-45c1-a3d0-06160e1ee73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfbb20e-0f23-4f2b-b24e-83b540e7a698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93ccb5c-9f41-4d10-a34d-fbc5622a2407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206608aa-e554-490e-9829-ee5fdc18d582",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ac82ff-40c8-4660-adfe-beb3a8b1a788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdf0ba6-99bd-4b9a-b872-f8e3c3601930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e76b365-591e-4a30-9798-a6115c7ece75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04699712-84d6-469b-8eba-b0eaa02ff916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a596379-af18-4cc9-bd7f-edb4ed547c9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681efd67-bbe8-4315-b5d4-f5b114ee29b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99353f9c-c563-4131-9d42-7309da8b0353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b318413-e662-43ee-ac28-0a8fe1a17b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd4b893-dbf4-469d-b7a6-a5ad90b99577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5335dde-b34b-4312-8639-201d7423ba69",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e4948-3e04-4563-aa07-37f7aca996d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f35a412-b991-41cb-8e98-9d7b07cfb5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523bfcd2-fabf-454e-aa20-325e9f414057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be7e467-3369-447a-aaae-3fc52d89fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a055d6-0622-4060-a58a-22c09f6df50a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad72d4aa-bb74-4093-aed9-299e93056b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673e7591-d44f-45be-a10c-256d9e51cff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b7c153-aacf-4dfc-95c7-d609314fb059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae4010b-be3d-4f60-b6d5-d647ec075de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260807cb-2b7e-40fb-ab7c-203fdaea23b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927c0665-9ba4-4a11-8a0e-a79db7d84523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce50bb3a-0518-429a-b965-6bc91ae255d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27f766f-d17c-454e-a91e-f7f3681912bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425e806d-9d87-4c37-b76c-c847610d9bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b8a544-a75d-4b35-976d-b39adb3bea82",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42b254d-ff51-4f4b-b072-3661e49cbb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9820a1-23ff-45c6-b107-c7ffb120b8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8985b1-8f31-4963-8c8d-ae95e2dcf93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69517edc-f18a-42eb-b92d-92763650c1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598423e8-c313-4356-b90a-16b9f7a6a464",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae51272-83bd-41ec-a93e-b2068b199404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea45b1f2-2d01-4038-b52e-e42838076501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4976cf6b-c749-4901-8e73-ced5c4668bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2719f5f-5e2c-40b8-b4db-e010c39f6003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90752f97-315f-4787-84d4-8399e29bf062",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1ed6e1-8434-42bf-8243-fd3d523d2563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45218300-1fd4-45d9-9f28-bf6f1185ea2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca70f833-1e46-49c1-8dfc-76a530e30154",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623b501e-0bb4-4306-8fe9-84c0812672fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf18bb0-08ae-488e-8a85-9a6a95d59f7f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb58ebb-d32e-47dc-96af-801b6cfbb24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e577015f-4927-4dab-b2dd-0aa9564826cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6be6ac2-21f4-45a4-bc0b-c86a6da4c9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115faaa9-d315-42a5-afb8-84019f3baccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2176c443-bbd6-401c-9234-69b209092460",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5612ad30-dcb4-43ba-8154-592921987146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a5a3ed-f76a-49db-aecc-ed31ffb19df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0440a3-7e53-4d29-a88f-58a42c146722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc9e004-f660-4e79-9646-52a8a2373cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af945b-12e0-4a94-964c-34d4a139dc0e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f42a982-0d5b-4b88-99c9-d2a837f2bd0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52650c3-7629-476a-9cbd-464b7871cc93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d3ffd8-3d19-4c37-877b-0c4778ba400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647d5d2e-b8c3-4665-a07b-8bf394b8cd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d0417-feaf-40a4-a5f2-8b870c3dc663",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69be8a8-faaf-4a2a-a1c3-2c9fb500a798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc28b1c8-8364-42a7-b6f5-44c9ffe56262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308400de-b31d-476f-b01c-301d5a206217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd6bb19-f5f6-41ff-99a3-d11b4159ede6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb26e6b-7cab-4363-bbf7-aacbc3f54ac0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49378f68-ee0a-491c-9c91-d7c3d6273548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea448014-440c-43ea-af0b-895fa1147db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460abe30-f78e-4625-92fe-d094067b58ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0324566-ca1f-4d62-8abc-7a5c357cc47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8fcf5c-8bb8-46ee-89d6-c50bf9cdf309",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e2f380-760d-4b21-bb17-4c7c98c6e926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f59ec2-dcd2-462b-b5a7-cadda6806283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91cc413-9d3e-4fb8-8ce5-99306c21135e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552a06cd-0b74-45b5-b152-1b8e3cacadbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3340fba-06a8-4a11-8d98-890dbde8b1ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae5a85-4676-4af9-bc0f-a3ded93e03ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c81526-b40e-4acc-8acd-622cad8808ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592bd03-118a-48f5-b786-8b731f45b446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adc0da8-06bb-4a0f-8134-543f29227294"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d20eb28-e881-4768-abb9-59ef546fc51b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f9b981-1c0a-4b71-b973-2d9343a79d16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f4269d6-d713-4f23-befe-01087bccf405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8587f8ad-6825-4b27-8f9e-cc4e5a5ec874"
                    }
                  }
                ]
              },
              {
                "id": "a13c2883-55cb-4521-8ff9-783644a8405b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b073f5c-0af5-49b8-8c38-5197b83c84ab",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9290148-fe6e-4337-b376-c15c7c45f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "94723d6f-507a-4ee7-8c7a-261c1afefd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc9685a-0ddf-47ee-af13-077870b99577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b4f59e-bf77-4171-aed7-c89db8eb6194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471e2be9-f64b-4d1b-bce2-5b22d4463ea6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfd5603-b057-4031-822a-547d40d5fe62",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb154920-de9c-4860-8178-8ba9465c2189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736ab4ad-6e32-4b00-819a-ff1e240d6678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ab3cacf-dba8-4019-ab5b-375652c4e83f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "248675cf-75f3-4d88-8eff-96a1a22cd4ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc554e7-c2ee-43db-bcb7-59fffea64c76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6736f481-8d00-4608-8f0f-19a7c3c31cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e95e725e-a16f-4911-adfc-a900a1323323"
                    }
                  }
                ]
              },
              {
                "id": "efc72fd3-2485-42e9-a590-ddf66392783d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "757d179b-9df7-448c-b98b-8bdffc9e6e8f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce72af2-358a-4a32-b591-209cd6c18721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d085700-9ac8-404c-b96e-1501e8fe50b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1636e5-da0a-4c4f-8b8f-229ffea03751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ba4298-c9ad-4b3a-9f90-e0cd57983831"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a175e29a-8e70-4cc4-956b-f248cb652f83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f95e23ab-bdc3-471c-afb6-15286e5331c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63c5285a-684f-4f77-a23b-c1bc7afe96b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98c50182-9a42-43e5-9c3d-162a6ee392bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc321f3e-8676-4aa9-9d62-14fa56e0063b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e23d37-ab50-429c-909a-30ab066792c8"
                    }
                  }
                ]
              },
              {
                "id": "99e0e134-27f3-4120-a456-d50a1a688c13",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bd7178f-90e9-4760-b741-685fec5d96e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5100193b-250c-4444-a750-301a59cf6d03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afd92b6a-151f-4669-af72-16ba6325a5cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b3cab4-d9b1-4fa0-945f-365a70f72b68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21ca9b4f-e492-47be-9771-67b6a338ebf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "328db3f0-5c8f-4838-a721-5302beeb0cf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ef7b85-f446-43f5-8e8c-fecaf43babd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "590b6917-16f6-454c-ade8-f6baa9fc7a98"
            }
          }
        ]
      },
      {
        "id": "e4cfb8a3-97be-4f60-aab3-af5ef1a94f97",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0b52dcd9-a806-44cf-8163-8655550c66ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5132d16-59ea-4dc5-b76a-d690f3496156",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbea8d5f-1c83-43dd-8487-1aa3b18058e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "71e6c7ff-8057-4d57-98dd-f1da9f482983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de911d17-6c55-456f-b846-b7ddba6a99a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e7003ea-1a10-4b3e-8b73-04584ee58f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b28fc8a-eb4b-4f3a-a863-344c02825a74",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a57c0df-13a3-4e87-b2f8-944f97044cbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d1c2cfe9-302c-4bde-8ff0-46899cf98a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d1b215-17ee-4dbc-8e5c-6938fcda0bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6643cf71-1b89-4f54-8a78-4a82aa864ad0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e170249d-8271-4376-936e-fe53c502bd15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7c43083-7b3e-49b6-88f1-35801eb846b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b49df0bd-ff2c-4291-83ea-5efd37ed7f38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb41b88e-f37f-4349-8ebd-006d8a4b382f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fd452d3-a825-45e3-ad9e-bfd2af1b28a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "21013c53-109f-4d7c-9178-01295e19aa5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06567a66-578c-4cce-9a51-3aa12508299b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af0fafd6-9c23-4314-ae6b-e9318340a651"
            }
          }
        ]
      },
      {
        "id": "aef30759-aa0a-4824-b4ac-0448be611615",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6fc0cd72-2152-4256-a4ac-f7f94c9513f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acca6b1b-ad58-4daa-bafe-4d867ff11cbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17732495-2bb2-42c9-bb63-9f6e547e62e9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71741bdf-27c2-45ce-bf1c-0c1d3a1f75b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6736e3be-3ab2-4da1-849f-627b6cc5e423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46220ea5-3bfd-47cb-9b72-5cf8df410e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18ac67dc-62a8-42ac-befa-d632a7bb8db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e2dc1b-1e82-4324-a3c3-3b23bc402b5e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d307de-a347-4f7a-a3b4-b0d4be8fa882",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c4da95-9770-49b3-996f-f70f4f6b1944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf943fb6-cbef-4808-ad65-ff5c4ff13176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe158bfa-4f54-411d-9a0f-252eaf8ddc8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee33d35f-b380-42df-89c4-759a38c1ba30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aff5a67-7395-4ceb-8acb-ad13d5991fab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75e7be97-dffe-43fa-a8de-9a1a7e289b27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8debca68-d924-462f-9704-4954b6e65357"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fff6ea5b-2755-4c0c-81d8-795d7f4a6150",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a95d512f-7b25-4664-804a-d1a1b5c7fc84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa01a270-3ff1-4993-b675-225751832ea0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0087c626-d210-4f52-9609-0ba8b41d9fb7"
            }
          }
        ]
      },
      {
        "id": "8adb20e9-5058-4a74-a067-a7d98f7b1343",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2a184f81-1565-4d73-97d8-d06ae4354f5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da7c445f-765e-45df-ba56-eaf6ff4b3da3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3456fa0-d17d-4801-ba1c-d8ceaa8108ed",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92076ed-49dd-4db5-9f4a-0441ce69dbbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c1ffb63-070f-46cc-82ef-e31ab43b795a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c288b19e-5288-4240-b8cd-0e9934c37f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a22ab56-0b4e-473c-a381-fa9ce68d4445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ac254e-1f78-405e-8f86-db01b0352d4a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af3dd65-a949-4c14-b8b5-53165abe94ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6536efce-fc32-424c-bbba-16cedd5ed7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9eb853-3225-4e9f-9cce-c88652e03120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52959908-9fa4-4847-a3a1-e3da883057b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "991bd026-b406-4795-a46a-e6951ce76d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1df44b1-0c0d-4d9a-b22f-f22a0fece1e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9699df8b-e2a6-448e-b924-fcf775d9c41c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00203015-6b1f-4758-ac4c-3d0b56b356a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ddef4e5-6f33-4ccd-8ef7-de740fc05dd5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "caa949b5-60cd-444a-91eb-a665e2704d85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74a0c146-5644-4ff4-8b2d-e613705b0c29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "823da241-7648-44e5-98c9-787bf8fd244f"
            }
          }
        ]
      },
      {
        "id": "29a6a7be-9993-4144-acb2-dae023855a26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5400d0fa-89b3-46a8-bcbb-03ed61f78db7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ab5cfc6-d3fa-4ac4-9b44-aa1698d4529c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c7cc2f60-0aaa-4dad-a901-590c21adf348",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bfd7647-8c55-4fb4-b480-8ae8ac3ecae1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33eff973-8091-43c8-8c14-0134d7d225d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 741.546153846154,
      "responseMin": 7,
      "responseMax": 8204,
      "responseSd": 1035.7712890664798,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683246864483,
      "completed": 1683247071108
    },
    "executions": [
      {
        "id": "2d14347b-3756-46d9-9571-75e9f2771b78",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d77735-7251-4f4e-b833-b67120339fb9",
          "httpRequestId": "36d8d906-55ba-4c2f-8b55-5934a681a569"
        },
        "item": {
          "id": "2d14347b-3756-46d9-9571-75e9f2771b78",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0c2c1848-79ce-413c-8401-281b66445b50",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "36050d46-c143-41e2-a756-4af47a838f7c",
        "cursor": {
          "ref": "d62491ef-bdcf-48b6-8670-29a30cdb4357",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d85a67b0-bda4-4a8d-aa0f-9273ee75b641"
        },
        "item": {
          "id": "36050d46-c143-41e2-a756-4af47a838f7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5f46f2e2-dc31-41e4-9585-31aeb734303b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f531dc28-2f16-47e9-ad20-7b6428fe002a",
        "cursor": {
          "ref": "abefddd7-619f-449f-835e-e3a3bd130e57",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c42f3b90-f6b9-42d2-9a02-ab3d9436eee7"
        },
        "item": {
          "id": "f531dc28-2f16-47e9-ad20-7b6428fe002a",
          "name": "did_json"
        },
        "response": {
          "id": "467b8dff-7314-423c-ad17-f63cbe443883",
          "status": "OK",
          "code": 200,
          "responseTime": 946,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a4a24-87b2-4996-9fe6-06390d6a7453",
        "cursor": {
          "ref": "2dcec774-549f-49ce-a298-3fcbb6ff37ee",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cf2ea1e-b90d-48ad-ba88-a24506f8cd2a"
        },
        "item": {
          "id": "9e5a4a24-87b2-4996-9fe6-06390d6a7453",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e1b9d5c-3dee-4ce6-b93f-79651e5e61d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a4a24-87b2-4996-9fe6-06390d6a7453",
        "cursor": {
          "ref": "2dcec774-549f-49ce-a298-3fcbb6ff37ee",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cf2ea1e-b90d-48ad-ba88-a24506f8cd2a"
        },
        "item": {
          "id": "9e5a4a24-87b2-4996-9fe6-06390d6a7453",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e1b9d5c-3dee-4ce6-b93f-79651e5e61d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9f1cb-5473-44f8-8ebf-f7c250b8872c",
        "cursor": {
          "ref": "e8443398-15a5-4871-a22e-196ff8dffd64",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0015cd04-bbea-4b99-a384-c83c672dd38c"
        },
        "item": {
          "id": "65f9f1cb-5473-44f8-8ebf-f7c250b8872c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a2677a05-514e-4186-b496-411c4d42da30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 782,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39565e4c-761c-4815-8a70-f07ca191e001",
        "cursor": {
          "ref": "43c35685-547b-4436-9e15-451f269de612",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "10cd8d93-5b33-4c10-971e-4d20f1bea1bb"
        },
        "item": {
          "id": "39565e4c-761c-4815-8a70-f07ca191e001",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "346693ac-fbd1-47b8-bcb5-45db19e9861c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b845ee-561f-47a7-b91c-de2ebd723ff8",
        "cursor": {
          "ref": "993f664c-db8e-4acd-99ed-43f2949463a3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "97d3be6a-44eb-48c2-a036-56b8f6ec3f0a"
        },
        "item": {
          "id": "a8b845ee-561f-47a7-b91c-de2ebd723ff8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8f6f5e98-60e0-4af5-a63a-31c8a01089b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242c3f56-beb9-474b-8e9c-f5ae2e887bd0",
        "cursor": {
          "ref": "8227b1b4-134d-4d22-b10e-5bc6985b2e27",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83b05888-d72e-4fe0-a482-c5eb9eccf5dc"
        },
        "item": {
          "id": "242c3f56-beb9-474b-8e9c-f5ae2e887bd0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "76957c65-3112-4779-a3d9-0a3b269f297a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242c3f56-beb9-474b-8e9c-f5ae2e887bd0",
        "cursor": {
          "ref": "8227b1b4-134d-4d22-b10e-5bc6985b2e27",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83b05888-d72e-4fe0-a482-c5eb9eccf5dc"
        },
        "item": {
          "id": "242c3f56-beb9-474b-8e9c-f5ae2e887bd0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "76957c65-3112-4779-a3d9-0a3b269f297a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fafd68-03c7-428a-b824-74f82e00267b",
        "cursor": {
          "ref": "42b00365-c921-4c0f-90f2-c7346982bf2c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b2803a30-830b-440c-b805-232a4c8cdb96"
        },
        "item": {
          "id": "72fafd68-03c7-428a-b824-74f82e00267b",
          "name": "identifiers"
        },
        "response": {
          "id": "c601cabc-1cd5-41c6-a00e-54f3583adbfa",
          "status": "OK",
          "code": 200,
          "responseTime": 1077,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c201f-fdb1-4457-86df-6f4f76039737",
        "cursor": {
          "ref": "f4a79c85-d784-489b-bd49-0fd8e3e0b707",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef48a9bc-47f2-4502-a7c0-1e57e4223baa"
        },
        "item": {
          "id": "7d9c201f-fdb1-4457-86df-6f4f76039737",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6c4dbc0c-0a88-42c8-8dc7-8d86416e0753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c201f-fdb1-4457-86df-6f4f76039737",
        "cursor": {
          "ref": "f4a79c85-d784-489b-bd49-0fd8e3e0b707",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef48a9bc-47f2-4502-a7c0-1e57e4223baa"
        },
        "item": {
          "id": "7d9c201f-fdb1-4457-86df-6f4f76039737",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6c4dbc0c-0a88-42c8-8dc7-8d86416e0753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70849c8f-a234-4409-a675-44a54c62117e",
        "cursor": {
          "ref": "7a7d4537-aae3-46b8-a58d-aeacab85ab4c",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "05cfcdf9-899b-453a-963f-1e2ebb628a47"
        },
        "item": {
          "id": "70849c8f-a234-4409-a675-44a54c62117e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23d6f5de-0929-4bf8-909c-9b4446641a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7158c2b9-7e89-4b73-937a-2b3ad183a222",
        "cursor": {
          "ref": "42dff85b-bc7f-4bf8-8f69-a0e830b6b702",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e6145976-424e-4c25-a7ef-812c8292ea1d"
        },
        "item": {
          "id": "7158c2b9-7e89-4b73-937a-2b3ad183a222",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "78c43a3f-6939-4f39-b962-6c8260868d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0304663-072f-462f-b0a2-9b690e2be8d3",
        "cursor": {
          "ref": "853f168a-e213-4eba-bf2d-b2b200d3c85a",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "59b36dba-e470-4c95-95dd-88e5033058c8"
        },
        "item": {
          "id": "e0304663-072f-462f-b0a2-9b690e2be8d3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cbb4e482-a3d7-491c-8b74-7de8b85b757a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38da38a-f628-4667-b436-a21d58e1b9fb",
        "cursor": {
          "ref": "74990286-624b-47e6-b97a-3d3e439ee0d3",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6f4edacb-a9f6-4f98-9e31-65c4a4b6018d"
        },
        "item": {
          "id": "d38da38a-f628-4667-b436-a21d58e1b9fb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3cfc8866-4c30-48de-968b-3ec98b305cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a76dfb-40bd-41b5-aa7e-6f6825e834c6",
        "cursor": {
          "ref": "295670dc-72ea-4fac-b9f7-f81cb306f50b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "38ac4e03-4061-40f1-b174-e7b69a4c200f"
        },
        "item": {
          "id": "b3a76dfb-40bd-41b5-aa7e-6f6825e834c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8d78dffe-2017-4b00-aa7d-52b4e62b0817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ebe9ad-780e-4977-9ffc-aa0d5b091351",
        "cursor": {
          "ref": "4308a4fc-3091-4280-baec-b5c5ef309759",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9404c85-9763-4c97-bb09-bd885b31ce25"
        },
        "item": {
          "id": "40ebe9ad-780e-4977-9ffc-aa0d5b091351",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "45fbf8e7-1d6f-47f4-938c-4998217e3d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebef1c9d-53e0-4def-8ae9-41171d5165de",
        "cursor": {
          "ref": "9bf63fb3-917c-4e1f-b4dc-8dffc4920f92",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "56a734d2-98ee-4d01-af7f-91699a6f0205"
        },
        "item": {
          "id": "ebef1c9d-53e0-4def-8ae9-41171d5165de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5a6d9c67-4c98-4ea6-89ae-1e59fe5657c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae03033-212b-4259-9de8-e442258f5a8d",
        "cursor": {
          "ref": "56f48662-99c4-46e0-a2ed-3724f2b2555f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9da548e5-4a58-41f8-8440-495057945d0a"
        },
        "item": {
          "id": "7ae03033-212b-4259-9de8-e442258f5a8d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3c5fa252-d899-4e41-84e1-f913fa7299d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f12e1f6-387f-4e80-a728-81bd4ee1835d",
        "cursor": {
          "ref": "a518215c-b6b8-45e5-a0ef-6792c1129ed0",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b885909f-52dc-442b-bc1f-ae5892d717e3"
        },
        "item": {
          "id": "3f12e1f6-387f-4e80-a728-81bd4ee1835d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "29d22e71-d692-4491-9c81-e6a661dd975d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a9e8ec-c673-4cbb-8ba3-61cfd33bd20f",
        "cursor": {
          "ref": "b910e4e8-5c73-44c1-8ff6-b43b8b1e72bc",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bf4b6a00-47f4-4781-9725-5c1d642c2c70"
        },
        "item": {
          "id": "e7a9e8ec-c673-4cbb-8ba3-61cfd33bd20f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bf524847-1812-418a-bb42-65bb0e71a85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8350fe36-f49a-4b56-8122-6faf85f241cc",
        "cursor": {
          "ref": "ab49db3d-b3e3-44c5-aaeb-57911fa2d3f1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "06538ed5-20f8-468b-99bf-ccb0d136d421"
        },
        "item": {
          "id": "8350fe36-f49a-4b56-8122-6faf85f241cc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "99efbfb7-d47c-4b94-ac9c-75aab9af1f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620faae1-1000-4f7c-bfcd-4abae159eab8",
        "cursor": {
          "ref": "61da32d5-6a92-4b3f-abe2-1ad9351afc5a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "84024e3e-29cc-4378-a97d-6938613ff508"
        },
        "item": {
          "id": "620faae1-1000-4f7c-bfcd-4abae159eab8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d54e5c58-b9a2-4b9e-81fa-d53dbf30263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7839b4-91b7-403f-a175-995fb52a2cd9",
        "cursor": {
          "ref": "340d35ce-4ea1-4d6b-a564-2a712dc5fee0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "333ce3af-1cdc-46be-90d5-a28a126754fc"
        },
        "item": {
          "id": "9a7839b4-91b7-403f-a175-995fb52a2cd9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "498a16d9-7259-4a24-bc9c-96d29eeac2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec607b-a447-444e-b6a5-96deb4d7da8e",
        "cursor": {
          "ref": "b9992d80-3835-4388-ae4f-fe056038550f",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "414c6467-e913-4147-bacd-d2b9ced0104e"
        },
        "item": {
          "id": "20ec607b-a447-444e-b6a5-96deb4d7da8e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ccf0a2b7-7b1c-457c-8c88-4a7a90edba0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3ebc54-a8c7-4460-91d5-3e4bdc3f64f7",
        "cursor": {
          "ref": "2822bc12-37f2-496c-9c0a-e163be85d177",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2176cc31-78b5-444f-b13f-119f634f87d7"
        },
        "item": {
          "id": "8e3ebc54-a8c7-4460-91d5-3e4bdc3f64f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "404ee489-36b7-46ca-8248-fe9907959d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9548c5-cdaa-41c1-a15f-ae07933b96a8",
        "cursor": {
          "ref": "8fb75508-c0cd-4dc2-a526-6ad3d5849e74",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "90125125-90cc-488a-a6b0-9a6ecdb61a6b"
        },
        "item": {
          "id": "8a9548c5-cdaa-41c1-a15f-ae07933b96a8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "25555578-73ae-4bb8-a4fa-9417365fef60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c42b4-8be6-4742-b34c-05915b0d2aa1",
        "cursor": {
          "ref": "71faa50a-7d96-4a17-8b2f-c3ab90143494",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88504a3c-ed54-4972-8c1f-3ec7d88224d9"
        },
        "item": {
          "id": "9c7c42b4-8be6-4742-b34c-05915b0d2aa1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c5ba590-f3b2-47b3-9843-cfe2ad23c9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b172fa3b-a5b4-43b2-b7b2-57ea134d3089",
        "cursor": {
          "ref": "7c5c4fff-61ba-4d8d-a7a2-3f4da33381a0",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cbf61a0b-7ebe-4fef-b3c3-06f301eaa4ef"
        },
        "item": {
          "id": "b172fa3b-a5b4-43b2-b7b2-57ea134d3089",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e25aa899-e414-4453-879d-44f30d38bde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aadce7-2068-45ea-9aef-c2c6b8851a6a",
        "cursor": {
          "ref": "fc009ea2-5653-4e75-a139-f585f898ba0f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fd0771fa-5058-4a14-ab89-2aff89f816e5"
        },
        "item": {
          "id": "c9aadce7-2068-45ea-9aef-c2c6b8851a6a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0ee51637-3b51-4baa-b5ef-387aa3637118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5843dcaa-abd7-467c-ab86-65a318c57952",
        "cursor": {
          "ref": "d0413fbd-da25-4963-87ef-8fb627468966",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d70a97ca-a927-4153-98e8-c690ec1caf9c"
        },
        "item": {
          "id": "5843dcaa-abd7-467c-ab86-65a318c57952",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89905aee-7f19-4a34-817b-ab55f166b39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3d73e8-d46e-4721-ac92-330db346d62d",
        "cursor": {
          "ref": "17895a08-ac39-4736-abf4-c65c4d5385d7",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e87aee8f-47a4-4061-84b1-e4f4e5c63c41"
        },
        "item": {
          "id": "5a3d73e8-d46e-4721-ac92-330db346d62d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c99ade90-b27c-4cca-be46-e519fffdceb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea602dd-6642-4393-8d4d-4add6c1e5ea9",
        "cursor": {
          "ref": "2da8d5df-304d-456b-876a-82f8041a669d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a96dcc3c-ed6a-4835-9964-33b6e15452a2"
        },
        "item": {
          "id": "2ea602dd-6642-4393-8d4d-4add6c1e5ea9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "94e8d5bc-9c5c-46aa-9104-19b52920e227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8663fd0b-757f-477c-9b9f-ba559f1a9699",
        "cursor": {
          "ref": "05bc5591-d1e5-417d-befd-e0b6a148ecf8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e3bb843b-7675-4230-b8ee-63ba6ee52add"
        },
        "item": {
          "id": "8663fd0b-757f-477c-9b9f-ba559f1a9699",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e9b259ff-ec85-471a-8330-a1d7398efe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc91ba43-0ed6-416b-a250-65c553120bca",
        "cursor": {
          "ref": "ae0a60d2-3247-4e2b-84ba-2ff3150d2d83",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f9322f30-dd5d-4463-9205-12417a98869b"
        },
        "item": {
          "id": "fc91ba43-0ed6-416b-a250-65c553120bca",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e8885bb6-188b-4c1f-a6f2-dbd6556b0290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db0d97-4f13-44aa-b1c1-a004667cd753",
        "cursor": {
          "ref": "90a71d22-3e3b-41ae-9fa2-d47955269a3f",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f281a940-0769-4fa2-9590-27691ff2a419"
        },
        "item": {
          "id": "52db0d97-4f13-44aa-b1c1-a004667cd753",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6c70368a-3f4b-475d-beac-32fcfb91a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852fc80a-77b0-4748-b3b4-87a063fdd133",
        "cursor": {
          "ref": "3a1548a9-d09a-4118-8e50-207e75fc49a0",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3f58515d-8a66-46b6-96d9-410db5936cc4"
        },
        "item": {
          "id": "852fc80a-77b0-4748-b3b4-87a063fdd133",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "578359b3-89c1-4532-9657-c366688880fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5000ef4-b0b1-44f5-a592-835cf1341489",
        "cursor": {
          "ref": "16831197-3702-446c-9741-499a3e4a1ef6",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fe45fb79-99e2-4840-b221-7cb6109bbe4d"
        },
        "item": {
          "id": "b5000ef4-b0b1-44f5-a592-835cf1341489",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bfeb60de-0118-4bea-942a-eb7f02f372e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239df6d4-4ce5-4bca-a461-bcf9705ecedd",
        "cursor": {
          "ref": "ca80c84a-8aff-428b-9d47-e41dcd98cee2",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "743b37c0-b20c-4e97-8add-98f4355604c8"
        },
        "item": {
          "id": "239df6d4-4ce5-4bca-a461-bcf9705ecedd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "351ccccb-070e-47ca-9956-9acecc60dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a686a10-0d61-4d6c-83b3-2f4b2db6efcc",
        "cursor": {
          "ref": "a52ae6b4-c2f3-4b7c-b2d6-9772b11a9f9f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "75908a31-d0c5-4ac8-a0f6-488da74d1cb9"
        },
        "item": {
          "id": "3a686a10-0d61-4d6c-83b3-2f4b2db6efcc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ccace934-f35b-4486-bfab-b63a0508d840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101cd02a-0a72-4eab-9ad9-abbed2a851db",
        "cursor": {
          "ref": "857652b9-ecb4-4d3e-99f2-3d6666ef5a23",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "50b0e6c6-dcb2-4967-86ba-b0aed5174fe7"
        },
        "item": {
          "id": "101cd02a-0a72-4eab-9ad9-abbed2a851db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "412c5269-02fb-4d6b-baff-913dfb1aa91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf1caf-3504-4da3-affd-d0bde9eab70a",
        "cursor": {
          "ref": "c1a2ac90-e1be-4baf-99d1-dbf64dd994bc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "362ecafa-527c-46a2-9591-0c9b1916df50"
        },
        "item": {
          "id": "9bdf1caf-3504-4da3-affd-d0bde9eab70a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e2bd80f3-0159-44f5-a7b4-9178003db703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a078d1c7-6ab6-4503-ae63-d03a3459dfb8",
        "cursor": {
          "ref": "8219175c-2d9a-4225-b912-6bc1959c456b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a48cb1ca-512b-4aab-a1bb-31050b67aa61"
        },
        "item": {
          "id": "a078d1c7-6ab6-4503-ae63-d03a3459dfb8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "22d43362-fb8e-45a1-954e-6144857e0711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c2a17b-eef2-42c9-922e-b87456e73299",
        "cursor": {
          "ref": "3c748d04-4617-41b9-83d1-e945e2f5139a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f82523bb-ec2b-488c-a51d-6e10cc0b062d"
        },
        "item": {
          "id": "b1c2a17b-eef2-42c9-922e-b87456e73299",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a81eb916-875d-4579-90a4-c8600a1af036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d704076-e6df-47a2-9c3e-8cab8a82fa27",
        "cursor": {
          "ref": "c6d5ce79-736b-4fa6-9c4b-dd70492135ee",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71e66915-1d17-464c-9fe7-6de6210c7463"
        },
        "item": {
          "id": "9d704076-e6df-47a2-9c3e-8cab8a82fa27",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0402ff27-11fc-4839-ba62-1b9792a3003e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe2a727-f11b-4681-aa5a-551920133f3d",
        "cursor": {
          "ref": "b73bfff9-f090-4238-afe7-25585ef64700",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04d95fcc-f0cc-4681-bf37-0bf1a45224d4"
        },
        "item": {
          "id": "0fe2a727-f11b-4681-aa5a-551920133f3d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6d443c57-1ad1-4681-84c4-886047c4ba48",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 689,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332af53-1bd8-4376-8d55-3c0a8b6fd318",
        "cursor": {
          "ref": "df319a80-a67b-4bf0-952d-e63db5fb6f52",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1c33b4d3-3f5a-4e61-9dbb-f25246b188d2"
        },
        "item": {
          "id": "e332af53-1bd8-4376-8d55-3c0a8b6fd318",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b91e770-11fe-4cc6-b949-10ed86d4f429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77864913-9453-472e-80e2-cb4e2ab8484a",
        "cursor": {
          "ref": "a64f256d-a028-4395-9ccc-a5f880fa3b9b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b5ed37c7-a379-407d-bfbc-043e1930a800"
        },
        "item": {
          "id": "77864913-9453-472e-80e2-cb4e2ab8484a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74880771-f9bc-4335-ad17-7d7985609495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b2b513-c6af-4e9e-a572-eba334b61988",
        "cursor": {
          "ref": "68c45b31-2c84-4dcb-9fff-7fe1da2e01d0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a08f43fe-111c-4dc1-92df-3f066fa61f9c"
        },
        "item": {
          "id": "24b2b513-c6af-4e9e-a572-eba334b61988",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e2f06e62-3dff-4d62-b529-e1b00c70e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926e0735-f805-43e7-9106-ea1a358bb821",
        "cursor": {
          "ref": "bf1419ce-9a55-4b75-8061-034b384b0c93",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "989171c8-916d-434d-bcd3-33111fb6f80c"
        },
        "item": {
          "id": "926e0735-f805-43e7-9106-ea1a358bb821",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "395c9e09-1dea-4b8a-9953-577905a80d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4b5b2-2940-402c-9f6c-e91d1c769bd9",
        "cursor": {
          "ref": "bb668735-9a3a-41bf-9008-116ad3924cab",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "61b2afe5-c96a-43f7-b6cb-812004f0ac08"
        },
        "item": {
          "id": "47b4b5b2-2940-402c-9f6c-e91d1c769bd9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d761b667-e3ae-4292-9841-9deaacd9799e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a599e23b-5ec9-415b-80b4-97b9e1bf34e5",
        "cursor": {
          "ref": "17f6c19a-49d0-400b-b74f-c18bc68e882b",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "484abc4a-d965-47a4-b9fa-8b2046bd5727"
        },
        "item": {
          "id": "a599e23b-5ec9-415b-80b4-97b9e1bf34e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e2fe6733-7c34-4da3-b2d7-599d1ee0a1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4dfc94-6cda-4bf4-882f-cc85d8c0c446",
        "cursor": {
          "ref": "9e69cb50-7049-4cb3-aa88-fbb3242d08ef",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "90eb6093-6c1d-4212-8ecc-1e4d633ec9b8"
        },
        "item": {
          "id": "da4dfc94-6cda-4bf4-882f-cc85d8c0c446",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e639273d-9d4a-4e55-805b-2f3695f66cef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 692,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d0b94-97ea-4742-83c5-d4e12622613b",
        "cursor": {
          "ref": "1fa7550c-b683-4889-896c-1f2f2935ed83",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1cb515d4-9c2b-44ae-9535-86848283ab4e"
        },
        "item": {
          "id": "d41d0b94-97ea-4742-83c5-d4e12622613b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0ccf671b-c2ad-4b1d-aba0-9cf9343594a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8cc198-7dff-455c-be48-4473946181f4",
        "cursor": {
          "ref": "5e01604b-0c53-48f3-8bd3-dc4d1b6df77b",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72bfed66-b600-40c9-a6e6-3d5210999aeb"
        },
        "item": {
          "id": "4a8cc198-7dff-455c-be48-4473946181f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "94ddd140-c480-4666-bdc7-707aac4ca1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc580408-ff5e-47e0-b722-c77898d6660c",
        "cursor": {
          "ref": "9491b043-5ee6-4a01-aeeb-9dd0aada8e73",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3b7ecdfb-a2c0-4017-a461-a86211edf4a5"
        },
        "item": {
          "id": "dc580408-ff5e-47e0-b722-c77898d6660c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a8581dbc-3496-4bc4-a048-b6ae615af7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a25422-f7d8-4ce6-af66-c706e7449674",
        "cursor": {
          "ref": "dd5a9b38-5c79-42e6-a53e-db5046cb7288",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ffd1e174-07b7-42b2-8c1d-9dac79390fc4"
        },
        "item": {
          "id": "99a25422-f7d8-4ce6-af66-c706e7449674",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "060d4487-46d8-4576-8fd5-5dceaa791fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1295,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e593d35-b0d7-4b68-be10-dfbc70242edb",
        "cursor": {
          "ref": "73dc9504-9de7-4d64-9e7e-8687ab645da7",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3519089b-8b71-48c7-87b7-7cef79bf69b1"
        },
        "item": {
          "id": "7e593d35-b0d7-4b68-be10-dfbc70242edb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5897332e-745a-4314-aa25-ad70a2a055ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1076a7ee-94f3-4ef2-8845-fea11da8cd01",
        "cursor": {
          "ref": "d15a6dd3-e8af-49f4-a249-82409f54ee31",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "45a48f37-8b6d-4ff7-b108-b074ddda047b"
        },
        "item": {
          "id": "1076a7ee-94f3-4ef2-8845-fea11da8cd01",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4db36618-2183-4758-9a43-050f05cf08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ce4148-9aab-406e-8b4b-e16fb955c44a",
        "cursor": {
          "ref": "63fe4b72-df0b-4164-825a-82773ad30f70",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9af3c413-bf06-4a20-8f87-9eb8866774d9"
        },
        "item": {
          "id": "33ce4148-9aab-406e-8b4b-e16fb955c44a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4fb19254-9f4e-406b-84b0-033ae23ecfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd4def9-1b19-4d78-b770-715764bc534a",
        "cursor": {
          "ref": "2f3b6a3c-ca0b-4ac4-a55a-b7aa449b6fc8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "679d76ef-de3c-4ee3-9d28-03bd02efd500"
        },
        "item": {
          "id": "ddd4def9-1b19-4d78-b770-715764bc534a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0d76be9-b366-4bbe-ad84-8ae463bc5180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a23c621-413f-4ddb-8098-2e3c129522c0",
        "cursor": {
          "ref": "137dd657-7af4-4859-9712-ce974498f191",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46150df4-f0d1-44cb-8b0d-ef172f1687c7"
        },
        "item": {
          "id": "6a23c621-413f-4ddb-8098-2e3c129522c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4dbd57db-56f8-437a-a3bf-29c33f50668c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e0c6e-4d97-4009-8f9d-230c2035defc",
        "cursor": {
          "ref": "641dc80d-2c04-4aa1-a1e1-30aadb1887f9",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ddc06ad-d013-4918-a34c-7c181f7485ee"
        },
        "item": {
          "id": "587e0c6e-4d97-4009-8f9d-230c2035defc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e4141e77-5e73-451a-ba9c-2fe170e44fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98800384-2a33-476e-9e95-75a09e7184fa",
        "cursor": {
          "ref": "351b713f-bfff-420c-9321-3f48cf396bac",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "144a26f9-e3ec-4acd-98d9-5bf0a1c41bcd"
        },
        "item": {
          "id": "98800384-2a33-476e-9e95-75a09e7184fa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d7b574cc-1740-48bc-8129-0932c682e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec004ce-3a56-4f34-b9e3-f7a81a6da4b0",
        "cursor": {
          "ref": "57487f15-24bc-410a-811d-3947e1764246",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a526315-3670-40b3-b36b-3dcbb066931e"
        },
        "item": {
          "id": "2ec004ce-3a56-4f34-b9e3-f7a81a6da4b0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "491f169a-68ed-4d78-8341-ba2855e9a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3364f7c-497b-429a-8ef4-164421d0af70",
        "cursor": {
          "ref": "b3590bdc-a54c-4e47-869f-cc5a1c27c8d4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6fd46133-457e-4046-b766-83636c42dce7"
        },
        "item": {
          "id": "a3364f7c-497b-429a-8ef4-164421d0af70",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a4c6e997-aa84-4b7b-a11f-9bdc33a8b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812961d2-d832-4514-a05e-d33cdb77df73",
        "cursor": {
          "ref": "26500f5b-629d-4b31-91b3-1d1b5c820bc0",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5c1f543-d2af-442d-9c30-228709ab8ccb"
        },
        "item": {
          "id": "812961d2-d832-4514-a05e-d33cdb77df73",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e7e5125-349f-46d3-a3d2-ff4b2e102efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08ef854-e915-4218-b10d-e7ef0d7bec22",
        "cursor": {
          "ref": "2809937a-3dc8-467a-bdff-149675b2a458",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "196269a3-03e7-44fb-b940-08b006b1cd38"
        },
        "item": {
          "id": "a08ef854-e915-4218-b10d-e7ef0d7bec22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "01bb5aee-0bf1-4ed7-b6d4-061af7a973f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21fbf31-9adf-4eb2-add7-d9ee640ab008",
        "cursor": {
          "ref": "73b6348e-27bb-4284-b2ed-96602bd66ad2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "666346c5-aad1-4191-91c6-78cebf023470"
        },
        "item": {
          "id": "e21fbf31-9adf-4eb2-add7-d9ee640ab008",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5351db1d-7219-4c7c-ad8d-c238b9eada4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5570fd40-7a3f-4e00-8e01-4f7b34dec848",
        "cursor": {
          "ref": "88fedf39-cbd5-4972-8d88-959560d4b494",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "05dfd5ba-a445-41d1-8c05-86a15235d2cb"
        },
        "item": {
          "id": "5570fd40-7a3f-4e00-8e01-4f7b34dec848",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ca2b9927-babf-4997-97d6-eca489d2ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2124,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea04ec-5145-4849-a094-f7e65b8ab201",
        "cursor": {
          "ref": "b0df4560-bacf-4f4b-a6f2-af825c214db9",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4da463ff-bd73-47f8-a0d9-d4403f52aa3e"
        },
        "item": {
          "id": "a9ea04ec-5145-4849-a094-f7e65b8ab201",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "03a38cbb-323c-49df-ab9d-26bddbb1c6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1431,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1092080-45a0-4744-82dc-ee0196dfdac3",
        "cursor": {
          "ref": "ee3d2298-dc28-4fed-a75f-1ef1e3ff89d1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e51aa709-753b-4164-a450-537303658f67"
        },
        "item": {
          "id": "d1092080-45a0-4744-82dc-ee0196dfdac3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5822bed9-42aa-4159-a713-c87995ea1594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1582,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddfd6b2-0780-4d84-834d-338f6c6347ed",
        "cursor": {
          "ref": "23f8bdbe-8d6f-4a4e-a3b8-3b940269b4d9",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8f5e980e-2283-408c-8ebc-175e0f9068cf"
        },
        "item": {
          "id": "dddfd6b2-0780-4d84-834d-338f6c6347ed",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6c5e23a8-183a-4891-9d27-2e0c85860944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1823,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9547242f-7bee-4e5c-9dd3-7cd541cd9ec4",
        "cursor": {
          "ref": "122e3b5a-97cb-4a46-9fee-2c792a2e9de8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b0377a36-8fe0-45d0-b38c-8e0783f4dc6a"
        },
        "item": {
          "id": "9547242f-7bee-4e5c-9dd3-7cd541cd9ec4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ccc3ff76-e04e-40af-8ac8-12233227f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09520eaf-329a-4d52-9076-60953ecde0c9",
        "cursor": {
          "ref": "b12fc025-ccbc-4f01-a277-514e165fd762",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1fca5fa0-45fb-4234-a3a9-966af9ddba37"
        },
        "item": {
          "id": "09520eaf-329a-4d52-9076-60953ecde0c9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "46427d64-a671-4809-b520-4652f993a609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905560b8-75ca-47fd-9792-734765f0da1e",
        "cursor": {
          "ref": "e76720ea-af90-48f9-af36-5a6db42d0721",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2d0392e3-5e37-4869-8137-1f81d6aff2b0"
        },
        "item": {
          "id": "905560b8-75ca-47fd-9792-734765f0da1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "416dcda3-7198-4c99-95f7-0aff8d4fb4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8dbed2-4f26-444f-a64e-79dd61774197",
        "cursor": {
          "ref": "329d09a2-4d4b-4827-b56e-909c1dc19d39",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "02e15919-f0d2-4863-8f2f-bc6bcf042461"
        },
        "item": {
          "id": "8c8dbed2-4f26-444f-a64e-79dd61774197",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4b724cd-0d2c-405e-99c0-6f3ba1078193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db123b3c-c2d0-4baf-879d-75e619e53d2d",
        "cursor": {
          "ref": "d21c9cf4-b1ce-4343-b253-f81aecd38d63",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "247342d4-1ac2-4c5b-9dc7-177c179ac2c7"
        },
        "item": {
          "id": "db123b3c-c2d0-4baf-879d-75e619e53d2d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "beb6d7cf-e0cc-40b7-bccd-17db377c4e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dd8a4a-9a10-4610-bb91-fdf638db8e1b",
        "cursor": {
          "ref": "3ee9cca2-e744-4043-bda6-0914cf6e0de4",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d64c94db-89e7-44d2-a7d1-4d3f33a4d2e1"
        },
        "item": {
          "id": "42dd8a4a-9a10-4610-bb91-fdf638db8e1b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f9ade080-9bb9-4013-83e0-c74c5259fb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1483806-1204-41bc-8a11-a516b82682e0",
        "cursor": {
          "ref": "4117d000-c012-4f35-8c4f-7bd7c5951b6c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "32d64684-1172-4227-9365-d58aaf798070"
        },
        "item": {
          "id": "a1483806-1204-41bc-8a11-a516b82682e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1943547a-076b-4f66-b16a-4aea63d1f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefc97ab-72b4-4c34-9765-4f4788b030b5",
        "cursor": {
          "ref": "37648761-85db-446e-856d-03cd78bb82a2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7c0f1975-7438-4ffb-941e-63bd965be9a5"
        },
        "item": {
          "id": "eefc97ab-72b4-4c34-9765-4f4788b030b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b876dfdc-3a60-4c29-a891-f087e3b3b1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28f48d-239d-4414-83bd-bfea38399cf3",
        "cursor": {
          "ref": "59cdc8a8-a5fb-42e0-81e6-17ca2c7e86c4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9a179329-beec-44f9-8cd2-b8280f1b9d79"
        },
        "item": {
          "id": "ef28f48d-239d-4414-83bd-bfea38399cf3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "393e3cae-571c-4f3c-b933-bbabed3c537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de8daaf-1f6a-4ad4-b7ad-39e7b0cee2f5",
        "cursor": {
          "ref": "eff55c5f-123d-41a9-a604-44a5bdc203b9",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1d4b670e-adc4-446f-ab07-fc1dd096d6ab"
        },
        "item": {
          "id": "5de8daaf-1f6a-4ad4-b7ad-39e7b0cee2f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bc55501b-c181-4621-95d1-00b50173733a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1560d54-7fe9-440c-842f-e25db1130ec3",
        "cursor": {
          "ref": "10289fb1-c92e-47ca-a72f-6fc072c2a595",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3890a04c-2caa-4f2d-bd60-15e453633b22"
        },
        "item": {
          "id": "e1560d54-7fe9-440c-842f-e25db1130ec3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4adbf01-67c1-4e34-94f0-1a61ce9f3f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9804f5-7a8c-47f6-8ba4-7feeae9628bc",
        "cursor": {
          "ref": "62dea1c5-0b2a-403d-ae83-cf9d9bb31a12",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb49fa23-51b9-4aa5-8d1f-2a53545cbe27"
        },
        "item": {
          "id": "6e9804f5-7a8c-47f6-8ba4-7feeae9628bc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "198c927e-dd35-41ed-88a9-edb0b8d9fb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ecca8f-50b5-447f-aebe-df7c79f864ae",
        "cursor": {
          "ref": "0d11f760-fade-41c2-ab7e-7f284e83348f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "53ffb3fb-bac4-4c1b-87a1-1be5055ad0e0"
        },
        "item": {
          "id": "b3ecca8f-50b5-447f-aebe-df7c79f864ae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "36ccdfed-c287-42cd-861a-3b43b63cd5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7af40-4917-4868-aa71-a6b78b0a9823",
        "cursor": {
          "ref": "fc88a4a9-5439-46e9-9607-d1762d213d64",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b29bce57-5134-4010-be59-a6d1658117cd"
        },
        "item": {
          "id": "acc7af40-4917-4868-aa71-a6b78b0a9823",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cd5ac2f7-645f-4c76-8314-09e2205bccb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d2366d-1739-49d1-8638-88f01d9ba243",
        "cursor": {
          "ref": "0fbb5214-aa29-4f4a-976f-fa32531dc01f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2a47f2e7-84c5-4bf8-beeb-ea638a3d9601"
        },
        "item": {
          "id": "31d2366d-1739-49d1-8638-88f01d9ba243",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "72eb689b-b15a-49d0-8eed-4ac98d18d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21960c3c-3f1c-4b71-8bdb-5859854309b2",
        "cursor": {
          "ref": "fe9fc737-4a01-45b7-8676-84a5f742ea04",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "79d11d27-24c9-4596-a0d8-354a977f4d57"
        },
        "item": {
          "id": "21960c3c-3f1c-4b71-8bdb-5859854309b2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55e171d9-6ce4-4a64-8e12-09632b5027af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce2b6d-2535-4578-ae43-b4c455cb987d",
        "cursor": {
          "ref": "ef3d9931-665c-46a6-9915-095922186ed9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "706ad9d1-1538-4079-9206-61d687b015bb"
        },
        "item": {
          "id": "ecce2b6d-2535-4578-ae43-b4c455cb987d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ee38917d-ed14-4935-b4e5-ff90cd1a84c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b446a829-abed-44c4-98db-bbb6097dfce9",
        "cursor": {
          "ref": "70f299ba-a187-45e4-ae80-8a1f4362f982",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "39f4269a-0fb3-4106-9032-3b0589564812"
        },
        "item": {
          "id": "b446a829-abed-44c4-98db-bbb6097dfce9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "487f6c88-2cd2-40fd-85ee-30fff701dc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f21282-c556-4072-9104-8171e7f15aaa",
        "cursor": {
          "ref": "6ba45ffd-457c-42ea-9ed0-5d4dc09c7dbe",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "89d89472-f895-4eaf-a138-e3d8e42254a7"
        },
        "item": {
          "id": "a7f21282-c556-4072-9104-8171e7f15aaa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "00b72125-23fa-4ab4-b249-91e2a4f1c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed554b88-874b-4e6c-9168-a755c4686f17",
        "cursor": {
          "ref": "56474740-5f19-4a13-be82-7fde7a09583d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9a004126-77a3-4615-adf2-5e8689234a1b"
        },
        "item": {
          "id": "ed554b88-874b-4e6c-9168-a755c4686f17",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d900f33b-c038-4dbd-aa50-f9e304f3aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a850f4-feb7-4fe7-af2c-fdcc06aa7741",
        "cursor": {
          "ref": "e3bea2e5-1157-4fe3-9ea7-0b869015e441",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "57794a83-c43f-4b32-b088-abed7fb075e0"
        },
        "item": {
          "id": "76a850f4-feb7-4fe7-af2c-fdcc06aa7741",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b4d1628-f765-41fd-a5ef-dcac994c9068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba304bc-a3c9-433b-ad63-e4368a5c416e",
        "cursor": {
          "ref": "780c2765-7900-4974-a276-cc0823e9c7ed",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e1590b15-9bbf-40df-b629-a92e9829b0f6"
        },
        "item": {
          "id": "bba304bc-a3c9-433b-ad63-e4368a5c416e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b73c9c0-636b-499e-a3b4-cea15e3152c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0220ea1-2541-42ca-94fc-b8eb465777fb",
        "cursor": {
          "ref": "473f2086-dd26-4009-81b5-96adfd8dfcef",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a89287e7-7224-4d97-91c4-c4157ea749a8"
        },
        "item": {
          "id": "f0220ea1-2541-42ca-94fc-b8eb465777fb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "efeb268d-dddc-45b4-811f-583ecae80fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07f4ca4-fba9-45be-9d4f-a47f9cfd10ec",
        "cursor": {
          "ref": "9c909e14-682e-4542-b802-554ff69f95fd",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "787eed98-911d-4eb3-a199-7ccb295338eb"
        },
        "item": {
          "id": "a07f4ca4-fba9-45be-9d4f-a47f9cfd10ec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b002758a-f790-4703-b419-021650e33537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e3078a-4af6-479f-90fe-11540124e4be",
        "cursor": {
          "ref": "1402f8f1-7933-413c-9fa0-4d01f5c51a96",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca75e495-00e4-4b57-b656-a4e9acc63ada"
        },
        "item": {
          "id": "27e3078a-4af6-479f-90fe-11540124e4be",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "17a5ad4c-530b-4171-84c6-af98270fe71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8928c3b5-81ab-407f-9161-315f4e67c54b",
        "cursor": {
          "ref": "665a2882-babe-4475-be22-337298f8abed",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9df63e90-a9db-40c0-aa3c-6f246bca92c0"
        },
        "item": {
          "id": "8928c3b5-81ab-407f-9161-315f4e67c54b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "69ff2318-bbfa-4025-92cd-c6992ce214c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86066e7-c57e-464c-a5cd-5df9b6737761",
        "cursor": {
          "ref": "ee8a8b7b-d64e-4201-8487-e0ff529cd0d1",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e2a0065a-55fe-48df-b82c-69d1953faa25"
        },
        "item": {
          "id": "c86066e7-c57e-464c-a5cd-5df9b6737761",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ad652f1b-c292-468b-bddc-78741aced123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd999f9-7dd7-4f2b-9fd5-ec662a0547be",
        "cursor": {
          "ref": "6d06ca26-123f-4f89-8cb7-fe63af978af4",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3ea56a50-9453-4b42-876d-c4e9ce9c980b"
        },
        "item": {
          "id": "2cd999f9-7dd7-4f2b-9fd5-ec662a0547be",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "18c24ff4-c61f-480a-9a20-6ebbe861959c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576cbd5c-eb33-421f-8026-879c8c3f89ba",
        "cursor": {
          "ref": "d38bf058-bf91-42a5-8b22-77c6dc9c60dc",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25133c57-52c2-410e-870d-787f08415107"
        },
        "item": {
          "id": "576cbd5c-eb33-421f-8026-879c8c3f89ba",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9c9b93c2-b7da-496a-8fdd-2952e8d13b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d0fb88-fd3b-4de6-951f-aa79a9efa17f",
        "cursor": {
          "ref": "cc96a021-f9f8-4d82-a2db-2d4a10278f1d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9ad4d238-be8e-4e7d-9686-0ca43ed9c6ec"
        },
        "item": {
          "id": "69d0fb88-fd3b-4de6-951f-aa79a9efa17f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "713cac9f-b58f-44e7-be6e-a324805953db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f519fb3c-7e74-4742-9cd4-52b1725d47b5",
        "cursor": {
          "ref": "e9d20ee5-ee21-4c8d-989f-0a824e90333f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29d12b5c-79de-434d-b699-4cc348039e4b"
        },
        "item": {
          "id": "f519fb3c-7e74-4742-9cd4-52b1725d47b5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b0c866d6-7744-4b27-ace8-c2869088697a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 592,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1341208d-d843-43fe-8e87-ebfd9b015a8e",
        "cursor": {
          "ref": "089377e4-c2ae-4b59-8fc6-9739a31ee20f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "565b5a87-780c-4ccc-b629-df0b625ff66c"
        },
        "item": {
          "id": "1341208d-d843-43fe-8e87-ebfd9b015a8e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "839912fe-7a0e-4b17-8def-8509c7ef7d12",
          "status": "Created",
          "code": 201,
          "responseTime": 7432,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b3395-df74-4dd6-b0d4-a61b7d612ba8",
        "cursor": {
          "ref": "e54cb9b0-5e4a-4a7b-b630-2dd99c65c79a",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1dc67cae-2147-4598-bed6-ccc26c70d84d"
        },
        "item": {
          "id": "6e4b3395-df74-4dd6-b0d4-a61b7d612ba8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e2c3f58b-7c7b-4445-bf77-b8ea74eda768",
          "status": "Created",
          "code": 201,
          "responseTime": 6806,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6bc879-bdd1-4fa1-bf70-7593ae72b77d",
        "cursor": {
          "ref": "63762486-f87b-4b53-b7fc-8cb6540209d5",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fdd99cdd-76e3-46d5-b3f6-72912aec59db"
        },
        "item": {
          "id": "1f6bc879-bdd1-4fa1-bf70-7593ae72b77d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9eaa4b54-db8a-4025-9c09-b525dab9ff0c",
          "status": "Created",
          "code": 201,
          "responseTime": 6306,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faff959-a95a-40c4-9687-0f00169161cd",
        "cursor": {
          "ref": "506363b1-2330-4892-937e-66be487ae3ed",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "963bbe26-afe5-4477-be2e-37cc2fff4b5a"
        },
        "item": {
          "id": "0faff959-a95a-40c4-9687-0f00169161cd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d08bee26-3f94-4dd9-9d89-c8f4824498b5",
          "status": "Created",
          "code": 201,
          "responseTime": 8204,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7980b3-b56f-40fa-bbee-16f8227c4bfb",
        "cursor": {
          "ref": "2e314232-b0f0-4322-9ddd-5ca1103974b0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca0604b9-492b-42b9-9089-51b55a186394"
        },
        "item": {
          "id": "5a7980b3-b56f-40fa-bbee-16f8227c4bfb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4fa6ae14-a798-41b6-9371-253ec0eff7d5",
          "status": "Created",
          "code": 201,
          "responseTime": 6406,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2caef4-74a6-46f1-9b4e-4d89b26c821d",
        "cursor": {
          "ref": "6703b14b-27ef-44d7-855d-30ab4c144869",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "efa49138-4f88-4beb-86ef-15241fc699b0"
        },
        "item": {
          "id": "df2caef4-74a6-46f1-9b4e-4d89b26c821d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ab7d873c-c082-4aaf-a765-0a10e1ff3319",
          "status": "Created",
          "code": 201,
          "responseTime": 7549,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e96d0c-d962-40b7-ac97-6ab100852350",
        "cursor": {
          "ref": "9078e720-22fe-4e2b-92ae-abc8b6e92deb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce8bb732-1e61-4665-a0f6-1e8d6fb3539d"
        },
        "item": {
          "id": "73e96d0c-d962-40b7-ac97-6ab100852350",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb58acbc-bf93-46c3-91ee-13369f10425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e96d0c-d962-40b7-ac97-6ab100852350",
        "cursor": {
          "ref": "9078e720-22fe-4e2b-92ae-abc8b6e92deb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce8bb732-1e61-4665-a0f6-1e8d6fb3539d"
        },
        "item": {
          "id": "73e96d0c-d962-40b7-ac97-6ab100852350",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb58acbc-bf93-46c3-91ee-13369f10425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c246922c-42bd-4d60-bfa9-a5c6ae025c0e",
        "cursor": {
          "ref": "a0fa3573-dca7-42a3-bf36-180b9ede1ee1",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "13614b5a-ffa3-4b80-af58-d65ec5b937f9"
        },
        "item": {
          "id": "c246922c-42bd-4d60-bfa9-a5c6ae025c0e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d67e7929-cd88-4e51-b7d9-253dd2a1aed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f8df0-7b62-4751-a3da-dc4abf281bb6",
        "cursor": {
          "ref": "a66fc75e-03fe-4e62-a8a7-b1cd056fbc31",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7cea8ec6-b56a-460e-9017-c1d1ec81cfe4"
        },
        "item": {
          "id": "a13f8df0-7b62-4751-a3da-dc4abf281bb6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "151def05-4259-4834-8710-3a35086d3d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fc30a9-5df9-4236-b799-dcda9cfea8ce",
        "cursor": {
          "ref": "2ab3e2f9-0ddf-4e13-bd3e-1ea8dbcab2b7",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b74fe9aa-5906-4991-a8a0-a3a4fad60706"
        },
        "item": {
          "id": "97fc30a9-5df9-4236-b799-dcda9cfea8ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f1f6b583-f568-4a4e-b3b6-e4b6c1d32fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1293,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8283a32e-6ad3-4a6e-9ed5-31948cc73b51",
        "cursor": {
          "ref": "d02a42b8-d074-4ec7-89a7-bddf0f4dc50d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1140da3-a463-4191-a2f1-0480291cee9a"
        },
        "item": {
          "id": "8283a32e-6ad3-4a6e-9ed5-31948cc73b51",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d5b61516-3fc2-4722-a7ee-a539d26e7dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1327,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a531568e-7186-4f7b-8231-d364f72b2ed9",
        "cursor": {
          "ref": "29051849-6010-45be-b0e1-5dbbb79ad4c8",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f5abb5b5-7ae9-48c9-a224-199b66870d05"
        },
        "item": {
          "id": "a531568e-7186-4f7b-8231-d364f72b2ed9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b84fbf9d-93b7-4836-be38-c69dc0552595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2067,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a636e0a2-6326-4f91-93ac-10d1230e9d0e",
        "cursor": {
          "ref": "d3589063-2605-44ab-94f9-c7061797f294",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "64c4b9d4-fd36-4216-94b4-b9118889c7a4"
        },
        "item": {
          "id": "a636e0a2-6326-4f91-93ac-10d1230e9d0e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "efb59e53-8159-42ca-a644-4a07904f435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1688,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57908685-f72c-474e-a7b1-dc259cfc87fc",
        "cursor": {
          "ref": "ea1fe96e-b375-4124-80e4-7cd57d5c4c40",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "02a669e5-6149-44f1-9da4-9a5ce746909f"
        },
        "item": {
          "id": "57908685-f72c-474e-a7b1-dc259cfc87fc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a6c0db4-ba59-44f6-82d3-f1368209d6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1510,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b22b4b1-f6bb-4605-8cd6-9673c750ce4c",
        "cursor": {
          "ref": "e9721732-6aae-4eb5-9e37-fae66e3659aa",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "31e5d1f8-e290-4f1f-8a92-f793b6022145"
        },
        "item": {
          "id": "1b22b4b1-f6bb-4605-8cd6-9673c750ce4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "761c2d52-d5c3-4f09-a79e-cd0dda06c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1150,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e66301-68c5-4ae1-849c-b894b640ff48",
        "cursor": {
          "ref": "b8f38be2-6d15-4f37-8359-8409033a0d70",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "916a90c3-1209-47e5-8b59-934eddbca150"
        },
        "item": {
          "id": "b7e66301-68c5-4ae1-849c-b894b640ff48",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5f359a2f-3ed2-466d-a0ed-0b7146bd5720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eaa947-f0f2-40ba-9360-f53b454bc0d3",
        "cursor": {
          "ref": "bb10c184-c996-4e03-90ca-ef2f13ec4d4b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbd9fd12-d150-4d4d-8c46-d4b734ab54a8"
        },
        "item": {
          "id": "b1eaa947-f0f2-40ba-9360-f53b454bc0d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fa2904cb-aaff-4f3d-9a21-b8568de77463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11e3252-37d5-4155-8cc2-25a640ea4f0c",
        "cursor": {
          "ref": "c594cfe3-8f76-4378-8519-fbd9feabeec6",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6ff9d8c4-6053-4276-89d1-2a89effdc17c"
        },
        "item": {
          "id": "d11e3252-37d5-4155-8cc2-25a640ea4f0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ae53742-5e99-4db0-89b5-30502a0815a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ae8838-990c-4de6-9716-9ef15ac288c1",
        "cursor": {
          "ref": "e0b92978-123d-4e73-8247-df3364fd3228",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb40e637-d3d1-4e2e-818d-ce87580083c2"
        },
        "item": {
          "id": "21ae8838-990c-4de6-9716-9ef15ac288c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "37b343ae-e9bf-4d96-bf9a-c70221913742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7947ddf2-6186-46bc-be44-e2b06fa17836",
        "cursor": {
          "ref": "3266f386-1ccb-4093-8c02-503bcb96e7ce",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a84467f4-a770-424f-a2bd-55266a4a1ad1"
        },
        "item": {
          "id": "7947ddf2-6186-46bc-be44-e2b06fa17836",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0664c97-948c-4d10-bfb6-7a52eba1ab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125ab31f-e350-49de-a6e2-dafd94b5e450",
        "cursor": {
          "ref": "a8d0fcea-fb25-422c-aab4-7e3b945010a9",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "08fa2d50-bd3f-4bf0-bd2c-706f12a79fcb"
        },
        "item": {
          "id": "125ab31f-e350-49de-a6e2-dafd94b5e450",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "228d1efd-1589-46bd-b879-f844eaa468b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e3c4ab-a2f9-4f56-bce6-476d43dfeec3",
        "cursor": {
          "ref": "facf607e-b1b0-4bf9-b1c8-03e682b8840a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c9acc952-c6fe-41c8-b3d1-dae9f72546ac"
        },
        "item": {
          "id": "90e3c4ab-a2f9-4f56-bce6-476d43dfeec3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a72dab3b-7733-4355-a64d-ff217722ebc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7634531c-7013-49ee-8a89-5359498508ba",
        "cursor": {
          "ref": "608a7e63-1d4c-48be-878f-997025fd130f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e7907483-31bb-4058-b34a-4ded0c7080c4"
        },
        "item": {
          "id": "7634531c-7013-49ee-8a89-5359498508ba",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0457b78b-9c79-44af-924a-2f63fe5023e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a47acd-7ce8-4bb3-baec-96bc9d373b31",
        "cursor": {
          "ref": "3466c3ad-99e4-44e6-a69c-f7106a2c929d",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f351d02f-600a-4996-a6c3-8b66dda91bcd"
        },
        "item": {
          "id": "c0a47acd-7ce8-4bb3-baec-96bc9d373b31",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ae9d45a-0d65-4a52-9f59-7c3fcdf29b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a041da-8531-47ef-92e2-951ae3558609",
        "cursor": {
          "ref": "2b521fc4-88af-42e9-b206-8d11bec6d3b7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7330232d-eab3-4483-bad4-5c448ee23dc1"
        },
        "item": {
          "id": "92a041da-8531-47ef-92e2-951ae3558609",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "61437bf0-5bd6-4cc8-ba15-fdb2e3356f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae80d3e4-f53f-4e73-979a-c76f172cff06",
        "cursor": {
          "ref": "2cad0dde-9c49-4909-9a94-e23a752b2a82",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a4ae39ac-e211-4cfd-8746-e8a2c41673b1"
        },
        "item": {
          "id": "ae80d3e4-f53f-4e73-979a-c76f172cff06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "54534aa2-a149-4ba1-8ccc-0abc17e5e5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b4429d-9a70-4bfb-8299-baf0f0925138",
        "cursor": {
          "ref": "bc78b1d5-268a-4a52-a207-8c35413883b4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dda375b8-c109-4704-b157-4ef644975044"
        },
        "item": {
          "id": "42b4429d-9a70-4bfb-8299-baf0f0925138",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9b4e257-e13d-4747-9802-cfdcd199a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92577c2-0842-489b-9ab8-d5a2dc6178b7",
        "cursor": {
          "ref": "d69d0afa-83e4-41b6-beff-d3f420796e12",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a778463-69ce-4f7c-8e97-173a15f413b7"
        },
        "item": {
          "id": "b92577c2-0842-489b-9ab8-d5a2dc6178b7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95fcc61f-9b2e-4e04-b29c-a32b1533f180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7436f722-159b-4177-9c55-d2baf4bb13c8",
        "cursor": {
          "ref": "3ef779bc-f4e4-40fb-8eff-f78d7afe5df6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "86267260-0e65-4c4f-a8cc-8903596e2d5a"
        },
        "item": {
          "id": "7436f722-159b-4177-9c55-d2baf4bb13c8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9e5f5721-b402-49cc-bcc7-9ab9af9ce640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c74b2-5a6d-403c-9c59-1cd7dde71cab",
        "cursor": {
          "ref": "3eb3818a-1812-43c4-874f-07b890c0b15d",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d5665c6-4237-4d94-95a1-2122766c075a"
        },
        "item": {
          "id": "f40c74b2-5a6d-403c-9c59-1cd7dde71cab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b9eb75a-89b3-4429-8fa5-9ec910ef778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02950437-f8c4-46d3-9d15-cbd4a5674287",
        "cursor": {
          "ref": "d778055a-d17f-4129-8413-04e3d8764cdf",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e61d5b85-0d22-4f1b-9ae6-751512eba4a4"
        },
        "item": {
          "id": "02950437-f8c4-46d3-9d15-cbd4a5674287",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35e106c8-7cdb-40b4-ae5a-12c2a9de6883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43056839-d4d6-43c8-8af9-cd5fc5f31f0b",
        "cursor": {
          "ref": "5c435ac5-496a-4b66-b7ad-2d18a5bfca59",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "165d644f-45c7-495a-b79c-cf30a8e960a0"
        },
        "item": {
          "id": "43056839-d4d6-43c8-8af9-cd5fc5f31f0b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fda68ec1-5e60-46e8-a751-ad5614f3b14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d46104e-226e-4eec-bac0-4b51196fcb2a",
        "cursor": {
          "ref": "203c9dc4-da71-47e4-aa76-11b9829d1ffe",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f2b5f2ee-75a7-422d-8c72-49d6b1c509d6"
        },
        "item": {
          "id": "4d46104e-226e-4eec-bac0-4b51196fcb2a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afaf6bf2-7073-48b1-8ecd-c256a1f387b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847aac87-103b-419a-bdc4-bd16c2e67e68",
        "cursor": {
          "ref": "18ee9c7b-4c6e-4711-b8bd-5f910edea061",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "78e28942-4548-45fe-8dce-c314b8b35908"
        },
        "item": {
          "id": "847aac87-103b-419a-bdc4-bd16c2e67e68",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b093298c-1b5e-49a0-a42d-43378cc7e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e491601-756b-4230-9d98-dd0996b90cea",
        "cursor": {
          "ref": "d52cc7f6-e085-4efe-ba61-257dd117d305",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa206dc0-9fa9-4d85-a29c-ff52d8d8be54"
        },
        "item": {
          "id": "7e491601-756b-4230-9d98-dd0996b90cea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0457427-48ac-4baf-8e37-56f5671f8b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5670f0a-5c65-4a94-90f7-fda99553ac31",
        "cursor": {
          "ref": "d89abbcb-0309-4061-a5b0-bce800671c36",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3a7e4a12-268f-4889-adbd-be91cff11676"
        },
        "item": {
          "id": "d5670f0a-5c65-4a94-90f7-fda99553ac31",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "840ecb06-63db-459f-9cc8-c46d8d54c027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b8bb4-a5e0-4ec1-81dc-25dee15028c1",
        "cursor": {
          "ref": "2de7bfa8-2f12-451a-b839-f6a824feb704",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a84cd000-266b-4240-a22a-42f3802f143b"
        },
        "item": {
          "id": "565b8bb4-a5e0-4ec1-81dc-25dee15028c1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bcf873d8-0849-4557-94b4-164de3ccac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a91cdb-6532-43af-8bd9-0d606198b337",
        "cursor": {
          "ref": "010cb7e1-d737-4380-b051-71e5b71bcefe",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4fd759a2-0c2c-42a1-bdd0-149157949a08"
        },
        "item": {
          "id": "37a91cdb-6532-43af-8bd9-0d606198b337",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13605a42-1146-4e8a-bb66-679a0eb9349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583d83c1-52b3-408f-8a79-1557f2b59493",
        "cursor": {
          "ref": "c3a48138-d885-414b-b182-d77c0460be3f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5c32f9a0-64c5-4564-825d-560e48a93126"
        },
        "item": {
          "id": "583d83c1-52b3-408f-8a79-1557f2b59493",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29d30168-52d4-45e2-9f8e-bd92a9e1f0cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe0ea7-d61b-4a0f-82dd-a3c8507bd9b1",
        "cursor": {
          "ref": "9f012cf3-b960-4d70-8d32-f633c2be0946",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "457c99f8-3472-4659-bc1a-42d0454f9ca1"
        },
        "item": {
          "id": "bafe0ea7-d61b-4a0f-82dd-a3c8507bd9b1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4c49d71c-e717-4b0b-b00f-0575a056eae9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a54854f-0856-4b50-83d8-222141aa7381",
        "cursor": {
          "ref": "d426328a-ef1a-489d-b510-ef3898867329",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9a96085f-e087-449d-803f-2e0f1ac82c55"
        },
        "item": {
          "id": "5a54854f-0856-4b50-83d8-222141aa7381",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33cebbf7-6e9b-4c70-88a9-10d4ec6edc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a54854f-0856-4b50-83d8-222141aa7381",
        "cursor": {
          "ref": "d426328a-ef1a-489d-b510-ef3898867329",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9a96085f-e087-449d-803f-2e0f1ac82c55"
        },
        "item": {
          "id": "5a54854f-0856-4b50-83d8-222141aa7381",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33cebbf7-6e9b-4c70-88a9-10d4ec6edc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5975477a-7043-4e66-9099-f4f0be8d6ebe",
        "cursor": {
          "ref": "6454ea30-8ed2-49e9-b8e7-6b065ba1ad01",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d20a5463-75d1-4d91-9b95-8cd650ec6232"
        },
        "item": {
          "id": "5975477a-7043-4e66-9099-f4f0be8d6ebe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "588ad6a9-60ba-4e5b-a0a5-d71ff0a95f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e57f58-5255-46ac-8132-7fbb932c0854",
        "cursor": {
          "ref": "30de6fcb-1ae6-412b-b645-afea267d1e3e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "090bbbe3-b5bb-4c09-b785-054c125963fb"
        },
        "item": {
          "id": "c4e57f58-5255-46ac-8132-7fbb932c0854",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "33adb640-e492-422e-a2c9-16565889267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0228e96-98dc-49fa-b47a-3a5c69f46746",
        "cursor": {
          "ref": "6e77f438-73f7-4833-83f8-66119f1fe2b1",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d4ae4821-dee4-443e-8a77-f156f8bea829"
        },
        "item": {
          "id": "c0228e96-98dc-49fa-b47a-3a5c69f46746",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "59658865-6e30-4577-9198-a7000dd13e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b07ba-e5af-4a82-94b9-ab6e78e50b9c",
        "cursor": {
          "ref": "96994f3d-3229-49b5-91d3-c3e64284a336",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5e09344d-081a-407f-8170-5cb3e6a9cde5"
        },
        "item": {
          "id": "b49b07ba-e5af-4a82-94b9-ab6e78e50b9c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "15bcf93e-3d8e-4ab4-acd1-179c00cef446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f841e13-bdd0-4656-ac48-67979d700029",
        "cursor": {
          "ref": "39d42198-b076-4ca8-a65b-eade02b48877",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0544cf55-98ce-45db-bdb5-3ddeb6dee19b"
        },
        "item": {
          "id": "8f841e13-bdd0-4656-ac48-67979d700029",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6fc5db03-3399-4a4c-a647-4dbfa2e9b74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f6cfcc-708f-47e7-9664-2315bd695e66",
        "cursor": {
          "ref": "efae2f4b-5ece-4b19-a396-b629f215a5fb",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9aa692c1-cfb8-47d4-8c30-9b84d82f1b0d"
        },
        "item": {
          "id": "c0f6cfcc-708f-47e7-9664-2315bd695e66",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f9a6d60e-f850-465d-aaa4-f28729278ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba94496e-341a-4171-8dc7-97ceb6993498",
        "cursor": {
          "ref": "ddc04af7-46f0-4258-85ad-33ab0d58228a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ce377e5-a84a-4ef8-a8b0-9e2b352e7127"
        },
        "item": {
          "id": "ba94496e-341a-4171-8dc7-97ceb6993498",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3847b04-b2fb-46a9-8558-d90c589154d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb08c694-6468-4654-a2f3-2a42951f126f",
        "cursor": {
          "ref": "cbc1bbb3-4370-4a6f-b917-c28b273cb0d9",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ed450563-9663-4255-a133-1f23951290d6"
        },
        "item": {
          "id": "cb08c694-6468-4654-a2f3-2a42951f126f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f81aad42-6ca6-4f70-ae70-82750709bbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a37141-00df-4e0c-aa07-c41661c27437",
        "cursor": {
          "ref": "0720922e-0c57-4a5b-8e97-b524bcf5176c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "352f3b17-c4ae-4ee1-95b5-840873867d79"
        },
        "item": {
          "id": "68a37141-00df-4e0c-aa07-c41661c27437",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9b788d18-3e99-488a-9219-f8d29858ca6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcd4a8c-f576-4a8a-9564-a498f62e2d5d",
        "cursor": {
          "ref": "6023f344-7d89-4694-be64-43fcde7a958d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90b90612-2a2c-46b5-8fee-03e7653818ca"
        },
        "item": {
          "id": "3bcd4a8c-f576-4a8a-9564-a498f62e2d5d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c7f27db-1a76-4df7-b5ab-5f5bec72732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cf50b5-390a-4f06-b43f-8649004e7375",
        "cursor": {
          "ref": "15b1323f-00e4-44c9-84ef-f0e529f9a2df",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4850325c-6ef2-48bc-9aae-942972f97584"
        },
        "item": {
          "id": "83cf50b5-390a-4f06-b43f-8649004e7375",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "71dee722-e497-4768-9789-97bf3ea1ca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e0a1f-4474-44e2-b1d9-cb86a861e809",
        "cursor": {
          "ref": "ae937000-1703-44d9-9091-4be01e76ca69",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ffbff8ce-2024-4b8e-ab94-42bcd924bf29"
        },
        "item": {
          "id": "ad2e0a1f-4474-44e2-b1d9-cb86a861e809",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "960bad99-3865-4e90-975a-ee9d2fd1e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326ae588-b99a-45cd-bd68-e3d690039c24",
        "cursor": {
          "ref": "1004a206-f10e-40d8-a816-139040961297",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9561cf26-8ee2-41aa-bddc-68b62ac37b57"
        },
        "item": {
          "id": "326ae588-b99a-45cd-bd68-e3d690039c24",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6515e338-7dd6-4694-8fb1-f337dc25e84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf2f7cc-f7ae-42fb-83c1-670c76b3008e",
        "cursor": {
          "ref": "66ebeeb0-2b47-4906-b0f1-11ef335d2f6b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b336106-a038-4599-96f4-b1d5599a071c"
        },
        "item": {
          "id": "ebf2f7cc-f7ae-42fb-83c1-670c76b3008e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c519fb65-6bc8-45de-9a96-7c5f56ae13f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4cb10b-9258-4018-8f1d-7099a45ba6d0",
        "cursor": {
          "ref": "f5496936-5a32-4235-a95c-4d365e8d90aa",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42c62d0c-5bd1-4017-9b85-6066f2d9aab4"
        },
        "item": {
          "id": "3c4cb10b-9258-4018-8f1d-7099a45ba6d0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a79bbc7e-b2e0-4d8b-8962-75d2fd566cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4789779-2f7b-4c62-9e8c-23622263df11",
        "cursor": {
          "ref": "5cf48e71-2296-452d-b8f0-690b3d0936b1",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7d3ce9b4-a566-4578-97fd-adc2cb43052a"
        },
        "item": {
          "id": "c4789779-2f7b-4c62-9e8c-23622263df11",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "80a703d6-6632-4ffc-815f-c3e9dad3f3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28049a88-ab59-451f-a776-7cb3249c9a29",
        "cursor": {
          "ref": "b8fa8eb5-6a4b-4d24-bfe0-c403c584e483",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d69e1cd9-ef85-4fe2-a702-885c453cddf3"
        },
        "item": {
          "id": "28049a88-ab59-451f-a776-7cb3249c9a29",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5f50b8cf-4e2a-4db2-b588-bcf8eca1fe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f0f3c4-b127-4b9e-a05c-caf2bf366dc0",
        "cursor": {
          "ref": "48ca2a9f-63b8-4b2f-8395-36462ecdc91e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "95338874-a11b-4611-b6b2-c7a0fa971202"
        },
        "item": {
          "id": "b5f0f3c4-b127-4b9e-a05c-caf2bf366dc0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bbd05b4d-ce6e-4cb3-8d91-cf309cf81e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb644e3f-c07f-4f1a-863a-755656b97552",
        "cursor": {
          "ref": "ea525906-e8bb-407b-82ff-83d1f701eb75",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a30265ab-56b4-4237-bebc-f3336ba3eef1"
        },
        "item": {
          "id": "bb644e3f-c07f-4f1a-863a-755656b97552",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "983e6197-bc9a-411f-88b4-1bb0334233bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6551770a-ea90-4b9e-a884-69f3242bc3ca",
        "cursor": {
          "ref": "4a8930bd-c625-45a4-92f8-3547bfcdba5e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5a5f6026-7e74-445d-b575-501fa64a91fb"
        },
        "item": {
          "id": "6551770a-ea90-4b9e-a884-69f3242bc3ca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a92bf38e-d0d1-4947-8175-65b849d31345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659a0f6-5c43-45e2-97a9-349311092092",
        "cursor": {
          "ref": "db441340-bc72-42fc-a4d2-ea7023571555",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c3dbfd65-3084-4089-b837-1731c8885509"
        },
        "item": {
          "id": "0659a0f6-5c43-45e2-97a9-349311092092",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1933db9d-4e56-453b-8003-abea0b4ea3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b890f3d-de99-42c1-bac9-8a36b2faa41f",
        "cursor": {
          "ref": "11ccd30a-4963-4cf4-bf78-f82a17d21d69",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d68d7620-f205-40a0-a091-f1814d85e30e"
        },
        "item": {
          "id": "4b890f3d-de99-42c1-bac9-8a36b2faa41f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "06e0bd27-7d43-4029-a5bf-75e0ceeab6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3a454-b4d2-49e7-9cdb-a45e1c1ca150",
        "cursor": {
          "ref": "588feecb-958f-4bae-83d9-df6f065760ca",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "80b0ce90-111e-4d32-a740-f791bd542b24"
        },
        "item": {
          "id": "a7e3a454-b4d2-49e7-9cdb-a45e1c1ca150",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "042c51e6-60d7-487f-b10f-7d7d701fb339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64bcfbd-935e-4d33-af8c-c5471e6b3ec8",
        "cursor": {
          "ref": "a08f7338-ee8e-42ca-81cf-efb29e34b3b0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d036189e-9c83-464a-9726-1cf76bb3a41f"
        },
        "item": {
          "id": "e64bcfbd-935e-4d33-af8c-c5471e6b3ec8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "da465897-a7fc-4fb6-9534-c3e8779bfc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7ac8b0-92f1-46a1-a55d-5dad26a4ce54",
        "cursor": {
          "ref": "470d55bb-aa6f-4474-ac85-7f707f80b43c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c3b50755-7569-4025-8daf-88e826da8093"
        },
        "item": {
          "id": "5f7ac8b0-92f1-46a1-a55d-5dad26a4ce54",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2ed66ac6-4438-412a-85f7-badfc2c6e37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0406cb-0b05-4586-a123-9cffab0674e8",
        "cursor": {
          "ref": "c45aff77-c385-4476-a245-a45c95e89449",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba8e88d5-1871-4c74-86be-fe44f3aee18f"
        },
        "item": {
          "id": "cc0406cb-0b05-4586-a123-9cffab0674e8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e9550a1d-3eaa-4f3a-90a9-26c8e7da4705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b1fd7e-fb98-4ac8-93b4-d6ab96e2fc7d",
        "cursor": {
          "ref": "9f4868c3-c9ae-4e70-bbfb-afcc329f0e89",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "01f40342-6190-4d7e-8105-1f788e5f4832"
        },
        "item": {
          "id": "99b1fd7e-fb98-4ac8-93b4-d6ab96e2fc7d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a48e092-8dc5-4e06-86bf-f807a553eddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151afda5-15ec-4611-a704-54d43bc4b638",
        "cursor": {
          "ref": "b0894b92-eb18-48a6-b079-2223b55916fe",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d6e27f7-acb0-4e8a-8cd3-ec781789c983"
        },
        "item": {
          "id": "151afda5-15ec-4611-a704-54d43bc4b638",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9590a8e4-810d-4944-91fb-1d7cc7db1b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4289c321-3521-4a45-8982-4db06023ebe5",
        "cursor": {
          "ref": "c1bbc02a-aaa1-4ec7-adf2-3392e1e9bd4b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b2f215ec-205a-46af-95ac-fed12633047a"
        },
        "item": {
          "id": "4289c321-3521-4a45-8982-4db06023ebe5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b673bf89-2871-453d-a026-852909ce0e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1f1f7d-6906-45ff-ac67-928b4952abab",
        "cursor": {
          "ref": "a3a93ea3-05aa-4444-9fba-a663a06b8fc5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f345bb78-e355-4ede-9f60-cbf8b6d33992"
        },
        "item": {
          "id": "4d1f1f7d-6906-45ff-ac67-928b4952abab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "60eedf6b-f90c-4969-9738-6acf7b521ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9438f-b0c4-48e9-b7b3-203e4ed32638",
        "cursor": {
          "ref": "09a6e3f5-4204-4d09-83d8-4dbef59c7a22",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "91c1c613-5c6d-454f-92a0-a366216ec1c4"
        },
        "item": {
          "id": "00c9438f-b0c4-48e9-b7b3-203e4ed32638",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "19c7580b-95fa-4de5-83af-97807883d155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8332086c-b615-45dd-8ac4-09e8204bcbef",
        "cursor": {
          "ref": "8f2182e0-c0d4-4999-819c-d2d30439b997",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5195e445-60a0-47e8-b903-7f536c51f7a7"
        },
        "item": {
          "id": "8332086c-b615-45dd-8ac4-09e8204bcbef",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fd719a2b-1964-4800-b787-b0bbf2f9596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac51c45b-904d-4f2e-9421-5094d40b97f6",
        "cursor": {
          "ref": "324c716c-5166-4022-9414-2b7943d32002",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a5470297-5d76-4941-8407-f958e2aeb16d"
        },
        "item": {
          "id": "ac51c45b-904d-4f2e-9421-5094d40b97f6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c3ae9ea5-8b11-4af0-a59c-b9bab3b450a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f86ae97-7f06-4137-b651-eb9c06243b37",
        "cursor": {
          "ref": "75dfbaf7-cc1b-4818-a363-16389736bc67",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "def62e9b-7e6d-4460-962a-2d7e10c7f9b4"
        },
        "item": {
          "id": "6f86ae97-7f06-4137-b651-eb9c06243b37",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "67c0f824-d30e-469b-911a-3cc82ce4d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6edaa5-7901-4f2c-ac13-b7be8f08ef08",
        "cursor": {
          "ref": "2775acd1-5614-4551-82b9-9bd9420c77e5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "95d8eb7d-7f87-4598-a7a0-cb75031e27ec"
        },
        "item": {
          "id": "2f6edaa5-7901-4f2c-ac13-b7be8f08ef08",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f0e4f02f-8c1a-458d-99b6-16a2a9ff0618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8210d52-3a05-4366-9327-e3891a5e7a6d",
        "cursor": {
          "ref": "11a30145-1d55-44ec-bd36-2f6060e9caaa",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ce23ca74-d873-417d-abfc-82d8862d8c9c"
        },
        "item": {
          "id": "a8210d52-3a05-4366-9327-e3891a5e7a6d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3332c0e-651e-4900-a437-45a0e12e5458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e77e10-385f-4d70-955d-0596527acdcd",
        "cursor": {
          "ref": "69a0dcdc-f4d5-4645-979e-26786e05fbb8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4bd7765a-d0c7-4042-9295-bfce0e0cd83a"
        },
        "item": {
          "id": "f4e77e10-385f-4d70-955d-0596527acdcd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2ed50411-7c42-454c-b4b7-5ad539cb81b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c3d29a-69eb-46d7-b1d5-007c12aeedc8",
        "cursor": {
          "ref": "bee3e012-87f8-46b8-b382-8a14c39fc1c8",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "965e0a61-f04c-4652-9ce4-c3f945b696d0"
        },
        "item": {
          "id": "32c3d29a-69eb-46d7-b1d5-007c12aeedc8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b0f0c936-5e80-4fa1-89a7-c817a1588b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d349e30-31cc-496a-ba67-3ea2772004ba",
        "cursor": {
          "ref": "e8998a06-c85b-43b6-b519-db2b484eeb84",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ce360788-d777-4727-b807-1c6f7e1a3515"
        },
        "item": {
          "id": "3d349e30-31cc-496a-ba67-3ea2772004ba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3ef4f635-009e-436b-b229-4c5a7fe84044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c67969-63c4-4a9b-a2d4-1b6b627cd3f5",
        "cursor": {
          "ref": "91a84b20-21cb-4b76-b3cf-74e209cfc379",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e1fd25f0-b5b9-489b-8918-cb7c29a8cf0c"
        },
        "item": {
          "id": "77c67969-63c4-4a9b-a2d4-1b6b627cd3f5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6a8154f4-9553-4c2d-a10e-61e8f45d303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd4bcc-1219-4053-a5ad-509d81772245",
        "cursor": {
          "ref": "7ed7f147-9150-4ed2-ae5e-f06db8fcb721",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14bc81e8-302c-449e-b12e-86475260bc8d"
        },
        "item": {
          "id": "bdcd4bcc-1219-4053-a5ad-509d81772245",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "baccd4c0-1f2a-43d5-8f5e-47c79a6e46f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8b1bf1-0a3e-402a-8bac-78af86c9fc3f",
        "cursor": {
          "ref": "b34a8b26-edd6-4a52-b40d-697745b60482",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1c8898a4-2a0a-467e-976a-1e4002836f5d"
        },
        "item": {
          "id": "3a8b1bf1-0a3e-402a-8bac-78af86c9fc3f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0ee18637-7a69-43da-aacd-98dc2fe652d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71d28f0-5d24-4fbe-b52c-71d12d54c302",
        "cursor": {
          "ref": "00290086-114a-430c-8657-c9bc964428ee",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a1e32ab-f56d-407b-a22d-1b243270ff7b"
        },
        "item": {
          "id": "a71d28f0-5d24-4fbe-b52c-71d12d54c302",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fdc165cf-7380-4eb7-9cda-a3fccbeccc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48331853-f06a-47b2-9bb3-e11c8477c44f",
        "cursor": {
          "ref": "070796e3-5bf0-4477-a6b4-60b415df24eb",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6483ec6b-76f1-4826-a9d8-b3cf785efaba"
        },
        "item": {
          "id": "48331853-f06a-47b2-9bb3-e11c8477c44f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "354d63ee-186e-4d9f-a942-c01f0014ab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffdf23f-ca84-4d18-833e-0625be6447c9",
        "cursor": {
          "ref": "d5249c5e-d0d6-45f8-9ee8-4f7b2850555e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fbfc93ae-a1df-4b7d-8c2a-e6985bf2816e"
        },
        "item": {
          "id": "2ffdf23f-ca84-4d18-833e-0625be6447c9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e7b62da8-eb98-4af4-a945-70fce9eec003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227699c4-5e98-4d12-9db4-c3eb7cb7a7e8",
        "cursor": {
          "ref": "785ee69e-aa01-4298-98e0-d3e622428423",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "608598c7-1ff3-4129-9e25-78ae05e5a467"
        },
        "item": {
          "id": "227699c4-5e98-4d12-9db4-c3eb7cb7a7e8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9d60989e-2417-410e-8467-71e06e385f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d99a48e-64e4-47de-8055-b5c8634b15d6",
        "cursor": {
          "ref": "b075939c-f6b4-4a6a-bc83-d19c38f30475",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e084d49b-4b6f-4c78-877f-7eb129074b1f"
        },
        "item": {
          "id": "0d99a48e-64e4-47de-8055-b5c8634b15d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1a2f5398-8aa5-44e9-b19d-9422d7ad112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499f34cc-37d8-4013-aab4-649b59536420",
        "cursor": {
          "ref": "8f7a785b-8c80-468d-a500-4e75faa9f94c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c9fc0a97-741d-40af-ba08-e97ff8ad0dbf"
        },
        "item": {
          "id": "499f34cc-37d8-4013-aab4-649b59536420",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b41c6119-8417-45cb-9489-7a7a3ad58688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a72322-6da2-4e83-b40e-7660594f3047",
        "cursor": {
          "ref": "ec0f238b-814d-4e7f-9cee-faab0a61f611",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f82b3ef0-5436-44bb-8878-945acd30de81"
        },
        "item": {
          "id": "c5a72322-6da2-4e83-b40e-7660594f3047",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5a471e97-e7fa-4ad4-a373-eb83e76571c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eda042-4b84-4183-b095-0e317a23ed8d",
        "cursor": {
          "ref": "2f8786b9-98cf-47b8-af9d-b0421a8a02d4",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d2eabd17-400d-49ec-baf7-c8a7ad37d9cc"
        },
        "item": {
          "id": "e9eda042-4b84-4183-b095-0e317a23ed8d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6871ec93-7a1a-4986-9c64-6660fbc78f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e990d58-438f-440f-9e80-c4889a1996ae",
        "cursor": {
          "ref": "c31f8335-56a5-4738-8535-daeea461b1b8",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64c833d0-e58b-495e-bcb5-a30614299573"
        },
        "item": {
          "id": "4e990d58-438f-440f-9e80-c4889a1996ae",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bc09b2c7-8724-4e20-a0bd-9e3ca52f44dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64087ee1-6ea3-48ee-a555-b0d03c27ca06",
        "cursor": {
          "ref": "0e723441-a7c7-4934-bb74-eaffbbd74b2f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "394b421b-a58a-4b15-b528-c408c33fee32"
        },
        "item": {
          "id": "64087ee1-6ea3-48ee-a555-b0d03c27ca06",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bb5cf6dc-8ac3-45c6-a988-3d5f9b7e5801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4e5f2-dff3-40ff-b5e7-e51087b6ad31",
        "cursor": {
          "ref": "f27f8800-b98c-424b-80f6-cd93050ce39a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0f266bbb-bf44-4037-ac85-58e0f8ba7a95"
        },
        "item": {
          "id": "6aa4e5f2-dff3-40ff-b5e7-e51087b6ad31",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e40f3c1c-ab8f-4211-826c-35e0c7fbe7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee93cc1-2afe-4bee-9c28-e258bc469668",
        "cursor": {
          "ref": "deba54f0-3cae-458d-8552-9dc4315aa4a6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3f9164da-e6a9-4095-b235-ba25f0ec16bd"
        },
        "item": {
          "id": "7ee93cc1-2afe-4bee-9c28-e258bc469668",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1e1a197a-7567-490e-aabb-f8c1335e0a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c58ce0b-4f29-4b11-91b6-9339a06bef0f",
        "cursor": {
          "ref": "df188f8c-be20-465b-99f9-60c2b4d0c418",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "01d68b80-f8e0-4249-88ed-ad414ff6259c"
        },
        "item": {
          "id": "0c58ce0b-4f29-4b11-91b6-9339a06bef0f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b194a6ba-b06b-43cc-bdab-b226439f180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19396ba-05f1-49c3-8578-91b587ed3c15",
        "cursor": {
          "ref": "abac640f-206c-42c8-ac6e-d3caf8ccf6ca",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc7d5c07-afeb-4dc2-bb91-cd3a22b1373d"
        },
        "item": {
          "id": "d19396ba-05f1-49c3-8578-91b587ed3c15",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eb67e578-a5a5-4930-b5e1-1dd0c4f4c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f165bd7-5d2b-4328-af9e-7acf7a0e7ba9",
        "cursor": {
          "ref": "4ff38395-eee6-4a18-b603-392b037ffd5b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "03ba4647-12d5-4764-992a-de966d7e523f"
        },
        "item": {
          "id": "1f165bd7-5d2b-4328-af9e-7acf7a0e7ba9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49bae7ad-dd05-4982-8b8a-740042c4ccf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a16d270-1e8f-4bd3-a300-b7c5c5851923",
        "cursor": {
          "ref": "2da8a43b-b9ff-4b81-9578-357c34d8a6a0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eaad222a-a22f-477f-80a9-eb484efbd965"
        },
        "item": {
          "id": "2a16d270-1e8f-4bd3-a300-b7c5c5851923",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8003c9f-96ba-4057-a25a-ef576ea68182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e59b5-d88c-4528-95a0-e16495711090",
        "cursor": {
          "ref": "f886fbd4-6426-4cf2-a3a7-d839750973cf",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1038d1f-5e60-4a60-aedf-002969a5e663"
        },
        "item": {
          "id": "802e59b5-d88c-4528-95a0-e16495711090",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fe42c34d-9e4b-4687-8eac-eb0922e2e6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ac9860-ccda-4e7d-be32-5c1620e08327",
        "cursor": {
          "ref": "ebb193f0-3de4-4009-b1ec-c766d41dae66",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cdb9d166-f507-4fb1-a458-2623ab565d33"
        },
        "item": {
          "id": "92ac9860-ccda-4e7d-be32-5c1620e08327",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e405d93-4d7f-4bb9-a58e-de1f4e03fe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9a11ae-9c2e-4b8e-ab9b-bc3b3f500f25",
        "cursor": {
          "ref": "195b0bdc-e915-4e0e-bf54-b84cb773906e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d60345b3-ca7f-4ddd-ae63-c544023092f2"
        },
        "item": {
          "id": "1d9a11ae-9c2e-4b8e-ab9b-bc3b3f500f25",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "18928f12-b260-4fe4-a21a-e2d4aae5edbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bed050-9749-4b99-958c-fa1f11e769ff",
        "cursor": {
          "ref": "ab4f0bd8-5c99-4d12-9ec1-2b234fbef27e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9040358a-df14-47d5-a162-e368d24cf5a5"
        },
        "item": {
          "id": "a6bed050-9749-4b99-958c-fa1f11e769ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3cbde8ce-bd46-4ae2-9026-322363903290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e69ef6-0771-4407-a029-b7a0e17a876c",
        "cursor": {
          "ref": "3d9798ac-7809-43e9-b4f3-dee7c5ff69af",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "613ca5db-5b8d-4ada-9667-b5122e142453"
        },
        "item": {
          "id": "a0e69ef6-0771-4407-a029-b7a0e17a876c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "25ce8114-8cfe-40d7-8b22-b0ebeca2b594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f94e44-bbb6-49b8-98fb-5fa559206360",
        "cursor": {
          "ref": "268a8b5d-4366-4d97-bc1d-3cdce1c4b54f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "86cee039-215e-4069-953f-b699959cf01e"
        },
        "item": {
          "id": "06f94e44-bbb6-49b8-98fb-5fa559206360",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5a303624-0980-4ed8-b162-2dd3c8179403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b295702-576d-4b63-821f-66c7355feb5e",
        "cursor": {
          "ref": "dc4d5602-5fa2-42e1-b889-3570409c4af0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c1bb259c-d068-4ca7-b89f-8d79a3c5e31a"
        },
        "item": {
          "id": "6b295702-576d-4b63-821f-66c7355feb5e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c9fa1c4d-bf04-4b41-afe8-f951c94c293f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62534684-7a28-4834-807b-7bc66bb3c57e",
        "cursor": {
          "ref": "dfa94893-efb4-427d-8e71-20fc07ff2054",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "95221719-8a53-49d8-8fe4-b83b7ef19deb"
        },
        "item": {
          "id": "62534684-7a28-4834-807b-7bc66bb3c57e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4e16b4e0-0458-4322-9b3b-e4cb36d37407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f964d9-ad55-45d6-82a1-7e8519e91c9d",
        "cursor": {
          "ref": "a5f7b695-cdf5-4912-82e2-aa119b9956e5",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "578711c3-bcf8-49ef-aa54-ce1fafe6ba9e"
        },
        "item": {
          "id": "d6f964d9-ad55-45d6-82a1-7e8519e91c9d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "49e4d31a-89fd-483f-82ac-ae6a560acdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51991ec2-a0aa-4d1b-847f-c1c3e309c3de",
        "cursor": {
          "ref": "6003c3fc-6ac8-4978-989a-94aa9cdf16df",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c395a272-7be1-4578-bbb4-c3a8a11d1f8c"
        },
        "item": {
          "id": "51991ec2-a0aa-4d1b-847f-c1c3e309c3de",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93baa3c8-1857-4662-a4df-38c14b202939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8e155b-24b6-4eba-ad28-a0b4d038069c",
        "cursor": {
          "ref": "f2093374-0c95-4935-8aa9-ef591ec9c7e6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "92e76862-b2aa-46f5-9338-668b5ba72f81"
        },
        "item": {
          "id": "6d8e155b-24b6-4eba-ad28-a0b4d038069c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ed34da74-9d69-4114-a0b0-fdbcfe7b7c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff19c41-0c97-49b7-b937-496d163d74a5",
        "cursor": {
          "ref": "a31f688d-4100-4a9f-81c2-380038af0c11",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04d8d632-77c4-4532-9a5d-83e6178a1501"
        },
        "item": {
          "id": "3ff19c41-0c97-49b7-b937-496d163d74a5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52f5bba4-2f41-4ba0-b863-f072fec423d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60338c8-3863-4410-baa4-3a5c8b5f7e40",
        "cursor": {
          "ref": "5e89456c-8db7-4b48-9e38-48d8c02f36bc",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "71a40774-d663-460d-9198-be60c79977d1"
        },
        "item": {
          "id": "c60338c8-3863-4410-baa4-3a5c8b5f7e40",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "644dc74c-0119-4b94-91d3-c3e9bc541044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a6f8a-f2d2-487a-ad29-ad0087b46c9f",
        "cursor": {
          "ref": "ab5808c8-1851-46c9-a015-c2f65376a254",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "84b3d82d-ee4e-4b37-ac7c-36675a795a8a"
        },
        "item": {
          "id": "368a6f8a-f2d2-487a-ad29-ad0087b46c9f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "edc0ba77-cce5-40fa-bfe3-5f531fcb0c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef0ad4b-12f4-46ae-909a-47acc635d29a",
        "cursor": {
          "ref": "680eb8bc-9bd6-4853-8598-56d5693b1312",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3bc41219-2a45-4d09-9a32-fed6544fce48"
        },
        "item": {
          "id": "6ef0ad4b-12f4-46ae-909a-47acc635d29a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "26386896-b81a-41d6-9e56-f52c1f2d88bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e9bc4-00b2-4a24-b9ef-45e56cce5a8b",
        "cursor": {
          "ref": "23db38dc-9e26-42f5-8e26-c2162fc2255b",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0665bf12-8d25-49aa-aa40-744cf99a3347"
        },
        "item": {
          "id": "a48e9bc4-00b2-4a24-b9ef-45e56cce5a8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "48dad295-c0e4-43b2-a2fa-ae4daafee98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9daa06e5-0063-44ed-a80a-01c3bfab4378",
        "cursor": {
          "ref": "dcfb5e4e-c75e-4aba-a8e4-123b59d4c5ca",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2b6eb723-f862-423d-93ad-c8fee2d91dc6"
        },
        "item": {
          "id": "9daa06e5-0063-44ed-a80a-01c3bfab4378",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3e1402bc-5b55-4bd3-be36-f4dc70e8dbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06857c50-b6ab-42d2-b2b8-c5098ec8cd19",
        "cursor": {
          "ref": "69491bd0-e80b-4395-9306-0a79501668a8",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "03a979c8-4564-4b7f-8b49-19eac57f5ebc"
        },
        "item": {
          "id": "06857c50-b6ab-42d2-b2b8-c5098ec8cd19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8a87a6a7-f19b-454a-b4e1-0b8a731732b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8333d6aa-cdc9-4540-9b10-08834807f17c",
        "cursor": {
          "ref": "006c8693-9676-4356-8758-64430baf6dc7",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7fce574f-e746-4f58-a49d-60fe81ae8c3a"
        },
        "item": {
          "id": "8333d6aa-cdc9-4540-9b10-08834807f17c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "deac0a98-051d-4489-8d80-33d584722ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ac70e5-f72c-49bd-9f09-5119b537cb89",
        "cursor": {
          "ref": "8826dd73-0748-46f6-ab29-1c4f6422a121",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bfe2eec9-3bc6-457d-9097-a97a550d9e12"
        },
        "item": {
          "id": "77ac70e5-f72c-49bd-9f09-5119b537cb89",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2a642850-c9ca-40ff-8538-5d2cbf3bb1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48807809-d28f-4533-a988-390fd400207f",
        "cursor": {
          "ref": "edf9aac7-0f3d-4d0e-aa31-7cf074acb80d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d03e6804-512a-461f-a42e-7da453492373"
        },
        "item": {
          "id": "48807809-d28f-4533-a988-390fd400207f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "500b4b57-8356-452a-9e01-eabd7636b43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151a522-ba7e-4037-8003-45779cd66b61",
        "cursor": {
          "ref": "a0260323-77ed-4288-b8a9-3ba3f4acd912",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c382976e-44d4-4bd9-8e22-28367346494b"
        },
        "item": {
          "id": "b151a522-ba7e-4037-8003-45779cd66b61",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8d14cd86-d3e3-4629-8992-b39a82c065d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6fcbde-593a-42ff-a67e-5611e8c001a7",
        "cursor": {
          "ref": "dbc4dfc3-2235-41a4-b74c-7fa308f3900a",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4828087-7988-4ea0-bcca-a7dc0963a4a7"
        },
        "item": {
          "id": "2d6fcbde-593a-42ff-a67e-5611e8c001a7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c8389044-ea6f-43a3-bc89-d80a16763879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206608aa-e554-490e-9829-ee5fdc18d582",
        "cursor": {
          "ref": "cf3477ce-fd89-4d58-b29a-b7e873c3f9c9",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f3e038a7-53fd-4503-a4e9-ce4827883079"
        },
        "item": {
          "id": "206608aa-e554-490e-9829-ee5fdc18d582",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e01bf772-3b60-4d9e-b87d-198646d2b6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a596379-af18-4cc9-bd7f-edb4ed547c9e",
        "cursor": {
          "ref": "bb12e0ba-c999-4973-8c6d-80406c9a6d87",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d73179db-e432-4e19-9847-6266322c7ac8"
        },
        "item": {
          "id": "4a596379-af18-4cc9-bd7f-edb4ed547c9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "96e2e910-4162-42ef-a113-27a78ffea052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5335dde-b34b-4312-8639-201d7423ba69",
        "cursor": {
          "ref": "251a51c6-d0c7-4ef7-84a4-17cdfd896452",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "347796ca-c8cb-4416-ace8-2b3b420b0634"
        },
        "item": {
          "id": "a5335dde-b34b-4312-8639-201d7423ba69",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bf1356f6-52de-4acc-a61d-38e48977dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a055d6-0622-4060-a58a-22c09f6df50a",
        "cursor": {
          "ref": "4a5431d7-d0c8-49fe-88c9-2acc29aad2bd",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ebbab068-8d03-4972-8215-239f84039088"
        },
        "item": {
          "id": "54a055d6-0622-4060-a58a-22c09f6df50a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3301b362-dfcb-4d88-b736-1d4dc34cfe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260807cb-2b7e-40fb-ab7c-203fdaea23b8",
        "cursor": {
          "ref": "c1af6ed7-9936-4244-b880-ca30af520fb6",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5ab73e27-d6cd-43da-bcf5-fb0676ccb089"
        },
        "item": {
          "id": "260807cb-2b7e-40fb-ab7c-203fdaea23b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1aa4bb1a-d659-401e-b964-04d132cc2f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b8a544-a75d-4b35-976d-b39adb3bea82",
        "cursor": {
          "ref": "ff9a8b1b-ac5c-4e64-9248-837ef06182e7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "abd63570-617f-433c-8f60-efdd52bd177f"
        },
        "item": {
          "id": "40b8a544-a75d-4b35-976d-b39adb3bea82",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "976a1ea4-8f38-42ab-9c16-68e84b2a289b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598423e8-c313-4356-b90a-16b9f7a6a464",
        "cursor": {
          "ref": "9c2f1d1b-1c46-49e5-8842-8048fb8b6678",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2a3a1248-9de6-49bf-981f-5a6421db524b"
        },
        "item": {
          "id": "598423e8-c313-4356-b90a-16b9f7a6a464",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b200050e-2f90-4823-88bb-d238865b43a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90752f97-315f-4787-84d4-8399e29bf062",
        "cursor": {
          "ref": "a1f89b76-e477-45c2-bff1-dc5370a4e92e",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "73cc40d1-4649-4945-9b9b-c3a6b90faeb8"
        },
        "item": {
          "id": "90752f97-315f-4787-84d4-8399e29bf062",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7508658e-8c9f-40b4-b0a1-b0e16bf87430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf18bb0-08ae-488e-8a85-9a6a95d59f7f",
        "cursor": {
          "ref": "b1528da4-83f0-42ee-ae42-d61c50b571f9",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ab2d93bb-ba77-419c-8b34-0cf6be7011ee"
        },
        "item": {
          "id": "3bf18bb0-08ae-488e-8a85-9a6a95d59f7f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "07e5b6d1-8661-49ca-91a1-63bbb983052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2176c443-bbd6-401c-9234-69b209092460",
        "cursor": {
          "ref": "5ef9616d-0f08-48d4-b7fe-4a9c523ba0a8",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9327819a-28d7-4a92-a09f-b830e7f80ca4"
        },
        "item": {
          "id": "2176c443-bbd6-401c-9234-69b209092460",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "531ea0f6-4a7b-44ee-b392-bca5dd489dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af945b-12e0-4a94-964c-34d4a139dc0e",
        "cursor": {
          "ref": "4c90d4e1-4caa-4bbe-b9ae-6bb35cc5cdeb",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d315edeb-22fe-4e2e-96f1-33ff3163b7fd"
        },
        "item": {
          "id": "d4af945b-12e0-4a94-964c-34d4a139dc0e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1a2e4ec4-c6fd-414c-af2c-479ffe8847fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d0417-feaf-40a4-a5f2-8b870c3dc663",
        "cursor": {
          "ref": "4ce70593-0196-41a2-95f9-c693ccb748b7",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "da75c390-0061-4496-924c-76eb118503f9"
        },
        "item": {
          "id": "a22d0417-feaf-40a4-a5f2-8b870c3dc663",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a3ffc631-034a-49d6-8157-963107fec209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb26e6b-7cab-4363-bbf7-aacbc3f54ac0",
        "cursor": {
          "ref": "37b6cb4a-5931-4e57-b2df-d832ab8bbe9f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75642448-a1a3-4949-94ef-631bdf18c0aa"
        },
        "item": {
          "id": "1eb26e6b-7cab-4363-bbf7-aacbc3f54ac0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cfe88da2-1a5c-4840-83be-a6131860853a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8fcf5c-8bb8-46ee-89d6-c50bf9cdf309",
        "cursor": {
          "ref": "233555f8-b6d8-442d-bb59-a295e2ddfc21",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4771d1d1-5269-47f3-86c0-0741971ab27d"
        },
        "item": {
          "id": "df8fcf5c-8bb8-46ee-89d6-c50bf9cdf309",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "54ef8355-38c2-496d-b15c-478af9dbbfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3340fba-06a8-4a11-8d98-890dbde8b1ec",
        "cursor": {
          "ref": "ba3abe48-7a04-4f60-8694-2c2774bed00f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f11ccde-dc4e-4f12-8164-1857e6ea5817"
        },
        "item": {
          "id": "d3340fba-06a8-4a11-8d98-890dbde8b1ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "543109a7-bfa0-4f4b-9a89-dc507fc338a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b073f5c-0af5-49b8-8c38-5197b83c84ab",
        "cursor": {
          "ref": "3056b3ef-90ee-44eb-8c39-1953ee719a14",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ab240ff5-fb32-4eda-a065-e7f91ed1a755"
        },
        "item": {
          "id": "9b073f5c-0af5-49b8-8c38-5197b83c84ab",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "54dcae0b-03b1-42b2-a244-40f187f1353f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471e2be9-f64b-4d1b-bce2-5b22d4463ea6",
        "cursor": {
          "ref": "b5a5658c-7a61-4dcc-b490-1a78b739402a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "05c87229-8474-431d-bef6-3696b07d081a"
        },
        "item": {
          "id": "471e2be9-f64b-4d1b-bce2-5b22d4463ea6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "10771076-3ae2-44d5-8e17-6832896f71bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 381,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757d179b-9df7-448c-b98b-8bdffc9e6e8f",
        "cursor": {
          "ref": "26766080-4cde-4df3-9bd9-8ff9fae2ebd5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6d9dc6f-253c-4f56-b68f-de678d12d453"
        },
        "item": {
          "id": "757d179b-9df7-448c-b98b-8bdffc9e6e8f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "914dc9b1-c017-40fa-8d7c-6f94d3816195",
          "status": "OK",
          "code": 200,
          "responseTime": 448,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95e23ab-bdc3-471c-afb6-15286e5331c7",
        "cursor": {
          "ref": "1bc2966f-4ef4-4725-aa64-db40c1963bf3",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0ef48027-0d90-4a61-a5cc-0f1157493b8a"
        },
        "item": {
          "id": "f95e23ab-bdc3-471c-afb6-15286e5331c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b022b649-0b3b-4ef9-a609-eaf5dcb35ca4",
          "status": "OK",
          "code": 200,
          "responseTime": 2032,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e0e134-27f3-4120-a456-d50a1a688c13",
        "cursor": {
          "ref": "b05c63cf-17dc-411e-93e4-8b0261e9e188",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9abd8657-3edd-41ae-b8c5-0d21dba57a29"
        },
        "item": {
          "id": "99e0e134-27f3-4120-a456-d50a1a688c13",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b1c61506-ea2d-48bb-84a3-2dcbf16936a3",
          "status": "OK",
          "code": 200,
          "responseTime": 2325,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
        "cursor": {
          "ref": "3369ec25-ecb4-4220-9e3c-24c0786346e1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06159a87-9181-416d-993e-7b4281d3eb8a"
        },
        "item": {
          "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ef9581a-ee52-4210-8055-f2b6562f9437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
        "cursor": {
          "ref": "3369ec25-ecb4-4220-9e3c-24c0786346e1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06159a87-9181-416d-993e-7b4281d3eb8a"
        },
        "item": {
          "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ef9581a-ee52-4210-8055-f2b6562f9437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
        "cursor": {
          "ref": "3369ec25-ecb4-4220-9e3c-24c0786346e1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06159a87-9181-416d-993e-7b4281d3eb8a"
        },
        "item": {
          "id": "af8fa4c7-7342-47b6-8ac1-08f3f6a40c7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ef9581a-ee52-4210-8055-f2b6562f9437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b28fc8a-eb4b-4f3a-a863-344c02825a74",
        "cursor": {
          "ref": "adbad0dd-3e0a-4a81-90be-50436b9c2617",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d0cba2bb-b7f1-4d30-b091-5080d7aced8b"
        },
        "item": {
          "id": "9b28fc8a-eb4b-4f3a-a863-344c02825a74",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "178f7f60-457a-465f-b5fd-0d75300ebbfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17732495-2bb2-42c9-bb63-9f6e547e62e9",
        "cursor": {
          "ref": "8b5a5ce3-42e7-4768-9555-e9d2bb711680",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0da4a504-9fb6-4179-a2e4-2db40d6e7c71"
        },
        "item": {
          "id": "17732495-2bb2-42c9-bb63-9f6e547e62e9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bb2d1651-38e8-4115-85f4-949658e1e700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17732495-2bb2-42c9-bb63-9f6e547e62e9",
        "cursor": {
          "ref": "8b5a5ce3-42e7-4768-9555-e9d2bb711680",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0da4a504-9fb6-4179-a2e4-2db40d6e7c71"
        },
        "item": {
          "id": "17732495-2bb2-42c9-bb63-9f6e547e62e9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bb2d1651-38e8-4115-85f4-949658e1e700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e2dc1b-1e82-4324-a3c3-3b23bc402b5e",
        "cursor": {
          "ref": "acb5edfe-1ae6-4f2c-8af4-0ef8d82c4e47",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cd39437c-0b22-4a83-94cb-ee5f8461d5e1"
        },
        "item": {
          "id": "48e2dc1b-1e82-4324-a3c3-3b23bc402b5e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5b38c657-2649-4162-a096-bf7c9ce5ad0a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 992,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3456fa0-d17d-4801-ba1c-d8ceaa8108ed",
        "cursor": {
          "ref": "5737722b-aca7-4924-b029-efbf64510a52",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "33ac5f19-443b-4965-9454-3ac9094aacb7"
        },
        "item": {
          "id": "b3456fa0-d17d-4801-ba1c-d8ceaa8108ed",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e8a09e9-4bb7-4116-ba95-432f33a9d78e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3456fa0-d17d-4801-ba1c-d8ceaa8108ed",
        "cursor": {
          "ref": "5737722b-aca7-4924-b029-efbf64510a52",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "33ac5f19-443b-4965-9454-3ac9094aacb7"
        },
        "item": {
          "id": "b3456fa0-d17d-4801-ba1c-d8ceaa8108ed",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e8a09e9-4bb7-4116-ba95-432f33a9d78e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ac254e-1f78-405e-8f86-db01b0352d4a",
        "cursor": {
          "ref": "3008d874-2c44-48f5-85b1-39b3574dbdfd",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8396be63-7a41-470c-a294-40cbac0dda35"
        },
        "item": {
          "id": "08ac254e-1f78-405e-8f86-db01b0352d4a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2a67751e-9427-4741-b2a4-cd3880aae8e4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1046,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}