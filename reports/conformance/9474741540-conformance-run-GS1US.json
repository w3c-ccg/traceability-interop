{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "91ee26f8-e6b6-445c-8c87-0a629f847e24",
        "name": "Clear Cache",
        "item": [
          {
            "id": "42c2836b-9f59-4815-9c09-7482d6bf4de0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e64959f9-1f19-435e-afce-7d3cb83faa8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c38e8cc-637a-42bc-a28d-16a8147d8754"
                }
              }
            ]
          },
          {
            "id": "54244b7a-8d6c-45c3-8c4b-b0300e26fcd2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ff50ea8-8a5d-4475-a510-b74656eb738a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04eb7c7e-789e-446d-b548-8fa98333de9f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "176cb9ab-3358-4fad-9d03-3e2cb26be59a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6e795155-c760-41dc-9254-51ced4375b7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d521553c-9338-4929-bd05-08fb3d200756",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b22e0e29-00fc-4c0a-82a5-b6c2caecd771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12a5ca1b-761e-4c5d-8e91-d2d415861444"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31695faa-d21e-4e29-b4b9-95fb3398f9fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd514c21-f223-46a3-8774-8c17d1949380"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa0ac02b-2d5f-4825-a1bd-17286cd619e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d7a2bcf-6f07-4e6c-9778-1b6f5e9cba2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc312582-fb4d-4bab-b408-5f61cf620f78",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d902d24b-bc7f-4b6d-b213-a7cef5887083"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6de9ab5-3e22-4fd6-b756-15784ef30436",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a6e10bc-c350-4a12-8aab-d24936e3eab6"
            }
          }
        ]
      },
      {
        "id": "ec908424-4e21-4150-b7a8-f7dcd4b62408",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dcebc268-6a65-484f-901a-ebe9f0d49f56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dc02d72-73f7-45e7-adf6-5776f1fc32aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b06ba4e0-d6ee-444b-834d-3e49d1b80c1f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09be325c-ff01-4925-b0ae-f948fa74b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c4b9b00-0c42-448a-877f-0988fd0f2a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f973f34c-b008-4e75-b447-aa095480ce73",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b9168b-c3e2-4724-87b9-b711275a87be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce8c235f-75e4-4745-9c58-36bfaec08857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74863f1-9820-4170-bb8e-081dc37162fa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29b10d0-cf44-42c9-a540-965ef9f26c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cc6485d-54d8-4a2c-8b58-7a633dbe38d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af34d138-39d3-4a72-b9bb-47dbb45a2b1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29edf22f-cbe3-4fc6-90d2-72ea89eab2e6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b830e0f5-975f-461f-b9fa-c07f943b7fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8bccd6b-d90f-4030-8b8b-04dd5c01e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945e22d7-154a-40dc-9a4b-81b4d8eaaccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f3e559-ae8f-4391-bfa9-09a54f218504"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50f9e323-48ed-41a0-8263-49ab993f5548",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ab080cb-0e76-4ac7-bd5f-c7ede38244bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20215d1d-7b6f-4edf-a90b-036c4533e018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c49ebebc-6bf9-43f1-8362-38c51ac90090"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a0cd156-c855-4e68-9fe5-005f6b82b4b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a1cb0c03-641b-420d-8321-00bd471ade25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a914f20-9de4-4a9c-b94e-4875c2c316e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a531585f-7adb-48c9-a823-0034cf152515"
            }
          }
        ]
      },
      {
        "id": "bd2e57aa-e95c-4d36-892a-4bf70f9a3131",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3f58c7c-74c7-40cf-8f02-df9eed519153",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75ff9aee-6c81-45f1-82c1-0d2bc5faaa14",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cf5800d0-969e-4c1b-b01e-cee017ea726b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a47dc06-a4e8-4327-90f8-1d35325208b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f684ff28-7089-4eaf-ae36-aaa6113a9eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956be4e-2b83-46af-939d-3f225ca66425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed48429f-e6a2-4dd6-94a0-760b05a8e1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18b0296-3800-4233-bc8d-dbeb1906c6ad",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf861b94-65d0-4ea7-8cf5-3246c86e6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35395943-8d54-4440-bc84-448a87d81a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73dac5e-03cd-4242-922e-f9a06f3745ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe7a818-a513-4f9e-8a0d-58d501611de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8ac8e-8b27-4cf6-bce2-e1c845287ead",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a94f30-ef11-4118-b086-87cdc69ac56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ae1090-e24a-48aa-952c-c8145f654da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecae9e19-6c49-49a4-bcff-d7084a1baf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8146e39-9570-47e0-be1a-3c7380a42241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce517f4-acff-403d-b228-d5b4164194ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937337a2-bb2e-4206-8728-b48750fcf8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e3656a-739d-46c7-a77b-18d4ca3e2d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c30a62-11e0-4fd3-8874-790a9fb69dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b2e8954-794b-41ac-898a-5f2030abb4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762fcf94-c59f-4623-8266-c4c11eae24fa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6d4c03-26ec-4cbd-a2a1-233bd9511c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11685cc6-dd8e-42ae-a94f-a52087e5e1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2547ff-c303-44b3-a581-a645e27dab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0e77ae1-4962-488f-9747-a90587e50b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f97dda-c9b5-4255-ad5c-d1b11766a52d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6131992a-e92b-4b4d-a0de-3d2ba760e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300893e3-3fcb-432a-8cf7-9633a6d9935c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2284c12d-6871-470b-bd9c-528d680891f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f34c0ed4-0774-4251-8944-66da063d6d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ef43e6-45d7-4f77-ba3c-e912f016f116",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2117f4-adc7-4997-963d-c486ad1141c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6dba85-cf2b-4546-a21d-8a654b8f73ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c604c413-de09-41c7-b091-74d8a629112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c678a109-b26f-41e8-9582-8a5755abf72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef617d43-d8a2-4b3d-a1d2-2c4e825a411c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee515885-b9b6-4259-9c07-5d308f607b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8140ee-bdb6-40c9-a900-c43732a88bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121b1c2-6386-4c17-a046-d1e2ba7b128e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49701059-d383-4d61-a2b1-b3c1b65715f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95be507d-7b6c-4ead-83b3-05d33fec24a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1498c0-723c-4fd4-a21c-a3482fecba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f9721d-a207-4deb-84d0-13128440931c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf576b6-1dee-4354-aacd-301d70920b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16ce61c1-0d94-4ded-a81f-5ce6a3eed384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005ecec9-156c-414c-9e88-de37a7b73987",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7359e-5195-4fd9-a5bf-cf949319dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb306bf-93e2-4e7f-a2c0-bc2f45c585ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d8afa3-f2ce-4014-9d23-24d57a549682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfd46c59-e1e1-4a6a-889e-63d09d78371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed089409-c99a-460f-898e-33eb0083cb50",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f761b6-883c-48f8-b158-34ed356a8339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f874236-3938-42a0-a3bb-2df6505d0854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec7eca-2581-48b2-82b7-e207fb2f7865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c5f4b7-1a04-4003-931a-d6613a3506ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3e17be-e5ce-4396-8845-5f99d31c6dc8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489164f-046c-4178-a688-c969197b7d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b382a75-49a6-4a19-b0f4-104845994f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d542a3e2-5fd3-46c0-a9f5-fc8e5b98c70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8625c26-0390-47ea-8ee4-72f2cfaa012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85473bae-cf4d-4be5-8636-2cc8b9fbc2b1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a928494-abe8-44d4-b9e9-f7b73ef6dd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb879329-547c-43e8-8cac-c6fec4c1860f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c741a2-b7a5-4322-b4ef-ca5722efe272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0cf8bd-5a37-4979-be1c-b0d3803af92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957015f6-a095-466d-a346-f9116a89629b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60363c08-b99f-4f98-8286-ae5b259d7529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61296423-005e-4052-a6df-ab0e9959995c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b22cc4-aaf3-4f73-8e6e-343302001b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ed7c1c8-53e8-40d7-bd6e-5d2ef6233f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf23def-d235-43a3-9e2c-7f4b735be299",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a77727-1dff-453c-8350-86d8239ed4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fe77a6-d30f-4394-b989-cb21fc3b0c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bb6f4-1179-4689-a24e-ad7e8f7cd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f0a47c4-cce6-4a6c-9641-bb5eea73da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334a5644-4884-4e28-bd3b-03c3b1bd6f0f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0e8af-3fd7-4634-84fe-683e2175f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37575266-31eb-4977-81ae-8e5db9268f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75931da3-5ea8-4a7c-b661-8e58329f5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2ccb63-bfe6-48e8-b330-0efc5e5bba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cf4fa5-c0fd-464b-9848-8e12ccf6fb1d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb25299-0601-45b5-bc4b-13ef77c62833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1294344-0a45-4822-b7b1-68d53e77f815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb1ec32-3fe4-4f7c-bf66-063959bd3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ec3c3b-d4ea-42b8-a188-e354a5388187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6a9af-bf4e-43a1-ad6d-14ad11935251",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6b23a9-450d-4288-920f-e1785620bbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b954e0-bef3-4eac-a990-3c43942fb919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d28bc5-883e-42e8-8006-9b32ab0ec74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59213e18-0d3b-45a2-a324-414a670b3733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3b43be-6645-46c5-ba4a-30f599849c27",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed2da6c-9479-4f0d-b0a4-84137a14d0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2d7a83-61ec-4e5b-9bef-6e2452076ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e697e4-b790-4e6d-a2ec-36d5a93dff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "065b3209-3486-4cc6-b8f1-2de8745e73a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6392cf-4f02-4c8a-83ea-871d94edfd23",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8527c29d-fcc2-4178-ae24-fa7eb06886bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159f3a0b-1203-4d0f-b212-74d2e1f62666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb6668-c18a-4991-89cd-ca259677f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f473783-69c9-4a82-b9ed-a68f103cd883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b3360e-45cb-470f-a4e9-3ecef219d281",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2082cc5f-2896-402f-ba3d-5c50a80dc5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13792d5-5c56-462c-b679-25397d7a8b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7f8568-9d0a-4591-9e37-ccb6c36d36ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ed0a4f-9a71-4513-8cbc-bcbf1f46fce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5f070a-efc3-4ff1-9e11-dee8f67f8cb6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aed7fc3-1f46-424a-875a-84ae88fb0aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717a016d-7cde-4401-92bf-9ac73c06694c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732e3749-6a49-4991-b1f0-2eac87f800cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a05247-0a3c-442d-a5a5-a126697c0b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad4a496-794f-4d69-91fc-63815acfaecb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5612648-e511-43c2-8c6f-834f0da5896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81faafa3-efb8-45b4-9157-8508de338ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fb3526-3b1e-4da8-ae42-3e742fd1d159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "352df9db-7291-4926-bccd-28fe3ca20352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8ed199-6983-45f1-ab11-10792988d186",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f5a409-a1a4-4f11-81b2-1be738c32b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5afe8d2-38aa-42d1-8004-0038a80be440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749978fb-de92-4f7e-92ac-fa7f3df5c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8cafef-3c65-470f-8b11-7a5f83246a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ec5225-fe55-472b-a750-dd30ec9f447f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a111d98c-b564-4013-beb7-f7c8e4f6709e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d68a3c-ae3e-4caa-bf1d-e921d598e3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2ab7b-b5c8-40c5-8757-01a7dd34aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd689a7b-541d-4c42-afac-e2ab4829c516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23371cb7-7bbc-45b8-b69f-628d1e82432e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f459c3ec-6daa-496e-a4ab-a19fb9904b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c6ab1f-9bf2-4bfd-b4c5-aaca83a10f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2b3a6e-f00f-418a-b5b2-3c77c09b04f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dba478-0735-49b4-9493-330a72a7d80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6615ac-c88c-4bdd-93dd-6bc49feadf1a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e11261-5c62-4981-b90b-1b4d295a7d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac7c3cd-a504-4651-b92f-3f8e5748cfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e60c2a-0056-47c4-a3c4-0d018e927383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "627fa8da-e102-4da7-b898-9a7afa79e9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4942dfd4-10cf-4f97-8df0-68e58647a7a0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662ee449-d10e-48e3-8160-5bf5d5661307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dace3d1-172d-4c62-879e-9246a6136e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5ca516-269d-4e7f-b8a7-91524c4c4abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5627c112-e699-4b43-bdf3-ba303873161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4570a7a9-bbbe-4d60-a02a-2871312c6eac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ce90d-3255-443b-b31a-f3980c803eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd3016c-068d-4906-8a1f-f2572c9c6e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c7f485-e868-4c07-a42a-2a1daa6e091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f451750-29de-4e01-91e1-89a4d33bb3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c02836-265b-44a1-8459-799960f49ee1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8993f8-2081-4098-83f1-c3ee3a21dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b751560-1ba4-41e4-a4f1-6a65aefda40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14617b89-a517-424f-8463-d3bf50bb2593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fba2218-871f-4595-8360-743e498e39da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a6c95c-d03c-456a-a2ac-45e3296f7b94",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad8383-4e93-4a69-acdb-da72e160da72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3a3fef-b29c-4b0f-a53c-705d03b1a3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31095028-d07f-4d83-ad32-03f88a71f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff574e7-e21a-40db-b838-9fa5fbea79b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ed2a9-eea8-40df-ae6c-b33b21cd2d38",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9675f66a-f9b3-41a7-9ded-9ff81d967e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd75c27-dd9d-401e-aa05-93703499fd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acec089d-c5e0-44f8-a8b2-c4ed83343dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2981e7e1-22b1-47ee-882d-9873c79ccb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba147be5-2e67-4f5e-889d-b7628b1f5c96",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d605ab-17f0-4b75-a083-13d0ae936ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73efecbe-0041-4a9a-aad8-6c3273185175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558498d7-8987-47e7-a14c-33a1a42d5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c25159e-63a9-4add-b2b9-07603fb559e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdc9c8f-9a42-4ad6-bbf7-fb93066f3b03",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f73e653-88e7-44a8-8f3f-9a15b4b57d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155c7c94-71f2-4802-946d-75d9d6ef6191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c28db02-2c25-4c18-aab4-5fb7c5ae4c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b04db0d-0ee3-4b2b-80df-778c2765cc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04a4b2d-897d-4de6-a5d4-7fb2007e794f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfb1517-a0e3-4d22-a388-945e00bb6cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef48d35-b75c-4e7e-9eca-a4b6cf194f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8048fd86-9854-4414-ab60-665ff2eb6154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8c37dc05-fec5-4d0b-bb56-7cfc59d5f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4a4eb1-dce7-49e1-990f-07fd780b7045",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa69e6-a6ef-479a-abdb-455997f602d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0294995-f69e-46e5-8929-abc372265502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77c1a87-c9ba-4622-8801-cafeddd9cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b22054fb-4263-438e-81bc-3b6efa7b3072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f86c64-a8bd-4159-9b8a-6565a5b7e35c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccaf90c-2604-4dba-87e8-2d2befba82f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e060843-c749-4009-8633-04a58fa3d912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f6e534-7d18-4f60-b367-42d661fde9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5267d98b-136b-43dc-ad32-620f4cc5d315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef201ff-5598-47c6-b785-d81f0e548794",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b8ed9-3d0e-42ec-a541-29bc474038e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe97ef68-e23c-4c51-8cd8-71ce9d24beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb2202d-e6f7-454e-8a88-f88ace572005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1d8273-6223-4d61-83aa-17b82d864baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e33eaf-d5e8-4aea-9180-56cc3ff5267b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f1d25-f9e7-493a-9673-a15a75540c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448090d2-ce2e-443e-82c8-498a61bbebbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbd1af-dbec-43e2-bb03-a2a77617dd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a5ca3f-f62c-433b-9583-9e7a529e3c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60edcb72-0780-4175-9b7a-70eaf5abdac0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b5480a-f3d1-449d-b603-4521504bdba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c77891-cc60-4814-971f-e4b75da7167c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144fbbea-a26e-44e4-98e3-8fce7b973bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f216d7e7-9663-4331-a97f-d20abffca40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ecff0f-9d53-4ea3-94f6-7e7a666556a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aafe6aa-d7f6-42a1-a55a-a7545a6f233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9b1232-2403-4af4-9bdc-61781bcf5712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de23ab-db44-468d-bf67-c3a8bce3e989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9df4dc34-3aab-4ca8-b590-23b07477d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e3b1e5-9165-4f7b-b738-fa93b05d9047",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e06adf-1691-4f79-8ee4-ebef6fbb60f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ea703f-cc8b-4d9b-a1f1-bb6cf3822aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e76eec-7a99-4078-8b16-65978474a014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7b830334-f465-4a5c-91cd-c76f255c7c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633066d4-9e41-44ef-8de2-04f813fb1f47",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03a8f73-2c31-42a7-9b9b-aea5b3784466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434ff973-e2c2-4a0e-86ca-8879006fc21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d94b9a-5938-431e-9c81-8ef4395dd8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03d968ce-69dc-4620-9dfb-9b9e6d13cd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae460338-cbf8-4c33-99f2-8b740d66977c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84f97a1-6bb6-4ebd-83c6-a9a6f97df061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eae503c-6139-46b4-9c21-40cf2f1e63ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78420c9-3ee4-4be6-a41a-5a2ed38c0c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d759a7-23b9-4ba6-9dfd-7fe5a8f16d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc70046-5622-40cd-a037-d439220f8621",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6953d7-b1d9-4e30-89ef-69206223ea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cd3741-76c0-4d58-a77a-af74e029b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b02ad6-ae15-4e51-824c-d4a1ae61d05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20bc088e-9ebf-4ba3-a5bc-b312d3bdf9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456873fb-34e3-48dd-acc3-81b3b143beb3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba514be-e3aa-4a7f-8632-4c1ed3a69cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b40297-7c20-4eca-a4f7-e51855bb20ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66f80e8-0576-4539-8760-7d5bbf74b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb7d0f2-7349-4056-844a-d25370d64981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1e35f6-81c6-4777-8ed9-5a58bf011cd8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee0d89-4896-4c51-855e-b0cdc2085ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8828a04-66ee-4f6e-812f-124e66a33a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b5385f-693a-4e50-8c55-794c35d2959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f806380b-d952-4f15-91eb-3c86a92a76b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a1b9d7-4620-42c7-9e05-afe0cb40e765",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729dda45-9615-4f21-bccb-6b97e661a742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a1f417-a238-48ff-a7be-727739d2260c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b17a66-0a0e-4f55-9e3e-28e719fc0c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce6a744-6ff3-4efb-8fdf-0eb1fde30c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd32d2f-b008-4ae6-822b-8005860a00e4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ef761-7ae6-4acd-b100-c4d46f509f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dfb172-623b-487a-85a0-4dac17d7590d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce7d213-8c46-4645-ae23-5e1c72ab6091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4468dde1-2afd-4041-992a-b5693d6d09b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf101d9-183a-4765-8183-c822f3820793",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee0396a-5f4a-4902-9ce6-a00ea3b59b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8e46e4-1ba6-4344-8204-4e821bdc2f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7934c9a-2673-4873-ae54-816938b8bd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85ba3a90-5532-4bcc-8b09-553e816ce3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8bd7c8-b264-4a25-b48d-da220c411375",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c72022b-8cee-4ba3-8202-b362d2b6b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ad3fc0-e48e-4219-bad3-60ad83d286c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b6f8a-8fe5-4fa6-9e13-eeb751ca4900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a6cd25-ec10-49ae-9d63-30fcd2c49dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90ae90-c858-41e1-8a16-5a10b1d4ed5e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3fbd90-9d32-4591-88d6-0dfb6b30e430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549658ff-d904-4077-95ec-d85363e17056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4158622-320f-48c4-96a3-6e0946e8500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5aa4bf0-48bd-47e9-8550-d3a8a00a02d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5562ac1c-17eb-433b-b8b8-db1582b9bd83",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d8414-ec41-4fe1-9fc4-a9b662938253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b241b8-3e08-4f56-8ab9-b71757b054a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e46174c-b766-4108-8d02-895bb99e1c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a46bc4-4433-4f88-a657-a1b70b2c1ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96de9c6-18f2-4db1-9966-63eeccc386af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d406a6-9d43-4a07-9b91-3a9eb62e39f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b256d9-e4ba-412e-b06a-928f95b213a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2c9066-89e4-4f00-a990-193dccf31048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9e7e85-3a87-4c5a-b522-5377330012fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a686aa-c9cb-4b6b-89aa-062198f0d969",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3360927-df3a-4087-8c81-60c413cad518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186c211d-1f84-4560-9949-30d99c176efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9c3157-5be8-4e57-b9d5-781a310e8028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f169e8e5-9ba4-4332-a058-2b6033f0362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee67d3c-e06b-4485-ba18-5b3c5c14c18f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f884a0d5-b8a9-4917-87bd-7c85f511708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2394799e-94bc-4c90-a735-fef7ca041c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1cad81-cab7-4d94-824b-0168f29e776c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf07f3c8-2ee3-485e-a7d7-9a1aeb22adf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295345af-ad0d-44f7-8e15-6541bdf52995",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c86521-8e8a-454d-80f3-4ceee244a349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa16d5b-459f-4c3b-88ea-c491ffd4b877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd327c5-f156-4f95-b6d3-0ae13fa7c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4ba623-a825-425c-8061-dfe0e2a5be47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb11015d-cf06-461b-b988-570f01b1fe8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14c8ea7-c997-42db-a8c1-85bc01eb223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2871538-dca6-4fed-ab8f-9b9360b2740d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f39c98-bfc8-43eb-95a5-5e22b35c9cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "688721a8-2c27-425f-9430-444d77d5e4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825b5060-70bb-41a6-92c3-f65730fbfe42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f93b040-8d00-4bf0-8e47-fae996280221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a32b44-280d-4c35-b47b-4a2444438fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2665a2b1-5f0d-411c-aeba-1e1e41393e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7de8caf-18cd-436c-aa67-4c83671d4a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548cd659-5ab4-456d-a3e2-9cf9afeab783",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43dfc48-fa7d-4c17-9cf4-df73e89aef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f92a9e-e059-4c69-8774-72b3b7b05289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc949fd8-68aa-4c3a-a6b8-658e4480b623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "188df4ec-8ab6-443d-a587-2d9b9197e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a07d251-96e1-441a-ba56-c989f0723e73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfdf11f-e9d3-481e-9bb3-f79d21ae8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67732402-5917-45fb-8efc-7db8cb25ca13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da59136-9aeb-4e3c-a481-981fc54b91eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfeeb770-0107-468c-9792-1a8ecbfb26d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2335b74e-27c4-452e-b989-0f1c6cdc2751",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52f9b8d-6f74-40af-9a36-c54741f2b85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1d7793-ebcc-4b84-b502-9bc666845c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b0262-e217-4eef-908e-538ac18782d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0daa9ca2-de9f-4a79-b914-2d918da29bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf5d59e-981d-4bd7-b13c-a5613feebd9b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174f770-bf33-430a-b06e-ad0e0f4afe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daad4e89-e6c1-417b-a978-0162a8c9a640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe3cad0-8d23-44c8-b5e7-e37d6a8d9409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68aaf33-1e6a-4271-bfcd-049731ec381f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f177031-5d95-485b-832e-e019949158fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e851b85-1c78-498c-9b2e-1adc548c93f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5d002c-3441-4da1-95c6-3f50fb3c00be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02197522-bbbe-4375-9aa6-0c04d8419a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd08fd07-e2be-4743-9980-e48cf44075d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c1171d-a9e0-4db1-97c3-fc3f437c355e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f16233-6428-4db1-a172-856b1576e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1e51b7-d6b7-4b79-b054-1e72a953197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a38f91e-61fd-40b3-b264-ec2b0359a17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94a5f68-e327-4555-9595-6822cef2999c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8c76c-8b40-4d73-9445-ca9056576323",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cb37cc-d703-4302-b7f9-45e6f38b6686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af60497-3d8b-448d-bf4a-50d28d012c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a317e1b7-0975-4511-9b02-059c7b6e5366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83161829-d523-4124-9d8c-486344f5901e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc7030b-5a64-4ecb-af20-9943f7aaf5c6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a535606-91e3-4083-8630-abc315fd12cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff809bea-e482-4882-b5bf-338235ec2d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3690bfc1-3583-492e-8a6d-ddaa4c6145ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d2792f-b351-48a8-a117-8d00c0912e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe0b5f8-1c1d-4baa-9f2a-697dd7ac1b2d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bcfcf4-b524-4be5-a02c-3f4ff8e7107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533eb122-d242-4937-b207-f10d86e6d88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b3d8c-c34f-4c4e-bba2-d90cf54ccd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad0dfb2-3091-4728-b8d4-da337fd868ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd40a283-b124-42ba-8973-0533fc4ccada",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb5ff9-648e-4c21-a644-f5f0dfd2dc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39313901-0f03-441f-8c18-9c16e8d7c984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68b66f0-4cbe-49a4-a5e5-3af943a8fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91511b8-152c-49e4-9ceb-1c5e51a3077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549727dd-47ce-4a44-83c6-e27e2b2d691e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfcb639-2cf2-47cc-b53a-383f3c457c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128f89f2-bfba-43b1-b4a2-f3bb26b78c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe1ecd1-1c35-4b47-a3aa-0366c53eb95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c77714-c1c0-440a-a8d5-926ec89a9da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b63a6a-8edd-42c4-aa6c-8d1e8db6f887",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f4a535-c298-4cbe-b91a-cd556238b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c82c8fd-a13e-4d49-a78b-44bc41f6d9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6b7b9-d134-43db-95e5-36b6555cbca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8debc4-b982-4c0e-8285-947f7451ff6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e3227e-b8ba-4bb8-ba96-672b94f303ba",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2c3453-0bb1-49a9-b062-a81b4f8f5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0902ae3-1ec7-47b5-80c6-074da91a417f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c00b3a2-37ff-49ae-b954-ed7984fbc3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3d0765-73b9-49df-b3b2-8211a2ca20c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc8a474-302f-4d78-915f-d3c374476a73",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a311410-1491-4dfd-9232-86f55c18fffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0056ed6d-6db9-4da1-89b3-cd4ae542cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdcbdc8-dd2c-4679-a646-3f79be9bd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8170c234-0a10-493f-b8a3-795a2cabed9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5904de46-c5ba-4cc3-b466-e4fd8342aa55",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3681c747-193b-4067-85d4-fda151cf4239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1986bc2-2c8e-47b1-a878-dcc9625057a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d083508b-91a9-408d-b50b-2e60cda27a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2605df87-a80d-4622-885a-e30c399f9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be191ca7-f29a-480e-9f34-d04f9982ec50",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb96609-bb64-4882-b250-45b768879f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bfd0de-3a3b-4149-b6e6-0e4afaf2b66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e425f4-a998-4d99-b78e-ef097ca35d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d87942-0385-46a7-9de9-7de8e7ad2467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f779720-f419-4f4e-bfef-ba525bb08bbb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac830f05-6394-41d6-83e3-33a86697775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4480479-965f-4311-920a-ec06a428cd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a3ab95-45bb-48ce-b554-0f21f1f048fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d6b22-f0e1-4af5-8f6a-62e46f83af57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeffc0c-500a-41dd-9363-d60834255ec0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343e9f03-6a82-4138-bd7f-1ce93f90d775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc63a44-8f24-4612-91b4-992b608ee270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef60115-ccbb-4bb5-85e4-4d2cd7cb3a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcca0992-98bc-45bc-b42b-6ad9478b81f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2615908f-c73a-4952-8390-12424b32b3a6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0fc16-519b-4f22-99ac-ebdd8aea3b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70b4090-9f89-47b4-8b05-b57e121fcb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba07c78-ca25-4d88-979b-ea4dd6babccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d7bdcf-a5c6-4a78-9e50-d70ce851d2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6779d5a-dd1b-47bf-a84e-b80db7cae328",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbf5891-c3da-4799-b5a2-3ef3b5a72a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7075b2ec-7bfe-4370-b974-86515314eef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eb9cb3-8ad0-45e7-a288-048a7ec21a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49427ef0-2797-4c45-8d56-66c5f4edf7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7cf9b1-264d-4ee6-a36e-a69db230196f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc0ffe-db61-46aa-b795-6bfb383eabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2a0809-2549-4774-8e6c-63b2d2aff170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b985835c-8bb1-4c1e-87dd-d2c8aaa03f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6afa456-9ddf-43c4-97c8-92e197c542aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f3e930-fde0-4986-9ef1-d2d9f1416acd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a3575-91ed-4c2a-9566-6a8c777752e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cbdba4-dd53-489a-9ec3-3836da63bacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f15137e-53af-4a63-b91f-991fc23cb4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f98aef-6092-4e5b-bf12-7e7d117a2bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371cb9a7-5142-4017-abb8-afbd50772818",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd935e4-0b3b-44d6-bc2d-d2bc571cfd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed2bac1-4479-477c-b957-8a91a1888e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824290b5-f2c4-4067-8eb6-d071d9c89ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "766b6b05-de90-4bbd-a417-c540fad471e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7de9a2-258f-4479-8453-68940666b8ed",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb6f3e8-c146-4a08-8480-13cb13d597da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77afff0-f5bd-4e30-b0f4-08b113591150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92a903-58a9-4acc-b4e1-11216b1487b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4d2ef-e610-4336-9175-d10cea152412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76039775-0d22-4f98-8bb8-e8f96333b43b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935aa47e-41da-46b8-a382-5514b56935b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2135ef99-24aa-4c96-a666-aad614c650e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70410261-e164-4344-9ca4-9ce3e0f7d22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9abcf2-458a-4dbb-8c77-8794d6381c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30cfafd-b350-4fd5-a82e-91421b84907f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc9f87-2fac-4511-901b-215961d4bd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20ce1f6-3069-4d87-aa16-e9ab61177aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef8b87-051c-4223-9dc2-6592ee538ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1181801-bf44-4e87-a246-4b1532993e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c99d3-8e31-4ea9-9f67-d00a84e06c44",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8256e415-7d16-4ea0-b4e2-49e667c98188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a18f01f-d3ba-4e7c-a752-5f886a31acb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d487f78-2258-4427-a9b8-63f87117e5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f912922-8e8c-4253-8fab-b2bfddef7f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d83e8b-9d31-4b67-80c1-c3faabdadc17",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3725ce-3619-4e8d-b7d4-576d50b7f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b12abaf-6a17-45b2-bcc4-4f2f074e34c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5006297-0c3e-406a-af1a-2f7193024d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e77dcb01-08ab-4f26-90d6-d3adaa8be433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1d6b7d-0566-4434-ab94-e1ad1e00385f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829603e8-4516-4748-a04e-88ce24d74059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e0797d-231b-4d35-ac28-a098b358f391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04b483a-4d26-4854-a1e3-3143879d23ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8916ddb7-b967-47ad-ab13-cf58d0fea111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1fb5df-74e8-464d-b714-40c3a683ca81",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f2cfa-2c7c-4d98-8575-282ab83e80b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd62ab6-69ff-4d05-83a3-75088e52db3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f95feca-cd6a-418d-9b1f-60f37fc1abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2e2bf6-9526-40d4-ac27-a14509b20aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e05de6-b277-4fdc-8128-4836138ea5ff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c482ae02-899e-407b-844b-d5c8b5fd72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827d3163-298f-43b5-b17c-34093e60f84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec77bbf1-6250-4ffe-8f18-ef37c40d5a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bafa11-b6a7-43b2-aaba-d8ec4b0f2b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9ad802-b1ca-4c03-a635-832fdc46330d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f161c61e-aa8f-4472-920c-4700eb2fccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd999d2-e068-4ec1-96db-5201d970969e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa0c41e-14b3-41fb-b6e1-f6da561def4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d768081e-beda-4e9c-8e47-ada141e45c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1270f117-3f35-4961-86ba-fba93994a0f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a325e72-85c5-4907-aa59-310061dab56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b9ac000-3dca-49c3-a04f-bd11a9a4c508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55decaa-610e-401b-90d5-c12751590e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "902a3aa5-d8f7-416d-bfbe-546ab6db97be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "790d6034-c567-4218-ad78-4e4a90e2decd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0822ba2-d352-4353-b6fe-c05cfb7ea9d6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16bcd8f-53d3-4081-9057-6bac0bea7973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77fe3fbb-86fa-4b6f-835c-6b8ed09d7e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36f01e0-49f8-450c-aace-061ee53d9925",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3391070c-985b-41f8-b5ad-16e6f875990e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dd5187f-080f-408b-8e64-c2984e47b562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b00afb41-0e51-49cb-8d76-25f7e0ac1827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7450c384-f5b5-434a-b034-d79c0eb65508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a46b41e-d151-4112-948e-2d1b81f9ecc1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f29549bd-8df8-47f3-8822-abacbb93dff2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee6be9c2-dad2-4c4e-b2c2-5e6f43fed39b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6220a44-b185-4417-a90e-e67f255a16f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8acfa68f-746b-4005-89ce-5f79948ecc86"
                }
              }
            ]
          },
          {
            "id": "9014d8fb-610a-45d5-9c50-48cdf0952608",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8fa3a99-941d-4409-ad84-5223cf67c668",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "89ff03c8-da1c-4f0a-8fb8-f1647f91d31e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d0a2e6-e5db-4850-a6b5-f0ca651ccb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "73650417-33ae-4371-ba04-1a72372d7459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38cf809-8aa8-462e-8918-6fd9b850fabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61accbc-2507-4400-a4a5-39b358f30062"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff7e7a31-ac31-4b5e-a53d-12e9583297c1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5141c1a-eacb-45b0-9d97-c458bf76d9da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffdd15b8-59f5-400f-9da2-bce5b8acd446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185d87d6-f00a-4ec8-a6d5-5316e8732263",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8a8e708-c4d2-4025-a340-abe064832672"
                    }
                  }
                ]
              },
              {
                "id": "c6988fa4-ac33-4e9e-affa-97d4462dee88",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98a3561a-0095-415a-acc3-69aefd555954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc6fbcc8-132d-473a-b926-caa4313d2399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94302810-7ddc-4d79-bf50-283bba98298c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c044fec-a8e5-4e1d-bc9a-47ee211119f7"
                    }
                  }
                ]
              },
              {
                "id": "8e98530a-89f1-46fb-9dff-e524e7442ed5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec01a28-9cb6-49a5-b328-191f8c9e663f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7c378c7-0886-4b73-aaef-6e59f84a1e9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "343717cb-b60a-42f5-886b-800d11f450a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb5e353d-c3dc-4bb2-844c-18e33bf4305f"
                    }
                  }
                ]
              },
              {
                "id": "193f9028-0850-46ac-8e87-0eb9c72b2dd5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32487662-9723-4c51-9ab6-ac55383ab72d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c43e17ea-303b-4f90-a496-a65da53dee43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffeec40e-dc1a-4e66-ba41-6cfe7309941c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c7625542-770b-4160-ae93-0076d6280385"
                    }
                  }
                ]
              },
              {
                "id": "77895063-fb38-4ae7-8749-57521ee97511",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ea7845-737e-4fee-a32e-f2d91dbd6726",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "854ab6da-7b74-45e2-9bab-ce37f32d7477"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dba2709d-1a41-45c9-a1d4-d97cbcec02a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "52326322-8243-4205-baa9-6e4690c62a2f"
                    }
                  }
                ]
              },
              {
                "id": "12fd987d-6294-4cb7-af3f-c35bc4d5da29",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ffcefa-afc8-4608-8a45-35bc70a68e31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1a8b3de-369a-4665-a85c-505d42036e20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d123784c-a373-4d7d-9972-9ba3f6f6f83a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99de27c8-90b4-4420-b44c-a883cda774c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08f03d82-3786-4722-a2c7-fbd4ddbc331a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23dfbd43-8bc6-41e7-8ae1-fde80a656a13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1e4f3a2a-d69f-438a-bbe8-ed6cf6df96cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "723e9f55-78d5-4c78-a75b-702b533bb8dd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edbac55c-8f26-4534-8a0d-b48e6e604733",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3248ff7e-9edf-4363-96de-36f319da5b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b178b4fc-64df-425b-ae10-1f05b1c83463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86ba37c2-aafe-4164-94b7-c7240f944916"
            }
          }
        ]
      },
      {
        "id": "52593d49-ba9a-41ee-b845-b80d31f50ce7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d17235fa-903f-40cf-aa3a-4afc0eb2a89a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb333247-47db-44b1-bf71-d568dbe433b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa709d80-b3cf-4e97-b021-f1d2f1089d47",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43fdbb6-8f3f-4925-b7d6-e16f384bfb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7962c962-314c-41a2-b7f1-2f97154401ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b24e33-8dc8-4e58-b5b6-a9e8b9177ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d610479-53cc-4c9c-b063-092dff243e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4ec485-cbfa-4bd2-ac58-80602ad95212",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b473ab-39f2-46ef-9dc7-ea8a42fb62a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18824acf-a567-4cd1-8fb5-ba19270b9dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6317c646-b531-47a2-a0f2-371e72bf5908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "054f7a3f-7b5f-4f7d-9547-d9ab3c1d3f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d02c6da-c8f7-4501-802a-152565d26995",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a635dada-7293-4a99-9a4c-db2fdc9bdf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b874be-4aab-449f-9248-7d82e57325d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e5897d-2199-495f-b036-e3d298242435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30ff3bd-922c-46ac-959f-0f5e16282e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46e88c6-de07-4820-a301-8524d359ed70",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e0c13-d934-4494-b2e6-76895fa9eec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928ee1c6-7f2a-447d-a5d5-421cea30f248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0538d18f-6567-4bbf-ba96-d301936d49ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e847e31-5d8d-44f8-b978-57a757e15042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fafc79-1efe-45b3-a22f-303805de7089",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1691ba34-48d9-40a9-a5bf-0179c4f30b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde693da-735c-41ff-add4-cab5cbeb263f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdfb967-a51d-4c95-a2dd-99d9dea5823f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e0c400-0052-4030-9b62-0c087f43c351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141f650e-d8ef-4bdb-b396-b54f6dfe128e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4e306d-f22a-4aef-b737-477b3d390f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170ac4e7-588e-4773-83ac-011bdcc409d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9117f3c6-5fc2-4ed7-8f82-42d2a4b0d9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b5b739-d8b5-48f9-ac75-c765da58e2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747130c5-99d3-4cd0-827a-5881c7553b38",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e2d33e-7ed3-42d3-8122-c1a84160267f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f4ed6f-8e5e-41b8-96f8-22474547a814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f848c7b8-67cc-43e1-935c-cb21ceee931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de50c5e3-f7ff-4313-9159-f94720376cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a86740-aa64-4fb6-9389-407b9b534375",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b095e812-2ca0-4337-9cbe-e4bc4ce29d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6807ff49-32d8-47fc-9d71-73c4a20e6235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db169a8-4331-4e5f-9972-9fc8038bf118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78340b13-ea80-4c88-bc2e-a8d78da41067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e832248-6a8b-4ef0-a334-da1c1003d446",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241a1436-7a36-41a0-8674-7abac3e7c09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95423ee3-afe2-41c3-a459-6f54a3dca67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d94f0c0-51e9-4a48-b002-818bae41f72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0d0413-9c54-4ef3-8938-8fbb3d40e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e4aeb-688e-4390-879d-9dff89c2db01",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba5587-f1fb-42a9-93ac-e01e098287ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4216b74-8931-4bce-8a48-d9244c88f0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb802f1-3b4a-4767-91fb-8ecf547181d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3420beb7-9596-44aa-bf0f-b7db1b9f1e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd14b9d-a2bf-4b67-83b9-4a10514b9177",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a81748-40ba-429b-be12-3f3c3343e342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9f4764-905a-4866-b212-099c21a578b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac69c34-966d-48aa-a246-7cc8f5897721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c36c73b3-4cd7-4781-b24f-a2fb6651a8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013e177-7ad6-4270-87bd-4c0be984f4dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e52b4ec-9bcf-41c9-8d22-4f5c0a1ac644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb34d4fe-da84-4c0c-bc22-aa3e5b470e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895609c9-0463-48e3-b4f1-76b8b06fed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1104ffe-7e14-4e03-86aa-65781a7fc928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5931da85-bc1a-49b0-8146-999b210d5e00",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d56cbc-289e-461b-9587-9c391f744a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8552768-71d4-48cc-8c2b-0892a925e748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2452b-b878-460b-aac9-a6fd6c80d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aacd30f0-8d4d-41f8-8fac-57c514f51358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad1a38b-920d-42d3-b09e-0d4d0997c38e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37867ab-f485-4933-8b31-3fffc5148950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cc9709-9b15-4641-b68f-ad5620a0ed33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e408da-c902-4efc-8901-06a49ea1868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "17df7ef9-dc06-4d3f-b659-4d31f52949f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0fe3b3-7d2c-43b0-b060-59647424a782",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e535e-29b5-4351-ba47-b07fbdfed04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb244bc-669f-42db-898d-10b98575b921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71e2cea-f3b3-4e8d-acac-e7a62a317a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf936d0c-51d1-4bae-8684-0c24bfc29481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83852ffa-b710-4589-beb2-7b06c0f27499",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb1e23d-693a-422f-a24d-3cb057021bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21eea53-b6df-47b2-bab6-0943cfa873f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4edc8-0f94-4873-9dac-d6fecadc8178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58412544-e56b-4254-a2bc-7f630efa4805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16a36f-51b8-4e8b-a786-cbe3d80e2e30",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33269b78-5cf1-4626-b6b0-67fa304df508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d78ccc-46f8-4cb3-8ac6-12deb2d458b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8b0fdc-5af1-49f3-9919-93a39992ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5610fe7-2461-47f2-a5c6-b3f0d62a38e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d32f4-3e4e-412f-8e5a-c421ddf156b9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa46ad0-a5bd-4ee6-a3a2-8d8acb25aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bec0660-cb79-408a-9b60-bffb77eb2715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5114829d-3fdb-4a90-ae56-dc05d1a6248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6289e630-2c8c-43df-8492-1820ca4ccf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde883e3-c3b6-46e1-b794-bd08dc7f89b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd39e52a-e321-4a89-91b9-710d470d96e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3516d1ca-12ca-4a8b-a5c1-28659faa1d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef4e5b3-1334-481c-aefe-dd12e1e14359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f55dae1-a767-4197-bcb5-d6d68fb4d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a35000-acad-421e-a9f2-d029485c66f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43e290-68c7-471a-9977-75c3e8e1c13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b385545f-48c1-49b5-b844-362b58ce5d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a34036d-14e7-4401-91c5-aa79796f2b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed8bb14-ee8e-4e0c-b795-ec3c65ed761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eba43b-1732-42b4-9f8d-839ab828065d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8e7755-e5ed-4b80-a0cc-e8046c1bc674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dbdaa6-5fb6-4f57-bfa2-92177fb97ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e078653c-f5a4-421b-9787-6920ccec9e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06dddf2-84d6-41cf-8fc4-b3f96e438c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f6403-457c-4c75-bde3-80b682a07394",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d7285f-9a33-4d55-8615-8f748c884eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b327c9-02fd-4573-a1ab-decb039c08f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9b2690-b213-4cf1-92b1-004b70cda722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20507c57-92c1-4640-a893-9a4fd9cc6316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de20035-5580-40b2-93b9-18fbf6ee2308",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4203a70b-5368-47da-9536-2e43310cf5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea40378-01b5-412f-907d-341c4ebb1ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232d60f5-9ec3-4647-8464-32c516d217d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afad967-331a-4d56-b27d-f61f5ac376fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c8ca70-30fa-4954-86d4-c6fab930a1a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8c417e-4704-4380-b93f-79674203d350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59afa452-10c0-473f-8dbe-6218a3f7e705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571b6477-db1e-492f-8438-335a94871fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af04bda-75cc-4670-ad1e-a2ac4d7a8b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b39b3ca-75c9-49f5-b47b-486e8703833e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059d564a-8a03-436c-b313-fcb363cde545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e91329-676c-47a9-8d96-2e2d0409fefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccbb5b3-e03f-4fb9-98b3-2fdbe486c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44d0946-7c02-48d2-bd9c-9d3228805766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0de983-024a-4be6-99d1-fa085d2c0cc1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0812df5b-f4b6-4301-bca6-45845bd6e088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b8c09c-0404-4c10-84b2-99f30246bf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b49d7a-2195-4268-be4a-4dfcc8ed3630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062ce591-b972-46e7-a5b1-9ca984307e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9c73d3-04ec-408c-b9c4-3866bb4c6eb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4d7db1-7473-4abb-a17d-bbdee2862116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23787746-bb24-447e-8272-88416b17d50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c326a8aa-6955-4fcc-be05-b09b7b1547a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f58138-0ff4-43d3-a542-2d4864beaba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18298ec6-3938-4155-84c2-1cda1969d463",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ba5d12-09c9-468c-9385-14bf187262fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a705a84-52cc-439e-aa90-4a128c250d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b0607c-7bfb-490e-9c1a-9470147abba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946f97a0-2eec-4e66-adcf-dca29332e92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e243fab-2488-4cf4-b25f-7aa2032161a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8747078-6c21-4710-bbee-0cde8315860d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44517486-7916-443b-9997-576417d2252f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab2e411-c3d8-4f8b-a302-75d743dffbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd7bab8-6a03-403a-a79b-9ee11b83db93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf4102b-69e5-4466-a155-7788522ca68b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc61ac39-9dfc-4bf2-b572-3318c85cc46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f8e65c-f119-4d15-9f63-ec18a7081bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaac399-2ca8-4491-900f-4e5adc3e7da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9b1901-d767-476f-8711-990f99fc7745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0808f249-c303-4f84-8942-aa7675268c33",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd82760-d8a8-40eb-8e9c-e853f2132bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4d882c-0074-48c2-9d26-ae4e15631458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0081c512-c544-494d-9a09-a2f219425cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53cb38ea-4067-46d9-8ab3-ea217c82963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534db1b8-a77e-431b-a4e7-3dc72097642a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74483610-1231-48ee-87ac-73ffe0aae795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eee66c7-2bdb-4b05-a3b1-7413af8c29f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8360f24d-2e6d-4b2b-8107-103f34418ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f54015-4b92-4035-bd2c-e812984dd51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d2d988-4261-4dc0-a0f0-74e883da6886",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ec08a6-0491-4bfd-b2c6-86a5d29a35fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721d9af1-1d26-4b36-8ae0-6fc7faeda344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588367ad-5196-4f95-9f37-cfbab636c853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26397f69-abed-4c5f-93c8-2793c252555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdb6dfa-27ef-474f-aeb0-eab3da2fb671",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcab3aed-be9e-47e8-806d-a25c1af6b91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3cf771-bd58-4c9b-95b4-07d94bd99f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e496d605-44cf-4e13-9788-a490b2caef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946bb833-5f24-4bfc-86d9-10ed5386612d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e92849-01e4-4799-866b-1ce9f6702aeb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83ba2c-0321-4b3e-ac8f-e46318ef413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69235a6a-8b66-4cad-8af2-93df6a3d49ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d88638-a1e1-4cbb-8d67-b92311d2313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "982031a3-0602-4055-ae4a-a5b42393cb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b696e6f0-2f8c-4a75-87d2-ebbf5384a80f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b8805-f602-4c81-91a3-27aac0774a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeb9774-0aa7-4d1a-b294-e245cdaa5fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf11b30-ef0e-4a94-baca-4ad4f2af7ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee210ec-838c-4080-945b-9748086f6cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08923e54-32a1-420d-a111-6eb693c31b24",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ebe319-1d05-4cef-83f2-3bad49412409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82784dcb-f96a-444d-be01-cf70365076d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e4b625-3597-4080-8bff-ab4c5f58595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c01ed2-200e-403d-acc1-a65b8b0211c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12c698fc-5488-4c78-b2d4-a593cf40a9d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bba84e88-6b44-4379-b898-16119737e096",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a5c327-b1f9-4484-b6dc-f591929738d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa649a63-c6cc-4484-9354-4933a3c3beec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb993ebb-dee2-4dec-b94a-3b3fd7931521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c9ee99-b0ea-4d9d-98d9-ee303433c5de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7e52668-c8f7-4411-ab6f-eaa740a2928f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f3cda3c-1be9-40b5-a691-e13b0d5015e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76cefb80-5324-4381-b1e7-645a95a98f77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43828998-b25d-4509-8299-994ba1d75914"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "866c09b6-148f-4526-b64b-92fd337f03ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46f46e0b-e8b9-40e7-8a00-e39416bd2537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9755087-fcb3-493c-9efe-120d8621ffa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80e68755-f708-4450-b1a2-c0a5d5949832"
            }
          }
        ]
      },
      {
        "id": "5fd16ead-c154-4a95-a76f-241819fd0a35",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c23bc72-9a11-4791-ab88-f252dedcecfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5f0c832-317f-4b57-9eb4-42b483e164ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be68acc1-b359-4c3f-ad58-1218a34e8d07",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1294c628-499e-453f-9dd8-381724e1a2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5aa04f-943b-4929-a75d-872b34852b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0620d3-ba19-4a31-8682-330c746486e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3574330-153f-4d03-b3b8-fd0fa4158e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060b8438-2171-442e-926f-417c32b2b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2edc9c-cfbe-49d7-91f8-e5e39a47bb6e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ade729f-7fe8-49b9-ba98-c06623e8fb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67107ba-f3d2-4e41-8184-d4b968d750b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d622a3-fba3-486d-b59c-422c9d477555",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8557a23-2b47-40aa-ac9c-da4447e78737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f35913-cfa4-41cf-ad8b-c956391eb110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef9bc7a-f1e9-460d-90ee-7544c702e20a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa24381c-0bf3-471d-9cac-a21714d35e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b5c55a-2ce1-459b-b8a3-a49e2866a81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfa7e2d-aa94-43af-973e-bf6965943370",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b0147d-5deb-40b2-82b4-10dfda55b39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71c7c29-49cf-46da-8026-424b145179e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aaae7e-2f2d-432e-93f8-5e42a215a5bf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7dbbd7-cb6a-4fd9-bbaf-5bc999c9a18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f95d6f3-aafc-45f2-93c4-77bbbef50c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0900dbe2-fb82-4ed5-a9e5-0e56e58f72b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4d24a6-fe4f-4b6b-acf6-bbfc6920c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926d33c2-cc7a-453c-adc0-670904c2b179",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d454737-363d-4901-a3b9-36fa068eb62c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "395079b8-e7b8-407e-a323-dcf917bfb1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c53b0f-39a2-4e39-bb7a-7d74c809c3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3ee5bc-eac4-4ab3-96d4-20193c5c5b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6b7ac4-1529-4062-92b4-c370f2a4abcb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca7eb34-1baf-4944-b960-a9f106515241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ed85b0-fc05-4cdb-8919-146be9f070e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdb9fed-c077-489f-b41c-af46813e7bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615c3fe7-2594-462c-b02e-30234e534d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec30950-bd7a-426e-a9c9-03d859c71f52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3d67a3-f65a-412b-b2dc-145fa0285739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6360cd18-bc1a-46bd-b5a6-e419b0271390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a840f7-2e04-4efd-aa91-9d4db3b68e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629ab97f-df45-4212-9f31-415122d60c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21490228-6670-4f6b-9c6a-b5b3847dad6a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e12c7-1af8-4056-a77f-c828e35d2e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ee6414-0fd0-4203-b850-169683f6b235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2186b910-66e7-4467-8c1f-af9566fd3cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27550759-7f2f-47e7-ade3-6a40d9c38480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437111eb-94ae-424f-bca7-5bbdc286508c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a33d78-4051-47c4-ab23-04163de7ab29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f6a6a1-a0b6-40f7-96a9-450c25e81698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e14b6-3559-4de9-9e40-9d9e6195b8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81a6659-01ab-4535-9178-1ec0995034f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf9a99b-a9bc-46fd-94ab-ad6c0917c4bc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ccd88f-928a-450f-9247-d6395baf2b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dd41c4-8f94-4dcf-8ad7-9c4e6253aaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e659010e-087b-4906-aafe-7f781dbc6e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffb0f8d-d967-4945-8099-b6b3112ae0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af96ad5-3fc0-4d7d-8d58-764320bfb213",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590a146e-3e7d-4962-b20c-d8d0a9523b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca192ab-aa28-468d-b322-a5f412b1b523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3609f54-1930-44c3-a093-a0db1a1a781e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f884c6f2-d678-4416-b20f-c5c68c0c9291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b779750-ba07-4ef1-b95d-a1ea19741f4d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e70023-c657-4323-932f-23e08408fe10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e806e1e0-ffdc-46f9-a78e-3790bbbb3687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc6560d-4b20-4074-a4c7-7ae1657b0033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57e5e1f-c486-4e18-bcd6-d676ef0b0d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645da1b8-527c-48fd-93f1-25bb0076bced",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a8f624-6c57-4a90-9e99-9fa2d9479398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30ab1e2-e87e-48a5-8482-15994e10bdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3708f7-53bf-4fcc-9643-fc725fee242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676bcfb3-8abb-47cc-aac2-b737098bf6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bab68e5-e40d-48d1-ad6a-07684c8b4045",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d4305e-2577-4bfe-85d1-16d9e9ccebcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c863c16-0935-4923-8630-f1c0713261c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d78904-31f6-40dc-97d3-c9d69b414393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ed25a3-ca0c-471c-a4a6-b8d96ceb06bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b2b5c0-7c92-4650-93cb-0cdb2aa05af8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a7941e-a2a9-4b12-a018-99bce59abeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735d068c-e823-4131-93f1-3913ed1eb2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e364a874-54f4-462e-a3bf-0c01f2e7e47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fe75af-ac0b-4e8f-88e1-b7766ad9ef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e704da-9b39-4468-9650-78dc5abf0d1f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8e5a93-07c0-421a-bc8f-011f472b4c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786430a5-ab2c-406f-b3b2-06586fb49cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c038cb23-c642-43fb-88d7-e0e051b4f876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20942380-6170-43f1-8b13-9570c1d7cdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c90aa8c-b02e-47f9-9947-f6efdc46bf65",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7564b1b-32b5-441a-84cd-886bdcca9314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70032354-1a8b-48c6-ae5b-c8e91d6a1502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9672c1c0-cb95-4c5e-86c4-004fd689ea69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f895784-8036-4280-ba50-caa9b8e30928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90700d-6d4d-4916-a563-5d47cce7b3c2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834751a1-9d24-4010-8048-bb65993c15fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada1bbb2-3d86-46ab-b42c-bb3c005bebe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de115c9b-c515-4259-9b22-3d6e7bb17099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d32a3b3-8139-46b7-9272-666e300593e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a7c7b1-a479-431b-8bf8-f2acb7e05a46",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85057840-87a3-46e6-8d98-3be7f9189962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5f170e-4bac-4ecf-ac2b-4ec6ad79dae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4812db88-6ae1-46ff-ba4c-e08542367289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ba79be-37d4-4a89-8e85-a1778615bbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c912dc4d-95e4-439d-be11-9ff2ec977d76",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10b065-6e98-40b6-b669-79208e38d492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6717858-311e-494c-a677-4c2cc6bd17fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bd793a-0abd-45ca-8361-7b2c32cb3086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43e1077-4ecf-4d43-a0aa-c6e4a5018319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f56486-3729-4e20-aa60-6641f8b8ecf7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba92da2b-7dfd-4d60-a672-6cede3cde6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43548cb8-7340-4a75-9672-e9eb89909fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a576b5-04d5-429a-b70e-6a613416024f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed2c599-4a3e-4361-9816-1e3fb98dd065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a416f3e9-dff9-41f1-8d6a-3f96183f1372",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36514c04-6bfd-473c-9c9f-131bef096c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f7f396-bc03-402d-8026-b41a6156e132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e3f0a5-9d83-47bf-9545-7466ec214b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794cfe79-f985-4471-adf5-8da43a2ce9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71aaa47-3a39-46ef-8a53-f318d2529be2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608b5ccd-3000-4bf3-b78f-439f18bc485e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bffdda-6c4c-46c0-b761-528ff82c6031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca40ee-549f-46ff-8afa-43e357e64410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3921b1-86f0-42e4-b885-ed9edd5f74ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16ad507-67aa-4a63-9d7b-09dd9b88471a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d32c32-9ee6-41c3-9efa-3a41a11007c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4901ac4-713b-4e0c-9653-19eb3ae568b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2130aa4b-afc7-4070-9d0c-da88e3522fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82b259f-a5ae-4645-8344-fb300a313420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487d5d9-3bac-492d-8414-59861288d73f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b582506d-e993-436b-8215-76df0762af1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d63e81-e5c2-4961-bde0-f562063e6c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5216392c-9221-4f10-81b3-a1367ca91894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ef9f4a-da41-47ce-b7d1-437153543dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e3264-35ba-401c-8f16-092d22f508f0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8d72f4-2d94-4b71-8af0-c4258211d930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b05c3573-ad32-4ac9-8008-b070ec4e6abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00fdeda-29c7-4c4c-b8af-a542ab4e5873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1792cbf2-f4da-46b7-9466-df2613d5a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e67d9f6-86af-4e0a-bb9d-264245185de6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d536b3-7a55-4a69-8d33-141efaea5fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f67ef96-020e-4095-a4a7-0c4610cbb60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a11523f-1bab-42aa-9f57-11d79faa8568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7cf5bd-8957-4854-9c56-9db79a84618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047c3a33-5d80-474a-a38d-1c87b6c68467",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6319ec-4a99-4c35-91ed-e4b02b3e5077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80af81b6-2972-4072-ad1f-a90db23f4a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb52b33-9bd5-481f-84db-94a0a6d31c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b117fa90-5a02-425c-bd2c-a23d9829b39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e2322-980e-488d-8dcc-98a69d8ec1e5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e9166-19b2-4704-b88f-9ec5049bb0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a37334f-af38-4376-be58-e4b41de14c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e074dae-52b5-42bd-b00a-27959361135e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5638de-d060-492f-a47d-62877fb8baf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb25078c-2fd6-4c6f-8005-f61aaa5881d6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c4639-f26e-47ba-908b-ac8d8168aeaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab219b65-4af6-4d17-9a6c-b7ddb0beb81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378576da-2de4-4246-a867-ccf75cc77757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f130ccb-2308-4081-b604-f3802358b374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45b7568-d726-423a-850a-d55739f74cb8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150b925f-420a-4752-9448-1754de90591e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28231cef-f8c4-4585-bc4a-a32deb925277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb2a475-4e87-4b5b-b80a-3c8bd6521ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b032ca3-69cc-48da-8811-692273efb1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d46dfb-8c72-4cc7-9cac-f9c53e2190ea",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f27ce-b2cb-4db8-a6cf-8e7f2a1e665d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22684239-f909-401a-a0b7-351be5c84687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bc9f3e-b05f-4db1-8358-7d3605afbff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517a54e4-d4dc-4c05-bca8-b86845687385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b8f62-22a5-41b9-83d7-98e7470f3df8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193565f2-93c1-4a40-923a-3d8665e377cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84229e9-e8b7-4a3d-994c-d16eff98a150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246d7933-4ba6-4eae-8cdb-61e5a540ded0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637d993f-0924-4a33-bf7e-eccf8f5e5d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408f3277-42cf-409e-bccb-016bd85ef581",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28863aaf-4b4d-4b6e-ad0a-0695fbc8c1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27ea400-a23e-4ed2-b705-9d9613651a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7269e5d4-692a-4891-b5fe-7c543903c0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38742864-97cb-495d-a259-7860a12d8c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961b6557-979e-424f-b871-0a63f20ed2f0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165eb328-448c-44b3-affe-39fc59473c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba77b1cc-2efb-4da9-a3c2-eae609ee2302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48384ec-1458-4c4c-8d58-7beb4d68baa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f803ce-3ceb-4257-89fd-9d4e7adb38bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08118fc-a31a-44db-8242-53f56f66f554",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5378dc-2f1d-4707-a6d1-16cc9e8c1419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055c209e-6ff0-4148-83ea-7657eb5ca833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98237062-dc40-42d5-a660-12823be7bbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb91879c-8d70-498d-9d52-108ecb71364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf831f5-8267-470a-ae53-b16831111363",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7298cd93-5b64-444e-9400-236ac1263329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f520615-efd5-452c-a2fd-0f6e2675e08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb00d0c-0464-4205-a07a-1b149ab78a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41097198-9d02-46a3-b7e4-63910245ad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61cee2-392e-4b59-818b-907603e3a994",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff958a0b-5121-48a2-8a16-c9b8feb41d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48d000f-5f4b-4385-8687-59fe68abae0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50112b5b-eaf5-49f9-be7a-44e0c1d1d137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba4669b-632f-41f9-b92b-ab2696787e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffe9b0b-4207-439e-a96c-2bb302665d0d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a266f29-b8c0-4acb-8769-1e63222ec607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e396b678-5530-4361-8742-e739094f2f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4762d2e1-5c5a-4bbb-8c7c-3f5be18944f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad98416-455a-4640-8c3d-db3863f3d6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f270e24a-fd6a-45d6-955a-158880489479",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51032f84-6037-4ca0-96dc-5add3592c0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6af5e3-338f-4c74-b922-160ffa28364b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d26b680-168c-4f57-b902-89cfa2d82538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86677a59-7473-4225-a41c-94bdf510ea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f374285d-0100-4e22-8619-d48ab91cea72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9576391-32a2-4ff7-8a8e-b6e83554cf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d2c7d0-649c-4a31-8110-2c2d51f44132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0a2f62-2503-4392-81ff-d05fbe973b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3a9535-3a98-4943-9e6e-2dd5ae73b285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa14d57-6206-406e-a37c-97c68fafc9ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb805a-ad61-4688-9fc5-2f8f5260727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd6eaa1-d552-458f-b5a0-7a940f4fc1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb7047-bfa1-4867-90aa-813fe2b59a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e59c893-1d57-4843-a1df-0132c8b51e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a6265-c150-4eca-a579-31ce988238cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a8846e-d6d6-4f99-9b98-0a5a56af3878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87a6c72-1f01-4b67-933e-da8ba6b123b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a751b61c-e8c9-4e0c-a878-8c8a1bfaab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1f53d3-7387-4a44-8d53-958832b2a186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fb3ee7-9b75-471c-88fa-a048be289724",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2948510a-2b1e-444e-9ed6-d9fbba42de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f995ee69-9c85-4d0d-b2da-0ffd634b2bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7146f2b9-c361-42e8-b3bd-6efa14d2ab0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d5725c-a5f6-4550-a0dc-1db8a7ead6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ef9eb5-29b0-4676-b057-77f41a0b073a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d83c1d5-fe57-436a-9ad7-d61e2519c542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b89a1-9836-47c6-a945-69dedd37c82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e09d946-e918-4489-bf28-ad723d61639a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2fbac5-ae00-485b-a202-86bf18cf805d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f457ab-38e4-4dc1-ba36-a6cab4cd5669",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6924271-c5ad-43fb-9414-cd6e27f7c185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c6b1dc-4a8f-440e-9a55-afefde4a204e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34275c0a-069f-4d50-b2f7-e7aa4b8ee471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cfc8da-8c81-4d02-b082-0ce9080c3664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d558d253-3e7e-42e1-907c-eb9132e54e90",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffe0c75-1585-436c-81e5-41263d4f5ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e49b1-3a65-4bf2-9f16-a46dabbb1532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabbe1e7-3646-4452-973f-2e1879caa93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72167dff-f9c5-41ad-ba61-f0f578d4242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b46b54d-de22-4b36-ae1c-0e4192275a27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12850139-e8f6-45c0-9f60-3a074391eecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea866b7-2b80-411c-ab97-346b208a7b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee14193-30bd-49b1-a411-b71088e45619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b37f092-85ad-45cd-9a04-1e63ef5e3ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9655ff-5141-4912-a671-bcc2f620ebca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1256b504-1fa1-44cf-adcc-a9bc5b8c859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145b7a41-4aac-4c88-a164-f0f1ff48038f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be5f23-d0e8-4f4d-8f40-72add001639e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98bf983-ae7d-4afc-aec7-24f7e6c6e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b182c870-da49-4503-864c-c0c15d010337",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e185fc45-46d0-4c09-9f2b-ded73e364713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b22cee-fa72-42a6-b7d0-e9544042c00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1819767c-9646-4d84-bafc-eec4db201ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccde05b-3779-4b36-a905-3c7926a73099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d903eb2e-3f25-414a-85d6-49910c2cd9d6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43688831-115c-4e8b-915b-d0e26fcfc11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09463cf-ee0a-4e1c-8db3-fcdaae5b8c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e847c745-a276-46b4-b83f-2c0369c8994a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afcce52-a340-429f-bafe-4267c0eb3839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e73cd69-9209-483e-838d-5cba96279cf9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b86c99-fde9-40ec-a27f-c0386e75d92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451ec6b4-4e30-4a1c-95ee-8e4df84cc37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cec20ac-7541-454b-a132-5566f66cb35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8352c698-1947-4a5a-af3a-5bf0058d29f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829fbcd9-6cc5-4551-9689-b300b86d5940",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89c4511-53c9-4bdc-abaf-a0f5df5004bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5737f6-6253-4fd0-8f95-b16356aedf86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3e4b55-0df3-45ce-9be0-4ae0ce39087f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e14d7a-6f40-4e15-bc77-48fcdb2a58b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ec7f4-5901-4ad7-9d42-5f60e116f770",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afaee4b-6a23-42f7-801a-6a8ef956e8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b61f75-09ff-4d69-b332-b34ac2a5280a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b1555d-eedb-45e3-9880-83e853d551e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd1a9a-7b47-4a20-9ccb-ea614b2c3cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af2b87c-ee4f-4e84-88eb-4519b2a6dd1f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8f45ca-a254-4abb-be8e-a3e79e6ccf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e827fb85-c47d-43c9-8318-7e1eb41b92dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda2bf4b-ff3a-4d98-8fbb-2dff896ea301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910a2612-0d55-41d5-93cc-4d3fa57e7aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9a4b26-220c-4d8b-919b-0c75650de740",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8328aad5-51a0-4354-a439-3f12b8f6877f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e647fbc9-e460-45b3-8d37-3ed36b49fe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d41e937-2620-41f5-b3df-dfeba63ebe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9dcaf7-5b38-4e2c-8b81-276d1bc967d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeea334-1810-4996-9680-99777cc6d84c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e44291-9f03-4913-b5f8-6e3506be39d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1953762d-cc7c-496b-bce1-e7fa34186de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7efb8f2-fc7d-4c54-b5b9-22212a915893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023c0de2-df70-4744-864a-188683db2c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54adb329-f0ad-41dc-b07a-220ba1c25926",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe4514b-f021-466d-8eb5-e147ac7ce795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a8b4a8-8f46-4adb-9a74-44089f7da222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59bdef-ee60-492b-a03c-e0207ba15c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee1ff7f-6908-4178-a860-bc2dc081b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baab76e-98db-4443-8b42-196047096197",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8619202e-6c31-4782-ac73-336044962c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514f5875-0f56-4577-b449-2a6c6c40314b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7333953-0f30-461d-aebd-fd3c4401530d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b772fcf7-5a69-4798-8373-11a90714249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f6a082-fbe0-46f3-b293-005b0e55275d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370aac79-6809-411b-808d-3832957bf400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc55879-7566-4d29-ab54-50c0da288302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b5b96c-bef5-41db-91a9-c78f780d7ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fab011-56d7-4649-994d-129a6a83081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f5943f-be87-40aa-bc98-a7993f13de90",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca3b59a-0de5-45dd-a056-1d77afddb6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badb1fd0-4276-4b40-b12e-4cc8ab286b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e25d2b3-011f-4ed6-91ee-d54e0ac2e92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218cb05b-7af5-42e3-b485-6ca244263f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9b39e6-0a36-4ef3-9132-7472fa151492",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab25e9d-6257-4740-a6f7-1aacba58e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b62807-4094-4d50-af49-da83c043d6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d3ed8b-0423-4243-aeca-9eace913fb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470255e4-dcf0-4d44-884d-9122bb82d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e3e3a5-cc13-49d7-8502-3bcc0c029a00",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8170b2-8717-4ef0-8402-1a496bf02b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7541ce-d737-40cd-92c9-9e6bbc83417a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f882ef-e42b-416f-a47b-82400cd9bad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44765bc4-c82f-490d-8778-feb57ef0dcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce9f85-d656-41d1-80e5-a9c910b4872e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2152a987-f569-4255-bf1e-121221439c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f2aa7e-6a45-479f-80e2-199a72370e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606d026-4e04-4fe0-aaf2-5fab33f60c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fc5bf8-9f3b-4840-b877-8edd4429c0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c0684b-e900-446e-bd84-b39e6a615d32",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d33dd0-20d3-47ed-bc34-7a92d92ee6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8431f1d1-8328-4ab0-9dd4-a885ca0ace59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfc419e-35c0-4593-8df5-a7c0eccbb1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580996d5-f398-42b5-9b9a-1bf2a8ed34dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b604cc75-c5dc-4f5d-834e-c9921733ad85",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6610e97-a366-4c53-a887-8b45d6674e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a254dc0-aade-4d9f-b310-b5c12a61df6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00c6721-a036-4e75-b9b2-d4cac2be0d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4084a3f5-7442-4c60-a986-9bcf0c1252fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cabee17-c7db-4e05-87b3-3e90c99dfadc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e2f226-3dc0-4161-84f5-a01faea4f17e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761a2906-2bbb-4eb3-a53b-1c6772b05fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7486762-20c4-4817-a158-0ffc7ee5ae4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9179f799-c452-40b8-96b0-3beb3874c9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cbdffb-7544-4cdb-b4fa-3c58e0599396",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba05d445-e45b-41f4-a74e-936bc06c535c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427fc0b7-a370-44da-96c5-6cdc6ef0b7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb5dc16-5092-4697-be03-2bfa28be1013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420fd82a-f9c7-4af3-8253-b51b96e2511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f35d9-7d1f-42ec-ac2d-5eabb7552eeb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7287c25f-b2c4-4f43-9390-b2594c9e074a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41efaf59-a500-42f1-922b-dfeafde9f915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731f1da7-0866-4a61-872f-f189f3ca6b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb094143-7f1f-4c39-a820-291f9dd716f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b80231-6461-46f7-b07b-dc93869b0cda",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f97f594-169e-4568-99ad-23643a53b8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29046097-aafc-432a-9b41-de933358a26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaaebe8-8ae0-4427-a81e-9f1a3959d3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cfa613-1111-4919-ab23-5ba4a2eb00b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6247f586-6773-48d6-be6c-a0c1a6a7fd9e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdfffde-a033-4365-9d55-0858f0466a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d237d060-fc85-49c4-9542-21be67df1a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0db2f0-07e7-4c4c-8573-5047a8b244df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ee7d2a-1f83-4428-a588-13b0977ebc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc09153-b17a-46aa-b834-1edf9cf1a356",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcce90f-77d2-4c26-8bd7-0c9aa410b46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6154a7-741b-42f8-b769-72eef32350ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8dc4d5-e3be-4ac5-9cc2-21f3823d999e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889d9f74-2b34-4eb5-80d3-7d8f6ec942d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf25bff-2d42-40fa-990d-6c06426c4ad0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82d044c-f671-4684-b8ff-00f5e1eae4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5cf7df5-e9f4-4f85-9d7d-35f7a2cae3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacefcb0-5700-45cb-ac01-af57c9ff309d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4792ed1e-5f5d-49e1-90c6-f7798993e4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d8d63b-21d0-4006-b68f-d510e9f983bc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c071d5-ac79-4ad0-bce3-225d7fe05274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3499649-888f-41da-9b9f-5d508fce0b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a8b066-e597-4dc8-a5a1-9188e467aa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ef05f9-e501-4eaa-b676-4e8a715d15ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c8485c-3e2f-4977-9a36-07fe04426e2b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676cddbb-9f4b-4f71-89bd-fc8dc3b1507a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e17a00-a84a-478d-89be-bf08b0867b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02025c0c-94aa-4db6-9f33-b2d21078e9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782aa3ac-f267-4ca3-a2cf-3e57dcd327e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba399615-3acb-4d35-a10e-46b6079d4ac3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b02694e-5699-4b57-94fe-479845f6d5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d932a8b4-b079-4620-b2e1-35557e685592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6793a683-2133-4a3b-9f59-a0cbe60e9e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80bbd08-8032-4a0b-bf7a-20bd5108927b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981f64a7-3742-4671-9feb-2627636aaac2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59443d9a-6b3f-49a0-8ade-a5f8caf5d69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0c6a18-ae65-4d64-afa4-b6b26e7c0f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e014b42-3013-4581-b13e-520d374c0dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438448fa-f679-4376-a884-8800ca1b9da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13536b0-96b1-4e7e-9c76-4879904761f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc06a7c-ea38-41cb-bc07-4b349cf07bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9321d2d-a731-4182-9ac2-5ae95beb22a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c06737-e149-4358-bd19-3666252ea4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebc073b-68a9-4536-9f3d-f8413909d21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34921df1-ed55-47e3-aea6-ffbb700c98fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90059f29-1c20-4f73-a15e-c56aa3eb57e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7681592-baf9-44d7-a295-ae61dc13a310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36d8136-a90b-416a-8a1d-fc932f4871d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07637fae-dfad-4625-8aa2-4d9c7c3d3eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffc5f8b-01cc-4409-8d26-3fed28a7f287",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4512376a-f56f-46a9-9153-7c9c431997d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf9e69f-cae2-4f30-94d3-4f1aee6cafc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1d8e33-0f5c-4411-96c4-31dbc02f8b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef189df4-53e8-4bf1-81b4-4d51f1f8ab3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69a3404-d890-4dfb-a35c-45f146ea24a7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0da94ab-ae29-4b7d-bda2-fc0fd608fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9057bd5-4ac3-46ff-a50e-e57352852523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac717cc-e86a-445a-a455-9e725ce757a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a132d00b-8a71-4b01-a490-f20ca53c5d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6150a4ee-33ee-40c9-bad7-798f3e905114",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269dc229-ee72-426b-822b-7f1b2a328f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b358db95-adda-4ef5-b4bd-da57d5097625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e6f706-3d3f-4cfc-a637-050e0696592b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91b9dfd-a730-467a-a0ac-4af6f8647114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e4f4e3-8c07-42f2-b70b-253b615d9cc3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213826e3-cfbf-453a-8c71-be578174ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5b6381-7282-47ed-90cc-e34d43104382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc60a1b-71fd-4fe4-82bb-85857db20932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a694b8a7-596c-4642-8e96-dd39d5d4f08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ae2db-c56d-416b-a532-a681313e49f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b11d6-2ecf-42dc-85fe-f8533bd086a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1b038e-dfe3-45bc-b826-16bdde6afb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fef5cc-bc39-402b-aac0-21dada7ff013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef9e275-5b87-4bfa-bcd5-93f44c2c5146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7791341-1792-48e5-998e-95c9a550779e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067941bc-111a-45bf-8304-795599c97806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10da5633-f1b7-41f8-bca1-564b720cd8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda0c3c-7110-4c31-8102-7eefbf002839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f77f8b3-61e7-47a9-9c10-d2ec51afa309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22bb2ef-903f-489d-ae37-5f56cf3c0b82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71938e24-9acd-4c80-9206-0ea33a294102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8a4b7a-d97c-480d-aa12-76a96a83759b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba43b050-8a26-4fcb-92eb-7a2792c6ed79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6479b17-4219-436a-b252-ec68f97fb4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ec6baf-0344-4141-8f59-ffec7e07d618",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f200650-cdf8-45c2-ac48-7338e4adbb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98cb859-1f62-4720-8643-012e86e783b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d567a5-2c2e-4ba4-8c1f-4e88664d4771",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5f1fff-6e14-402b-975d-027139b4b4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08b35c5-8297-4ec9-b527-4a3704b3bc3d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e71b835-5127-4bcb-9780-42ca1339847c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab3b862-d015-4b9e-b867-871d5d4b5810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fe0a86-8367-4441-ae17-53d8e9d3fc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4baed62-6767-4459-9e09-9a7d66824c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbfda65-283f-455c-b719-a7173eaa458b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242699ec-e185-4777-8e9b-f2d23c5941e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8ce55d-d18d-49d5-b577-88b2f157c737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6957011-4758-40c1-b1de-fe71b8948c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd3b22b-3cf8-44f8-8083-2fa977d7390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b143b9a1-dea4-4f03-b6c1-2c497021a71f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823d5243-d8e8-4833-a984-378f41a7b4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d94c34-ffb7-4753-ba4c-9bddab896e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d585f4-ef16-4666-ac26-0b0e4db6bea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9dfa7a-1a76-454a-be85-67affae85579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc53da1-0906-4a5c-bfb0-d7e0025b8f25",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e83a301-31fe-4a6a-ae63-df8bd11a2e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1eead6b-8583-47e1-b417-cb04a8e99566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17549b9-96ac-46c3-a091-87210fc52d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923e9710-b239-4c58-861d-6d244b180828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650066cb-e8cc-49b1-9de1-c9d58636e6e5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae0508-5d6d-444b-b92a-0805afedb9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61149f26-8007-43a8-a5b2-ced230feab55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b235296-ed31-4df2-b726-fdaf2c7c4dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e950202e-4c66-44c5-91ba-88442a572fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde63b86-8bfd-46d0-9daf-167dfa424e1b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e1e85e-3a68-4c65-be9e-bcc650a4894c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed1de43-c111-4e64-a058-ccdca40ae248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5674d990-e47c-494a-a109-cd7ad9ae4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b626cb7f-d379-4887-b1ac-cadebaceb1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a5b70-02dd-44fd-869b-59b37eb0ffa3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f55b088-92e3-446b-9640-a93a754a682d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a812f5b-9b7e-4145-a5e9-004abb8ac1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2390d99-d792-4d4e-ba5c-f9e61ce23eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2b7c77-b06b-4afa-8737-f77c296a141f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14c42a26-7321-4813-a05c-7513d0f75ace",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd9e9cf2-62ab-498f-bf32-96c5f5aeb0ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "950ca2c3-69d7-430a-afa9-2986b2de8c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ae7dbdd-5c96-4377-8934-dc251a424e72"
                    }
                  }
                ]
              },
              {
                "id": "b8ad92c8-d08b-4d4b-b670-4c18e59c41c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1240c4c-27ae-4928-a6e3-72fdc0a29fc3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb8d806-8038-4edd-bb4d-f5dd2b766335",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3647e6ed-341a-4180-924e-c4278c282f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e981fc2-a78e-4244-8235-fe10c7b7da6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5f9e511-124a-44f2-aa00-1819262e8cd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e1572d4-7a1f-4dbb-8d97-881cebb110e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9722bcd9-301f-4b29-8f2b-c1afac275b5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0e576d1-3d4c-463b-8c18-12115c354db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f71014c9-ef33-44d9-a793-48c2b6048d05"
                    }
                  }
                ]
              },
              {
                "id": "972e8cc0-3e1a-45ad-a9e1-faf2c0618ca2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "60a1ab27-bd38-4917-b673-6ef1c7b0a99b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e1689-52e7-4f73-a404-b73839e6dff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d3c34364-6d35-45a3-88a6-d69a7c3f14ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10b2680-3e46-45fc-84cb-28a449c6128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f79649-6318-47ba-8b20-e6098c0870cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ff219dc-394e-4a25-8757-264d1e7118a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e0d22a0-12be-4609-b1a1-68148959c43f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d174cbff-5258-466e-af3e-5631a0415738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d04648cf-8fed-44f6-9145-c2c75e43fbc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24856c93-4121-4bda-b28c-ce1da22390ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0d86c9-4830-4087-98c7-2357b9505ef5"
                    }
                  }
                ]
              },
              {
                "id": "837bd217-b90f-4dd9-a961-29c83857eba5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21175ee2-4d4e-494b-90f3-16adeaef2fee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd7f47f2-c8c3-4f49-8df5-5d448c8cc594"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34d9bfc3-5248-4c56-b02f-86901bd07b75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f02050a7-aebb-477f-8489-fee174c21bb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e127cd0f-cf13-40a3-ba31-83cc77a06b54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2db46d63-0554-449a-b713-fa484bcc6c22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d787a0-1252-47f1-943b-d273b12c62ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8112894c-1e7b-41d0-8859-ded7c6f49f70"
            }
          }
        ]
      },
      {
        "id": "57a0e888-ae8d-422c-859e-9717c5ff0ae9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1514720e-d213-491a-85fe-870aa961fe18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9424ed51-5981-4e1d-bfa2-097d96a15572",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8281bb23-6af1-4717-be7c-8def6fb03373",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a698bc7f-dcac-4ac4-aac5-b4eb104fc037",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae91aa50-6bf5-486e-932c-84e99df85561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17760236-2753-4337-85eb-f9329c69cab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1298ffd4-2f06-4d02-bbc8-1563a22a248a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "182a58cb-b07c-43c2-ad86-76b02806dbfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c02ee16f-96f6-4a04-bc0d-dc5049437d3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "572c4685-2078-48fb-989e-cc2751493774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee92682-5e76-4fc8-a6af-4146d7139d31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5330cf7-98d3-4d95-b765-a2e3004c0528",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c451113e-9dd2-4e01-9fbd-f66c15bcd504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "363c44e9-78fc-4ac0-9557-13ddd6a4c1c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d432d0d-a56d-41e4-b527-8de830080439"
            }
          }
        ]
      },
      {
        "id": "bfe41ae9-375b-4f1b-8f24-f364a0f2af45",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "316f001e-2f38-4cae-99fc-f16576977596",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8eea0f34-d9a2-4a35-8867-e578ee032937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f72bea0-009f-4068-82c8-ac181d326aeb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae83a5-f251-412b-85ad-05c220131599",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00c3f5c-0911-4e2f-aff7-39768093cc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad3bb3-119d-4d34-bec0-dfd3f0235410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37817205-81af-474a-976d-88ced8713de3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0739e5f5-5567-4fd7-8075-ad2714b7299d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04152894-b230-4c3b-acaa-aa941894136d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce254c7-9442-48af-8d8a-6eb1496aaa3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ca8d875-5dcd-4a0b-abb5-2904caa88188"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77be4459-7040-4f83-ae2e-e386e27569cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a426062-d51a-4b82-ad14-88a24a742451"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a05b40d2-b49f-4419-92e2-205a841fa453",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa1f78f7-2574-434d-be00-9c4be61a28d1"
            }
          }
        ]
      },
      {
        "id": "a977a64d-7957-4bd6-af43-1260e7f21aeb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "be40304c-23a2-4f53-8a3b-373a47194109",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ff311f-7d93-4edc-a280-e1d0bc02bd6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83555217-a68f-4dbe-9a35-71ddb47bd97d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34816144-6962-447c-b1ab-ff832fe53fd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df44cba9-7750-4bff-9b66-d941f7458c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6d1f93-e5bc-4601-9835-a75e714b03f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49c36914-3af4-42c2-a141-1be78cbf235f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c811693-159f-4ffc-8c8c-fb4261902bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91d1eae5-bc5d-42f2-b2ae-ade1f1c3e058"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ef7e40-222e-4f36-b363-efd2291f0fa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11db82ee-fc6e-4f27-859e-5bbdf97425b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41a10289-2416-442e-9f56-27dc9f7ebbc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0f0d5a3-bd09-415c-a088-a2146453b0e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e630de9-ec99-4423-86cc-4041145fbc89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fc3d5a5-639e-4ab9-8c81-9da9a243373e"
            }
          }
        ]
      },
      {
        "id": "4836daa0-1372-441a-bf53-af0c61109b00",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58156652-75ae-4196-9651-4aa94fd87a94",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24815dbd-1293-4510-9575-8c2fd0639726",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3efb915d-37bd-488c-bdc4-5c5201d43379",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5c05754-82e0-4588-a0ed-9656581a698a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6e68c86-2fa4-48e8-968e-8fac9d8d3a75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 135.55158730158723,
      "responseMin": 21,
      "responseMax": 7815,
      "responseSd": 535.5591438348329,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718152701720,
      "completed": 1718152744224
    },
    "executions": [
      {
        "id": "42c2836b-9f59-4815-9c09-7482d6bf4de0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3c5fa93f-a3b6-4a9c-8cb1-7e5b900c0726",
          "httpRequestId": "9ef75b8c-b84a-42ed-8834-20ab892502c7"
        },
        "item": {
          "id": "42c2836b-9f59-4815-9c09-7482d6bf4de0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f7cab6c2-e4b1-4419-b52d-6b17910ee571",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "54244b7a-8d6c-45c3-8c4b-b0300e26fcd2",
        "cursor": {
          "ref": "fe0e19d3-9ae9-4011-9c02-6aa6d00b25fb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "616c241e-0e02-4d69-a091-8d36fb6b72ed"
        },
        "item": {
          "id": "54244b7a-8d6c-45c3-8c4b-b0300e26fcd2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "492fa6ac-9fb6-4925-b870-dccef7c20614",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "d521553c-9338-4929-bd05-08fb3d200756",
        "cursor": {
          "ref": "95cede5c-f0d0-4d50-8f07-717762df4d01",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aefecb38-6542-423d-885f-a9c80762acea"
        },
        "item": {
          "id": "d521553c-9338-4929-bd05-08fb3d200756",
          "name": "did_json"
        },
        "response": {
          "id": "9364423d-5db9-418f-b5f0-6798c2e4314c",
          "status": "OK",
          "code": 200,
          "responseTime": 478,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06ba4e0-d6ee-444b-834d-3e49d1b80c1f",
        "cursor": {
          "ref": "7e1f9d96-9e4e-44d7-a4c1-bac171dbf86e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "192ec3a6-0b61-428b-8200-6f13f58db834"
        },
        "item": {
          "id": "b06ba4e0-d6ee-444b-834d-3e49d1b80c1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5bf44db-d62a-4a8a-aec6-62da0c7ad869",
          "status": "Not Found",
          "code": 404,
          "responseTime": 538,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06ba4e0-d6ee-444b-834d-3e49d1b80c1f",
        "cursor": {
          "ref": "7e1f9d96-9e4e-44d7-a4c1-bac171dbf86e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "192ec3a6-0b61-428b-8200-6f13f58db834"
        },
        "item": {
          "id": "b06ba4e0-d6ee-444b-834d-3e49d1b80c1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5bf44db-d62a-4a8a-aec6-62da0c7ad869",
          "status": "Not Found",
          "code": 404,
          "responseTime": 538,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f973f34c-b008-4e75-b447-aa095480ce73",
        "cursor": {
          "ref": "20de36ea-063f-40b0-ac31-0bcd02f37399",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "99055bd1-6c7f-47c3-8206-da00634f50c5"
        },
        "item": {
          "id": "f973f34c-b008-4e75-b447-aa095480ce73",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5c0f9fbd-c637-4e44-8f45-76506b1d1921",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74863f1-9820-4170-bb8e-081dc37162fa",
        "cursor": {
          "ref": "1287f177-4d40-41f3-a774-2b359a9c5543",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2bfb17e0-6d61-49f7-9283-cb7751dcf666"
        },
        "item": {
          "id": "e74863f1-9820-4170-bb8e-081dc37162fa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a011a770-ed1b-4b3e-ae76-2d92a279e04d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29edf22f-cbe3-4fc6-90d2-72ea89eab2e6",
        "cursor": {
          "ref": "50b2dd20-0764-41a2-b696-e563807ecaa2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d6cafdf5-7cd5-4049-91c8-0719f4e3cb24"
        },
        "item": {
          "id": "29edf22f-cbe3-4fc6-90d2-72ea89eab2e6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7c951e19-e65b-4b9c-80ee-74f01698ba8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab080cb-0e76-4ac7-bd5f-c7ede38244bc",
        "cursor": {
          "ref": "82018939-5539-49c3-a9dc-fc0dc9d33ece",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83d9d0cd-d663-452e-ace5-03e6ef5f752b"
        },
        "item": {
          "id": "6ab080cb-0e76-4ac7-bd5f-c7ede38244bc",
          "name": "identifiers"
        },
        "response": {
          "id": "4b1b95e0-3668-416c-8520-186e3ceac2a7",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5800d0-969e-4c1b-b01e-cee017ea726b",
        "cursor": {
          "ref": "9e12fd7a-051a-4a47-a4e3-4d2fb70562d2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0cde8685-586b-45be-99c7-5f6612af249e"
        },
        "item": {
          "id": "cf5800d0-969e-4c1b-b01e-cee017ea726b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "301d10c7-8b0d-4dad-857e-7e8906b8193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18b0296-3800-4233-bc8d-dbeb1906c6ad",
        "cursor": {
          "ref": "07c650dd-f4e6-4d40-8595-47b6f8e39e3a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b448c735-e154-4164-a9ff-88770828e868"
        },
        "item": {
          "id": "b18b0296-3800-4233-bc8d-dbeb1906c6ad",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2fda2bb7-c6d9-46ad-a009-2e28c9d27d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8ac8e-8b27-4cf6-bce2-e1c845287ead",
        "cursor": {
          "ref": "12367f2a-b4e2-4c7b-964e-a9b662c16f97",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5c1761e3-1211-40db-8533-97ba8952fd31"
        },
        "item": {
          "id": "54d8ac8e-8b27-4cf6-bce2-e1c845287ead",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "12817b06-cc86-4972-907b-2b315079b5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce517f4-acff-403d-b228-d5b4164194ec",
        "cursor": {
          "ref": "cec841fc-3a42-4add-9aa3-270aae92eaee",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8d71ae5-1b9c-4dcb-aeb3-408ed08fd2ea"
        },
        "item": {
          "id": "4ce517f4-acff-403d-b228-d5b4164194ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5be6b2fb-c917-455c-b5fa-2cf24c157343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762fcf94-c59f-4623-8266-c4c11eae24fa",
        "cursor": {
          "ref": "a3e62ffb-89a2-404d-9d77-d68a1d877f8a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a0f158b3-7d43-440a-8305-83faddc6801d"
        },
        "item": {
          "id": "762fcf94-c59f-4623-8266-c4c11eae24fa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7600ce8f-38a0-4082-aeea-7a8233a7db29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f97dda-c9b5-4255-ad5c-d1b11766a52d",
        "cursor": {
          "ref": "7d09c840-f249-4d65-b473-c39fbf0da061",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "31c8eaa7-2c2f-44c3-b7aa-5cdc77f11d6d"
        },
        "item": {
          "id": "90f97dda-c9b5-4255-ad5c-d1b11766a52d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "910101cc-ae79-4a9f-bef2-806876de5ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ef43e6-45d7-4f77-ba3c-e912f016f116",
        "cursor": {
          "ref": "39fa2fff-23f7-4da9-a7cd-ce635ed7382b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1afb7d92-b43c-4695-8454-0f742d78fb8e"
        },
        "item": {
          "id": "a1ef43e6-45d7-4f77-ba3c-e912f016f116",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "07a334e1-f5b2-4329-adee-e9ad6f1494ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef617d43-d8a2-4b3d-a1d2-2c4e825a411c",
        "cursor": {
          "ref": "fd30ede7-9afd-42d2-a136-9fc6d485e36c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0eb1bb0e-df9b-4e95-881d-3b727fe9359d"
        },
        "item": {
          "id": "ef617d43-d8a2-4b3d-a1d2-2c4e825a411c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0603c3d9-e837-43ea-938b-b6cc72837fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95be507d-7b6c-4ead-83b3-05d33fec24a0",
        "cursor": {
          "ref": "8d79e1b1-0c55-4f7d-b8a8-dce2e3ed81cb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "08771a7f-e49c-4f74-95f3-641a28c50fe4"
        },
        "item": {
          "id": "95be507d-7b6c-4ead-83b3-05d33fec24a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3bfe4c2f-4177-4b16-bda8-0e23026a4001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005ecec9-156c-414c-9e88-de37a7b73987",
        "cursor": {
          "ref": "ddd9e85b-7ab4-41b3-843a-b1ec12acdd2c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4e3a403-81e1-4388-8b4d-c181c32c4e16"
        },
        "item": {
          "id": "005ecec9-156c-414c-9e88-de37a7b73987",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cbda52a8-7d75-4a9a-8eea-ae0f7e1e173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed089409-c99a-460f-898e-33eb0083cb50",
        "cursor": {
          "ref": "cd1c055b-fb5a-43ca-b7c3-ec10798acd94",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7d74a693-2b26-4738-9be9-247e5ccfa21e"
        },
        "item": {
          "id": "ed089409-c99a-460f-898e-33eb0083cb50",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "91345ec2-3d12-41ce-8c5b-6f0b347fd842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3e17be-e5ce-4396-8845-5f99d31c6dc8",
        "cursor": {
          "ref": "5d957971-8c5d-4f12-9d95-14742f92ee7e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3904a838-c55c-466b-897b-2f3c9ef45eea"
        },
        "item": {
          "id": "de3e17be-e5ce-4396-8845-5f99d31c6dc8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fe7011e2-98c4-4393-8682-d1a424f36f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85473bae-cf4d-4be5-8636-2cc8b9fbc2b1",
        "cursor": {
          "ref": "b4158b3b-5ffe-41e0-8fd1-9f4f41456328",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "61e150c6-8294-4a26-9e42-344b8968d986"
        },
        "item": {
          "id": "85473bae-cf4d-4be5-8636-2cc8b9fbc2b1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a7a7c35d-ad53-447e-96ae-83f1f319c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957015f6-a095-466d-a346-f9116a89629b",
        "cursor": {
          "ref": "f58a304a-8d26-49e0-af74-7abd1264118f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "712d719c-26e5-4a9e-95b6-6f8f8c63319f"
        },
        "item": {
          "id": "957015f6-a095-466d-a346-f9116a89629b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa5df990-e9f9-448b-98a8-ddc656a50eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf23def-d235-43a3-9e2c-7f4b735be299",
        "cursor": {
          "ref": "059fefe4-9674-49e0-a5fa-0d968348e744",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3d9889b0-1eb3-4a5e-ae3d-555fc61c6771"
        },
        "item": {
          "id": "6bf23def-d235-43a3-9e2c-7f4b735be299",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f5dfa424-c596-4d71-81c9-ba2098317226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334a5644-4884-4e28-bd3b-03c3b1bd6f0f",
        "cursor": {
          "ref": "d60be277-3fc3-4cfe-8fea-be7d665f7a4a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a09adf2-179d-42a5-b75b-c46ceef39236"
        },
        "item": {
          "id": "334a5644-4884-4e28-bd3b-03c3b1bd6f0f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6dcce892-97eb-461d-b1bf-4ee15ff3aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cf4fa5-c0fd-464b-9848-8e12ccf6fb1d",
        "cursor": {
          "ref": "f6001f7f-45a9-4fe1-8445-fc06cd8c067e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f753a1d7-92dc-481a-939c-1e03010f739d"
        },
        "item": {
          "id": "63cf4fa5-c0fd-464b-9848-8e12ccf6fb1d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44483847-68ca-4909-a01e-bf04db0e1209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6a9af-bf4e-43a1-ad6d-14ad11935251",
        "cursor": {
          "ref": "2ca839e9-566f-4df0-958d-6b0797422054",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a1d3f104-16e1-413b-93ab-d9e9c1480003"
        },
        "item": {
          "id": "4cf6a9af-bf4e-43a1-ad6d-14ad11935251",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "72a7646b-41a6-4513-8d50-8ef4b9e9894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b43be-6645-46c5-ba4a-30f599849c27",
        "cursor": {
          "ref": "4f0e7e37-7c04-49f9-a845-fe1cc7f2a107",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f94e6871-6ceb-4895-bfae-8593d48f761d"
        },
        "item": {
          "id": "ca3b43be-6645-46c5-ba4a-30f599849c27",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "43c2d81f-b1f8-4b06-a0ad-a4a3e6551dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6392cf-4f02-4c8a-83ea-871d94edfd23",
        "cursor": {
          "ref": "bc45c4a5-553c-4c90-b148-8810b669403b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4d34e060-acce-4129-a764-e17a11b48221"
        },
        "item": {
          "id": "7d6392cf-4f02-4c8a-83ea-871d94edfd23",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "64fb4b24-3c3e-48b8-9a4d-fa5757b944d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b3360e-45cb-470f-a4e9-3ecef219d281",
        "cursor": {
          "ref": "ff8f8478-2e4e-4779-a47a-30dd9f670507",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e28e9e3e-35c9-474c-8639-efaa91bcec4b"
        },
        "item": {
          "id": "57b3360e-45cb-470f-a4e9-3ecef219d281",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "87b5cfb1-27cf-4981-9f5d-8b2dfaee8bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5f070a-efc3-4ff1-9e11-dee8f67f8cb6",
        "cursor": {
          "ref": "b7a8b793-1cdd-4096-851f-d7fefc201245",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "460a4131-eb75-464c-bcdd-00a7338666e3"
        },
        "item": {
          "id": "ce5f070a-efc3-4ff1-9e11-dee8f67f8cb6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2a95ae3-3b41-4811-a606-d91bb47c9ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad4a496-794f-4d69-91fc-63815acfaecb",
        "cursor": {
          "ref": "e49b261d-37e9-4ee2-83c5-093df7f20fc4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1933500c-c037-4900-adc3-0018fb66b78f"
        },
        "item": {
          "id": "aad4a496-794f-4d69-91fc-63815acfaecb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "75c77a6d-4ead-4bfe-a256-51c1dd0cdf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8ed199-6983-45f1-ab11-10792988d186",
        "cursor": {
          "ref": "39b4b550-7d33-479b-8df7-cdddedd7c6fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c65e2582-094c-4011-8c2b-3c462492157b"
        },
        "item": {
          "id": "7c8ed199-6983-45f1-ab11-10792988d186",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8101e1dd-ebc3-40d9-bd16-7e45fafdb7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ec5225-fe55-472b-a750-dd30ec9f447f",
        "cursor": {
          "ref": "e67030dc-f922-4c01-a843-9ef63845df87",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc1533e6-5e93-4d7b-9877-90ce3d9f3b88"
        },
        "item": {
          "id": "44ec5225-fe55-472b-a750-dd30ec9f447f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e637a347-e5dd-4260-a5e6-754cacf219ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23371cb7-7bbc-45b8-b69f-628d1e82432e",
        "cursor": {
          "ref": "1af7ea81-7a46-4c9a-93c4-28e032320fa9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ceda660c-57d7-4873-ab6f-385f2d07136f"
        },
        "item": {
          "id": "23371cb7-7bbc-45b8-b69f-628d1e82432e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26b002a9-38e4-4069-93dc-7547726ab043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6615ac-c88c-4bdd-93dd-6bc49feadf1a",
        "cursor": {
          "ref": "b4805578-2cb8-4a7d-8437-dc1c61375310",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a76fd6b2-4b00-4fa1-93a4-3a03d90e3fea"
        },
        "item": {
          "id": "fb6615ac-c88c-4bdd-93dd-6bc49feadf1a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a2230a5a-6074-46ef-ae96-a11057a09a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4942dfd4-10cf-4f97-8df0-68e58647a7a0",
        "cursor": {
          "ref": "c45ae52b-53d3-4c63-a461-197f24cbf214",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5c8e5b6f-e4db-45cd-9b10-ce9853e29b15"
        },
        "item": {
          "id": "4942dfd4-10cf-4f97-8df0-68e58647a7a0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c6542de0-598e-4262-b805-bfb2dc4bbb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4570a7a9-bbbe-4d60-a02a-2871312c6eac",
        "cursor": {
          "ref": "30661a34-3339-446b-8110-98b9edc87e7f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a500539-cdd2-45a6-a24c-3d2deb1a67a4"
        },
        "item": {
          "id": "4570a7a9-bbbe-4d60-a02a-2871312c6eac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e7c19bc-259f-4b72-9bde-f475d71b6886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c02836-265b-44a1-8459-799960f49ee1",
        "cursor": {
          "ref": "95fada47-7eca-41c9-a1b7-62dc309005d0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c6c6da81-14c8-484b-b11b-7a4e6437b5d2"
        },
        "item": {
          "id": "48c02836-265b-44a1-8459-799960f49ee1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6337e0b7-f37e-4eeb-83fa-654dd93c9c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a6c95c-d03c-456a-a2ac-45e3296f7b94",
        "cursor": {
          "ref": "474db001-b3bb-4f40-ac12-e91d059bc2bc",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "546a05f6-37b6-4d0b-9657-341ff4a1ee8c"
        },
        "item": {
          "id": "f9a6c95c-d03c-456a-a2ac-45e3296f7b94",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "651a2965-908b-46a7-adc3-ef7ac73c6dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ed2a9-eea8-40df-ae6c-b33b21cd2d38",
        "cursor": {
          "ref": "bb796249-2bdc-4f18-afe3-7c026de46085",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "12e7e8f8-f038-4e26-b7ab-daf3991d04bc"
        },
        "item": {
          "id": "c55ed2a9-eea8-40df-ae6c-b33b21cd2d38",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "424e36ac-7a1e-4d02-ad9b-b5f8105b1d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba147be5-2e67-4f5e-889d-b7628b1f5c96",
        "cursor": {
          "ref": "a709a36d-d2c0-4a5c-bb92-523baff9a9a7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "afd451ef-ab7b-4121-b0d7-466d6656c2d4"
        },
        "item": {
          "id": "ba147be5-2e67-4f5e-889d-b7628b1f5c96",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8812d233-576d-44a2-bce1-6f0a52970c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdc9c8f-9a42-4ad6-bbf7-fb93066f3b03",
        "cursor": {
          "ref": "b52ece51-fd6a-4fbc-b9a7-d931163169b3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c5c2a752-4107-46f7-a221-267a0e5757cb"
        },
        "item": {
          "id": "0fdc9c8f-9a42-4ad6-bbf7-fb93066f3b03",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e0ded8c0-f54c-4e5a-bda0-d907e416c947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04a4b2d-897d-4de6-a5d4-7fb2007e794f",
        "cursor": {
          "ref": "d5836192-01e3-415c-8c05-9453b713207d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "49b9df9b-3a27-4a5b-926d-975d9b65fbe1"
        },
        "item": {
          "id": "c04a4b2d-897d-4de6-a5d4-7fb2007e794f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2cc33f13-1c94-4aad-b83f-0fa4fbbc721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4a4eb1-dce7-49e1-990f-07fd780b7045",
        "cursor": {
          "ref": "50f7e37b-fc5e-44ad-9460-e1e94fc47eec",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d856050-190d-4293-a2f5-244dc4a09d2d"
        },
        "item": {
          "id": "7c4a4eb1-dce7-49e1-990f-07fd780b7045",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ff0a22a4-d9b9-4c25-a0e4-e158b5d287c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f86c64-a8bd-4159-9b8a-6565a5b7e35c",
        "cursor": {
          "ref": "541c7fb0-c685-486f-a595-14c852bcea63",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0476bc74-43fe-4088-8c73-b3d446bb0098"
        },
        "item": {
          "id": "e8f86c64-a8bd-4159-9b8a-6565a5b7e35c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bfc1b0ca-58d7-4b06-9e3f-9dc32fb319ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef201ff-5598-47c6-b785-d81f0e548794",
        "cursor": {
          "ref": "d7f92bcd-22bf-4b10-b84f-6984f203f659",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1788b08f-8bf5-4a07-926f-0a54a11cac51"
        },
        "item": {
          "id": "0ef201ff-5598-47c6-b785-d81f0e548794",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7eb5e7f9-e3d3-4407-8cf9-52c4d89f55d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e33eaf-d5e8-4aea-9180-56cc3ff5267b",
        "cursor": {
          "ref": "a19f470d-516b-4c24-8071-95d86dec27b1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cad23ef7-9ac2-48de-ad50-50a5d26ef54a"
        },
        "item": {
          "id": "15e33eaf-d5e8-4aea-9180-56cc3ff5267b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "738b93c8-9e30-450d-a137-2812d2bf13ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60edcb72-0780-4175-9b7a-70eaf5abdac0",
        "cursor": {
          "ref": "ef51fb16-2c9f-4a8c-95b0-adb21e1d5849",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ce2f19a-7e1d-4f12-87ba-f09c3d2d17b5"
        },
        "item": {
          "id": "60edcb72-0780-4175-9b7a-70eaf5abdac0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e543bbc0-4952-43e8-b9e6-da58ebc6bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ecff0f-9d53-4ea3-94f6-7e7a666556a0",
        "cursor": {
          "ref": "5d7af980-2adb-43c5-94f7-b5a65bc48198",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8110cee3-7ca9-482e-bea6-11a0a6a67580"
        },
        "item": {
          "id": "f0ecff0f-9d53-4ea3-94f6-7e7a666556a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f06a9f65-17b0-4fba-8acd-558355fa069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e3b1e5-9165-4f7b-b738-fa93b05d9047",
        "cursor": {
          "ref": "899991bf-5bc4-4120-90bc-d9a9c0d85fdc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "07d00198-2b5c-48b4-b0b6-08fe2a060f2a"
        },
        "item": {
          "id": "32e3b1e5-9165-4f7b-b738-fa93b05d9047",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b2f0acd0-3712-49af-b40a-961d042cf34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633066d4-9e41-44ef-8de2-04f813fb1f47",
        "cursor": {
          "ref": "c72c5e22-ef07-40dd-bc1a-e48ca66a1198",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a9427738-3d62-43c9-b2d1-a7ce29987f5b"
        },
        "item": {
          "id": "633066d4-9e41-44ef-8de2-04f813fb1f47",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7f2463ae-d20d-4170-a5f1-d64c44f82e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae460338-cbf8-4c33-99f2-8b740d66977c",
        "cursor": {
          "ref": "cf659334-6748-4892-9c9a-a226f3ccb6b8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7604220-3c21-4bdd-b435-42b21a03773c"
        },
        "item": {
          "id": "ae460338-cbf8-4c33-99f2-8b740d66977c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "15d145b6-2b7f-4075-acf1-b61aaa5eb425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc70046-5622-40cd-a037-d439220f8621",
        "cursor": {
          "ref": "0381e4bd-a4d0-4d2e-b896-24892fc9c98b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40a4687a-d8bd-46fa-beb6-a9b09e034fd4"
        },
        "item": {
          "id": "ddc70046-5622-40cd-a037-d439220f8621",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae085a88-b37f-4fb2-9970-8a10e6c50e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456873fb-34e3-48dd-acc3-81b3b143beb3",
        "cursor": {
          "ref": "92d7e190-bb5c-4924-9d88-7016d798a5c1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "10172622-7c58-41aa-899e-101b6669e589"
        },
        "item": {
          "id": "456873fb-34e3-48dd-acc3-81b3b143beb3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "92f86628-cab2-4f65-b95b-72508e4acb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1e35f6-81c6-4777-8ed9-5a58bf011cd8",
        "cursor": {
          "ref": "dc78d13b-ac80-4c9d-a33e-638151831379",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3ae80b67-bb0f-41ab-bef2-d127a19b7c19"
        },
        "item": {
          "id": "7f1e35f6-81c6-4777-8ed9-5a58bf011cd8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1858b7ba-2e21-4fbb-b06a-15a88b0d4d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1b9d7-4620-42c7-9e05-afe0cb40e765",
        "cursor": {
          "ref": "bc18c107-9a80-4817-af06-6d3491074004",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b7ca45ef-ae0e-45ea-8db6-d035d1d971ab"
        },
        "item": {
          "id": "25a1b9d7-4620-42c7-9e05-afe0cb40e765",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aeb3733b-967d-42d8-97ff-e60787bd9344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd32d2f-b008-4ae6-822b-8005860a00e4",
        "cursor": {
          "ref": "6aeb6596-5fc1-44de-b29d-e3e4cf11c016",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "01a4a702-df76-4248-a38e-43b214723e5e"
        },
        "item": {
          "id": "1dd32d2f-b008-4ae6-822b-8005860a00e4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9cc13ecc-ceae-4e5b-811f-b60d1a799ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf101d9-183a-4765-8183-c822f3820793",
        "cursor": {
          "ref": "257b1f2a-a690-4151-9000-1beae5a69b54",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "45bd4281-a64d-4bb2-bbc0-663ba4d13c70"
        },
        "item": {
          "id": "adf101d9-183a-4765-8183-c822f3820793",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aaa26990-0669-415c-8fc9-7bfdbd5115f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8bd7c8-b264-4a25-b48d-da220c411375",
        "cursor": {
          "ref": "4b258a4c-ca0a-44dc-b630-7c147f611f44",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c62f56ce-08d6-4ae4-a3ef-e57be2c1dce3"
        },
        "item": {
          "id": "1d8bd7c8-b264-4a25-b48d-da220c411375",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "09ba4631-447d-4cf9-b713-040bd6cce26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90ae90-c858-41e1-8a16-5a10b1d4ed5e",
        "cursor": {
          "ref": "cdc8ef0d-4ffe-4fe4-b334-716f382fae4a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "19bfe020-2645-46b0-bb6a-8605e48836f8"
        },
        "item": {
          "id": "af90ae90-c858-41e1-8a16-5a10b1d4ed5e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b967a824-1371-4f51-ab2b-136822103db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5562ac1c-17eb-433b-b8b8-db1582b9bd83",
        "cursor": {
          "ref": "2603be3e-eb70-4347-bab9-3d871e495201",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a559364e-e5f5-4439-92a1-e4e4a7295522"
        },
        "item": {
          "id": "5562ac1c-17eb-433b-b8b8-db1582b9bd83",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0542c70a-c633-4449-b52f-2ec7ccc3df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96de9c6-18f2-4db1-9966-63eeccc386af",
        "cursor": {
          "ref": "3412be97-6881-4086-955f-88a33261c664",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "10a3db85-9010-40ad-bd50-1315c1e054a9"
        },
        "item": {
          "id": "f96de9c6-18f2-4db1-9966-63eeccc386af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3bfa8036-6440-4aeb-a326-d6b5cc417761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a686aa-c9cb-4b6b-89aa-062198f0d969",
        "cursor": {
          "ref": "fe240e38-5d8c-4efb-927e-c9cb31943e20",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c08d1447-2aeb-4916-8da7-7389ef687ade"
        },
        "item": {
          "id": "38a686aa-c9cb-4b6b-89aa-062198f0d969",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e0eb089b-5ed1-46c2-bed4-6785f78a6a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee67d3c-e06b-4485-ba18-5b3c5c14c18f",
        "cursor": {
          "ref": "f2b87f6b-2efa-4be2-827a-b5bf0e1f5c57",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1ac21b35-fa0b-4dcc-8b7a-6920377f236f"
        },
        "item": {
          "id": "bee67d3c-e06b-4485-ba18-5b3c5c14c18f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9a0a04df-888e-4134-84d7-dc787c45c0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295345af-ad0d-44f7-8e15-6541bdf52995",
        "cursor": {
          "ref": "3188f4cc-6cae-4965-914d-a6891c9f184d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1675f415-d8e9-4a72-b6fc-771b53a17658"
        },
        "item": {
          "id": "295345af-ad0d-44f7-8e15-6541bdf52995",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "054c82ca-3be5-46a2-826e-a2a0aaf217d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb11015d-cf06-461b-b988-570f01b1fe8c",
        "cursor": {
          "ref": "0b215c30-6b92-4201-8042-705573b266c4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a4238485-66b9-449d-ac39-1ff94f308039"
        },
        "item": {
          "id": "fb11015d-cf06-461b-b988-570f01b1fe8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a19cfb65-c885-42ad-a732-7b3b6c37d31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825b5060-70bb-41a6-92c3-f65730fbfe42",
        "cursor": {
          "ref": "2bc72b86-b4de-4618-aa52-a27dd4bba2cb",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "45de4094-d2e6-450e-a060-ccd01cb434d7"
        },
        "item": {
          "id": "825b5060-70bb-41a6-92c3-f65730fbfe42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3a76d6c7-f46d-4c35-938d-d12032ee0a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548cd659-5ab4-456d-a3e2-9cf9afeab783",
        "cursor": {
          "ref": "a0ad845e-b6ba-4c4b-b2bd-b7001cc370a1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "66521c4f-09a1-40dd-8eb9-142ab237fb42"
        },
        "item": {
          "id": "548cd659-5ab4-456d-a3e2-9cf9afeab783",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98d67cae-e896-483f-bd7f-a5cf8eb634d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07d251-96e1-441a-ba56-c989f0723e73",
        "cursor": {
          "ref": "84230275-1486-41eb-a523-96c32b6ff360",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a36ad0a5-6767-4110-af6b-09574aff8a47"
        },
        "item": {
          "id": "1a07d251-96e1-441a-ba56-c989f0723e73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bcf65445-e042-498f-8cfa-9df793fd0cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335b74e-27c4-452e-b989-0f1c6cdc2751",
        "cursor": {
          "ref": "4d9f04f0-e0f6-4221-9c1c-925f9ed136a7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4c6c8a11-8144-4663-a6ed-d67c88dcdaa0"
        },
        "item": {
          "id": "2335b74e-27c4-452e-b989-0f1c6cdc2751",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e4a3989-9a55-4428-8ba9-ec4635e4223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf5d59e-981d-4bd7-b13c-a5613feebd9b",
        "cursor": {
          "ref": "df63a3cd-b299-4e4c-8419-cf5d3cf07323",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a677d117-40a9-4771-9bc3-f0ecb83862c0"
        },
        "item": {
          "id": "9cf5d59e-981d-4bd7-b13c-a5613feebd9b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "365e3a40-bae7-4464-b116-454c7f2240c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f177031-5d95-485b-832e-e019949158fd",
        "cursor": {
          "ref": "e8e25577-42a3-400a-9ee1-f6631b8f5fc2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7d192d71-36b4-47e4-b2e3-e273d2fdd8a6"
        },
        "item": {
          "id": "6f177031-5d95-485b-832e-e019949158fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "febe799c-7d20-487f-9ccb-ddb5e289cd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c1171d-a9e0-4db1-97c3-fc3f437c355e",
        "cursor": {
          "ref": "3fc9c05f-8ab3-41d1-ab7e-7fac4c6c3613",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bef5cc30-8dbb-4b94-97c1-e11239be8fdf"
        },
        "item": {
          "id": "f5c1171d-a9e0-4db1-97c3-fc3f437c355e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8e6451e6-032b-493f-a47d-df962e85fcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8c76c-8b40-4d73-9445-ca9056576323",
        "cursor": {
          "ref": "d47e100b-1ed6-4f0a-93e5-bc364ac7a7dc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f53da738-fb78-4d1c-a2e6-28476c4a88fd"
        },
        "item": {
          "id": "c8d8c76c-8b40-4d73-9445-ca9056576323",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a4df9c49-f7ea-498e-a350-9e06f419df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc7030b-5a64-4ecb-af20-9943f7aaf5c6",
        "cursor": {
          "ref": "312b8691-42a7-4479-9505-5bbe85959960",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8cffe621-5072-498c-bf41-083ef39466b6"
        },
        "item": {
          "id": "4cc7030b-5a64-4ecb-af20-9943f7aaf5c6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3fdd8953-4d9d-4d35-b4ec-2afcf17fd79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe0b5f8-1c1d-4baa-9f2a-697dd7ac1b2d",
        "cursor": {
          "ref": "848e2fdb-e4b6-41fb-bed4-a86cec515b27",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d38ee15b-e0b0-4432-a25b-8b71ea082b7d"
        },
        "item": {
          "id": "0fe0b5f8-1c1d-4baa-9f2a-697dd7ac1b2d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ffd9225c-9cb0-437b-9c56-6983d272757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd40a283-b124-42ba-8973-0533fc4ccada",
        "cursor": {
          "ref": "f94d9a90-5568-4f61-8429-b297c6c390f4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d0dc43c1-9f98-43eb-8a19-6faaa556ac0d"
        },
        "item": {
          "id": "dd40a283-b124-42ba-8973-0533fc4ccada",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f0075b6e-0a07-442b-83d1-83e471f69d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549727dd-47ce-4a44-83c6-e27e2b2d691e",
        "cursor": {
          "ref": "18dc64ef-ef38-4e37-add7-d5ce8d7d82d1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f1d49e33-ca6d-40f5-a173-34d0f48b4861"
        },
        "item": {
          "id": "549727dd-47ce-4a44-83c6-e27e2b2d691e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "06d58dcd-7882-4edd-9b20-c3fee7da24b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b63a6a-8edd-42c4-aa6c-8d1e8db6f887",
        "cursor": {
          "ref": "6fb2fcd1-1dae-4395-83c7-1c0540532f74",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3ba65021-7385-4448-87b9-830bd724ec7f"
        },
        "item": {
          "id": "41b63a6a-8edd-42c4-aa6c-8d1e8db6f887",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6a20501e-d35e-4b46-bf16-bf46e7d47034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e3227e-b8ba-4bb8-ba96-672b94f303ba",
        "cursor": {
          "ref": "f7ff8d2d-8424-4e08-8d17-d073e081ff0a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56188dc0-f568-4a61-a4f5-4cba0466b078"
        },
        "item": {
          "id": "67e3227e-b8ba-4bb8-ba96-672b94f303ba",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0e3246a9-0e4a-4f01-b939-59c928ea61d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc8a474-302f-4d78-915f-d3c374476a73",
        "cursor": {
          "ref": "98b86519-5733-471e-a85d-89618ead6095",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ce899885-6968-4149-83d0-f6c742a95341"
        },
        "item": {
          "id": "2fc8a474-302f-4d78-915f-d3c374476a73",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea5c25c8-3e7e-4882-b8c3-e08822b1e7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5904de46-c5ba-4cc3-b466-e4fd8342aa55",
        "cursor": {
          "ref": "9d17df51-92c8-4767-9faa-da655e0faed5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "83946129-a214-484d-8048-31636b3980c3"
        },
        "item": {
          "id": "5904de46-c5ba-4cc3-b466-e4fd8342aa55",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3401cd48-c8c1-4c3b-bd86-23de3861f612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be191ca7-f29a-480e-9f34-d04f9982ec50",
        "cursor": {
          "ref": "3e340577-56dc-4069-81be-070fbc0a44c6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d02ee245-318c-4c81-aa24-fe65679cb465"
        },
        "item": {
          "id": "be191ca7-f29a-480e-9f34-d04f9982ec50",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eab1d394-864f-4080-b293-949985ecc7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f779720-f419-4f4e-bfef-ba525bb08bbb",
        "cursor": {
          "ref": "08523178-769a-461e-b029-77d2743ce8f0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "13e42787-f417-45b1-8df5-8951d2769ea6"
        },
        "item": {
          "id": "5f779720-f419-4f4e-bfef-ba525bb08bbb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "932a461d-41b0-4769-907a-41ced91561b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeffc0c-500a-41dd-9363-d60834255ec0",
        "cursor": {
          "ref": "39dc9d30-4279-475a-b00e-85600cd1fab8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "671e883c-b2ce-4664-b839-2e822dcb412a"
        },
        "item": {
          "id": "7eeffc0c-500a-41dd-9363-d60834255ec0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20b00b98-cd96-4383-920b-ae2ad59d6cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2615908f-c73a-4952-8390-12424b32b3a6",
        "cursor": {
          "ref": "c9e87f0a-65d1-4a3d-a89d-2995c21aee29",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c595d94f-8c6f-4331-aaa3-0c32c762c11d"
        },
        "item": {
          "id": "2615908f-c73a-4952-8390-12424b32b3a6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b947c670-8029-41c3-91a3-f08c80a531c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6779d5a-dd1b-47bf-a84e-b80db7cae328",
        "cursor": {
          "ref": "c0c2f6e3-2a48-447b-aea5-2fc4ff55bbc3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "670287ba-272b-48ad-8136-cab7d018dc4a"
        },
        "item": {
          "id": "d6779d5a-dd1b-47bf-a84e-b80db7cae328",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fe907b22-580f-4977-8b12-9247bb0d0552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7cf9b1-264d-4ee6-a36e-a69db230196f",
        "cursor": {
          "ref": "5f517bb6-0e1c-4b91-8192-0910a36d7f16",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7ed2fd5b-1c57-431f-8d04-a32a2f0420f3"
        },
        "item": {
          "id": "5b7cf9b1-264d-4ee6-a36e-a69db230196f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c3df99ae-9502-48ce-b027-7ee97ccc88d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f3e930-fde0-4986-9ef1-d2d9f1416acd",
        "cursor": {
          "ref": "95a18e50-6577-4449-84b2-bc13d2cfc771",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98c933f6-975a-4ff4-8560-3993181893af"
        },
        "item": {
          "id": "16f3e930-fde0-4986-9ef1-d2d9f1416acd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c88e469-02c9-45c3-8edd-e5a8ea76d6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371cb9a7-5142-4017-abb8-afbd50772818",
        "cursor": {
          "ref": "ea389eae-fa19-461d-a358-7a9ccb0633e7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ddfcadca-8806-47ad-9419-575e32dd3499"
        },
        "item": {
          "id": "371cb9a7-5142-4017-abb8-afbd50772818",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c8f6df33-7150-4173-a783-7de3f35a8c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7de9a2-258f-4479-8453-68940666b8ed",
        "cursor": {
          "ref": "4419f225-fc01-4d59-b678-14a609fb77b0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "955dadec-cbe1-4ff7-a97b-1fa758ccecf7"
        },
        "item": {
          "id": "bb7de9a2-258f-4479-8453-68940666b8ed",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7c37d68a-b366-46b5-a52e-8da6c5e492b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76039775-0d22-4f98-8bb8-e8f96333b43b",
        "cursor": {
          "ref": "4e4d0e72-2aea-4ec6-b92a-94ed3e3b5a02",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e29b4c7b-5a3d-476e-b436-0955a5c52539"
        },
        "item": {
          "id": "76039775-0d22-4f98-8bb8-e8f96333b43b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0ae8526d-d237-487f-9dfa-1347c3d33cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30cfafd-b350-4fd5-a82e-91421b84907f",
        "cursor": {
          "ref": "982d8ff7-565a-474d-aed7-803c320c8bd9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "101c2ea3-80e2-4eb6-adb2-79079f5a4e47"
        },
        "item": {
          "id": "e30cfafd-b350-4fd5-a82e-91421b84907f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0486aa36-9268-4f2d-81e8-727f384dad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c99d3-8e31-4ea9-9f67-d00a84e06c44",
        "cursor": {
          "ref": "d9da44f9-38fa-40fe-834f-1b1d0880ebd9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f3a57d0d-8218-4b04-94bb-aaf1fec86626"
        },
        "item": {
          "id": "490c99d3-8e31-4ea9-9f67-d00a84e06c44",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8bbb2e71-75a0-41c8-ae84-bf991c9a7f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d83e8b-9d31-4b67-80c1-c3faabdadc17",
        "cursor": {
          "ref": "3ed9d27e-ad33-4da1-bea4-b9e7229f0a0f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc7dbae9-41d9-4829-a28c-4a0dcb5a4e72"
        },
        "item": {
          "id": "c5d83e8b-9d31-4b67-80c1-c3faabdadc17",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b664f067-f76d-4f7b-9d55-6bfc87377aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1d6b7d-0566-4434-ab94-e1ad1e00385f",
        "cursor": {
          "ref": "8417522a-0f33-4f5e-8cef-48eb920f2b33",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bb60eaea-ccba-492b-94b6-7012045f0389"
        },
        "item": {
          "id": "ba1d6b7d-0566-4434-ab94-e1ad1e00385f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0319a905-a7b2-4aeb-8015-646d1c244291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1fb5df-74e8-464d-b714-40c3a683ca81",
        "cursor": {
          "ref": "2a0db003-7fcc-448f-8485-f7e35713767f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0d8829cc-3050-424d-acd6-75e28cbaea43"
        },
        "item": {
          "id": "8d1fb5df-74e8-464d-b714-40c3a683ca81",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d24e7af-fabd-4f39-a3ae-bbb1e87efb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e05de6-b277-4fdc-8128-4836138ea5ff",
        "cursor": {
          "ref": "83585903-853d-4106-afbb-1e1b29c02d06",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a8d97e95-388f-406f-97de-cb6c1af9d067"
        },
        "item": {
          "id": "43e05de6-b277-4fdc-8128-4836138ea5ff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b5adc5df-9731-4b8d-b1bb-890684dd4c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9ad802-b1ca-4c03-a635-832fdc46330d",
        "cursor": {
          "ref": "50e7c3e1-83aa-4b28-9b29-ef86fa20dfe5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7346f0bc-5cc7-4d0e-bf0a-b02a2e54db1f"
        },
        "item": {
          "id": "ee9ad802-b1ca-4c03-a635-832fdc46330d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6561fb79-0938-4402-bac9-4a973ad747bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1270f117-3f35-4961-86ba-fba93994a0f3",
        "cursor": {
          "ref": "c504783a-cca3-4319-9878-18335aa81c5f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c75a50f4-3aa8-42ed-933f-c7fa9ddeba36"
        },
        "item": {
          "id": "1270f117-3f35-4961-86ba-fba93994a0f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58114777-5d08-4394-a570-34eae9964a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0822ba2-d352-4353-b6fe-c05cfb7ea9d6",
        "cursor": {
          "ref": "4b080b41-5550-400c-838d-b30ffc37c1b0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6561171a-4fd2-4966-a899-f72f5fb3f5b5"
        },
        "item": {
          "id": "d0822ba2-d352-4353-b6fe-c05cfb7ea9d6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bf03c43c-67ed-4440-a449-8b8a2c1aa9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff03c8-da1c-4f0a-8fb8-f1647f91d31e",
        "cursor": {
          "ref": "d8fc9387-1ad7-43e0-9f2c-fe351b8ea302",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "08220e46-7c95-4452-9c44-95ff935bf901"
        },
        "item": {
          "id": "89ff03c8-da1c-4f0a-8fb8-f1647f91d31e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "40c809ac-1033-4577-8e9f-d27c2a782d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ff7e7a31-ac31-4b5e-a53d-12e9583297c1",
        "cursor": {
          "ref": "ce8e0c5c-e41e-412a-80ad-f95387411bd4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2e7410c0-10d9-4ac6-b9bc-fa660d5f8a5c"
        },
        "item": {
          "id": "ff7e7a31-ac31-4b5e-a53d-12e9583297c1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ba0cb225-1337-4589-801e-586a9ad729c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c6988fa4-ac33-4e9e-affa-97d4462dee88",
        "cursor": {
          "ref": "c2dd6994-a776-4b8d-8d3a-13f936505782",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "18ecabc1-0f45-476d-abbb-b91b1aefa6e3"
        },
        "item": {
          "id": "c6988fa4-ac33-4e9e-affa-97d4462dee88",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b7a7a01f-98e3-4944-a4db-09363ca797ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8e98530a-89f1-46fb-9dff-e524e7442ed5",
        "cursor": {
          "ref": "acfa8684-20dc-4f7b-9be7-feb9a9d5b14f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e9cb9ff5-54aa-44e5-ae4a-048790d8af6b"
        },
        "item": {
          "id": "8e98530a-89f1-46fb-9dff-e524e7442ed5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9e3144cc-afbe-4aa1-b14a-e34a9bce3e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "193f9028-0850-46ac-8e87-0eb9c72b2dd5",
        "cursor": {
          "ref": "cb59ba3f-92d8-4f3f-a60b-59ae07fbe7a3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc5be47f-bbeb-405f-9285-ed91de917e67"
        },
        "item": {
          "id": "193f9028-0850-46ac-8e87-0eb9c72b2dd5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9d6f2a45-4688-496a-9d82-e60e31b41b15",
          "status": "Created",
          "code": 201,
          "responseTime": 7815,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "77895063-fb38-4ae7-8749-57521ee97511",
        "cursor": {
          "ref": "aed4f0bc-cd9b-41a6-9ec6-505042f35b2e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a9ff67ed-4572-4007-beb2-a3dd68fb456f"
        },
        "item": {
          "id": "77895063-fb38-4ae7-8749-57521ee97511",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "62740786-d390-465a-b29f-4892cfabdafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "12fd987d-6294-4cb7-af3f-c35bc4d5da29",
        "cursor": {
          "ref": "87e3e924-ff99-410b-a33c-fe1e631939d8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f8bacf54-8848-4d3c-8c5d-77ba4c70c2cd"
        },
        "item": {
          "id": "12fd987d-6294-4cb7-af3f-c35bc4d5da29",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e4251e84-b879-4fa0-91ea-9b4acd263c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "aa709d80-b3cf-4e97-b021-f1d2f1089d47",
        "cursor": {
          "ref": "0b1011f8-6ad7-4fc5-9e12-4a4616857383",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "30f8a3b8-eff4-494f-9e4f-2ffe9e631189"
        },
        "item": {
          "id": "aa709d80-b3cf-4e97-b021-f1d2f1089d47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb58ff13-f586-4b74-b03c-383a71833341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4ec485-cbfa-4bd2-ac58-80602ad95212",
        "cursor": {
          "ref": "0147ab6c-db4a-4922-b1b6-00430112398b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86edf9f8-d11a-4458-81fd-6d970ff882e4"
        },
        "item": {
          "id": "fa4ec485-cbfa-4bd2-ac58-80602ad95212",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1afbf10a-7348-4c38-af2c-faa9c9278f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d02c6da-c8f7-4501-802a-152565d26995",
        "cursor": {
          "ref": "90238d0e-e1b6-48fb-811d-ff244b66c0cf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48e1695a-4635-4b73-8331-2ad97e31f790"
        },
        "item": {
          "id": "9d02c6da-c8f7-4501-802a-152565d26995",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "815274a7-3ce3-44fd-a9d3-629d896e6a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46e88c6-de07-4820-a301-8524d359ed70",
        "cursor": {
          "ref": "da39f75b-09e9-496e-82c6-a158b05725f0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "253958f9-aacc-4e50-a4cc-2f7c545b46a3"
        },
        "item": {
          "id": "b46e88c6-de07-4820-a301-8524d359ed70",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e51ab5b-8271-4a19-ba08-fa880ba05454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fafc79-1efe-45b3-a22f-303805de7089",
        "cursor": {
          "ref": "ba42aa6e-5145-44b2-93f5-c7a695ad1d5d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "70c7c4c0-8b2a-4998-9d0e-203869824e17"
        },
        "item": {
          "id": "e8fafc79-1efe-45b3-a22f-303805de7089",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d1d07c33-0eae-47b8-bba7-c80fd31d70c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141f650e-d8ef-4bdb-b396-b54f6dfe128e",
        "cursor": {
          "ref": "734db9d4-71a3-404a-991f-616a6d5acdc2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e56e721-5ecf-4482-9a3f-cb6b5360afce"
        },
        "item": {
          "id": "141f650e-d8ef-4bdb-b396-b54f6dfe128e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1ae1e03-a2b3-42ef-9a1a-589e2f6208f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747130c5-99d3-4cd0-827a-5881c7553b38",
        "cursor": {
          "ref": "f5fd3ac8-007e-4c22-af5a-2a8e113fae58",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9916d2bc-4f63-47d2-a2a2-5f4921f1570e"
        },
        "item": {
          "id": "747130c5-99d3-4cd0-827a-5881c7553b38",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f04d6ef9-8122-499f-8fe5-438a9932fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a86740-aa64-4fb6-9389-407b9b534375",
        "cursor": {
          "ref": "681a8420-69b3-4f0d-a5a0-1351ca2f2aa8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2eca8370-f0f6-4e67-bee7-4068d8e0e68d"
        },
        "item": {
          "id": "22a86740-aa64-4fb6-9389-407b9b534375",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "353f4823-e835-4f9a-9607-b24a0771b103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e832248-6a8b-4ef0-a334-da1c1003d446",
        "cursor": {
          "ref": "24a72db8-d133-4923-9fc8-571c57ff6e84",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e0ac129d-22a4-4695-8200-bc8694e9f27f"
        },
        "item": {
          "id": "5e832248-6a8b-4ef0-a334-da1c1003d446",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "827a410c-55bc-4c51-8ab4-4284f124db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e4aeb-688e-4390-879d-9dff89c2db01",
        "cursor": {
          "ref": "48184c13-c1ec-48b6-a9eb-5573f480ac4e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3c88f1f3-d0ec-4fa1-84f4-b7eed07175ee"
        },
        "item": {
          "id": "fc9e4aeb-688e-4390-879d-9dff89c2db01",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99209677-7abc-4ee3-bb7a-98a4787ec321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd14b9d-a2bf-4b67-83b9-4a10514b9177",
        "cursor": {
          "ref": "7e985701-a94f-4edb-9081-3cb6080ca23f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f763e2db-c38b-4312-93b4-e5da05e8b36a"
        },
        "item": {
          "id": "1fd14b9d-a2bf-4b67-83b9-4a10514b9177",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87bab36e-7446-43fe-b618-e9cc51713589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013e177-7ad6-4270-87bd-4c0be984f4dd",
        "cursor": {
          "ref": "b62e9ab5-7798-415c-b6fb-564db5cc175e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f0ea071d-1d09-4689-8304-41537dc445c4"
        },
        "item": {
          "id": "e013e177-7ad6-4270-87bd-4c0be984f4dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5fb69a4f-57a6-46ff-9611-aefdc91a4bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5931da85-bc1a-49b0-8146-999b210d5e00",
        "cursor": {
          "ref": "3fa8c876-eeb6-4eb4-af68-0da92d3bc8e9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "96e5b59d-a4f9-4f83-aebd-6e14e5b280e6"
        },
        "item": {
          "id": "5931da85-bc1a-49b0-8146-999b210d5e00",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e22e98b2-5ab7-40c8-9eea-a0483f3315f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad1a38b-920d-42d3-b09e-0d4d0997c38e",
        "cursor": {
          "ref": "e04d6cf8-48a6-4bef-9876-8acb5cf43b67",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f4266997-67b8-4c0e-bf7a-d01378733dbf"
        },
        "item": {
          "id": "cad1a38b-920d-42d3-b09e-0d4d0997c38e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "98d6db24-0142-45a7-8771-778ff98ec195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0fe3b3-7d2c-43b0-b060-59647424a782",
        "cursor": {
          "ref": "1e4f02bb-dbf3-46b6-b9df-5abf74ffd0ba",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dab37de2-ebd9-478f-bcef-62b36600fa6e"
        },
        "item": {
          "id": "6b0fe3b3-7d2c-43b0-b060-59647424a782",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "13da73c9-e0e2-4fe2-9154-aa8fc241588c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83852ffa-b710-4589-beb2-7b06c0f27499",
        "cursor": {
          "ref": "a07f9902-7444-4ad9-a639-feba3f765c6e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "977a3d12-505d-4b8b-b8da-941d316911b7"
        },
        "item": {
          "id": "83852ffa-b710-4589-beb2-7b06c0f27499",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0036ea8-e54a-49bf-bcdf-e132acdf341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16a36f-51b8-4e8b-a786-cbe3d80e2e30",
        "cursor": {
          "ref": "1e672fd3-5d90-46a7-9572-c09d1b4a8c27",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "68bc25aa-18f7-4e54-b7f6-deeb75ec8e7d"
        },
        "item": {
          "id": "cf16a36f-51b8-4e8b-a786-cbe3d80e2e30",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5608c496-8459-4a32-beaf-3e3d067d03a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "053d32f4-3e4e-412f-8e5a-c421ddf156b9",
        "cursor": {
          "ref": "a69b4652-c9bd-48cd-aff6-734ca32274a1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f4077d5-bbe5-42f3-bc91-1a500d901c10"
        },
        "item": {
          "id": "053d32f4-3e4e-412f-8e5a-c421ddf156b9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "19ad6abb-b443-4799-89ae-e0dbc1651cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde883e3-c3b6-46e1-b794-bd08dc7f89b1",
        "cursor": {
          "ref": "c91463fc-d05f-43e2-809c-f61522617224",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1a0ff74a-1716-4f81-abbc-0fdcbce7f229"
        },
        "item": {
          "id": "fde883e3-c3b6-46e1-b794-bd08dc7f89b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2da808ca-d7cf-4b72-8701-c295d4cd97a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a35000-acad-421e-a9f2-d029485c66f6",
        "cursor": {
          "ref": "c4f0dbfa-9978-4db4-87af-e089869d48b0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "47ef0351-2f53-4eee-ba24-d6eef74a17b3"
        },
        "item": {
          "id": "b8a35000-acad-421e-a9f2-d029485c66f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "65c522a7-3e5a-448e-b6ea-532483d93552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eba43b-1732-42b4-9f8d-839ab828065d",
        "cursor": {
          "ref": "fad874da-0ee5-48c2-895f-cadb4df666cb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "206932fd-d8b5-42d8-8681-be7e16d07438"
        },
        "item": {
          "id": "a8eba43b-1732-42b4-9f8d-839ab828065d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20626d90-974d-4097-af6c-efdb2abe6b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f6403-457c-4c75-bde3-80b682a07394",
        "cursor": {
          "ref": "c0607b07-6c63-4478-b1ce-c6aa1a78302f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b61bd123-9064-4c63-8a80-69e0dcd233f1"
        },
        "item": {
          "id": "eb5f6403-457c-4c75-bde3-80b682a07394",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9dd61897-0d5b-4c08-86f3-1a97c9f75c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de20035-5580-40b2-93b9-18fbf6ee2308",
        "cursor": {
          "ref": "a9f8d86f-a99b-4592-a5ed-3268f99cfec9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fbed061e-5dc2-4159-9bca-a731a979f08c"
        },
        "item": {
          "id": "3de20035-5580-40b2-93b9-18fbf6ee2308",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0e2030ab-aa8f-46b2-826a-9ad053a16e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c8ca70-30fa-4954-86d4-c6fab930a1a5",
        "cursor": {
          "ref": "a05c406b-7a74-4b01-8237-af88ad412197",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b00298c3-3b92-4232-8468-2e494494e1b9"
        },
        "item": {
          "id": "e0c8ca70-30fa-4954-86d4-c6fab930a1a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a5de9f6e-5ff2-4f9c-9bfc-f28a8d5b8249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b39b3ca-75c9-49f5-b47b-486e8703833e",
        "cursor": {
          "ref": "7bf23d49-abef-4926-9951-c4f8de66be83",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "819af4aa-b8df-40bd-8425-3bc5b139e6e5"
        },
        "item": {
          "id": "7b39b3ca-75c9-49f5-b47b-486e8703833e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4bf5b9c7-ebd0-4f6d-b473-6010de9e7bd4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0c0de983-024a-4be6-99d1-fa085d2c0cc1",
        "cursor": {
          "ref": "709bb746-3fc0-4348-b08f-fd633f97eb35",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1bb8ca38-65d8-4e09-a23f-c2e94485685c"
        },
        "item": {
          "id": "0c0de983-024a-4be6-99d1-fa085d2c0cc1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ea01122a-922f-40eb-b9f3-f717b9f06926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9c73d3-04ec-408c-b9c4-3866bb4c6eb7",
        "cursor": {
          "ref": "0f605a57-c19e-4518-a14e-75c58a430f2f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "66991978-2eb0-4042-9762-ce29b84dc316"
        },
        "item": {
          "id": "8c9c73d3-04ec-408c-b9c4-3866bb4c6eb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25887306-90e2-40ab-b4f9-07fbd0039323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18298ec6-3938-4155-84c2-1cda1969d463",
        "cursor": {
          "ref": "d19b35c1-fc2a-4f32-bec5-6c2b57f2876c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aa3f5057-b078-4768-80bb-1dea7c2eabb3"
        },
        "item": {
          "id": "18298ec6-3938-4155-84c2-1cda1969d463",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7caf4f96-ad29-41fc-b121-0e11e0a2f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e243fab-2488-4cf4-b25f-7aa2032161a3",
        "cursor": {
          "ref": "0a09dd6b-9fca-48b4-a0ae-0294a4d90d3c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "33217c50-2468-4838-8cdc-96524185ceca"
        },
        "item": {
          "id": "5e243fab-2488-4cf4-b25f-7aa2032161a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "55436aad-1f4e-4ebb-a3d2-c48ae76e18a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf4102b-69e5-4466-a155-7788522ca68b",
        "cursor": {
          "ref": "fa047b36-2f4e-4a14-bfe5-49af750f2160",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0b739a3-dd4b-44df-887e-a9523919e458"
        },
        "item": {
          "id": "5bf4102b-69e5-4466-a155-7788522ca68b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e601719-a9fd-4896-9c0d-b35e2eb309d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0808f249-c303-4f84-8942-aa7675268c33",
        "cursor": {
          "ref": "7fcb7a5f-66cf-491f-a6fe-616ac77d34d8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3c0f0c9e-ef51-4fe0-823c-0889cdf27a92"
        },
        "item": {
          "id": "0808f249-c303-4f84-8942-aa7675268c33",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "acf8b0c2-4777-4725-b822-f69004fdb713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534db1b8-a77e-431b-a4e7-3dc72097642a",
        "cursor": {
          "ref": "44d06173-45c3-4a99-adc8-5c9205f97f58",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "400f37ff-6894-4916-92f0-f2b7e3dfc4ac"
        },
        "item": {
          "id": "534db1b8-a77e-431b-a4e7-3dc72097642a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5af27ce0-0a29-423f-b0b0-365781f7ca8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "24d2d988-4261-4dc0-a0f0-74e883da6886",
        "cursor": {
          "ref": "5b979f45-8d4d-4d00-afc4-9892a2a84d8c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f09fad1-3d39-4319-89f2-235d9fb2ae9d"
        },
        "item": {
          "id": "24d2d988-4261-4dc0-a0f0-74e883da6886",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "38f71f7e-8b75-4a2f-9a0d-a1f94b16cd57",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "7bdb6dfa-27ef-474f-aeb0-eab3da2fb671",
        "cursor": {
          "ref": "0b75fdd5-2667-486f-b2a4-925a3d3be3d0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "47633332-7bda-4028-a4a2-c5f7ec94c999"
        },
        "item": {
          "id": "7bdb6dfa-27ef-474f-aeb0-eab3da2fb671",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "89de70eb-88d8-4eb3-aa13-a4046bedb3aa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b5e92849-01e4-4799-866b-1ce9f6702aeb",
        "cursor": {
          "ref": "4cdab08a-e032-43c4-b75c-f1edd3ac4b91",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b0da9619-8a3b-4170-a150-14dc2e639d88"
        },
        "item": {
          "id": "b5e92849-01e4-4799-866b-1ce9f6702aeb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7b34889b-bdca-4986-9c04-cf00297c71cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b696e6f0-2f8c-4a75-87d2-ebbf5384a80f",
        "cursor": {
          "ref": "d424fcd4-0324-422b-adf5-c60dced4a468",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0872e20a-a99a-4bdf-9708-9676ff3fef11"
        },
        "item": {
          "id": "b696e6f0-2f8c-4a75-87d2-ebbf5384a80f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "47449c83-ad78-4bd8-993c-7a7c553b59fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "08923e54-32a1-420d-a111-6eb693c31b24",
        "cursor": {
          "ref": "5a552276-1d57-485c-bb65-faf729d5e98c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a241c5c7-24d2-4736-b691-ad5a08b77843"
        },
        "item": {
          "id": "08923e54-32a1-420d-a111-6eb693c31b24",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7cb9fcfa-3b01-4fef-be0e-ca70cbabc214",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "bba84e88-6b44-4379-b898-16119737e096",
        "cursor": {
          "ref": "551de93d-d8b9-4678-8314-c1a9d0f092f6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "abee5ea8-f25d-49ad-b225-026dbc256bef"
        },
        "item": {
          "id": "bba84e88-6b44-4379-b898-16119737e096",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b81b3efa-3e49-4c08-b657-89bc284057e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68acc1-b359-4c3f-ad58-1218a34e8d07",
        "cursor": {
          "ref": "79f53dfd-1645-440c-8baa-0c88954a60d7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2ca12e69-a761-4ea4-9b5f-04e783146420"
        },
        "item": {
          "id": "be68acc1-b359-4c3f-ad58-1218a34e8d07",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "21cb2aa8-8653-4870-a0c2-dc833d9d525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0620d3-ba19-4a31-8682-330c746486e7",
        "cursor": {
          "ref": "2dc694f2-62ca-4deb-b309-1491d7bee86b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a84d5afa-ea53-4037-b26f-f82351b0a140"
        },
        "item": {
          "id": "8f0620d3-ba19-4a31-8682-330c746486e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd70c98f-413f-4761-bd9e-09fde96f47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2edc9c-cfbe-49d7-91f8-e5e39a47bb6e",
        "cursor": {
          "ref": "d8e6d1b2-41e5-4cd7-83b9-7519bcea93b1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ad92f773-1328-41d0-96eb-57323e1399dc"
        },
        "item": {
          "id": "8c2edc9c-cfbe-49d7-91f8-e5e39a47bb6e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "98860e90-b5a4-4fa0-8702-3915ecc7128b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d622a3-fba3-486d-b59c-422c9d477555",
        "cursor": {
          "ref": "ca18c7b9-6e2b-4543-be44-495a04889ca3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8659afb9-0085-446e-9f42-2004af410932"
        },
        "item": {
          "id": "85d622a3-fba3-486d-b59c-422c9d477555",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f8645151-123c-4ca8-87f7-16c9e0645a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef9bc7a-f1e9-460d-90ee-7544c702e20a",
        "cursor": {
          "ref": "086a70f6-6211-4e30-8c83-c05d103db431",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b219144e-c11d-4c1a-8b60-1dc9d014b084"
        },
        "item": {
          "id": "bef9bc7a-f1e9-460d-90ee-7544c702e20a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "749708b7-ca49-4845-9e28-c23aca50b96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa7e2d-aa94-43af-973e-bf6965943370",
        "cursor": {
          "ref": "e03f2c4c-e064-432c-bcb3-e4f65d3ffd93",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3e49d9fb-7ad5-4eea-a530-41b41b82a8a6"
        },
        "item": {
          "id": "ecfa7e2d-aa94-43af-973e-bf6965943370",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ff84fe6b-a4f4-4005-bd4d-d4738efbe922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aaae7e-2f2d-432e-93f8-5e42a215a5bf",
        "cursor": {
          "ref": "f5c295f1-0bbb-4673-b5ac-bba051f173b7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "34ffdeae-e7f3-4e95-b976-293d809008b8"
        },
        "item": {
          "id": "18aaae7e-2f2d-432e-93f8-5e42a215a5bf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "93f5710b-c867-45ca-ab77-778d89045586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926d33c2-cc7a-453c-adc0-670904c2b179",
        "cursor": {
          "ref": "266259d6-c88f-4c48-8150-de815f845c26",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39903636-d08e-41e1-96cb-7f9b70770e2c"
        },
        "item": {
          "id": "926d33c2-cc7a-453c-adc0-670904c2b179",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75a358d1-932e-45cc-8d82-cd97403b46d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6b7ac4-1529-4062-92b4-c370f2a4abcb",
        "cursor": {
          "ref": "67a2d68a-5078-469f-8993-c8c0be296e4d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "661d5fd2-27d2-46fa-97e3-06c8e0c7492c"
        },
        "item": {
          "id": "2a6b7ac4-1529-4062-92b4-c370f2a4abcb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2b7e84e6-e4d8-4239-9241-5a0ed4fcf7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec30950-bd7a-426e-a9c9-03d859c71f52",
        "cursor": {
          "ref": "85665727-5892-4b62-8aad-eca21ec974f5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c225b484-fc19-4633-a8e5-4f8e391b1932"
        },
        "item": {
          "id": "8ec30950-bd7a-426e-a9c9-03d859c71f52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3379b61e-9952-4822-91cd-7cd122dfba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21490228-6670-4f6b-9c6a-b5b3847dad6a",
        "cursor": {
          "ref": "c90d2054-740d-4ba8-a02f-ef5122143d29",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6a304a56-7231-49ff-8e50-4cc6fa098ac4"
        },
        "item": {
          "id": "21490228-6670-4f6b-9c6a-b5b3847dad6a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "56b60bca-3946-4d47-9259-5adbaf48802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437111eb-94ae-424f-bca7-5bbdc286508c",
        "cursor": {
          "ref": "74253d7b-52a4-4140-8dd6-b31f44c1f68c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "84e8f85d-77e9-44e9-8a55-28e5410c0773"
        },
        "item": {
          "id": "437111eb-94ae-424f-bca7-5bbdc286508c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1dc16a56-de9d-44cb-aa9f-f7160c781496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf9a99b-a9bc-46fd-94ab-ad6c0917c4bc",
        "cursor": {
          "ref": "c288e15e-94c1-4f27-acfb-f7ebf83b46b8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04a99f3d-058b-4946-a8cd-e3bc052bce45"
        },
        "item": {
          "id": "cdf9a99b-a9bc-46fd-94ab-ad6c0917c4bc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0c31c3f4-261f-419f-be5b-dae6252a9d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af96ad5-3fc0-4d7d-8d58-764320bfb213",
        "cursor": {
          "ref": "b7ffc49a-b898-4a8e-800a-7397b7925767",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "02be90ab-5e28-4056-9cea-43795d595d59"
        },
        "item": {
          "id": "3af96ad5-3fc0-4d7d-8d58-764320bfb213",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b0b5dc47-4909-43ab-8a4a-6826a3cce961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b779750-ba07-4ef1-b95d-a1ea19741f4d",
        "cursor": {
          "ref": "ce4e0eda-c617-4d32-9f1f-27118d938951",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb74be91-e554-4cec-a4e5-839d37050932"
        },
        "item": {
          "id": "6b779750-ba07-4ef1-b95d-a1ea19741f4d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b4626fcf-71fd-4c3c-bd2f-a104b2fb5699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645da1b8-527c-48fd-93f1-25bb0076bced",
        "cursor": {
          "ref": "503cb9fc-3f4e-455c-99ba-dfa991977925",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a70d6057-d6d2-4426-9538-036cd6791bee"
        },
        "item": {
          "id": "645da1b8-527c-48fd-93f1-25bb0076bced",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a6968a7f-779b-49a9-a794-4477d0575391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bab68e5-e40d-48d1-ad6a-07684c8b4045",
        "cursor": {
          "ref": "6b2adff1-68d0-405a-89be-9d66829bbc16",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c77104d8-f294-40e2-a7da-5d14a955fd19"
        },
        "item": {
          "id": "5bab68e5-e40d-48d1-ad6a-07684c8b4045",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "23df62c8-13f8-4948-bbf3-5f28167c9fb0",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "16b2b5c0-7c92-4650-93cb-0cdb2aa05af8",
        "cursor": {
          "ref": "20cdc679-86b7-42e5-8eda-8ee140f642d3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f0be4c64-f630-4e69-8e13-7fdcacbdfc7b"
        },
        "item": {
          "id": "16b2b5c0-7c92-4650-93cb-0cdb2aa05af8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "24d5fef6-ebe7-4802-babf-928498e6c057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e704da-9b39-4468-9650-78dc5abf0d1f",
        "cursor": {
          "ref": "3f0bcfc5-a412-40d1-8a2c-6095817c335f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d09ae9c9-4a53-48b6-8c9e-13f86e4e9aa3"
        },
        "item": {
          "id": "59e704da-9b39-4468-9650-78dc5abf0d1f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "75a4cd65-bb6a-468c-ba24-4ee246373314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c90aa8c-b02e-47f9-9947-f6efdc46bf65",
        "cursor": {
          "ref": "101a970b-eacc-4525-8f3b-d49186283a44",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6e8722e6-9e74-4b35-bbee-73b13d4ea08b"
        },
        "item": {
          "id": "5c90aa8c-b02e-47f9-9947-f6efdc46bf65",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1910b280-1412-4cbe-8c3a-4ce4124da07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90700d-6d4d-4916-a563-5d47cce7b3c2",
        "cursor": {
          "ref": "c5d1a1a5-a087-4378-8dfa-a76ec204dbd7",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "45e3b582-2d60-4f78-952e-315beb43a2b3"
        },
        "item": {
          "id": "3f90700d-6d4d-4916-a563-5d47cce7b3c2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37735142-2f9a-4e34-b2ea-9fd825ba8c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a7c7b1-a479-431b-8bf8-f2acb7e05a46",
        "cursor": {
          "ref": "6f14da9c-a497-4c8e-ae6c-bb834c9a34b7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a52bf323-9be6-4305-b64b-b49eb4be84cd"
        },
        "item": {
          "id": "47a7c7b1-a479-431b-8bf8-f2acb7e05a46",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f693a4d-3bb7-48a0-a402-dd6d29489317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c912dc4d-95e4-439d-be11-9ff2ec977d76",
        "cursor": {
          "ref": "6248231d-fca5-41d8-9bae-3f16767d9bb5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d5c22ac-ea5c-4a40-9be1-4ba4f60534b2"
        },
        "item": {
          "id": "c912dc4d-95e4-439d-be11-9ff2ec977d76",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28d0a22c-cb3d-4394-905a-fc3a311f3eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f56486-3729-4e20-aa60-6641f8b8ecf7",
        "cursor": {
          "ref": "3c10cf61-dde9-48bf-a451-5c569695295d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8a46379d-a2d9-48a8-abdc-699f2bea3d72"
        },
        "item": {
          "id": "82f56486-3729-4e20-aa60-6641f8b8ecf7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "396fc498-142c-4fb1-8808-f9904a994ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a416f3e9-dff9-41f1-8d6a-3f96183f1372",
        "cursor": {
          "ref": "1a9a0ab0-f2d7-4600-81e4-e34c58889310",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "668f6af9-fa24-42fe-b534-71fb9fe39158"
        },
        "item": {
          "id": "a416f3e9-dff9-41f1-8d6a-3f96183f1372",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "662f46c8-19c2-420e-a8ef-4d5266ec2507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71aaa47-3a39-46ef-8a53-f318d2529be2",
        "cursor": {
          "ref": "80f05ad7-02e4-47b3-bfbb-516955a44d17",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "065b3973-6047-4e6a-b534-eb6b22381c20"
        },
        "item": {
          "id": "b71aaa47-3a39-46ef-8a53-f318d2529be2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f4b53e8f-8ab2-4e70-91ff-45bb5668e68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16ad507-67aa-4a63-9d7b-09dd9b88471a",
        "cursor": {
          "ref": "85b69811-0a1b-4bdb-9115-7d9e5704e4a3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6ba1e5cc-bde6-4c83-9017-c2df32827dd5"
        },
        "item": {
          "id": "b16ad507-67aa-4a63-9d7b-09dd9b88471a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d1c82696-726f-4133-aeb0-8784fd04d4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487d5d9-3bac-492d-8414-59861288d73f",
        "cursor": {
          "ref": "d69c433b-57ce-418c-9655-82debfe61927",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "83ac45c3-cb9e-432f-9d00-e03366ca565f"
        },
        "item": {
          "id": "7487d5d9-3bac-492d-8414-59861288d73f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "90764f49-6f6a-4074-b79b-5e8399d1d72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e3264-35ba-401c-8f16-092d22f508f0",
        "cursor": {
          "ref": "a7189f8b-7a16-4620-9608-12208029e8b9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85ce0f4f-1b75-41ab-901f-6a4ea56b217b"
        },
        "item": {
          "id": "704e3264-35ba-401c-8f16-092d22f508f0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ba39829-2b33-430c-a058-d19b505421d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e67d9f6-86af-4e0a-bb9d-264245185de6",
        "cursor": {
          "ref": "9f94d639-17aa-4f2d-a26d-23a177aaf2fd",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "68a6542d-3786-42a3-a264-9a436f98ab56"
        },
        "item": {
          "id": "6e67d9f6-86af-4e0a-bb9d-264245185de6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8b683d40-4136-4800-a7af-db97f59b7543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047c3a33-5d80-474a-a38d-1c87b6c68467",
        "cursor": {
          "ref": "cb730812-349c-4ecc-a17a-cde0381ccebf",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "aaedfdf6-6c7b-4dce-a307-949ae5e2e533"
        },
        "item": {
          "id": "047c3a33-5d80-474a-a38d-1c87b6c68467",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4a6cfbf-11b2-4703-9cad-231c1effda6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e2322-980e-488d-8dcc-98a69d8ec1e5",
        "cursor": {
          "ref": "0bbf3131-56a5-4252-b74e-59022fc6e3a0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7f35fbbb-c0c5-49f7-baec-e6b8125e1545"
        },
        "item": {
          "id": "9d8e2322-980e-488d-8dcc-98a69d8ec1e5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6902cfa2-ac08-4a2a-951a-79ad90f72db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb25078c-2fd6-4c6f-8005-f61aaa5881d6",
        "cursor": {
          "ref": "592b19d8-3577-44b6-a6fb-11663813117a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f013f9c3-c3db-4bda-9e4c-3d085d346976"
        },
        "item": {
          "id": "cb25078c-2fd6-4c6f-8005-f61aaa5881d6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "01519fbf-8a79-4834-8c33-756c8abdee80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45b7568-d726-423a-850a-d55739f74cb8",
        "cursor": {
          "ref": "b980f882-5252-4a13-bb68-c0484b53d181",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "568606f3-38ca-449c-bc47-98c7caeaceaf"
        },
        "item": {
          "id": "f45b7568-d726-423a-850a-d55739f74cb8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "72dc68a4-4322-4232-ad67-d2bdd780a372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d46dfb-8c72-4cc7-9cac-f9c53e2190ea",
        "cursor": {
          "ref": "64f3f077-60f5-489d-8693-769427992d9c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "62f0ff2c-7e83-4983-b846-7df67bf1ed96"
        },
        "item": {
          "id": "01d46dfb-8c72-4cc7-9cac-f9c53e2190ea",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3669f191-7086-4248-9d17-1f30c4862f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b8f62-22a5-41b9-83d7-98e7470f3df8",
        "cursor": {
          "ref": "576053a4-fe5e-4168-8bb8-552ae2575731",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "567812a7-5b33-4f13-8efe-d3ee1363dba3"
        },
        "item": {
          "id": "085b8f62-22a5-41b9-83d7-98e7470f3df8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "42a2b195-5ca2-4faf-9867-d0d4da172ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408f3277-42cf-409e-bccb-016bd85ef581",
        "cursor": {
          "ref": "2a6897ed-9ce9-4797-9fc8-b45be818ffd2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dddfa29e-0de5-4f5b-ac0b-197ef15d558d"
        },
        "item": {
          "id": "408f3277-42cf-409e-bccb-016bd85ef581",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "715c750c-4a5e-450a-a597-3cb14e91b2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961b6557-979e-424f-b871-0a63f20ed2f0",
        "cursor": {
          "ref": "cc5665a1-8263-49d3-99ac-209b3fe9c7f6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "771dc386-b711-41c9-ac12-e2ad995692fb"
        },
        "item": {
          "id": "961b6557-979e-424f-b871-0a63f20ed2f0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb51a1c9-3126-47c4-b352-c7a82e6ff646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08118fc-a31a-44db-8242-53f56f66f554",
        "cursor": {
          "ref": "ae5c374b-cec1-4ae5-bf20-1a5957c74951",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d56a427-0552-43e5-acbb-4c872a88de42"
        },
        "item": {
          "id": "f08118fc-a31a-44db-8242-53f56f66f554",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c6351736-f6ee-4ad5-b0bd-57b78742a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf831f5-8267-470a-ae53-b16831111363",
        "cursor": {
          "ref": "82cd0443-242e-408f-99dd-069e809ea30d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2295036f-2a1f-4082-8194-d8472e424929"
        },
        "item": {
          "id": "faf831f5-8267-470a-ae53-b16831111363",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a8f41e0-8483-47a1-9031-a089046170d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61cee2-392e-4b59-818b-907603e3a994",
        "cursor": {
          "ref": "e9f11a90-da56-4b2d-bfff-927af916c682",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7de711f0-93cf-4fc6-948a-95aaf5fbd67c"
        },
        "item": {
          "id": "1c61cee2-392e-4b59-818b-907603e3a994",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7d88c01e-7444-4215-903b-0a29309b5e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe9b0b-4207-439e-a96c-2bb302665d0d",
        "cursor": {
          "ref": "db6c6fbf-f0ae-47ac-98d0-423191842716",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b1826375-ca45-4cb9-8e54-ddd4d2342d23"
        },
        "item": {
          "id": "1ffe9b0b-4207-439e-a96c-2bb302665d0d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e30e387-5fc1-497e-b211-a863a62eacb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f270e24a-fd6a-45d6-955a-158880489479",
        "cursor": {
          "ref": "106d0984-7cf7-4371-9134-1810d3764a6f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3b3bd21c-cfbc-442f-abb1-0728f698132e"
        },
        "item": {
          "id": "f270e24a-fd6a-45d6-955a-158880489479",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f482fbe5-3dc9-452b-8d7d-c38e2e2ba5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f374285d-0100-4e22-8619-d48ab91cea72",
        "cursor": {
          "ref": "ea41ab1e-0f14-490f-8bce-ce80a4491cc6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3cc7a34c-caac-4f93-95af-7545be3274a4"
        },
        "item": {
          "id": "f374285d-0100-4e22-8619-d48ab91cea72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bda6e2cb-cdff-4701-93a9-67927d04d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa14d57-6206-406e-a37c-97c68fafc9ab",
        "cursor": {
          "ref": "d2f55bbf-49a5-4a9b-97a2-53462a1d8a5d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c840e7e1-4d4a-41d0-82a9-c5ad6b807504"
        },
        "item": {
          "id": "9fa14d57-6206-406e-a37c-97c68fafc9ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5d661471-523a-453c-9468-129412e59fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a6265-c150-4eca-a579-31ce988238cc",
        "cursor": {
          "ref": "bffcb3e9-5251-4607-8077-749181665d0f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9aec1baf-3e61-4c88-958d-d4dcf2bdb238"
        },
        "item": {
          "id": "765a6265-c150-4eca-a579-31ce988238cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dfdedcaa-fe9f-426f-a352-e17b5f7fb40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fb3ee7-9b75-471c-88fa-a048be289724",
        "cursor": {
          "ref": "3392b1e5-b6fc-4ecd-a481-f5b9058ed5ee",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cd590aee-84ec-4fb4-99d8-e55f1e95335a"
        },
        "item": {
          "id": "40fb3ee7-9b75-471c-88fa-a048be289724",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7156d59e-49bd-4b06-8fa6-f672b5f04faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ef9eb5-29b0-4676-b057-77f41a0b073a",
        "cursor": {
          "ref": "d16c2a84-f84f-4d7d-b471-016ed00dc95e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9189f8a1-d3da-4c65-ac0d-a1f83177962c"
        },
        "item": {
          "id": "15ef9eb5-29b0-4676-b057-77f41a0b073a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9612c4a9-6625-4a3f-930f-ed025957f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f457ab-38e4-4dc1-ba36-a6cab4cd5669",
        "cursor": {
          "ref": "283efb53-af5b-4e85-a837-cd6edf7b0510",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "20ff0de2-ef84-4cfd-ae96-17f62bcf4cc8"
        },
        "item": {
          "id": "46f457ab-38e4-4dc1-ba36-a6cab4cd5669",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "881a44b9-4c4b-48f0-a67e-8d36f451119d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d558d253-3e7e-42e1-907c-eb9132e54e90",
        "cursor": {
          "ref": "649442bf-7419-4602-bbe4-759b1f6922ee",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5c109cb6-d8e7-4791-8e3c-932aa5d9b659"
        },
        "item": {
          "id": "d558d253-3e7e-42e1-907c-eb9132e54e90",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a441c063-7704-4077-bcd2-16fe14c9e9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b46b54d-de22-4b36-ae1c-0e4192275a27",
        "cursor": {
          "ref": "6f2db7e0-31ec-4ae0-8f2a-78109b9cfe7a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8028a012-2996-4461-9a6d-2f0d1de53d12"
        },
        "item": {
          "id": "3b46b54d-de22-4b36-ae1c-0e4192275a27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "11456482-ea33-4a77-9fd0-cff78f31e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9655ff-5141-4912-a671-bcc2f620ebca",
        "cursor": {
          "ref": "c3caee75-e6d1-4cc8-840d-2d450ec98932",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce9c6127-4ab1-46ce-9ce6-322c38a40693"
        },
        "item": {
          "id": "8e9655ff-5141-4912-a671-bcc2f620ebca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6ce4233f-59e6-478a-96b7-ccb17ceb0265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b182c870-da49-4503-864c-c0c15d010337",
        "cursor": {
          "ref": "b433acf1-6cd7-48c4-95ab-6aeb1105df46",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6aa2f5d0-c2af-4d5e-adff-f027307d0622"
        },
        "item": {
          "id": "b182c870-da49-4503-864c-c0c15d010337",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "be7a9749-e0eb-43a1-b7bf-1908cba35dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d903eb2e-3f25-414a-85d6-49910c2cd9d6",
        "cursor": {
          "ref": "b6210d40-650a-4f1e-b3da-7ce612138f99",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "53de49d1-0a3c-460a-bf43-1b4e4aeff8a1"
        },
        "item": {
          "id": "d903eb2e-3f25-414a-85d6-49910c2cd9d6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf6f9d56-f718-46ca-b9ad-940eee8daf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73cd69-9209-483e-838d-5cba96279cf9",
        "cursor": {
          "ref": "8e081fdc-895b-4838-bd2a-4bf3eb2ccd15",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0421fe23-2d7d-4433-be1e-8f02d4f9eae7"
        },
        "item": {
          "id": "0e73cd69-9209-483e-838d-5cba96279cf9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "26414878-f121-48b1-af8c-16e326a439dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829fbcd9-6cc5-4551-9689-b300b86d5940",
        "cursor": {
          "ref": "e65f56e3-d193-4275-bfd2-edc8d08516a0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "568a5651-4f5f-4943-a7a1-c9480a395b6d"
        },
        "item": {
          "id": "829fbcd9-6cc5-4551-9689-b300b86d5940",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0697f7ff-665a-42bf-8ba2-62c9f8e208ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ec7f4-5901-4ad7-9d42-5f60e116f770",
        "cursor": {
          "ref": "b3142b35-a7c9-493f-bb2d-9da80f730151",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "23d00073-2bc0-4d74-a620-94925426f9e5"
        },
        "item": {
          "id": "ae0ec7f4-5901-4ad7-9d42-5f60e116f770",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ff248c45-6751-4607-88a2-1658124a9ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af2b87c-ee4f-4e84-88eb-4519b2a6dd1f",
        "cursor": {
          "ref": "0c5cc36a-6fe3-4a36-bc4f-400aa6bec3b4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "95e8750a-d30e-4cee-8d91-a46003e18549"
        },
        "item": {
          "id": "0af2b87c-ee4f-4e84-88eb-4519b2a6dd1f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6926439a-0670-4356-9b2e-aeec965daec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9a4b26-220c-4d8b-919b-0c75650de740",
        "cursor": {
          "ref": "cd00cdbb-3b4b-44ec-9edc-6cf66e4b52c7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "debc6b32-bf7f-45f5-bf58-d589254013be"
        },
        "item": {
          "id": "2d9a4b26-220c-4d8b-919b-0c75650de740",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04e5f989-0ff3-4ebb-8199-05f7a3a54cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeea334-1810-4996-9680-99777cc6d84c",
        "cursor": {
          "ref": "4b5a0db5-c64a-4f6c-8065-79ac9fd763d6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "675973b3-c03f-47d1-ad8a-6743a295e08f"
        },
        "item": {
          "id": "ffeea334-1810-4996-9680-99777cc6d84c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b34b7f4f-ef92-4c53-a017-33c5e168daa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54adb329-f0ad-41dc-b07a-220ba1c25926",
        "cursor": {
          "ref": "96478122-8a7d-46ef-b34e-90f57cec2da0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a2b631fe-0070-4838-b4a5-8877c7766929"
        },
        "item": {
          "id": "54adb329-f0ad-41dc-b07a-220ba1c25926",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0652ef01-ca00-4bc2-a6b0-ad00d24dd58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baab76e-98db-4443-8b42-196047096197",
        "cursor": {
          "ref": "706b46de-b4c5-428a-8155-129ba8b97801",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6e2eed67-1dcf-4fc8-a65d-1611f6a1fcad"
        },
        "item": {
          "id": "4baab76e-98db-4443-8b42-196047096197",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "83bba36f-f652-4108-9bee-dc2b4c88fa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f6a082-fbe0-46f3-b293-005b0e55275d",
        "cursor": {
          "ref": "c5233685-2fb3-4135-8e45-f871d31d3b64",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2c4461df-fc3c-4cae-b2e2-f78f6a77c52c"
        },
        "item": {
          "id": "a3f6a082-fbe0-46f3-b293-005b0e55275d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2d4910be-17b7-4a05-a311-03c3f6871918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f5943f-be87-40aa-bc98-a7993f13de90",
        "cursor": {
          "ref": "a6e80cc1-c4de-4a1f-bc53-a0db37238397",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6d2fba47-44a7-4e5a-8896-c06c800189e3"
        },
        "item": {
          "id": "64f5943f-be87-40aa-bc98-a7993f13de90",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c8e552fd-b624-4fac-bdec-b6412e27d983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9b39e6-0a36-4ef3-9132-7472fa151492",
        "cursor": {
          "ref": "d8c87e3d-145e-4192-8d84-e793b22cb49d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5124813c-8d12-4176-9c62-b3872087c735"
        },
        "item": {
          "id": "ee9b39e6-0a36-4ef3-9132-7472fa151492",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "595d5108-be2b-42b8-a57c-fa4b0c525b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e3e3a5-cc13-49d7-8502-3bcc0c029a00",
        "cursor": {
          "ref": "e1738416-dcbb-40b6-b910-7af379f620dc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e6505943-4b63-4bfb-b22a-b6aef121b414"
        },
        "item": {
          "id": "96e3e3a5-cc13-49d7-8502-3bcc0c029a00",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c05cacf7-78b5-4dd5-9822-9b6bc6fb6e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce9f85-d656-41d1-80e5-a9c910b4872e",
        "cursor": {
          "ref": "98bc870d-0f95-46a8-b8c1-72ae6d0a5293",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "34a0c2da-60b0-459b-9b8e-a45363c58ad3"
        },
        "item": {
          "id": "56ce9f85-d656-41d1-80e5-a9c910b4872e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06cb011f-833c-4878-90e2-e61529504a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c0684b-e900-446e-bd84-b39e6a615d32",
        "cursor": {
          "ref": "ccc80e3d-69e8-4f87-a404-469c9038c0b8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "137406a7-9b2d-41c5-b6ce-897b1bc91e0d"
        },
        "item": {
          "id": "a6c0684b-e900-446e-bd84-b39e6a615d32",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "de7fd4b0-c92c-4bac-a624-94bd51f7997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b604cc75-c5dc-4f5d-834e-c9921733ad85",
        "cursor": {
          "ref": "a4e2c768-aad4-4f74-9040-eea35d18d1e6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f52cb397-6935-46fe-bb77-dd39ab8de6c9"
        },
        "item": {
          "id": "b604cc75-c5dc-4f5d-834e-c9921733ad85",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f5e6ca4-aa8f-4d74-9d25-a126516ff5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cabee17-c7db-4e05-87b3-3e90c99dfadc",
        "cursor": {
          "ref": "2c973074-8dfa-421a-a437-621d11b2a718",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ecf60c0-8ae0-4bea-8ef6-4fe467c78a23"
        },
        "item": {
          "id": "9cabee17-c7db-4e05-87b3-3e90c99dfadc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b74549f-0b1c-4d1d-b590-3930c163a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cbdffb-7544-4cdb-b4fa-3c58e0599396",
        "cursor": {
          "ref": "767786d1-4345-4ab0-98d3-16f39bf2bae0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b5520aaf-596c-4a88-bb69-2df077176860"
        },
        "item": {
          "id": "95cbdffb-7544-4cdb-b4fa-3c58e0599396",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6468bad5-d244-43fc-9390-c07623a1b3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f35d9-7d1f-42ec-ac2d-5eabb7552eeb",
        "cursor": {
          "ref": "1d45573f-8a8e-46e0-8cc3-25f38bd04fbc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5e656d72-650e-4569-b921-39d5ff9399e3"
        },
        "item": {
          "id": "626f35d9-7d1f-42ec-ac2d-5eabb7552eeb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d4ce1768-92af-44c6-8217-dfc2cd0a2b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b80231-6461-46f7-b07b-dc93869b0cda",
        "cursor": {
          "ref": "e340ccf8-31d0-4a31-b080-8e07c3ea28a1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e62f0a9d-c844-420c-9b40-39c08fec8f8c"
        },
        "item": {
          "id": "b9b80231-6461-46f7-b07b-dc93869b0cda",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d0b3001a-d69a-458c-a4c8-d18cdd2d61ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6247f586-6773-48d6-be6c-a0c1a6a7fd9e",
        "cursor": {
          "ref": "58308b68-ad55-46c2-82e5-6441cfb973f8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a07ec434-cd42-49e8-95a1-da12e251c89a"
        },
        "item": {
          "id": "6247f586-6773-48d6-be6c-a0c1a6a7fd9e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "24c2318c-7a96-4dfa-8ffd-5e38ed57abe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc09153-b17a-46aa-b834-1edf9cf1a356",
        "cursor": {
          "ref": "7e4c00c9-1fd6-4d27-8777-6e13b83f0613",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e7c79faf-0abd-47de-9b31-d6781f13a9e9"
        },
        "item": {
          "id": "adc09153-b17a-46aa-b834-1edf9cf1a356",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b9328b57-3a79-461d-9497-1b4bf6e3aea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf25bff-2d42-40fa-990d-6c06426c4ad0",
        "cursor": {
          "ref": "39cf833b-c683-4588-a597-fc4537dbb987",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "092ffc37-b52b-44cc-878a-9776cb01f7fc"
        },
        "item": {
          "id": "5cf25bff-2d42-40fa-990d-6c06426c4ad0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "44162647-49e9-47c1-a891-410c1273535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d8d63b-21d0-4006-b68f-d510e9f983bc",
        "cursor": {
          "ref": "99bc1403-b014-40da-bbab-cbd14a51190f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aabaeaba-3526-4edf-bd78-873caed0c72c"
        },
        "item": {
          "id": "04d8d63b-21d0-4006-b68f-d510e9f983bc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7fcac430-194d-49f8-b08d-e2250a3476f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c8485c-3e2f-4977-9a36-07fe04426e2b",
        "cursor": {
          "ref": "3d6b7ce3-218e-4cdc-b2d9-10016f62c294",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ad1e795c-cc39-4dbd-a362-3e94feb3b3ee"
        },
        "item": {
          "id": "47c8485c-3e2f-4977-9a36-07fe04426e2b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ca72c6f-f736-4414-ac9f-0afcdd5fdc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba399615-3acb-4d35-a10e-46b6079d4ac3",
        "cursor": {
          "ref": "31c7e1a7-8ea4-4c7a-9768-921803c16614",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7784d3db-a681-46c3-8717-8c041676b101"
        },
        "item": {
          "id": "ba399615-3acb-4d35-a10e-46b6079d4ac3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d985153a-d8d2-4ba0-8200-9ed487cb7249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f64a7-3742-4671-9feb-2627636aaac2",
        "cursor": {
          "ref": "fa2c018b-fac4-481a-9cdc-a33b617a1b0c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d7643912-1077-46d6-9e18-23120593ada0"
        },
        "item": {
          "id": "981f64a7-3742-4671-9feb-2627636aaac2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c700ee21-7b29-4865-b0b1-0317617209c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13536b0-96b1-4e7e-9c76-4879904761f3",
        "cursor": {
          "ref": "dd4865c0-008e-465f-ae04-f203c2348aca",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea95cd7d-817e-4951-9024-6e3e61955f62"
        },
        "item": {
          "id": "e13536b0-96b1-4e7e-9c76-4879904761f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2244f02b-d355-448c-bf63-555b0f10a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34921df1-ed55-47e3-aea6-ffbb700c98fa",
        "cursor": {
          "ref": "a40cdaee-fab0-40de-a181-537043d67bec",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c7a29785-6e92-420c-a73a-05011bc049a4"
        },
        "item": {
          "id": "34921df1-ed55-47e3-aea6-ffbb700c98fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f396716d-9894-4725-b384-06fd0887e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffc5f8b-01cc-4409-8d26-3fed28a7f287",
        "cursor": {
          "ref": "23e29125-b07a-4d1f-87d0-912f8367343b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "35c2d226-ed7b-46b1-ae9c-1ee9fd1a153d"
        },
        "item": {
          "id": "fffc5f8b-01cc-4409-8d26-3fed28a7f287",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e9bfac72-b7f5-4e9d-827d-49c500de4393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a3404-d890-4dfb-a35c-45f146ea24a7",
        "cursor": {
          "ref": "89d1d7e0-1e4a-4f5d-a3af-6cb2dad50740",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "afbe67e2-1c23-4ab6-b160-8dae7f778b50"
        },
        "item": {
          "id": "e69a3404-d890-4dfb-a35c-45f146ea24a7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0d83f287-3bce-4c73-b36f-782a89b7323d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6150a4ee-33ee-40c9-bad7-798f3e905114",
        "cursor": {
          "ref": "8b5a49b9-c135-40a0-b36e-7ff09c2edad0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0c5b8978-39aa-4b21-9490-2dfa6c76c90c"
        },
        "item": {
          "id": "6150a4ee-33ee-40c9-bad7-798f3e905114",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e7155172-dc4d-4046-af77-30c63378d477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4f4e3-8c07-42f2-b70b-253b615d9cc3",
        "cursor": {
          "ref": "660bcaec-5afc-4c8b-8f40-96b03c408a1b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "da5d28bd-3868-4e3e-8ec1-0fb29677b11b"
        },
        "item": {
          "id": "62e4f4e3-8c07-42f2-b70b-253b615d9cc3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c9ea30a2-0464-483c-852b-2eb44219adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ae2db-c56d-416b-a532-a681313e49f7",
        "cursor": {
          "ref": "75f9ae3d-eebd-4e0e-af1c-ace01a8b0724",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dc3701b0-ca92-41e2-a9cd-6efe1b730a87"
        },
        "item": {
          "id": "a46ae2db-c56d-416b-a532-a681313e49f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bf96584f-0efc-4e20-97e4-a77b6159daf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7791341-1792-48e5-998e-95c9a550779e",
        "cursor": {
          "ref": "40f4b1e7-74c9-468a-8123-68c42bee0591",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d8fc42b-47a5-407d-9789-7104162dc603"
        },
        "item": {
          "id": "e7791341-1792-48e5-998e-95c9a550779e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "104a0399-1b02-46fa-bdb2-677fa319bed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22bb2ef-903f-489d-ae37-5f56cf3c0b82",
        "cursor": {
          "ref": "ee9717de-10d9-40e1-a20a-66784b1e3704",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "59545cfa-3757-41a4-8941-de44d1ea8b5b"
        },
        "item": {
          "id": "a22bb2ef-903f-489d-ae37-5f56cf3c0b82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "40f3d6c4-2862-4560-a7c7-22d31e9abc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ec6baf-0344-4141-8f59-ffec7e07d618",
        "cursor": {
          "ref": "069e44b6-3379-43a2-a588-f91702782629",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "21c2aa6c-933a-4aa6-8a8f-b0c473ccff06"
        },
        "item": {
          "id": "56ec6baf-0344-4141-8f59-ffec7e07d618",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4eb6bd16-5ad8-4cc4-b008-b0915bf66d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b35c5-8297-4ec9-b527-4a3704b3bc3d",
        "cursor": {
          "ref": "713472ab-a28b-420b-bcce-4b58fb2d28ef",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ddc4e01-6990-4221-8964-8dc1f4d11a40"
        },
        "item": {
          "id": "a08b35c5-8297-4ec9-b527-4a3704b3bc3d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a32e6452-c83b-4995-a282-a20b56d36da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbfda65-283f-455c-b719-a7173eaa458b",
        "cursor": {
          "ref": "d4b67fa1-033d-4436-8979-8c98f6d54997",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5d7cb110-5d9d-451e-8f6c-4cd7c390f259"
        },
        "item": {
          "id": "fdbfda65-283f-455c-b719-a7173eaa458b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c3387fd2-73e8-4954-be27-a4c0576e9586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b143b9a1-dea4-4f03-b6c1-2c497021a71f",
        "cursor": {
          "ref": "eb6fe140-46c8-49ad-98a0-796116fc342e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c8fbefef-9891-4f6f-a1ad-626fc6141138"
        },
        "item": {
          "id": "b143b9a1-dea4-4f03-b6c1-2c497021a71f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ec0cc157-7d35-4abf-9a77-1fe61e02ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc53da1-0906-4a5c-bfb0-d7e0025b8f25",
        "cursor": {
          "ref": "a6a76d7f-be76-403e-9f50-f01f46bd5f12",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9906e34f-6d55-4550-9ce3-b196853e0ec5"
        },
        "item": {
          "id": "2bc53da1-0906-4a5c-bfb0-d7e0025b8f25",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4ef5445-a085-4416-95ca-437a501ed304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650066cb-e8cc-49b1-9de1-c9d58636e6e5",
        "cursor": {
          "ref": "dd37bae8-121a-40a5-9b33-64c531216654",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e4e03d2e-78f9-4c46-9f9c-a92e450a582f"
        },
        "item": {
          "id": "650066cb-e8cc-49b1-9de1-c9d58636e6e5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6d632035-626e-4f11-b83f-bed4cacd9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde63b86-8bfd-46d0-9daf-167dfa424e1b",
        "cursor": {
          "ref": "b3715a64-f24a-47b5-be81-78e93d59d057",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a512682f-f524-4c19-99d0-9cad42943a2d"
        },
        "item": {
          "id": "fde63b86-8bfd-46d0-9daf-167dfa424e1b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b645a30-93fc-4801-8b89-360236909690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a5b70-02dd-44fd-869b-59b37eb0ffa3",
        "cursor": {
          "ref": "78d1a372-a110-4a67-a96c-5efa8b3960fe",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "90336016-986c-487e-aebf-93c255f85139"
        },
        "item": {
          "id": "013a5b70-02dd-44fd-869b-59b37eb0ffa3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c7ccae75-7f2e-41db-8edc-a9836fd65a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1240c4c-27ae-4928-a6e3-72fdc0a29fc3",
        "cursor": {
          "ref": "65182b1b-79ef-4723-bdf3-b1e894b55e23",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d1c1c75-936c-4476-9042-add2500fa900"
        },
        "item": {
          "id": "b1240c4c-27ae-4928-a6e3-72fdc0a29fc3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8dc87d48-1ada-409c-bae2-f4e0a2e7c595",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a1ab27-bd38-4917-b673-6ef1c7b0a99b",
        "cursor": {
          "ref": "165a10ff-ebe6-450c-a0c4-c4a502dd7fdd",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f8dc5178-1ad9-4f59-b902-aed164253533"
        },
        "item": {
          "id": "60a1ab27-bd38-4917-b673-6ef1c7b0a99b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "be8b3ab5-edad-4395-b5d2-b51300d6ca87",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0d22a0-12be-4609-b1a1-68148959c43f",
        "cursor": {
          "ref": "ce2df303-c549-4859-90d1-406d0f063e2a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7b5a141-d6f7-4b95-b424-e16ff4338361"
        },
        "item": {
          "id": "2e0d22a0-12be-4609-b1a1-68148959c43f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7d2e40e7-227d-40cc-98c7-abbe056d15db",
          "status": "OK",
          "code": 200,
          "responseTime": 2570,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "837bd217-b90f-4dd9-a961-29c83857eba5",
        "cursor": {
          "ref": "eb2ceed6-0223-4b6e-859d-08e6a0675f13",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84e72a9a-1b33-4583-8211-9b2c6ea6aed2"
        },
        "item": {
          "id": "837bd217-b90f-4dd9-a961-29c83857eba5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "515df8d6-d5a0-44f1-b981-097b7b360933",
          "status": "OK",
          "code": 200,
          "responseTime": 2098,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8281bb23-6af1-4717-be7c-8def6fb03373",
        "cursor": {
          "ref": "4a06d3d0-8b3f-4adb-a9b0-951130297c1d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "02cd5699-b317-4427-975a-1e7d34272166"
        },
        "item": {
          "id": "8281bb23-6af1-4717-be7c-8def6fb03373",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6701008b-26a4-4887-bb1f-01946bc41837",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8281bb23-6af1-4717-be7c-8def6fb03373",
        "cursor": {
          "ref": "4a06d3d0-8b3f-4adb-a9b0-951130297c1d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "02cd5699-b317-4427-975a-1e7d34272166"
        },
        "item": {
          "id": "8281bb23-6af1-4717-be7c-8def6fb03373",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6701008b-26a4-4887-bb1f-01946bc41837",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f72bea0-009f-4068-82c8-ac181d326aeb",
        "cursor": {
          "ref": "4e13726f-1c2c-48a4-9b1b-35c1cb4be2b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8b98c07b-cb6d-4759-b021-e199b9082ac0"
        },
        "item": {
          "id": "0f72bea0-009f-4068-82c8-ac181d326aeb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f3d3b3ea-50a5-494c-ac67-806fdcba2508",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83555217-a68f-4dbe-9a35-71ddb47bd97d",
        "cursor": {
          "ref": "6a2096e9-381d-447d-a254-ec63188534ea",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04b91f14-14cc-46be-a30b-0359874997eb"
        },
        "item": {
          "id": "83555217-a68f-4dbe-9a35-71ddb47bd97d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "94f1d3ac-6e7a-4171-92e8-1ae1926bd0e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}