{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "04dd3040-2ac4-4369-89b3-7c91e753c24a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fcd8e36e-d02f-48b0-9ea7-7bc14638fd48",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f641557-e1b2-49c2-ac01-ebe6b8f40d39",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e780eed0-694b-4732-bfca-ac93a3f0a212"
                }
              }
            ]
          },
          {
            "id": "b09c92a8-d368-4916-9267-e31f69852ddf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a74ebed-52cf-4655-ae0b-0f5de1434c1e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8745295e-fe23-4fef-9de8-6a7d06a3f13b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de423373-fe61-4715-af99-92ea44ef9627",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fe3e09c1-f774-474d-b2c7-95f1109e7010",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f35af4b4-428b-4d57-a161-6437ff101d19",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a38240-fcbe-4fe8-806b-4878700cdcdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b1970a7-abf5-4adc-8e4e-e7ae7265cf82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94ba097a-156c-4e76-be89-df7670f84df7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f35da8b5-8cc0-4a90-8cd7-5f7d0c56dc7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5f6cd1e-4714-438c-a826-f25803f6b489",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8495ac3f-a785-4dc8-a60b-150abf32ba81"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce43e322-e8bd-4fa3-908a-eb77226e0550",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9fe0763e-56d9-4d23-8900-1cc3217d2a05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d24c1408-742e-42d3-901d-6a7eeb8be3f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59d0e3a6-0bf0-45a4-87d9-57f782223150"
            }
          }
        ]
      },
      {
        "id": "efc7165c-55b6-4276-b4c4-5cf09d1355a9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "728ea944-7d0d-41de-9bd3-65107fcf5755",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8457e905-26c9-4db1-81b0-39fbb11bb30f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50046aa1-9757-4d8f-9d74-f73bafbd284d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6759797d-517a-436c-8392-8d23bb6d82a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ec216bc-63f4-47b7-9625-496abc865e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eacdd0-6bab-45fd-bc9f-c1891cff4fae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d001e1f2-acb9-4c42-8f13-23a5ee123054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbb5d9ae-6a30-46f5-80da-623fd53433c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca31333-03f7-450f-9c61-c72f673138eb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd23b2-9e79-4848-9e29-11558ce23104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cada176-9618-4781-a3c1-fcb6323cd893"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0e6ca9b-74a0-4968-ac66-708b2286f953",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e6840ad-903b-4715-abf4-c3a79c7d987a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3640aaad-5ab6-49ba-83c5-86ea417e80e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54760b11-d067-40bd-bd94-bf0f3b2400c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe95190-40f7-4a81-8621-d3b77b15b813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b804f8ee-249c-4985-babc-5caaa07ff92d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24b92c6a-d593-4f83-ba2b-0f75447270cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75ef9a24-56a3-4cf9-807c-68f91f1d6d09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e67f3e3-ce39-4675-aa95-14564ed3bfd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ace9d890-668a-4fc2-9ac4-0e302bd44cf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae5265dd-80b8-4003-add4-88eb62aaf338",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7d729608-acbb-4a6d-80fc-a5e5abf4f210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e556bd13-0d48-47ba-a2d3-efee3332f64c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0554773e-13cd-4ce9-9684-3f188c452b4c"
            }
          }
        ]
      },
      {
        "id": "42b9f202-0b6c-4021-9fa1-27db93d790bd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37c85206-6b75-456e-a14b-4a110e580964",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9d62bfe-3280-4161-8f8d-82ef7d2d6741",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "faeb2c3f-ef84-4b43-869d-a35fe5bcf2b0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737d764e-d674-4acf-b5b4-f4d98b4c04e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355b1b74-3b4b-4950-9f67-197c080cd76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15db5770-59b6-49de-8a49-f4fad394055b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd65d76c-0d68-45e1-a534-208e5b45d270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea791b9-400f-4d48-a1b9-b3d8fd3f1102",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fed162a-88cc-4adf-9dc2-a2b1525b6737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bee4a3e-bf71-40f5-bd0d-35ca50112538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72d7c15-1bb7-4e1b-843e-87438455c654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88d9c60f-b7a2-417c-a225-06137ce7da7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a18c61-26da-48d1-adb0-91d4ba3f84cf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d4855d-c461-4bb8-88b7-2d7606f41d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f57cc1f-de93-4900-b6a7-63ecf027e1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cea883-e5bb-4c0b-9cd7-dfa3e327569c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dfffb8d-3a12-4afe-8434-aad2a02b4c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2238516-9fe5-452d-b034-9a98a00df509",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b6e2bd-02b7-4f34-a98a-7265473ae251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade0ecc3-4f59-4363-b287-2f33a2901d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ca2f65-acd4-46d8-b203-e943fa69a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbdbe2c7-83fc-4b6b-a957-bbb91196d476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc473dcd-d1ca-4be6-8eea-659990311c95",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b220712b-a937-4b57-bdf6-fb4e4126e89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686a7416-5833-4a85-b224-da547e387a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebd39b1-9c55-4c6c-8e82-0942d623b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a22fa5e-57e2-4c96-87b0-a3492eb7e6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b94faf-9590-468c-ac1f-d51900496bab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46cd90-286c-4970-8b15-214988909f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147b4ab9-afc6-4566-a849-0a0dd7cee4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd10113-bd04-4b24-9a15-8f1a00482a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2502379e-0f69-409c-a628-1e81819b0d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870c0022-9a8a-433e-9e15-21e501888c1f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194e08d-6def-4363-bb7a-379c74d18cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fd0832-d13f-4636-9df4-cfb20e0ce774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0911804e-2b5e-4a17-968b-da2dd21abb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf288d44-d5aa-4c90-a785-f2de0c47536b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cbfe0c-ebf3-4b39-928d-039bf2e5b2de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d417140f-6e61-40cc-ad0a-d3e43186d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e5746c-54b3-474f-94aa-ae152b99321f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66f4300-0f09-4ab6-9e08-6c1e2a92e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b477a46a-c742-4143-913a-01e8abab0d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6822f36d-f6d4-41ca-8f1f-497247b40e09",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085d39ed-4b2b-4ef4-8a35-b6ea25dccda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a266ea6a-9520-449c-b71a-9333d8519402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1cd23a-ccf9-45e5-b9a8-a992258bcc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b2c084-25b8-4103-924a-7fe3428fa272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51ed93c-097e-4cb2-ba43-8346b16049fb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f33279-78a6-4537-82a3-78121d16a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8873435-22e4-4af1-bf47-79251926e55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d4f4d5-a26b-4d60-87a5-872600ae321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42a2e052-6ead-46c6-ac8e-1153dd80d6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dad623b-6c02-47ef-aca3-c27817b81b02",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7fe431-abac-417c-b002-f904c9c3043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeb6276-718b-438c-808e-2b507501db8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba1c80b-d541-43a3-8ff7-9f0ec4346c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd2ca073-413b-4a2c-884e-27cd0a7de559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6043fd-0232-46fe-bdaa-4c90903a66fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d4173-059b-4f00-bac5-3e4c6f16b79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9847f57-edb6-4a1f-8611-9512b688e84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee7441-b5ff-4ff6-9c5a-056b2175f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bb1e4e0-8d85-4f11-b129-4ef736021366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9204fd83-4535-4436-9bd3-080ebe23cf0b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466ef185-11f4-47ed-80e1-389dbb5f7cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f399a622-c2f0-46f5-8bb1-9beeec9a82ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ed40c-bf79-4256-8bb6-095b44afcd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3da4d8-78cb-4ff3-ac5c-7e8abaa88ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df75208b-4cec-4728-9b47-caea52a1eb78",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd9eade-afe9-4e3b-ace6-e993c6f4464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adf94de-ad97-490d-9f6e-c3d6f62d805f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d006361a-fed2-469b-8863-ded35fe7cd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2baf6883-0d1f-4131-bd39-d8f3b0cc7027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0557215-228c-4ae4-9217-71c56d2e9fc5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e582e846-ccc5-45f7-9798-dab5d3b5d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fb8281-18ba-4c43-86fa-676da3c99b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2b13aa-eb5b-448b-a352-3a0250bcdda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03632419-74e4-45a3-9e57-58029391f192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce94796-dcbf-40d6-882b-026ba76abb02",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec1e7b8-2c4b-4e8d-9d4d-3afdc0e480fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db75b9f-cffc-4076-8699-9a2432c97cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5943b32-be2c-402d-ba74-9d584a90b107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2a64906-081f-446d-aee8-d0c80f44a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6df871d-32fb-431a-a899-d31a3c4ea792",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c6fc47-6454-473a-9fbb-0cc205f6201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276c29f0-481d-47c5-a502-7fb4fa24d688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61922d3-098a-4770-80b7-d71549232a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a99b3e-6880-4cf2-abf0-2ff2b8941642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23db5b9e-7b8d-450f-9b04-79e63b6addf2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fdcfb5-86ab-4164-914e-fe85bf9467f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d4d602-4d96-43f9-854b-70f8a8da9435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c917472-309f-4353-829c-eef5dcfedd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab942cc6-3b0d-405f-984a-66d74f2e3e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b73c978-ec62-49b2-abd4-713f3d00da86",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bed49c-a669-4cf0-b3ee-dc564dd33386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70951b88-b977-4367-afc2-f3b26540f131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76ea479-bea4-41e9-9f2c-9614ccabc9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7086b392-355f-4b0b-b4f8-016ac9f10469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac6fac-c292-4b90-bf68-79d7ede85072",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc122573-f929-41d5-8835-067331e01aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2836d6-d838-413e-a4ec-db0c6c4bc75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e629477-18af-4d64-bd4f-526ef4b1d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90971ba0-e632-437b-bd56-4622b8750db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd62f5c5-180c-49db-85d0-c465a15922bb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3cb8f6-e287-4a86-b5a6-22afc9f47220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b2950a-0572-48f7-8f04-c5c1d82e96cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6a8538-d049-41e7-b24a-275e667c367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caa2b202-d225-4f32-8f8b-1ad135569cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a5b92f-e32e-42e6-bccc-ef87c2e951ba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be1153d-2bba-4071-a04a-dab0a0e7114b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d553a27e-71dc-4ef0-b5fb-fc0a87a050ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565fa417-12c0-45cc-bccd-7960c559cb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "489d3adb-3ec0-4bf7-b3db-b60c6d78aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32082d0c-493a-49d2-a1fe-6c8cd90fe832",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f45f661-6e5f-4869-ae0c-346306e8a838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c254b43-d877-47d1-a61d-c2858ffa31cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce6fd11-7660-48b6-ae15-5d77c280d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91a727fb-f751-426a-889a-26f9799802cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0683d8-8e2b-43e4-ac6f-953de4152b67",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cbe87f-30ee-451d-9b0f-4eb4bf2eed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7052301-7536-4b8a-8ffa-4e662ef222eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1212b95c-a809-4c2e-8781-0a497d1b5dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc010e56-573f-4d87-962b-d56834565193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86073a8b-a844-468a-8d46-8f258c893482",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b58fa59-0dae-442c-bf8d-33e6c84a2a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa1c9a8-2b53-4017-8562-a55e46a0a412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476813c4-3e79-40e1-90fa-c04af4bf798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4621911e-c48b-4a8d-811c-673b0e4d3ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06efc979-d6e0-4564-bec2-616d2939e17c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5b8037-8514-4b12-8b86-22ac5740e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a32ddb-de0e-4d07-8f4f-a45847910b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f286399e-8eee-4662-9fea-2978065321cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edf7a15-e446-4b7c-9335-8c8caeba4c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b201e-3f88-4ea0-8f05-1e908901a2c4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0e5bf2-c27f-4f97-b6d4-aefc5f78cda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d692dd1-8e4d-4bb1-90c6-bbd797204c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381a0405-a70d-4dd2-8177-81f2a447a621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a6eeba-1912-4c1f-a819-e462eb5baac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cd9470-ebae-4f75-a566-81b593f41f15",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a679305-1420-45ec-92d1-ed1509dd5203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180099dc-b514-42ca-b99b-9a47c63270f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457fb6ab-2788-4383-ae7e-74b591a79fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a55358-dd6b-425e-a910-e6c14aa7a11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05263673-1769-49b3-acef-620c3af171dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f053d3b-22fe-43ba-831a-3b2052daebfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cedc366-48c9-4175-9812-3d959be0b943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e19507-0fea-4207-883b-e9267864fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8694713d-24b1-4851-b602-d6950c633456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7855b652-1f50-4f25-9e96-23ac093cfd84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d2c8e9-f5ed-40d8-9c4f-25bf8ebc1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff2f1c4-643f-44df-aac8-14bb53c39aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6c1b07-cb9a-4e96-9328-62783b353a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "438e1b04-8df2-410f-8d0b-68488b273a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f27463e-e124-49dd-96f9-571ef02f8ac6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af784925-52bf-42b7-b77a-5684df804ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32c19e2-3fdc-4f52-8c7c-6866098e156b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f219c20-c0f5-4ca3-ac16-1eb5f1a39e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac5e16e-aa4e-4415-a4a3-59f9c01f8e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697f4595-ac0c-4463-97d5-18315a94ff6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b9987e-c53f-4456-9b60-b4f39cf917e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aea4e08-cfc5-40b7-aad4-6d48149a321d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9ab1f5-ca34-42a6-a3c5-6a3a4c03738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "853a1391-2bb0-4748-87d0-a45aaab20c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd2322-91d6-4a20-8fbe-d4a27f01014d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcddd192-b181-4705-a6f4-370d443acdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4d3074-be8d-4243-bdfd-c3f3a157d74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c33b3-cdd0-403e-9512-a8e9c2d33348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0078681-c68c-40d3-a362-5e4a0217e50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e09963-d890-457b-adb6-8fb4e8223b1a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edcb15b-9818-4505-8040-834d76cffcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785852bc-f9a9-4fee-bac7-a9ca18a1325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cd231b-e785-4dea-9388-42f02329c8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "388f6d90-11b4-4058-93d0-deca1da1b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fae353-0e16-4fce-aeda-6f6647d88a69",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32372c-4a37-4dd6-a63b-57967207a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1e5aa4-4042-41fe-8a0d-516a91e222dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10896bc0-197f-45b1-86bf-898769a9dfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a548b2a4-2ea7-4946-94a1-a23c85814348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf319f4-afdb-4150-ab33-0b961f78c4d1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f859a-8abb-47b0-b30d-d91913202aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed51484f-0d88-4246-8c75-47e254e2cd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7f0d28-d60b-4279-860f-fc74e0481aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "928ab10b-b72b-4fe0-8416-42ad06a9c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cd3276-31c1-4097-b16a-57893ad2d2c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b928de4-4b68-48fc-9274-27844811f1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4718c9a-4829-4f4c-bc80-35974eacea64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1981d778-6f4d-4226-90a4-8c14460d27ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "085f5001-d847-4650-bc2c-365525a2432b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376519ec-bf7c-4ed1-8c0e-81aa15185ad3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860604ff-6253-456b-9847-1e2abadc6f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48b830f-48b0-4666-b43e-96727027a415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e488166-49f4-44dd-9402-848cf41eb228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08551e1-4310-48c3-a663-0f4e4ca4523e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b11ac-ae23-4851-8f1a-d8e5bad02ca3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831fee3-0db2-4c83-8ac2-b55d60371771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191723d9-36f2-4b33-abce-7e160809e15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c897a771-6948-4c9f-9912-f79fc8d5ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "58515259-f588-40bf-814e-a103f9853414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6099103b-2495-4f16-9065-30e0b318418b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1a65f3-2005-477d-8af0-661ad2d91626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bfd00b-4dc5-48a1-875b-d92d61ac9932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696005b8-28d9-445f-a831-b671eb7ca000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2177d1f-f87b-40f8-afc6-75b28ce94ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d53c39-904a-4388-af40-ec5ad907b431",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b83a4d2-a4fc-4cdc-936d-a80deec30687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd00cc7-4ce6-4113-93f5-8a989eb7ba02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0da0c4d-c857-4eef-8bbe-95747934d1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f006c78-5812-4e21-8668-ceeb666ef196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055c5947-8a12-42dc-bc04-33c1611dbf75",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3757a785-2d50-4ce2-814c-ca7fc170cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7992940-873e-4853-acb3-4777dc1a6a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad5ec4e-0d89-457c-9910-508e0098800d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5c88c3-298c-46e6-bf08-11dac66ce941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261febe9-ad22-4eb0-8945-2771b760bf19",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8e133b-53e5-4c0e-917b-b4c73ab97504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59232b12-b48d-4b48-bec5-bf2dae801b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dd65bb-b157-483d-9e48-575b1627a49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7549ad71-fe52-4800-97b1-f36b2459fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cf7694-3c45-4ead-b98d-cf8bac478c3d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d9a5b0-6bf6-4a61-bcf8-5894a099d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed90ed53-4f0c-4eca-88a4-b551c223670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e92e89-44fd-49b6-baf3-073063ea79cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "de885d0f-6c06-45d2-9e17-d04d09ae1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e98ad2-b228-4ecf-a606-e9de83740aa1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28d92be-98a0-4a8e-a61c-6a5c85b3f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce5b653-9fd6-4845-a217-fe700a0db9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e181b-7690-4bf3-b723-15525fb4c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cb33b2-a3ba-490e-85e2-c6e99b463eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb22af1-3eef-4114-8a6b-51958b49ae91",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53f2b00-adbf-4de0-a80a-8919a24e78d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5375497-2aca-4093-8f5c-79678aa2d234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d055bd67-16a5-42b5-8cb5-a2e054498c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c142dc-fa84-44e9-81f4-e710e107ec4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79efed4-8f34-4745-9cd7-4c0a87a5a52c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a41ec6-ca5c-425a-99fa-eaaaea384a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0207c135-3af4-4e0f-a2df-0f4abdfa7513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dd33c0-b31c-48bc-bc61-2decccf4b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4f74cf-9714-4e43-a572-0e91d616c693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b960e51-0fe5-4c09-a02d-0e93ec7de816",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732532b3-658f-464c-b980-568265320c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022c1e96-4fe5-4557-aa89-37a07e9f9ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834dbb92-5037-4753-896d-03ca5c573222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e09b99a-628f-4615-9085-855a31d2443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb339641-8a0a-4ee2-b8c7-3f93d216e05b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3b11e0-78aa-4aff-b8df-8b31b9f2409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfdd344-0d60-4ed9-a4c5-3120c59a68ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf9d7c-ac11-4e6d-873b-a83cd6092141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d47341-90b0-4f6a-9a3f-0b4fc50d102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8f2ee2-ebb5-4c53-8365-d1ff27d1c91e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b13cfc-1cc9-4f72-8599-e8c757864639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a505ee-81c1-44a3-8d55-8e23d4bffbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa204f4-2703-4a62-96b7-d38c495a49d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61fafa5f-80c8-4211-9bc2-3bdb28930762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71539ea-abc0-4e04-b8a0-5d14076fd2bf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc22ba-9b39-4696-83b3-be2d1d5881cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4177174-bbb9-4c24-99d8-4d283d77a5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564fbbfc-fb8d-4f4c-ab00-b188dbec7ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "296394b8-deb1-484a-b8a8-8a7f6e93b2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96600648-3963-4691-90ba-eac0e862aa13",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a86119-3b81-4322-bb93-d2ab60ad3402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c86b15-3a46-44e5-a6cd-3ede0624caef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76128ec-504d-42d7-b7b9-42791ee9e717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdb5b5a-37ef-4270-aeb8-e96387a5d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9238b63a-fc11-439b-81a6-b5dcc7f2ef1d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc3dce3-1fb4-4b79-ac83-8ff5b15453f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a1180f-e311-4ea2-9f05-ad3695804b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747faf3f-e5b0-4d68-b536-b9eb07661a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6749924e-56aa-4649-a36a-173a0b85bfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10939ef5-d068-4e11-9d4e-6c6efa3d343c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2342238c-35f5-42cf-b429-576133a2afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a256cce1-5d6e-430d-994c-a1a0e6625889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5841a0e9-5b96-41ea-86b2-d6231e36a3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08bc1701-f850-4e69-836b-ee799a0cda0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17bf364-92c5-472b-98a7-af7362ec0090",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9d5368-a065-42d8-bac2-1967e548e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b9b681-9b28-41ff-86d2-5369b50fe570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfd15e6-98c7-4197-9685-a55399bb03e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfca4dc9-0315-4c2a-9679-5282dfb86f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07ddbb-0b48-43de-8bab-75350d916779",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0058fca-5835-4f2e-91a4-15603ded31bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cee7c6-f9de-4e6e-813a-87ec9156b3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6d2c11-eaae-45ce-9029-78aa8bbf60a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2cedf2-41c9-4f56-8fb6-d476e3e3420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c25c1f-82e6-4ee4-9e06-98a2f8f826da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190e3099-5f7e-4f95-a3ef-5dbfbbd232ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf9f96b-47e9-49a7-9109-5f09745bac70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2e0545-f7ba-4f43-8c12-10e710f091a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7d2a9e-cc42-46d4-93b3-de86324ed272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7881c2e-a3ac-46a2-9fee-9e6127e51f7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2915ba-245f-42c6-84f7-b1fb50c957bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51e4213-f286-42e5-aabb-5fdfbca79d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eaf766-5d81-494a-89ee-649637ebb998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c00a93-8c00-4fb7-a4d2-6e3d5b226ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf647a5-3ee3-445c-b5b1-2ff0683dc300",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916aae85-f938-46cb-bb31-f50298d6ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0140335b-2038-4e31-bdd4-e052dc4c5189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f970820d-e18e-473a-8da2-82113fb39ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4df414b1-5be7-4058-ad97-5478c3bf5a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de68e7a0-4f26-4cae-aae3-2cd5bb9c3c83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88bbd5b-0eaa-4052-86cd-1557d3ea118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22020c1-fdc8-4d31-8498-bcf682ef633f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d9fd5-8d37-4539-8583-c28010524706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85794705-8b10-47b1-b4a2-59f641e8d98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5f1780-bdce-4ef9-932b-de9117283c0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e2e889-3a22-44a6-aac3-8c01e96ee6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1ea30e-7998-4b04-baf2-3c0034989ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea19d9f-e392-4dfe-b64a-8b0339cdcc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77229a5-8def-4be1-92ef-3c8ccd0cfc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8b64b4-90b4-4f57-8692-794e1174564d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d50f7b1-3cda-4b3e-a962-30c6cdea6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ae89d7-53ba-4f2b-939f-690ed24499d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d198b-395e-4250-8478-3ef5d847d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e5174c-86b6-4445-bb62-6f39a8c6d036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c01e5c-eaa7-4177-9603-ea88d1546f1b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0cc035-876c-4cc6-b8a5-13de5aa2c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d36271f-9473-4d16-861b-d8e76ffa0425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a03e3-fa62-4b8d-9e4e-17439d9b734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c1ad56-4a7a-4001-868f-42d357586dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd29ca33-82cb-4bd9-a8b6-2948c11147b2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a64d9-fbd0-4a01-aad4-f7faed729c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ff62c4-4162-47a3-975a-a8fdb39665cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5910e6b5-436c-4eb1-b90e-252003fbe7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e708a7-f502-4602-96d0-f0225100a043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44491ee4-cbac-42cf-bda5-1d4ba97d4c9e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6af98a-42bd-43bb-8177-34dc83b086c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bc0dd6-969f-41b3-b156-5fc325557b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb3f0f8-6f14-4b41-a3b9-829842e2524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2009eb9-044d-467c-84f7-c4135e49f27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f494f6-2b4c-4198-afd8-0cca5c79bada",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d5448-392a-4ac8-a400-6a7392feae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0e6164-8e24-4f27-97cd-9c1f7522c208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9131da-e650-4f0a-bf83-8deef45e7f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35d2e5f-3892-4dce-8288-595dba5d982a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f49ee-6372-413b-821f-4038e75da81b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf65eb3-37f2-42ee-92e7-9d9874e4615a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d35449-dcb6-448f-a861-3d344d3fe5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948b1e02-1986-4217-8028-250bb5939400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30476980-570f-476f-808e-e1a2fa5e3e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c3708-a977-4666-85a8-8431c36bba03",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c856b61-be34-4720-95fb-f1621b67bd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9b32fc-7350-4105-891e-fa794c8e9c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32545cea-ecc8-40da-a4d5-97702af2ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54c405f-144b-49af-a392-278254953748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a624a52-a8e7-4a87-88ce-290d6a91a055",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46acf16f-ee13-4625-a203-d406b44d7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fab9b48-b00f-4968-a3f7-34e18ea665d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1be000a-40fe-4481-b4a4-900c72e9355e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31501b71-bd25-436d-a5e5-58480c2a5807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1aa15d-244d-4493-901b-a2e2d801030a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba2986-17d6-47f9-9d02-75990ee50936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6c9011-fd41-419f-8d5a-d920e0317870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c3ebb4-be4f-4341-b151-d5b140e1b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "657afacc-04e0-4024-89bd-8922fdcdf2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ca77ca-b856-4650-94a4-2d85cb86f3c8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c1b451-ccdc-4a13-894d-01ffe63dad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec85f7b9-8389-462c-bdc2-28b39a83ce71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f0eeda-cc38-4528-838c-f27daa313f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3090a0-1d4d-40c7-be92-5c0556db0dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59438a44-60bb-43cb-8e61-53bdcb3c458b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2813b92d-f936-431d-8d35-6afca7c5754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0200600-65bc-4104-b6ce-eaaf562cf108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0466f26-ac53-4229-b93b-23b437963722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7910b1-f8de-4085-95a2-1cac3462107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c4337-4835-4f3b-9240-12b08c901b79",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e0fd39-e19b-4bec-9167-f0c522dbe37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89435871-3321-4fd5-8da8-7b3480d491a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b96012f-9636-480d-a066-03e8df0faaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "759cdd26-1d22-4dc9-83ea-67f95f784b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be8ee49-8239-4b84-8c1c-c3e630dc48e4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dcca18-b3b1-44e4-b076-ddc8fdef4994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669607b0-e76c-4f92-9e00-e49137fba965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46412213-ca4c-4155-9379-ccc2361fb3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4718d90c-6d79-4005-af3f-ea5c3587fb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31359699-05bc-419e-bad0-9fa1b4c30baa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96294d61-a57a-4cb3-a1ed-f87b1b4600dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b6c87f-32f1-448a-9af1-0e0fdeffd136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89b8a4a-3fa1-43d5-8487-5e1a6da2c8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6f4088-13e6-45e9-a385-ca77f91352da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9587a71-1763-4a4b-af93-b71882012b79",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f95b64-8b08-42af-86fe-e6950cc449e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c560f5-9534-45fb-9742-92ba9b3bb704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbde282-40fb-4f29-81de-f77b4179495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa34ee88-de14-41a4-b4ce-de39a1f1c7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4aae8a-a163-4648-9b0e-64605172e303",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb85317-b52a-4e14-b98e-9d01ec622cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014a453b-8923-4dff-a5ce-980e2391a6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f16e0f1-3785-444a-a251-157c808b38ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66990dc1-0ecb-4e4b-b328-e8cc7a29915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8516417e-89a9-43ae-abbe-8f183adc23ef",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc092d1-61ae-402c-85a3-731a31f5f3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da22ee0-4b31-49a1-8a75-a46becc4beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82759ffa-60fd-4e55-ac40-a910c09af243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf86b17-a227-4f71-868e-254557a620e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa41a8c-e8c5-400d-a976-5864a4a63854",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632774a2-d035-4942-9442-1d6235f45de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90422d08-c722-4c25-8813-e1c50ce7c9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f24521-294a-4314-9b45-61334b9f933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ec502b-4b08-47ea-84c3-554e4c457050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf59114-dd09-4fba-bc28-07d60d8f6ded",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc86a7e-cf2f-4bba-983d-c4c079939773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037c82b6-a762-4850-91e4-c84d08963445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37c4ba6-ce1d-48ae-8ab7-f19032f3b300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "830e6d61-6d61-422c-9334-ab58da4cfdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d973249d-ee49-46af-b561-ae065d4fa8b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4edbc6-dbce-4eeb-96c5-4cb0899ef342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786490ad-47c4-4dc9-b1dc-d4625a3e6ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89f0f66-f6ba-4237-a21d-a2dd22a6f45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22eaf6a4-b249-4220-9ed5-d71c67668bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d624e57b-39dc-4de8-8810-cad6aadfacb4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91956cab-3ee7-443c-aa6d-e009e9f9f553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b292a79-d305-472d-8a98-15b54d7d1785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9725864-e90e-4d44-8742-5ba875be81fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6392d4-5ce4-4752-b177-cc1193b1af1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef93d0eb-12a2-4c85-96e4-ea7a1cfeee39",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e19f2fd-1782-4a1b-8038-8560bdea09d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870b0757-b060-4be1-9d92-4364a438b50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8104a0a3-d0d6-4209-932a-7dffca2683e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c817ab1-39ff-42a5-a903-ae4bb9871b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb233e-2397-48bf-83b4-3578b3fcfd74",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c359975b-d129-45b9-804a-f08255c2f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0d45d3-ff54-4c92-a393-09d7ae9cd8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db1d3f-ec91-4660-9409-104ec53c3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9f3ca0-435e-440c-b6df-43bb0bd37cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeb44e3-7c04-4699-8236-f7f7c9f12c53",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be956c94-8673-4c38-b5c8-4e9dde0cd848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3ef0b5-e291-4574-9a24-23e9a15d9757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65c00ec-453d-4409-b341-993d301f2202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32060281-2e86-4e79-a3f1-63ca5143eed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c153ad-99cd-4c8d-b0aa-df3e8f5f3a1b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4333388-bdaa-4323-9df5-6e55b432233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1421b039-5a40-4acc-b64c-3afa5e5bf7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db56221a-3e25-42d4-83b2-10a0740b8f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb09088-d10e-4d68-b51c-942b1329cac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1e15a4-b705-436d-92a0-e1495d033576",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d35d15-1185-418b-9b50-e650864362bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aa0607-bada-4ab9-abba-0e9b2b08e6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f55207-d1de-4b4a-992e-6ad28954f126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d121b4-9266-48e3-8403-1d51e8bfbf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f84eed8-b730-4e32-8c3d-d8bf8828533d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b330de-73fe-412b-85f9-25158d253cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3132a7-54cb-41da-94ab-6029694cbd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f694be63-a06f-490c-8237-a1301b59b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee59911-7a5f-4fa0-91b7-64475d6da954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1e01ef-34cb-4d18-9b76-be14b59f5ae7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd12fa-d083-4ccf-b002-fc1251283aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb79cc1-8f4a-45cf-b671-3b88c5b6cc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c79a5c-0e95-4878-9580-f00808076113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d127a5e2-728f-49d7-91fd-37f043d1d2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afb5195-92b3-4c55-a6b5-d28acc17b11f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527f5800-bd41-4151-8de4-0182a20654a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99231203-d0cd-4b9a-85ec-77478ef563ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e5404-3362-4b46-aec0-a85e5a1ecf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "787ec2bc-e016-481a-b9dd-d5ec6c6fce4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f85e0-a8d9-4a92-b453-93f45657cb91",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d095dc0-2387-453d-ac31-7eadd79b298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d774399-973f-4e77-9827-2a9f683d404b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc831195-830b-4484-ae3d-0f9ffa11b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "34fc771e-9d0c-44d4-84b5-54c0ca632326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5ab3db-c121-4463-9bf7-d048388cab65",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0284e02-b9c9-42d2-889d-346423e3a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb2fa05d-ab55-4ae5-bb78-d58699b94ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d516847f-902d-466d-ab65-e1ae839c02df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "862e96ca-a762-4a14-9510-f719501ab37c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7856d29e-0783-4742-9acd-3ad9fa160303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c1e861b-de34-45a1-b546-e3135547d835",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc106f65-74e6-4b33-9825-f42b5d350425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d999b6a-736b-4e21-8b7f-bffd4dc4063d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6261e9c-4bec-4c7d-bf2f-25d1739f785e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca03a3cc-f39f-43a2-bb96-299f05e16034"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288cff24-8dc9-4a2c-95f5-66dbeba96d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ae6c60a-d583-418e-b59a-096484141014"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60a958b3-8d6b-41e8-8672-3ef449bc9f7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "735947d1-d65d-4986-a3c4-a91da81182d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b223b365-ef4a-4a50-a6c4-10a78187aa80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "facf8312-84d8-4750-9436-770ba3bb5ee0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71d9d00e-de4e-4150-a94f-eaa64c74c18b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "927fb69d-abe5-474e-a6a8-eeb8e89fed56"
                }
              }
            ]
          },
          {
            "id": "eaf458a4-355c-4e57-8428-fd8d9720ad27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0306869c-bb1a-47be-9134-16ed1ca268a9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dcf52cd0-f530-4fab-996a-24e4ebfa271d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba99c4-9f10-43bf-8d24-0e15856fea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "18b2ea57-f0f1-46c2-9e60-a2743b53c452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e5a1f5-31b0-4849-8ec7-f688bf1209e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb4d95c-3fbc-4c5f-b251-8b1ee6bf195d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb49d1a8-ebee-43b0-84e4-5526fdc059a2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed11da0-1901-4334-bbcf-84638ec6c1f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0f12c60-11ff-4840-a2e2-ddaa2accd2c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "635efce0-2dfb-446b-9051-fee22c06ee0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9260b42f-2f31-4cbe-bc48-8a903adde3c0"
                    }
                  }
                ]
              },
              {
                "id": "a2eca3d9-26f3-4d16-89da-452c394017b2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3bfad43-c43a-4cca-b58c-b6f63db9f2d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "817749c7-8369-402f-970e-f755cef5d852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "783dc6aa-225d-4a1b-bd8c-5d5d7585ce4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7eb7a77a-27dd-4dbc-8d65-9e8a09c2fde4"
                    }
                  }
                ]
              },
              {
                "id": "0d35593c-d693-443a-b4ab-63ee2ebc2898",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33960ce5-d8ff-43e5-a517-22d9dadac3a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c60bf7-3024-415b-ae32-980b2c7642ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e5c6a4f-dbb0-4e02-a336-6b22ea852363",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc1fbd19-04a1-4072-b8e7-3aef476719f0"
                    }
                  }
                ]
              },
              {
                "id": "49aca632-4cab-493d-ba06-4d4baf2fb505",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8fb9f9-5839-426a-8367-bb84dc07db86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b84a7977-640a-4924-8598-214103512e70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953816a2-d746-4525-9e5f-bda48dca73c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a47fa903-459f-40b1-85ff-30a22472f855"
                    }
                  }
                ]
              },
              {
                "id": "1e08d116-3f01-4de7-9a51-918514635f48",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e26d7aba-7433-48da-8fbe-c0b83669a25a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7ac9d58-abda-454a-842a-cb71a08b767e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30b9e0ce-a011-4d19-9151-0f83bd81234b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2a8fab11-87ce-402c-b5e4-a2f4690d3f10"
                    }
                  }
                ]
              },
              {
                "id": "e53a327e-cd5f-4fa8-9160-518a594640b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c10ecd8-9d4e-45d4-86ed-2d24fad9a8f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "212b3019-2e53-4e07-bc84-f430b4383e1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66cffe29-a0ec-4438-bdea-ba8fa1d8132c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d3a9373-5a2d-4357-a899-ba5f7738b485"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a567e07-cd92-4ed8-b4f4-2898846d40e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e281bfbc-92b2-4d93-ae08-2f0a0f0070ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37023de4-5658-4f40-8b20-5838d27cf934",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff5f453d-6117-4e0a-9194-77a20a96be95"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56964d05-0384-4c17-b653-9ff9a226c9de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "524f4f0a-bdda-46b2-88dd-b50095beb971"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b01d1dd9-fdfb-47f0-92e3-e8f5efdb8d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "543fccc9-a227-4603-96b4-c8abdb22faf0"
            }
          }
        ]
      },
      {
        "id": "613653bb-494e-48e0-9f52-12e7a32da3c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "273dfa74-ea63-4cad-920a-cec2dd837575",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b41af474-351a-43c5-9c13-7b66e48b0c1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65dfcb81-f369-4a6b-a005-1683a548a392",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b97154-7376-4fd4-a5b6-337a94d8db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903eb484-3614-4b38-b880-535644317b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfd99f2-04d4-43ea-96fb-cdd6273b2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13dc71fb-f4f8-4826-891a-a25264bdd63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6599746e-d5fd-4497-9ea2-4f98f93e70fd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706c4385-a044-41ad-9b56-a9f2fd8938e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e1c672-0d34-4595-a33c-f75265e70f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2a9b11-9425-4c1f-b0fd-4d0d24f4db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ef8277-822d-40aa-a340-dec38c7b8f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3cd715-6c41-42f6-94e7-22fc9892f4c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077f6254-32ad-428f-a83a-1da20295fef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e1325b-1723-489d-88ba-48ac52bc1030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e8e6b-fbe9-4a66-b8f0-5a3d61b2d733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de45598a-a82f-4b7a-a02b-2d162539a939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cde357-aa81-4651-b11d-b7186be9edb3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9408f89-45af-41dd-967b-3a57134f522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cff0d6-c39b-4a5d-acf6-ed29e4e6e975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d1a95-086d-4c5a-b960-57e7ff5bab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6bf924-aa9c-4e39-a6cb-af3797bdf80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb23129-87a3-4cba-9bad-b1f0ce40e515",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1ea760-4ad8-4f25-a4de-b38ba58e74c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dab60b-7f6c-4ae0-8e29-0b9b934c1cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1630d78-0601-450f-addd-08f768276718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ca3f3c-93f3-49aa-ba79-bdbd333a132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4ea297-596f-4c20-9844-74ab7c2b7750",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070feea8-26fd-4e39-905a-fbe76ccce56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e5080a-7c52-4659-9faa-0c809cd1e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a1c3e9-81e5-4b25-8c0b-5f22eecb5732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "909bd9f0-da97-4bcc-b5d8-1929394f0ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e86cd54-4ef3-4f64-9824-cdff6b6a5086",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5d7222-1ec0-4f91-b234-f68d67537201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975c0d58-fe35-4bec-b7d5-109cd0166c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b036828e-a0f8-4d75-a58b-977ddcdf6b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b49cd0a0-7446-44ea-ba42-3aedcaf7db98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dede3150-56a5-4357-a08f-db880d513475",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de088c3e-8038-41d1-9670-2ed2a42bd4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5f0201-99b3-43d1-b6e0-2bee88d918bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf93de05-3177-4d5c-a952-a7a17944ca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be57ffc5-43f0-4547-8557-67962880df60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70db071-e858-4115-82a0-706ef1fcc3ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dc5015-a482-4051-ba62-f4165f01dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235519ae-bae2-4f19-ab86-66ee3c15461c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f07d06-9f42-492b-885d-6e6afdd2afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ea9cd3-0352-4efd-8d23-64c73cb9f069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ebf2ee-e17d-4284-a265-a1e70f7bf17e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f82ec-8c09-4dbc-8a36-9349e03567ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac10783-9643-4474-a44b-a2f7ec9e5b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d930d27a-5733-44f9-aaac-857082c9f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "414adee8-f09d-4fa2-9e30-67e52cdb2d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f78b96-35c3-496f-b5bb-5186784ececc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6286e976-9bf2-4b76-91d5-017a139fe505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dca4116-95d7-44bb-b9aa-06ccce3b13f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34d3676-b54a-4a22-a842-640d0b790a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb3a6f-f2cc-4e49-b5c9-1bcd3de0a1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed45969-21fc-4708-beab-31a6452c1b3c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678bb3ee-9dba-46d6-8afd-fa4b6f40aa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7745cf4d-87eb-4bf6-84c8-bf3650337daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a52f428-3028-48cd-97be-1a079bed5171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dad0f52-66fa-4feb-a49e-82ca92960f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45a8e77-d363-469a-8885-7f8902ddaa13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36056f9f-1f79-4178-8509-fbd03b02e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460d7148-77be-4595-8c3f-ce8b648a65af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4bbac-2042-40a0-b9a3-39c821af2f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26a6e49-d31a-4371-a488-ef3bb29611b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0eb069-47c4-49ed-a794-508cfc0aa2a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1818943-c17e-4837-a360-2f8c749f677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36800921-7573-4d4e-bfc4-ea531242f55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a920974-41cc-43d5-af32-9239a7a83506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22061ff4-22ab-47dd-858f-a0277cde5e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b09ad94-032f-4c74-9f3f-c2e18f922a96",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cfb70-5d7d-48ff-9a0d-86fc8f8035a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee3d09b-bd85-465e-886d-3f1709923645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49781b1-e90e-419a-a975-57ac42492f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbcfac4-b52a-46f0-abae-2e6bbf6cb160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841ab3d8-039f-408b-b9c4-94d9a766c97d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646b52d0-3a1c-4a1b-8fae-7dbdcd2e3f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0357369c-cce2-44d9-99f0-de3dcc5acce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101fdac0-f300-488e-8206-66c8d1942818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf08f8a0-62e1-40dd-ac86-a144c3aff8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b514279f-8924-461e-8f6d-5ecc46f9b2e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c0711a-78e6-4e20-a803-53fd965bfea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4db6536-9b5a-4a55-b74d-400390eacac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c84929-2f84-4c5b-820a-e09ad2138867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "517e13c5-43b9-410e-8f79-c8c83d9dea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51540d99-e80c-4500-9869-a3571c22f751",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aeeee6-d7e8-4771-8079-78f387a3ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406787f9-059d-4f82-b94a-5cbf0a496830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f86ace-14d4-41ed-92bc-79d3becbcfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce86cbb-b7ad-468e-9f66-f02a31bfa21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7f16bc-3b7c-47d7-87d5-b3752ae2c147",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e35a3b-5c64-4ed3-b947-78ffd97ad9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ab4d1c-bb49-46cf-a544-ca44b096cd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a1eef-1db1-46b0-9626-ac203107585e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d537a04-fad9-4e0e-890e-dacc05f87a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2115e3-30c6-4bfa-8c78-0e76fd55d9d3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abde0f6a-51ef-4a81-967f-8278fa046b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f17e99a-d862-4e53-8997-da19af27a5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8f6795-2512-4a39-8a2c-1581cb4c522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33dfef9f-65ee-4a0b-af70-96914f6cd8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6063dc5b-1d1c-46be-a4fa-feeb4b403523",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11d4755-a373-4156-8556-6dfbf1645b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcc7082-d141-4244-9418-2646f4c15858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d15055-4c4d-44ef-95bd-1e64346eabf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea13c89a-a204-4257-a51a-34d23006a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ec1c78-0de9-4fd6-8886-eebbbe23050d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb14906a-0295-48da-9484-baaf76e6a242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129d9813-927e-42e2-821d-811475474c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c73630b-9952-4e6e-9dfd-59cf3c4acd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cab8f21-add9-4b3e-b55f-d4c53c3a3991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c99406-8306-4890-99fa-ae7a40cbc3ff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3224c6-b24c-4770-91b8-4e2b727d8c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95222c6-7d35-41c6-b374-d63ef9d6269d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b6a571-7be9-43c0-8075-17f142e08e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "870a68a8-164c-4bad-9e30-caef2f76123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61759aa7-8494-48fb-9098-f36cee576396",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4232ab7f-57e6-42cd-855a-cb56b03af61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500eb603-7064-402c-9596-90724f170734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580273c4-5383-46a8-a3d1-9edb32c0c0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a261b75-86ec-4df5-bcbf-70b43a7b0d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a6a828-55cb-45b9-a1fe-defe9419c533",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db7bd73-5147-4200-8402-46bd33395964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a23570-6018-4e63-8142-2fa92c95122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef67ef50-86a2-43ac-bba9-af0d22463587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8cb138-026a-414f-a06a-49450918bd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956fb81-e5c2-481b-b140-722865a94364",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfadb1c-8d84-473f-b1ac-d88518157c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5628cb-ae01-4ebb-90b5-a20b4897d10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd83084f-860b-4c71-bae2-5a93b33406ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28081f58-220f-4815-b12c-4580ae2606d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1186d7-8be8-4687-be7e-9ab8ecec3302",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf31d0-8119-4e15-8cba-3e6ccd248a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666b8144-301e-47e7-abf9-654ae9a88505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27913702-a6b8-4305-8e7c-5a8ebb3dbd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefa5421-f0d5-4a95-b418-dfa57a2a2e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634064f5-4451-48ef-b135-27a8c981edff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca762b-76d2-4676-a01f-fa357911f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b544a1bc-f06e-484e-b9fa-1c62aa820350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f295c6d8-ae3d-42e6-808c-62995bf68cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811ae830-2bdc-4dae-86ab-5d037cfac81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889bdd9e-1bd6-4d65-a7fd-0ddc5a208c29",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04397588-e013-4915-9104-4aca743c397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1edacba-897c-4d78-97ee-720b482bfe62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551278f2-bc71-41d9-8011-a41519aed624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57ff919-a515-43b7-88ae-f2f669b15667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73365019-f890-4384-8932-302dcc828ea6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efb3ff1-1f83-48bf-adbe-6cb320cda76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8dffc-ca51-41f5-bf43-0b687bd8199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6fbfc1-d819-473a-b7ed-7a01471ba1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caec9e74-3260-4aa9-b9ed-5eccd197a1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482951b-495e-48e4-af80-3461ec5d0563",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23277982-dd75-4184-9f28-b1d1f5cf2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397efb2c-faba-4789-8c84-8caf32beb2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98014f6f-ff68-4d32-8c7d-6bed161387b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8ef3fd-84a1-4e3a-88f1-c632aa20a9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce8fb04-8b3f-41af-92f7-b4b424a94097",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ddb040-86a3-490d-aec5-1765af82ddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829ffd21-3c11-4f79-8a50-01b813f808da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b719f3a-f0af-48a5-aa15-7dc606939a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf87448-0f35-4898-af67-f6c023108f59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db8c6950-1d07-48b4-bdf8-0106f4771562",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f7246e4-6365-43f8-9aea-070371814cb7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc878a9-98af-4f20-bfad-4ae06423d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0f05db-2471-47c4-ac64-5f9683022c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b6990-f5ff-4005-b565-25aae80739e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9b100e7-64aa-42a2-bd14-0f0e7c5aa915"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "456c9c73-6947-4ff7-8b51-d6ecdfce13a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8444a8e6-afa6-4ce4-a404-28b6cfc61efc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2dba1ac-9698-4a71-ad7a-d25889994ec1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b88a9e2a-cbdf-4439-bc4f-7f198a774f2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d853ad3a-0060-4c49-ba25-4a11cb5a8fe8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c0f8df5-ff79-4eb5-9acc-f4ce36681d86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22044873-1cc8-47c8-be6a-5f2ef030be43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46c0c2e2-6e50-4bbf-a374-dada4faf508f"
            }
          }
        ]
      },
      {
        "id": "ecb9dfa7-a123-4f6f-bbc1-c96ffd0154c2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f3c82c6c-abaa-435e-a51a-3918dd2af4a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117491a8-74fd-48b6-a92c-92d2595d88bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccfe1712-f0b7-49be-95d4-f9ae3695d312",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a6008e-65d9-470b-91bd-a439c79d4597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d05ffe5-934e-4301-b661-4db9f4141b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3007b3-2c6e-442e-b4f9-c805788807d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed76dda8-0ed9-4dee-aa57-aeb9916aa592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c1660-7253-4f17-a139-246ae69882c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d86d12-402c-4fca-8af1-ea4894bcffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a150b889-da2c-4931-8b17-d731c9b7ec81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad19c59-dd68-4172-a692-7c3e75fd620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53cdde57-efaa-4f51-8fef-6728fa48996c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16a1e69-bb2e-4af4-aae2-cdc550c789ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b5118-f8b3-46be-bff9-4af3bf70f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0023b7a0-705b-4da1-8e52-f6c2283b2cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68df410-37b2-4e86-a633-2c7b6e0e8ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "946ebfdd-4b20-4b8b-903a-5afe863e9f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db1da7-fa21-4525-9f88-a2b555db9ce7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8f42d8-2f71-40d8-90cf-d4768ba7629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8f2253-626c-4ffd-9f58-2dd6841093b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2c5dae-bdfd-488c-b4bf-99cb28e384ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1c32bf-3329-4795-8b34-0e8347d9a963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4d971c-5bf6-4a0b-a192-3adb6c9f1255",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0db4913-8d82-4a1f-bc2b-563522306bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada06d71-4f48-4c00-bc07-b58ca28bd4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459c8e09-c42c-433c-85e2-f1c660fc8841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec866891-df41-4d16-be5f-d3628c123592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc393f-27ff-4b30-b549-1e8747963c73",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382186ef-d0de-4a8f-b488-a79605f2c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa0ccb0-68b9-439b-891e-8b40ee717d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83337af1-7529-42f0-b1bb-5c027dc6ed04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c40cadb4-3d05-4f84-aa44-44020d9dc862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aa5292-c9f5-4766-a52d-ca44861c92f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cf3d9e-9488-465e-8f93-5b117e4b0ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02154e8-e6d3-4c0c-a944-c843ca7c88c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d259dfb7-30aa-4734-8149-b28f88998d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bd37fc-c612-47da-9f5d-b1cc968ee05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2272297d-0b27-4aa2-aa42-55208fab00fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b330788-728f-46aa-ac8a-aa62bbe0aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69814246-d2ee-43fe-8456-130e46a27fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c757f9-5d0f-4f62-90a8-1dc113afca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80551807-c373-4d87-8820-41fcfa1975bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169e2d3f-9853-43ed-b9a4-26de63132f15",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60517fbc-b113-489f-b5bd-833c8c215d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be04a505-7dfc-44d0-91de-94dfdaba9a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b0c916-ea19-4cd6-9926-93a92e929e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08e0748-49bd-40bd-9aac-5f89ccd3d053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9696ac-f1b3-4b63-b7d4-3438a00c928c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9e298e-4c73-4eee-a0bc-c6120ec7b953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ddf1fc-a8a1-4b7d-9134-f3fcce9add75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258d4d22-9b52-4e1e-9907-ee42df9b25d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0ef221-2c24-4014-985b-aeb318e04719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83bd5e7-5fac-4a11-b78b-681852c58819",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ad9f30-73b0-4053-b759-fd429f54447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82566196-0b6e-4e22-9511-0121c287064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87e8bf4-9d5c-4de9-82b1-62005e6b27e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a930822-1c50-4d48-bd51-e7c009d391a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6da4c32-5384-4d34-bc3c-043cd5f56f01",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10e7815-198d-4bde-a17d-2eea41973b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a16c9fa-3dee-4e5f-876e-51dadd002685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600b683c-6d5a-4895-896f-df6a96576a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7037c201-a7c3-4a36-b43a-7552fb65e7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959ed881-abf4-47d5-ad4e-6c664e72a75a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216fb0b0-58a7-4344-b49b-e7412f651fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a6fe7b-1a3a-4685-8c90-e0fd12eab2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266cde44-e2a2-4795-a554-ed3f97acd86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b167e5f-e592-4a30-95b2-553feab32bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401222ad-ccee-4991-8424-4a14cd6ea2cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ec45c-a01e-40f8-adc8-8dce87adbdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf034c8-85c0-40c2-8ea7-73f185fe3302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2c6c40-bd9f-431f-9287-57641b3cb0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "38669f0a-f197-45b0-aa17-84e9a39eef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64440dd8-d513-4bbc-9cf4-ef8f07405bba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10217d0b-be45-473d-8390-037b86849fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15abddbd-7d77-4709-8645-49510d68e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbb8ce0-ba21-4a4c-8c5f-b4affd985919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3d078b-5c32-45c5-aecf-88c79ab90aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5957977-3692-44a4-be49-b2489c9d798c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8355ba-f4c0-4e81-ba35-a08790ebc188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5553f91e-059e-40cd-b8a0-bcdf9dee258f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ac493-52ad-4b96-a0c8-5d228dbdd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a78b89-6493-41fb-a04a-3be7a76c5995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0570a01a-fa03-4f17-9b16-f775a5c810fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a4ffe-b04e-4bae-b9d2-b70b70c36125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad70325-2f07-4929-8281-89260875b918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6da18f-781d-4cba-850a-b80427c86ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a15aef-5825-4531-9762-c5543d88bc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0135626b-efcd-40d1-9ceb-6db93464536a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28458344-fe50-4512-9a21-298832b843d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8de954-e46d-4ec8-945f-dd22fddc85fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b950d1e0-cbbe-40f9-be89-f09a059ce386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ce743d-0ff8-4eab-8f5d-d901e959f868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fccfff-5372-4bda-aaef-3a54fff32d45",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eceb21-a5f3-4918-adf8-32b3f8f64164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53fde71-7912-4087-9fe6-c9d5bb9751e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34ee270-31f4-4f7f-b354-137d64f39759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124f2a3d-7294-4652-99d2-d74ef6a88504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8732709a-8f8d-489a-81c3-8fae859b38c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af654c72-a3e7-45e6-b0fd-ef8b42e05c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40e568f-731e-4f33-a70e-1d8a2c8d7f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dfd6ad-c939-48d0-95b2-60dacc805e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d01c0c-a240-446c-a421-3971aa0f9fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be9bbb-6120-4289-ae33-6f58c4d5020c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10d6959-8318-487b-b536-e7397a3eb22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc906ef2-80db-4b68-9286-103164dc3beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb343a-7919-44bc-b39a-6ea06bbfbf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4c7d26-d3de-4864-a4c3-68b60b6b71ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a35a5dc-6230-43ca-8374-4a8cdabb5f51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b45793-0f12-41d8-b015-39d18318b39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13409874-5566-40ad-8bec-d2f2b9aa0bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e399e04-f95f-4496-8bf3-b3e1ab35fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5aad49f-c99f-4546-a581-169bd32d20da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2337c8-4f0a-4cd6-8de9-9edc82b68a26",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8374b6e0-8fac-412c-85cb-12669ebf8fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdf240a-523f-4d07-95f5-65c8a919e3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5e0b75-661a-4637-8fc4-4c909728450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcc219b-4841-4ab2-af3d-bf900b22a4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767ff589-1047-471a-967e-03c2b7511dca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2238bda3-a4e1-4ebb-b2e8-7d690e51dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4c96bd-96c6-4fee-9aff-3c71e0058cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a001fc61-7c41-431a-81af-2f37cbc84a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5055fd82-6e92-423f-a5fc-5506c534454c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a264bea4-958f-4b16-a080-5f0d856d8a65",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7151a0bc-d5f0-41cb-a325-f2da55f50b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8af2ab-2016-4954-9499-f4d960d571fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220229e-53c4-4248-a105-5d7e787cea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc10b7e2-99b3-488a-b75d-ba601f01f14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe72eee1-3ef2-44e2-9ec0-8ee0137321da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546fb0ad-7a62-4cf7-8cb5-3918d15c07ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6313dae1-f655-4cb4-ad30-051c45aaf1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b198fcb7-fe93-4f74-a259-d40de7164cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dccd49e1-a005-4c08-852f-76031a85a143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c46747f-0f36-454d-baf5-18f72d9d0c0e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c6dc1-d5b0-4704-a8dc-d264bdf0d063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74c2abe-2e21-4a9b-b7e6-ea6f61722068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0db719e-3aec-4185-b621-43d2b7fad764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05719ee-ee7e-48d5-83c6-4ae0445e0d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54860ead-dc53-44b2-8fe4-56885fed5d87",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cbdd74-741d-4ae0-a1a9-493dea86c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab18dfd7-66f9-431d-9607-257c2869da5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adb04a5-b6c3-4ddc-b270-40e386fbb2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1183b9d8-9aa1-49f9-be88-f1fab36d4a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49a2485-1b14-4c3d-bcfe-6f490229ffc4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d522a971-1fbc-433d-8a4d-4ada6fc3fc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3537c8-89e2-4901-8b6c-a091079a8b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f782238-ead0-4467-9527-3b9b994cbe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cacf3a1-adad-4b60-b738-501b121196ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badf1881-c5ca-4617-86d5-0b235f8737a1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a27fd3-8ce3-4b4c-8d55-65bbd0ee4c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecd8175-633d-4018-9e49-f8cb79ca9851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f9139-a030-4830-a949-cb70814b86ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d001a1-95f2-401f-b833-e9a4beef0808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d34c6-d45a-45dc-be69-b0f317040c62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b340cb-cb5e-40a8-8f2a-00436646c640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892208fe-02ce-4f77-a39f-75ea5cc03584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b99a7ed-9598-4989-a210-bf66ed0028a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b540e332-e763-4e3b-a509-153953ab76de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ce74f-ffd5-46ba-b57d-1453dd8ad9dd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf870e0-39d1-4456-b555-61e0b5b65ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633d42ad-3f30-467d-ae72-882655ffb9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc1533c-d63d-4921-bdae-8fd229517289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9a102b-e9a7-4515-8246-632087adad24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a32991e-1539-4663-96f7-2faba95194c1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba2ca8c-dd61-40c1-a264-2b0ddf0c7314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa2f2c6-7650-4a44-8e65-cade14de1046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dfe3d5-8c8b-41c3-95df-f228d700f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24365369-c3b0-4612-8f72-5a5ab472bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c0716f-5dd1-40b4-8ffe-660461efd91d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b91db3-edac-4c26-8cbb-115f13e1984e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c80098-0c30-4859-bce1-a1f7e5af5de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbecad3b-4b0b-4f5f-86ba-db7f2d7207ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e71471-84f8-477f-8f8f-7f19c5bcaca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9285a2db-a4f7-4c3c-8dde-2ed1fc96b081",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb303d7-e399-43de-abd0-287708f968fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c79eb25-77ee-41a5-b2a0-3ca6e303f6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a6c057-f8c6-4d5d-a319-7d9ba2d64fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b509cad-c499-4bba-ac51-416dbfe1cfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e51e14-9875-4490-8908-ce088b772e4e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e712dc7-568e-4f43-94d0-823eaa3c3f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a2ce5f-8b6a-45b7-b7e7-13f8680b1b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18da396-a701-4e34-b2ac-2a2999242cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7651b33d-7150-4b7a-bee7-1689d4015e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ba06bc-bffc-4e31-9d5b-aaf7d1baa0ef",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401deaf9-66b8-42fa-a4fd-b2ed7e193623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c6d1a4-c4ca-4b6a-93ff-fb9fe6266f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f93f1c-80e1-49fb-9a6b-07213396e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "354798c9-e4b0-4a49-88c4-e70953475fd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9317a6ab-37e8-4996-a2a2-f7aeb5951663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdc29367-ed52-4b3d-8458-01fa33c55f58",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db66f0b3-a963-42cd-a3fd-a6634d96571e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4231389-648a-46af-9602-569ebcc1a051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd066c-b606-4bb9-82c2-a6fafcbfc3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc8d65f7-5303-4733-947a-c2f1f57fe7c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91c59395-5f23-4f3f-88d1-538d14000620",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef41feb1-ea89-4a77-bf18-793b76c13c4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4a9133b-a7c6-470a-86fb-ed2a0ffabdf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a28c435-478c-4565-b7d7-ef3d07f838b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65d29e3b-9dbf-4d4b-bed2-4cc0bc2d46ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91021e0e-67bc-4fec-9f44-104a4ef913a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ef67cd1-3632-4812-8b81-19045c507b35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfb397ef-f846-4136-ab57-39218cf1fb79"
            }
          }
        ]
      },
      {
        "id": "ed4b9215-c767-4722-b766-7141b8f0e226",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e49bdaeb-d1c5-45b7-9ccf-52824d3d1223",
            "name": "Negative Testing",
            "item": [
              {
                "id": "821262df-d43a-4e8f-a27f-e4a70c8cea30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "423c2a49-5caf-4b60-b4fc-9010024598df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82518aa-1db8-4a3c-abbb-236390793b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f2f89b-a615-4a11-abbd-9a2d93ab0594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2302e8ec-e46c-4e73-a6e2-3ba046b8e99e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41570eb-dc4e-47cb-bfae-d5f3e4a5af0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59599a9a-f432-49ee-bf4f-23b8ffcd3424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cca7eb5-72d7-4cf8-abe9-d82c1f562d50",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeff76f-8ea9-46b0-9fd9-137d0d92d49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f7a073-bf4d-490b-8f16-180369aaf610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12e891e-a175-416a-818d-97b6ad287314",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae39735-7f3c-4268-9bfb-f6e1ff8a09b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db18c4dc-5993-432d-bf94-9575e9693407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04269607-447d-40f4-8a67-8059a439ace0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063842e4-d5a2-4f00-9d95-0eca8b10725b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2d6ce1-8670-4a62-8d62-670787cd51b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab006d-d64f-4231-bf23-e111fd343ef8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef35fa3-7921-4364-b6f2-df7c5e2127e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5468d5-660c-4633-815c-523ba384c069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28960eb3-880a-4638-b408-c59f9bb496d3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018236ad-5d16-4659-80f3-2f2b79d5a261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0856c1-f176-4376-a81e-80c5eeb4ab22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbac0ac-1497-48dd-a1bd-fbbc57924a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942edc11-6b27-4576-bb03-691bb181e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc802a-1702-440e-9bb1-f3e836eca01e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9bff8d-0dc3-4aa3-8ed0-32e50a890f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc94e83-9226-4a25-91dd-ef4e13ae7786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf332472-3a8e-4c6f-8e49-856272de983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36b472e-09ef-4193-b4fd-6288a5ac491b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d237179-fa43-4956-9f2c-344bda900a68",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28cf90-539d-454f-970e-0600d2a2e37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fa90bd-e04c-4c90-b6c0-133557b16702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf44bb6-3bd8-4869-a532-5a5717c3cdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f71a0d-69b0-4d69-99e1-aac7451338c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0888527-44e0-4e55-8417-ac8deffd5d7b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e84a1aa-e2a3-465e-baed-5b80bcaeb2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c046b06-6a3c-482b-9095-e7392e37c178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f19edd-2b5e-4e9f-98a8-e83a71c971e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9d289f-659c-4365-94d4-a1c320342780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c32cb92-5f19-46e4-a3d3-19c9710a01b5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc1b7b3-9976-404b-96c2-35055e71562c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11191106-3135-4a55-a24d-b34d34fc93b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7946d9b-e6a9-41a6-ada8-7069131deb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0af6709-e88c-4f3b-a504-453ed4e0588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc223b-58d3-481f-8b0b-589f90307da2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daa0b3c-4bf8-4f11-8285-064eedae87e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79e4fcc-38e2-4520-a5d4-ec72543a3dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87071c75-1661-427b-a899-15652051aabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60505e45-f231-4468-b0d6-b792577b43b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f61897e-a9dd-4879-83f4-3766466b67f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f90df03-e61b-4531-9ce8-076e0a9d21fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b42bdd-21c6-4b8d-9b11-d2e96483d555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f6639a-8d38-4c80-88a8-de3ec880b280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7805f3-224d-44c2-a2de-f93a1821deea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff0706-4258-4a6b-b313-95a4af907514",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df96d3fb-a956-4de4-97e3-c7578d202c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b703b7-c17f-41b8-a8ef-7ae38890d9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaff314-564a-4a2a-9754-076853d30f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecff035-d259-45b8-b2d5-4dad5103cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b202e-1fcc-4595-80e9-6f58f0cb711f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074ff1bc-7777-492a-880a-cbe1453ac800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c380e94-5541-4ab4-a863-1c35726771f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23522b84-415a-46c6-b102-7345dcd8b77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e04511-82d5-4395-9164-41127cbfdedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f493b-f24a-4803-8442-7ce113317b78",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ec3a47-6f53-47a2-b965-815160480d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48206af4-82b3-4314-a06f-d25357f1c50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1913c5be-8181-4169-9d0e-22ea8fb87865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ce5850-7428-44c1-aa64-3ed4579d61b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09649699-a7da-47c7-bb61-ff4772ab4f79",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cd57d5-722e-401d-b79e-1c3ca4458f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793be358-1b12-4eb7-a1b6-9013d874f696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa9d99-4690-4a74-bdf5-2abb158c36ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38ed091-0084-4e81-a9b6-b616c160a4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc0185a-2954-4f14-8e75-3d3c4cc70ea0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec3b6e-d75d-4590-aa11-ffd8ac0a6493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2803312-dbc6-4cdf-9328-b0db6cb62003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d3198-10bf-44cf-805f-bda16c13d886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f511ba42-57ee-48ef-adbc-d8a6b4854522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af2d71e-08ac-4c52-ac17-12db6e312f0d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450f3bff-282a-4e53-bc23-fc76836e1004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eabca86-3c16-47b1-94f8-01d4904f74c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedbeaac-4310-4411-8043-ebac1fa71a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d96351-972a-4752-bf87-f6efe0fe40ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2293c9b6-4c94-4962-8393-8a865b68a673",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc378a8-b18d-4777-b052-2e2d2bd622f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b3d26c-99a0-4560-826d-4d70708e448c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb6d88f-6309-41b5-bd37-3541cfaed4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2212e11-27b2-4d6d-8f06-9425812fb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca811ef-4829-4fc5-bcfb-bcf1e8afc315",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cb2c51-bb9e-421a-902c-6cfd2980b17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693d0566-0b89-4f62-af9d-470569ecd78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaecb751-b9cc-4afc-abdc-eae7529a8ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da82207-c844-45e8-801e-d9fb95760dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac23160c-0aca-4575-b712-9a29a935a24d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d238f5-4095-4068-a48e-f0445ed06617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4b438f-769c-4a51-b535-765db390e96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b3165-36ca-4fd0-b777-6ed6dba1a853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a90c2d-9da4-4e21-bbf1-09f7b08367e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d0d46-4803-4f9e-bf57-3d69ce1fd3d6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7900ba2b-5913-437f-907d-e2f4b94e80e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b034c7a-7885-4aad-ad43-9287d5952ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d607f4d9-200d-4572-ad5b-f7fd8350430e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e246a4-940d-4ee0-9bc9-05749069db8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0997a9f9-cbb3-4431-92ab-bd661338765c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da79e7f-d83d-4c24-9e1d-7ddf852dfc84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45ed19d-7e8b-4d1d-aed0-fc34f0eaff15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794f3fe2-9826-40af-8e07-55f51ff43e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0225fb07-2061-4c72-8697-ae53ec63a687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d22ffa1-10da-4007-994f-eb7b80d086be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20261f35-d74b-41c2-9e6a-30a19a08399c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16140c9a-628c-448a-81fa-3fb4856b73c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd91ac0-9b97-4cd6-bef5-c463797e6836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4fb552-6146-4c91-9452-66ee983c2f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc4498-5175-43c7-9042-f4cf2109230f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f04dd9f-c570-4a22-9b2c-65a07f0ad11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12eb1652-c6be-4e93-b2a8-660f2f684480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb07e3-fbcf-4d5b-80e6-12bb24eb31b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a80aca-81d6-4926-9762-651ef3fbe1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f0aca1-b91b-48c1-8234-ef14c8b61353",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba3e2fa-2e60-4c83-9edb-317b76e42de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c332c23-a382-43e4-b4ee-f7426362214c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c545923c-6eb9-4d31-af19-a5addffd08cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e880e89-7f5d-4a71-8175-22dea10803c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c55f2e-b559-42d1-9546-bb421c7912d0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645063bc-88f4-45d4-86b7-bae153b5237c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5048979a-a940-4ad9-8292-ee516beca088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e96916e-b61f-40c5-aa3e-843f8e3eac81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a7fbd8-909d-4df7-93d2-da5702ae4f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ce15b3-eaa2-43f4-b957-1fa6baa30276",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0260f62a-c662-4e5c-8a79-1ff89223f46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4dc01e-d46b-44ca-a70e-54e39ab94292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a853bac-44c7-4e0c-a3e2-dcc893182d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af32bfba-b5e9-45ab-8e29-4508464994a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d615a2-0ead-4732-8108-b0b41f5797f5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e329d92-c8cf-4aef-8a9c-c7b558c321bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabc5200-3cd1-449e-9a15-d7bea42295f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f534b4af-d4b5-4019-b060-b6938dcf972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c1bc42-4eb8-45c0-b7a5-cef7e4b0621d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271eaee0-45f3-4968-8a5a-2defcc5fcfca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9b4829-f9b8-4c5c-add4-ae218798ca15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6310ac8-fe45-4efa-b6ab-46ee4eeb9d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69feb344-084e-4c36-8bf0-157cd121ccc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdca773-609c-48bf-9db6-5da4b0b85a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995fce58-b43b-4705-959c-185862b86641",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462176c4-0163-42f2-9528-6397a2d93bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd22b2a-3041-4805-9299-06a8fe01d6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbcb6a1-cff4-48ed-a5e2-c68b5db89654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac4fa43-2f47-4473-aa0c-0942024f30ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fed11a7-840f-4e50-b8a6-8c94a4cbbb73",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29cd5e8-3bd9-4728-b99e-a97931459325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37e985e-2a6e-4343-937d-71fc30f1ad27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac565672-9777-4ccf-85ab-822f114d2937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b602aa3e-1dab-4aac-87c5-d96e169f8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bf2fea-d3ae-472d-b0b2-266ef1f8cf1a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8610a-e473-46f1-9adc-355b52d95576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be2d61c-b2e3-4032-a5f1-de9a629c3b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fae175-8d78-47d9-93a7-d7a17063fd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f44010-9bd0-470f-8cf2-ceaba965a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91cc475-ec12-4a50-807c-4d0ea8bd5daf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d879eb-7dcc-4c3d-9073-0223b6058298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf0656a-5662-40f7-b95b-c0401ce550ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6911df63-f1df-4e42-97d7-bc8499d075c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5042c00d-1b51-441a-b10e-8c1ad1f40f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a43345-1bd5-43ae-a7d4-a725f5227ded",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23f3d75-b4ba-4c45-8a43-9ab230409371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acaec09-3af8-4339-8df4-a78e17f61b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a481d-1571-4b4d-af2e-a04c2693d2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f991b2-a97b-4902-a5bb-d4fc2f94499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0e08b8-79f8-421d-bb77-4113b067eeef",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66c5cc1-ff3a-4c38-85eb-bf995d575fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a538505-e0f6-46f5-9257-3741e762a466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4824e86a-d04a-4c17-9ba0-2c9c069f3d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284f12b7-c6f4-4cc6-9e53-1ab732908706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba80c0a4-be12-4577-887e-c8dbc1368b67",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7052d9-4093-41bd-b8a9-6e253a81ecf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d36ad4-89be-4af9-9c54-afe6abb1801e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eba7a7-e45c-41fa-b7af-9679832392d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ab1e4b-324c-4316-af00-a6fa8f1149ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c4ab66-1108-4141-916a-b1058067f773",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4547a1a7-9068-40f3-8c1c-dec59d43a442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fd2df6-c923-49d4-ab0a-a44508711f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ce93b1-c244-40d4-84ce-ba8b84cd36c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e5e6be-8929-427b-9d47-c376877db76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890cab8-8d8f-4ec6-a103-4530ca55a624",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffda04a-bd0f-4ee4-af5f-e79d845fced9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baa5223-8853-4ef6-9dc3-73ad6777c592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3731fe-45b4-4144-bc16-274243d47a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5765b9-b949-42f9-ae32-408324f9a464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bed03d-8de7-4383-87cb-7a033dc8c1eb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a1342d-abbc-43a4-a4f7-8d81fc0bc162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fd240b-1075-4564-b574-ec58627507d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d293e6ae-076c-4a4f-adc8-99ba74500ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1aa9b0-1255-4c11-a3ff-15803923abb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07888e3-9bd5-43cd-bfc1-35ba589c5db1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79872587-c978-485d-8499-ee0c374c6ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca00178e-3f72-45da-bdc5-3d2a106655ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a5421-38e2-49f2-a83f-e4ca2792c3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836d822b-7d88-4c70-a61f-a5100ea4d811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d27864-9632-4139-b8f1-38ebb55a9420",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d54aeb-41d9-4b5a-8637-422cc6544eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b654d02b-0b0b-48c1-8876-8912d6d4aa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3dd230-2afa-4774-a7c7-242cc4d76736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc3d8db-9aa1-4ee2-ba37-a29a5f482697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caca6b4-6f45-412c-b0dd-8f223c1ab9e0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5402e4-61db-47e6-9893-8985d42ec1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea229f35-81c6-4c3f-9949-311f55369477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a528c2-6d54-4a74-b1d1-7d22a5b77731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f461e58-8f42-4aa7-9adc-5d1fc2017351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481f0a70-7ac9-414f-8d50-b7b43a192f0b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecb495f-5fdd-4302-a1ce-f073daab1072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700989e0-2a6b-4de1-a405-165bfafdd9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28481fe-30c6-478d-a2d6-cafad8678cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e239d2d-0b6a-4743-a374-2e2345041037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fde64cf-3773-494c-8298-26dceaf94699",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a98ff7-1d78-4441-abd5-ebef1a77edc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aef9e79-be52-4538-8c52-c7b1ebe08739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9cfc7a-5776-4880-839c-ec35bd1438c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41e517e-fa84-40bf-85e1-096f9386ce66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c22d9ba-4af5-413c-b3da-1b8446cce8ec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4033c48a-e56e-41f9-8e1b-21687af7f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ac99f6-c642-4566-a68e-a1f50e9eb96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c58844d-c79b-4d48-9273-47cfe8daa2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e813764-02e7-48ac-8cc1-eec47a8c388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45a3299-3fca-4a52-8aa9-560bd708826e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9106b2-e3c6-4222-b19c-c4d3c75334af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bceaa18-3f23-489f-a8d8-2303fc6866a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03cd68a-49bc-4f80-87fb-72933a2c01ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ba52f0-0639-4407-a6b0-183d27fbb35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22e929-04b7-47c5-b155-736f9673e090",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b6c091-882f-417a-b056-09ddad09d5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dbc06a-f82f-4734-b825-7f823957afb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2529fb57-d7b7-42f5-a6a2-c56583514a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182fd3be-ef97-46c9-a257-ef61c19bb7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47ec3f-0ba6-4dc7-a111-bbbde53572fe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b59d4f-feb1-41cf-8b46-26e57c5d9e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cebe5e-6555-4072-93aa-2ef05e734ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63407c37-e6d8-43ab-a408-4ba38d4bb5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cbb600-f5a9-4c40-8a26-7ce9cd7f1f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2087f1-4131-4274-9485-42b377bdb2bc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102e5114-ac54-4985-a29c-47483b17ba3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269a6195-b699-485f-b404-0b0c8380c573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a42fc83-258e-4caf-b84a-fc30d514e724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c214739f-c246-42e6-8d8f-65bb795b2f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acae714-1272-4d87-9dde-fa555b463032",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923b34ee-92e6-42f0-ba31-59f4e6e145c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b27be98-989e-4026-b385-8b06b31ef589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d8fbb-0436-498c-89ab-4d6420b01e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dfd432-c311-40f1-98f6-1dbd54ab7929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9572ff0b-b471-4052-ad10-fa7cda534225",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0566d3c2-8cfc-477b-835d-6209af4a7094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7233549-e67f-4697-8e7e-84e691210bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d979c48-73f1-49de-ad82-d1eb09f22bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffeb882-aeed-48fc-84aa-510fb33f1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e771ea4-7e59-4046-85ca-aec8f43f4216",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb77fa2-e218-4df4-b461-83425334d7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f2e97c-e95a-41b4-961a-41c5c33fb9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2fe37f-1bb3-4e73-b351-9e3b2e2f902a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b95379d-dbe7-4aeb-bb0f-9489bfc9062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10284ea7-f49c-413e-8341-a289aa8c953b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed883c2-0f9e-4bf8-b1ec-f8ef23d9e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbe3c9c-3d02-46a3-940a-77f6ccebdadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4af17da-a798-4240-a5ea-deb058b39d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c6c2d2-3c3f-407a-b967-410b6b44f383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c549f2a-2b15-458e-851c-2892f6643465",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574b1f89-1c3d-420d-b44d-77cb62742b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d410c49-24fb-40c8-a285-aa4004c4ea8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de9e034-9cfe-4522-b423-032091e03e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65557a0-aae1-4597-aebf-d6b51aa2ae5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8be18b3-cb6d-4cc0-8c88-24f8ea330c5a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92574d56-86cb-44a4-896d-fc90fb62a01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f591307-6f84-4e89-a9cf-c3ee7d7912d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c326c9f4-1dbd-446a-8204-cd2cee19cd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107aeecc-4324-48ec-b305-dfcd7c3d60e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91b2eb3-695f-4408-95fa-45e8e4d06971",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c31f14d-7ecb-4029-9cb0-88a23239f99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae19bda-2b46-4842-a901-02706a854938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0de5bdd-6916-4a6e-8141-9650d6c181e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9376c4c0-fde7-4060-9ad6-66b09f533c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f0b63-547d-468e-8646-d904984ea581",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc49cb53-7b8e-44b0-9abd-5e6c1725cd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad4c16a-293c-4a98-90c1-884881129549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cb9d60-344a-4805-be68-fb9b5bb8fc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d93498-f51c-4b69-9887-04c3ac57044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f892ba4-10dd-4375-a929-8709f19ca23a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29acdc97-1798-4930-95a1-510928efa556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fe51f7-c854-47c6-afbb-faa3b36c268e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e01a5-abbc-497a-a9ab-5c8835da0ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda44c16-b0a0-441c-8b0c-0c70088ab47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9146e09d-a848-43f4-a9c5-763381b69ba5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b0bceb-917c-4b08-9b6d-087949332bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8415e84-913e-4397-bc93-037297e1a14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0c9a11-8bff-42cb-bb17-f0f5120002a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb1b8cd-5a57-4bef-b740-307ad1d57267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751ca4d-582b-49b2-a34d-3f04349471c4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d8790c-66ed-43fe-8593-1a5bfab858c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2100f439-7129-4ec2-972a-ced9952cb6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7c3296-feac-4a44-929b-27397ee4ee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51fcd70-5776-42e1-9669-04e88e637315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7258585e-ecdf-47db-9f67-07e746e5c94f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cf1151-d859-4334-b31a-e9625aea6f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b118063-7303-4675-bb4b-f8fbb12d92fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f29bcd1-d604-4315-bbca-586ad91d9de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef810de-ea95-4297-b64d-db5f52df266a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fcc885-53f7-46a5-9e8f-41bdc6a1bfaf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544e47b1-88dc-47c3-a34e-c91180a51f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c507e10-5fc5-42f7-97e9-fb0c811a27ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7135c4-05df-43d9-a8e4-52e1ce09c9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f963d100-233f-480d-b9aa-36f152f66c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b850561e-a917-4a6b-92cf-6e85b6092bf6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0973631-ecb3-4a46-b42b-5c07d0da5c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cd54e3-2aa1-4592-89f1-fd325a20cd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a0f243-ecc4-4e17-a0c1-180cf47512d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fb60dd-bf56-45ee-b836-ddb3c107f664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69681da-edf5-4fea-a37e-01064236162b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1f52f1-adf9-4f4d-bd15-81a4d974811b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8aae77-f99a-4c20-b123-59eaa04ffac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4fc95e-32db-4b74-a8f6-400e09ac412a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0462ec-3439-451a-8789-659ac22b0d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c8f5c-594c-4105-8ab9-16e3b85c1cdf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58054706-84fa-4a8b-9317-a9bb103f7eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecf42af-01a6-4d6a-b909-01fbeabe011c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301b5230-4c96-43ee-818c-3021d96f78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a412df-d61d-4314-be96-803c582bc7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c06607-a0d2-461f-b71b-ce92fdd041e5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8f96c6-1c0c-45cc-9ae8-dd2201c5e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f70f023-451e-4981-a130-ffc85adf6e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4572fc0d-75ac-43bd-884f-54dab7f496a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cad90e-22dc-467e-b2fa-d9660ab9bcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e865fe5-0c67-406c-879b-f86daa27885e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf51818-539f-4754-8125-a75e1e78d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbb6fa8-3a0d-47b9-abe4-ce892f8b1918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6217c1c-c17a-4bab-8d6f-514c2c3cd37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dc0e33-fe15-46f7-bb40-e7760fea66ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3e3567-3ca2-40db-bc8b-76234a1356c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41151b33-fbf0-41fd-b17a-948abc9b605d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9231b8-9b70-4b51-9d91-48ad28ecaa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5326bc14-196e-4f32-b891-142e22fb0ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a4051c-44f2-4a41-b05b-e1d79bb0a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c0d18-0ca5-43c8-a324-87856a78f9f6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d226190-5786-4d63-9b9a-2ede9d175c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35f2f4c-8956-4a1e-8df5-4d30b359252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d684e958-3c2b-4031-96d4-0bb86f3065e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c8101d-a313-43ef-b3ad-8dabb49362dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b559bac3-f421-44d6-a15f-1f155421b316",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c222f4d4-3387-4c10-9e6f-4a61c0eee850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f2c82d-7a27-47c7-bb12-c9ec1da4d0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae30e9e7-105d-4603-89ab-a77eae33bfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5d0969-0b9f-4df6-b52d-460b91d1542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b919931-8620-469f-885e-470d86eb4f9e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec2a30-fb9f-4c58-b585-1558bfbaaa1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560ca165-43e4-471a-825d-77a89668d2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9450585a-fb61-442c-84b5-6eefd73b112e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4565a80-8539-4294-aa76-e7753111ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd5466f-51a5-4b7b-8dad-e02ab215cbe1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f29ecb5-d968-4987-b109-e1ca616c2a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40c91b3-f769-435a-ab30-1c59effb9df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6516c13-73bd-4707-be13-218bee39cdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85c1849-0a51-4008-bea2-bd206ec841ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a57423-7de7-4d72-9994-467ef99cd37b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa001437-5de3-4ae7-b162-a8ae19a7d316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc38036-7de4-441c-af1a-4472f4fa944a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7980a348-a668-4140-b86b-5442cbd6875c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d155d16d-f79f-40d8-88b7-c1ba8cfec7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a06e9e1-093d-4b93-96e8-556e9f49827a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8add811c-e639-450c-be62-9d437868fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11606f4-3b7a-46b9-b9e4-366b9bb62947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5de9de-5b9d-4fd3-a6bc-03ad9e2b4494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0821a5-4d69-4c78-9b46-3bae2b4cf669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e09a329-ad54-4e6f-bf4a-d785b1871368",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c02f6c-7200-47b3-b94b-f609440f076d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2a5ca1-64a4-4826-a2e2-5bbbb82c62cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773d68e1-2c20-4da1-a435-b11a0668fc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39783ad9-2dad-4505-a9a2-720ee2a33394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbfc176-21df-407e-8a4a-97218849725d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ee1117-c11f-4f31-a7b1-186b2676efab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51aec5eb-90f3-426c-963f-5b45ca2f289b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c0f73-4947-4def-b824-4d93c10e3ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09816b55-b058-4981-a385-180c299caea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491cafdc-9c5e-452a-9726-e82287c9b07e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5134e0a-17ce-43fd-945f-275762cbd538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af34ff6b-0a1a-4262-9653-a8222c568c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7144db3c-a4d7-4dc5-8cdb-b4f420799990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e36551-ac1e-4848-a87c-b71c0bb78767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c41bef-29e9-4164-9ae5-219ff198576c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53788e43-72aa-4344-9c06-af8bf8e65634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2846213-2890-47b2-83d6-45ec3aae672a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2eb09a-e782-431b-bf79-811e10cebce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973f4314-188b-4958-b186-7a5bd8d62605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef79a6bc-bced-43a4-a542-2dd000a03331",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c1383-ba89-4935-a85a-2e81ee9cc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f36317-99d3-4d4f-90ac-60c637d26e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010680b0-064f-4aee-90c3-d89687cf80fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0b43cc-9f2a-453a-9f8e-4b311bd04402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f951b2b-332d-41ba-a047-7fe4a5b148e2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a3c8ec-723f-4e49-ae94-168a94682988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e654897-6f94-4e88-9a8e-8e397c770110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f374fa-6283-4d85-ba60-1763d8382dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa692b6c-aa7f-4875-a1c8-1dd1e6f299ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45465e04-7ac4-4edd-9046-9f9e8979107a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f991b71-157d-423a-976f-452b6b2fa8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eba0947-b094-4046-893a-d030a0937538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799ba919-6148-4974-b1fe-7405245bf429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378ce6b4-df58-40c7-9d90-4dc4d64f1fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1750bbd4-e5cb-4e75-944d-55571535a568",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7801d8e6-e22d-434f-81db-bbf084350ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a762c039-cd2f-4974-88e8-47742ce27e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52318cd0-ce49-4184-9de0-ad36eef2827a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3f7b08-3d5d-4e19-9701-97f267a820b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344105f0-8499-47f2-86d2-e1b4efec12db",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375c0035-fa24-4e31-aa84-acdacd0a2a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e224f0b-f350-46e8-ac1b-80b544df2443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9dcbdc-45db-462c-918c-4ef455b909a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae414b24-1a2a-4ff6-8196-0772eaa8dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c23e2-6285-44ff-896e-cf4cd1bedbee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be3d36-ff54-4633-acbf-dc2963c81596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36926035-76be-4e61-8f02-659b983d27b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e2f859-0fee-4d37-b2f2-48d427748133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affdf77c-e0c2-43c9-8279-5f50f1d39e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0394252-f17a-488a-8136-2163f514ee07",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88242f89-6bcb-4a19-9f0b-c9165840be03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bd0604-f9fa-49e6-8140-a6878b4d4762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df05b-d406-4e28-a9be-648911798f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495dd518-499d-4871-a7e4-58344179cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed4bfa6-53e7-4778-b782-a8c5ba21cf02",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cbac9f-3dd8-4a5a-8959-83160195a114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7e9ffd-9027-4947-a4e9-0a089c0e34c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b25be-7ba8-46de-9d34-f0f5cb9fcb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bbc899-4d5e-4cce-b5c8-15e9c34ce1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9741f6-1609-449f-b83b-13d520381d65",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd5a69e-4f9b-4f44-9a40-a5b0cc7bd49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fb911a-089b-407b-a15e-bedad42f8b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69026ee2-f223-413c-841a-bd0ed3253576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a2dfed-19ed-4884-a3f1-30981a60e28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316f06a9-d23c-47a2-917d-8d864f0b6f94",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e57321d-e592-4e05-8c95-d1ca786335e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e0e556-8378-4d84-8826-ba8d99194957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502f66b5-d158-43d4-9a46-fd4396c2869e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616eb233-2cc7-48f0-a0d2-6eae09d503c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69137d0-80ab-44aa-9b52-e008286437b3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a59be30-aed1-468e-bac2-cfd814eee7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b618897-1fa9-4bb1-b0e8-003a0ef4bec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca737e6-a532-4135-81f0-86577d5e88f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c04bc-f3c5-4902-9177-88dd3e505748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c828f6-8878-438f-a67c-1881899e7e30",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d782b753-51f5-4a45-9594-49626d5154e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1a3da4-2311-424a-89c8-b5d6d017e74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02769b2d-b681-475b-8562-a8834b41d376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86627ec-8432-456e-8a1a-848062040cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9c9517-53b3-4e3d-8c1c-93adbc8723f4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccf5116-d742-4457-86d2-cd5d421c0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1fbc0d-e70b-4613-a1cc-2f6ae63604fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3306668-1dfa-4178-bc3d-f2e1287da6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8b4776-8586-4d0a-b673-c8bbaa36ee9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afa1a8b-bbde-418f-a62c-bd04e7917328",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36fdf3e-fecd-46d3-adc7-7a1d45b1f2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6405f5-1054-4210-862b-6470209c76ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df46357-5c98-4a0d-9be9-a45b9529a737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210e1c46-d142-481f-b250-74df2ebc230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f0d961-1ff8-4a1b-8407-fe5e0093ebb0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fda8f9-9034-4247-8f3c-947c4ba11707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f864c46-1c36-4f63-bd43-4caec9babbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a80f6-ce01-4f2f-b487-82c4f7e4a0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2e6c78-8d08-4d2e-aae4-a2c675cb70ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1b8c5e-0f37-4ea4-bd37-e3929d730df5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2af5b9-a267-4ef0-b650-e6fbfe555880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990c37d6-8036-4549-b011-ca040d455278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f6691e-5282-4d18-b3d6-3bdfaee7e391",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffed1aa-c8ec-46d7-b522-057a7b7ad088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffa30a9-bed5-4d46-becb-641a4998eca1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb9efc3-866f-4021-802b-14a92a13c944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6d5afe-344d-4fb2-92c1-14219ca9c3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a06597f-45b1-4aa8-83d6-12ae0363cc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176552f1-dcac-4d4d-a6f3-f658b6040063"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073f9206-d7ac-4a08-9988-dd4a6c4c9ce7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbd9cf53-5ad8-4f9f-8ec3-cebc65c83c55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94059167-f4ba-46f1-8001-7ac482e03d7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cf5afb4-88dc-4e9b-ad5b-4dd44bfa55c7"
                    }
                  }
                ]
              },
              {
                "id": "15e4cf2d-2991-4693-8b8c-4ac4a8e9aa96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a0ec5b5-6365-4624-a2ee-7efe8231fff4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91768ab2-97a7-427e-893f-aa1ae6890ba2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18907311-164d-441d-a11c-532460fcf44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc7de56-57b4-4f88-ae91-425c781abc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "180e61c9-a886-4bb8-8440-c20a9f877d4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc3d7eb-080a-4b89-8d12-f61dafa52ca0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db00f1ec-d141-48ce-b883-145c2d30f766"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28339b1d-9824-44f3-a0b6-82e2fcfd18d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea238451-d828-4b45-a10d-1c0d6d5697fa"
                    }
                  }
                ]
              },
              {
                "id": "d86b353c-02dc-4859-b470-aa1eaca3bd8f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "94061f69-0f6d-4f80-b3bc-1cad22bc3c2b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c64bc5-f287-44af-a441-822f0f48effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6bdfb25c-7667-48c3-bee4-221df8bd7c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71b9679-627d-47c5-9177-9427c1f6beb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7c5e84-0b61-46e4-9cc5-6808f8330497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db3ce367-e084-4b96-ac44-80c605f1abf7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aca546f0-bf5a-48f8-9ab2-0bca9c502dc6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4427b950-8d07-4086-89d9-8330ba361653",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92cdc6ad-9c57-4c99-95b6-0342e8d26eeb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4769f271-c562-4ca0-a930-8c0fa8292c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "394a6fa5-6adc-4e6b-ae1a-92652984dd0a"
                    }
                  }
                ]
              },
              {
                "id": "660d51b4-d534-4fa1-8d70-f26f5c6a1c14",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aafd4e17-e941-4add-953d-8bde4843641b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5a02b458-2bb6-4440-83a0-8a0e5b87663a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02a71cfe-53d8-4e02-97ff-e7ac9012f70c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a33825bd-f41e-4d06-bb42-66e848c10c4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d18618b3-c01c-49a5-9e7b-1130b2e3d1b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "90540945-ca03-48e4-b2fc-a1acbbe3bcdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97e556eb-1bb7-4af6-a87c-1fe1c0defaaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04e3203f-705a-4f98-b718-4b2a105311ed"
            }
          }
        ]
      },
      {
        "id": "428c4b87-5931-45e3-be7e-476b595ba2ff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bf5d7aad-e5a9-4031-a143-77131c7ddb03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e615bd8d-0e30-4344-8339-45cce9309f95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d632cd4-e8f5-4c88-886e-ee6a85fc57c3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c3f60f-ad68-408b-ab27-5fbbef96b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "805b1981-8b0f-4c22-8b3c-8b5104e03f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5ee125-404a-4749-9033-35018b41fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ca5c60c-01f4-43d1-a619-ce708fa722e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9b8ad8f-81c6-4e8d-8537-989de09b13df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b831349-7848-4b0e-bb2a-598fbaaee40a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba2e8f15-f21a-480c-aefa-be3239c33b5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3c0a857-b66d-4f2b-ac48-c987e71690a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe308e77-9dfe-4026-ba7f-2c93c8e712d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4ea06f26-a504-46ac-b4e7-493a76399042"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab1489ec-728b-48dc-af01-17ff0079da60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3df9d7a-66b4-41f5-84cf-7d40beb34301"
            }
          }
        ]
      },
      {
        "id": "6bdbb03b-1ad2-4ea7-9183-60d4b68bfba9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f60346a-a38c-49a3-a170-4232b6d32b21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "627a4c2c-99c2-40ef-ac2a-0442604e9969",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b0491e8-17d1-4a3b-907a-9b77b09a20b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3453340a-75b9-408e-a730-63e51dfe7dfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6143d1e6-16ad-4c56-8ab9-7b8a96ca2b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b3d5b0-460a-4984-afde-9f10dc28a308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1da79dfd-40fb-4345-bc28-b6e5d786fd33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc87c4ad-eb7e-418c-8bfd-9a11148fab71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf3ec47-c1f6-40ec-ab12-ab4309d6b50f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa75b61-26d1-41f5-bf38-a2ea925b9ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bf1408d-dcf4-4f27-801f-d46fbfdfa63a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1886c65-d369-4059-b9b4-ea6587be08db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f571e52-db0a-4836-89a7-b94055b3f3f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a7403a0-fdfd-4423-a8fc-2083dcd7e95d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eed3f89a-6c3b-4a5b-9b55-a0a7b43f7c85"
            }
          }
        ]
      },
      {
        "id": "5a183576-2d28-4523-a36f-22a6dfcb4104",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c4b01407-b430-4a2b-a422-65f4d43db2fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5886d46-fcaa-422b-8d5b-937f1fc95b6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c2fd376-269a-411d-b2b8-524a707f2c93",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bae342d-0190-4d46-9ed8-8b6a2fda00b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83ca1c6e-0b32-495f-86b2-b60f45e9a6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82476a8-6cbc-4f0d-b78e-7c1640127db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87b3ca49-8dd9-4219-bee1-fdf2fb0b7b11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aef7f7f0-3eb7-4d80-a4d3-0c1b7cd2a74b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e5cecc5-7537-428f-9dd6-7aa4d6c6fd63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2d351fe-d75a-4d5c-b7a3-4dbb6c1c91f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d3d78b4-7f9d-4939-a863-a1264cba205d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fba119c-75bb-4b28-895a-f4dc31acc2a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a11c945-32d5-46a2-a859-a5fc78ea025d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "037399c5-19cb-415b-9c24-d29a321e7fda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0f8ef62-f7fe-448c-a75b-a2c1364d8256"
            }
          }
        ]
      },
      {
        "id": "465a58ed-7214-449c-ad41-e1ee0d1536c0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e58a75ce-256b-4e29-a153-cbcbcdfa08c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "802ab9bb-4e96-4e55-947b-d704eed8406d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ec067fcf-1e0f-4c76-a532-1df817b0fa17",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93536096-46db-4a93-af5f-a0e9df5ff3de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08b3d57f-156b-4fb2-b4bc-9884c2bfbcf5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.96140350877197,
      "responseMin": 6,
      "responseMax": 349,
      "responseSd": 25.34163590439387,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704587984166,
      "completed": 1704588012031
    },
    "executions": [
      {
        "id": "fcd8e36e-d02f-48b0-9ea7-7bc14638fd48",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3223bd9-e2e4-47b2-adee-b1480d012a31",
          "httpRequestId": "1616e26a-602a-4fab-9513-44bc134954f2"
        },
        "item": {
          "id": "fcd8e36e-d02f-48b0-9ea7-7bc14638fd48",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e663eb7b-bb99-4744-923c-2c188c8220e2",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "b09c92a8-d368-4916-9267-e31f69852ddf",
        "cursor": {
          "ref": "1db0d932-97d9-4fbc-866c-0dca4f05b926",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8b8ecbca-3d6a-43a1-8fd5-541457bfffea"
        },
        "item": {
          "id": "b09c92a8-d368-4916-9267-e31f69852ddf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8339afc2-fcca-4607-b3ae-abb0e93c74ca",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f35af4b4-428b-4d57-a161-6437ff101d19",
        "cursor": {
          "ref": "4b643b2b-1ed6-404c-a814-a5b278530f98",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f16fdc4f-f8b7-4429-be7a-40fb0124e291"
        },
        "item": {
          "id": "f35af4b4-428b-4d57-a161-6437ff101d19",
          "name": "did_json"
        },
        "response": {
          "id": "8651acc7-bbb7-434c-ae7b-16b662cc234d",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50046aa1-9757-4d8f-9d74-f73bafbd284d",
        "cursor": {
          "ref": "c7111fe3-4847-4a07-9cbe-beec1b57089b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a20a9034-c968-4fea-bb1f-bac13b8d4d25"
        },
        "item": {
          "id": "50046aa1-9757-4d8f-9d74-f73bafbd284d",
          "name": "did:invalid"
        },
        "response": {
          "id": "0cd6f5ad-ae02-479e-b72a-e9b84c8b1022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50046aa1-9757-4d8f-9d74-f73bafbd284d",
        "cursor": {
          "ref": "c7111fe3-4847-4a07-9cbe-beec1b57089b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a20a9034-c968-4fea-bb1f-bac13b8d4d25"
        },
        "item": {
          "id": "50046aa1-9757-4d8f-9d74-f73bafbd284d",
          "name": "did:invalid"
        },
        "response": {
          "id": "0cd6f5ad-ae02-479e-b72a-e9b84c8b1022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eacdd0-6bab-45fd-bc9f-c1891cff4fae",
        "cursor": {
          "ref": "822750d1-b067-4409-9e55-3aeb38187115",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7edb5266-609f-469b-8d12-a31f7a2f433d"
        },
        "item": {
          "id": "b8eacdd0-6bab-45fd-bc9f-c1891cff4fae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d8bcd45-7662-4384-9885-764a576a31fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca31333-03f7-450f-9c61-c72f673138eb",
        "cursor": {
          "ref": "35dc7aaa-ef27-4dfe-831c-636663ea8d78",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "140c7dbd-75f8-4e6e-84e5-1a3a8b00b381"
        },
        "item": {
          "id": "8ca31333-03f7-450f-9c61-c72f673138eb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a2719a3c-4209-46e7-bb7f-8186365c4fb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6840ad-903b-4715-abf4-c3a79c7d987a",
        "cursor": {
          "ref": "ce7e9064-3e3a-4c51-bae7-e391860b190d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "41efab3a-a897-4b39-9a6d-bc08e1a810e1"
        },
        "item": {
          "id": "4e6840ad-903b-4715-abf4-c3a79c7d987a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05d89da7-aa87-4fce-8750-565b554a1f1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef9a24-56a3-4cf9-807c-68f91f1d6d09",
        "cursor": {
          "ref": "4fa3f5b1-2866-4e2b-880d-59d68e64ddcc",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "28422bb5-c070-4a2c-b005-77aa43bb8fb4"
        },
        "item": {
          "id": "75ef9a24-56a3-4cf9-807c-68f91f1d6d09",
          "name": "identifiers"
        },
        "response": {
          "id": "b92d7fba-3706-47a5-b1bd-7e542476076f",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeb2c3f-ef84-4b43-869d-a35fe5bcf2b0",
        "cursor": {
          "ref": "de22cc32-db64-4f8c-a1cd-2b76e94f0cd6",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "318cb134-1974-4fb1-a9ef-0bf1db1961eb"
        },
        "item": {
          "id": "faeb2c3f-ef84-4b43-869d-a35fe5bcf2b0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6bf3a6cf-9198-4ac3-8394-72cdd59fdd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea791b9-400f-4d48-a1b9-b3d8fd3f1102",
        "cursor": {
          "ref": "71f7cbef-cce3-4b69-b517-cf969508144d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e16306b-9546-408e-8ccf-fa69c46d2b5a"
        },
        "item": {
          "id": "fea791b9-400f-4d48-a1b9-b3d8fd3f1102",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0c22b4b0-be14-44eb-b497-10ef9a0207f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a18c61-26da-48d1-adb0-91d4ba3f84cf",
        "cursor": {
          "ref": "942a5136-901c-4422-830b-babe735645f3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "06066a12-5e40-4532-bbaf-dbb96b26a2c8"
        },
        "item": {
          "id": "89a18c61-26da-48d1-adb0-91d4ba3f84cf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07e3510c-d557-4c6d-ac24-0d8b966ad7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2238516-9fe5-452d-b034-9a98a00df509",
        "cursor": {
          "ref": "359b8083-bd6d-41cd-b27a-b876922014e8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1357c4c8-45f0-408e-a036-5a5a4f8412a5"
        },
        "item": {
          "id": "e2238516-9fe5-452d-b034-9a98a00df509",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ad2dbaf2-0648-4c23-99fe-8bac79d6de10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc473dcd-d1ca-4be6-8eea-659990311c95",
        "cursor": {
          "ref": "bfc3d0f6-976c-4a27-8789-6afe51b2e374",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "374c8422-fe21-4c48-b9b7-23950d08606d"
        },
        "item": {
          "id": "dc473dcd-d1ca-4be6-8eea-659990311c95",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "181fbde1-777a-45c6-b87e-20b6f7b26255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b94faf-9590-468c-ac1f-d51900496bab",
        "cursor": {
          "ref": "814fe2c7-8741-4ebe-8777-f2f7cbc59f5e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1ea0cde7-fc96-478f-975c-ee2e1a214043"
        },
        "item": {
          "id": "b5b94faf-9590-468c-ac1f-d51900496bab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8cea97f6-1d7c-4c1d-bb7b-58a7f093ecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870c0022-9a8a-433e-9e15-21e501888c1f",
        "cursor": {
          "ref": "60224ce6-d4b5-4290-8837-07d06b8297a4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e5ecf6ef-943e-4b39-b073-c3ad14872894"
        },
        "item": {
          "id": "870c0022-9a8a-433e-9e15-21e501888c1f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c3746bab-81af-4cf8-9ec5-4b172ff7cfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cbfe0c-ebf3-4b39-928d-039bf2e5b2de",
        "cursor": {
          "ref": "e6865097-19ac-4a9d-a1fe-70831c10ce0a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9ceb7c80-62f7-4026-83fe-15d17b3d2097"
        },
        "item": {
          "id": "d4cbfe0c-ebf3-4b39-928d-039bf2e5b2de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "40b2594f-f1c2-40e4-a0f8-a9d9c5db7ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6822f36d-f6d4-41ca-8f1f-497247b40e09",
        "cursor": {
          "ref": "b5870a33-e9b8-4969-a267-949097310747",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "17571324-ac5f-4881-9b22-ecf429ca04b2"
        },
        "item": {
          "id": "6822f36d-f6d4-41ca-8f1f-497247b40e09",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6b1ff533-d291-4621-9271-97cc69895343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51ed93c-097e-4cb2-ba43-8346b16049fb",
        "cursor": {
          "ref": "415d97ef-67c8-44e5-a1d2-bd8bafa991c8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3828786a-119e-4e1a-a623-76da870d0d0e"
        },
        "item": {
          "id": "e51ed93c-097e-4cb2-ba43-8346b16049fb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "750ee28d-7fdd-427b-a5e5-4d9abae0b55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad623b-6c02-47ef-aca3-c27817b81b02",
        "cursor": {
          "ref": "22f078a5-9778-4d35-a930-1a94dc5e8319",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a658012c-5df2-4d83-8809-2136c819abce"
        },
        "item": {
          "id": "7dad623b-6c02-47ef-aca3-c27817b81b02",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "887b2965-e43c-4d6a-a0f3-dd9e521cff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6043fd-0232-46fe-bdaa-4c90903a66fa",
        "cursor": {
          "ref": "f2632a2e-fe5a-41ca-ba27-5a5edca810e3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fa6118a0-db49-4f4b-8779-dc1937ed605f"
        },
        "item": {
          "id": "4f6043fd-0232-46fe-bdaa-4c90903a66fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d4293d9-1868-4bfc-ab2e-277ed9936cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9204fd83-4535-4436-9bd3-080ebe23cf0b",
        "cursor": {
          "ref": "c2e42e68-231f-4f45-97c2-5a2c9d0c92ff",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fe7663d4-5eba-4ff4-9b14-b607086f0223"
        },
        "item": {
          "id": "9204fd83-4535-4436-9bd3-080ebe23cf0b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e61fb319-a3ea-4578-a344-3a2f9b385c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df75208b-4cec-4728-9b47-caea52a1eb78",
        "cursor": {
          "ref": "74e800ef-2a33-42d6-ac93-3bca8dbeee07",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6091227b-4df8-4c8b-ac58-0aa088fa5f29"
        },
        "item": {
          "id": "df75208b-4cec-4728-9b47-caea52a1eb78",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "906c457d-6b8c-494b-bb94-15af21f1ce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0557215-228c-4ae4-9217-71c56d2e9fc5",
        "cursor": {
          "ref": "7562d819-34b6-40a1-b749-afc82c1ef668",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ba0cc7a0-d5c3-4b9c-ae34-7d4329e7839e"
        },
        "item": {
          "id": "f0557215-228c-4ae4-9217-71c56d2e9fc5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "00dbc677-5326-474e-9924-42fb8f8e5696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce94796-dcbf-40d6-882b-026ba76abb02",
        "cursor": {
          "ref": "2a1ac215-259b-456b-a701-fccbc8636a00",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b63dc4c4-d3dd-46e3-a54a-5fcdcef87606"
        },
        "item": {
          "id": "cce94796-dcbf-40d6-882b-026ba76abb02",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "151a7edc-f657-4ab7-ae77-3e4de95fe77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6df871d-32fb-431a-a899-d31a3c4ea792",
        "cursor": {
          "ref": "1c0d9a4c-02b4-4662-af48-1e7f34988bc5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5f1e7fc4-cb02-49b2-b231-65183e06834c"
        },
        "item": {
          "id": "e6df871d-32fb-431a-a899-d31a3c4ea792",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "38eede64-8306-4361-9e20-6a892832a512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db5b9e-7b8d-450f-9b04-79e63b6addf2",
        "cursor": {
          "ref": "789e1f2a-4433-44df-8eba-a726b76aca2d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fe61272b-1d6b-4d72-8473-ad9fd68ba689"
        },
        "item": {
          "id": "23db5b9e-7b8d-450f-9b04-79e63b6addf2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6c757e7a-9db0-4734-89b8-f352fb2e0801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b73c978-ec62-49b2-abd4-713f3d00da86",
        "cursor": {
          "ref": "70ad528d-55d8-4cc2-87fe-fcd8e626ef91",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7a70975d-d708-4db3-bb1c-61f87d0522d7"
        },
        "item": {
          "id": "9b73c978-ec62-49b2-abd4-713f3d00da86",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8ae65899-6745-4be7-b182-77cd41a8c17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac6fac-c292-4b90-bf68-79d7ede85072",
        "cursor": {
          "ref": "2f0125f6-2b16-4a20-ae5d-68de2e84ea7e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4b8ee5d2-319c-44c7-8c29-ad5eb022934c"
        },
        "item": {
          "id": "93ac6fac-c292-4b90-bf68-79d7ede85072",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3285f020-93b5-4e83-b076-89dc1d82f457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd62f5c5-180c-49db-85d0-c465a15922bb",
        "cursor": {
          "ref": "a2feb2e2-f1e9-4bd6-93a6-73fa2532603a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "34ad7ca7-27bb-44d6-b39c-949f2342f02c"
        },
        "item": {
          "id": "dd62f5c5-180c-49db-85d0-c465a15922bb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b2471b50-25e1-4a73-a541-bda73247aa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a5b92f-e32e-42e6-bccc-ef87c2e951ba",
        "cursor": {
          "ref": "fe156182-315f-4f96-8191-da8d764588ac",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6983bf0a-5376-44b1-878f-359fcbb422e4"
        },
        "item": {
          "id": "28a5b92f-e32e-42e6-bccc-ef87c2e951ba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2ab8f2a7-b719-432b-ae47-e9872a6eeaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32082d0c-493a-49d2-a1fe-6c8cd90fe832",
        "cursor": {
          "ref": "143eb05f-ca4c-41b0-885e-ed8ad404ba9c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "38644989-e011-4980-bdfb-1d6f90440161"
        },
        "item": {
          "id": "32082d0c-493a-49d2-a1fe-6c8cd90fe832",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f0949182-a036-47bc-a6c1-0b63f12dd91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0683d8-8e2b-43e4-ac6f-953de4152b67",
        "cursor": {
          "ref": "4a396991-0571-4947-891b-05b06d6000a6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "584a29eb-7b0c-42cc-b9c6-2fd51444c336"
        },
        "item": {
          "id": "bd0683d8-8e2b-43e4-ac6f-953de4152b67",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bedd75aa-137e-4603-af6c-3f6e69be74d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86073a8b-a844-468a-8d46-8f258c893482",
        "cursor": {
          "ref": "37af712e-7f8e-4f07-ad7d-e4613072f1d1",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d6af9a44-b4c9-4dd9-b2ca-95c7837150f8"
        },
        "item": {
          "id": "86073a8b-a844-468a-8d46-8f258c893482",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "07ff61bd-dc16-4f93-a371-968b1e89027d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06efc979-d6e0-4564-bec2-616d2939e17c",
        "cursor": {
          "ref": "e0b2fa29-9331-4351-a2f4-593b87ec89b4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a2632c8e-5149-493b-9da5-335a0c294db4"
        },
        "item": {
          "id": "06efc979-d6e0-4564-bec2-616d2939e17c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ad751321-57bb-4ce8-aa9a-5fbd61a5a0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b201e-3f88-4ea0-8f05-1e908901a2c4",
        "cursor": {
          "ref": "2d6214b5-2928-4a9e-8711-611e6638c523",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "28c5eed5-b432-4eb1-9232-f0fd019a337f"
        },
        "item": {
          "id": "d61b201e-3f88-4ea0-8f05-1e908901a2c4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8e946486-5710-4c18-9483-81a8379fb23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cd9470-ebae-4f75-a566-81b593f41f15",
        "cursor": {
          "ref": "6ac3bc75-d4a9-4d3c-8dd1-0676b1b3b5d1",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0386da54-7bee-48e6-9360-c8066103326e"
        },
        "item": {
          "id": "16cd9470-ebae-4f75-a566-81b593f41f15",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "31d896b5-1ede-4f6d-a445-aebecd66ad02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05263673-1769-49b3-acef-620c3af171dd",
        "cursor": {
          "ref": "0fa5a2f5-9d88-4a79-817e-b7f01ac8f5b4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2af8f173-ca5e-4ecc-a951-d7b2398eb581"
        },
        "item": {
          "id": "05263673-1769-49b3-acef-620c3af171dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d194e30-9dca-4f37-ae0d-6c243ccf9cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7855b652-1f50-4f25-9e96-23ac093cfd84",
        "cursor": {
          "ref": "8eeaf538-6568-45ed-966d-f40ecd6f2392",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c1331949-f667-48fc-bbbc-1a211a0b0e0c"
        },
        "item": {
          "id": "7855b652-1f50-4f25-9e96-23ac093cfd84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1b3934ed-e03a-4d96-8efb-e910439e1c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f27463e-e124-49dd-96f9-571ef02f8ac6",
        "cursor": {
          "ref": "d45097c5-9503-4a42-ae6f-477c964149c6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1b4552cf-c2b5-4d0b-b981-0b6ca7f3e412"
        },
        "item": {
          "id": "7f27463e-e124-49dd-96f9-571ef02f8ac6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f0c4b93d-77eb-47e2-a78f-e63deb076e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697f4595-ac0c-4463-97d5-18315a94ff6e",
        "cursor": {
          "ref": "0e707d14-c87c-4cbf-abdf-e2a486042548",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a32c7e68-b0ae-40ee-9790-6444d712fe57"
        },
        "item": {
          "id": "697f4595-ac0c-4463-97d5-18315a94ff6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "47a82303-3f2f-47dc-9271-0be529868113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd2322-91d6-4a20-8fbe-d4a27f01014d",
        "cursor": {
          "ref": "f9fbbffb-1378-4151-aeb4-fb6f34b3fbac",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ebf4355a-0754-4a52-9b55-43a82e900b33"
        },
        "item": {
          "id": "8ddd2322-91d6-4a20-8fbe-d4a27f01014d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cb6c3292-8fea-4d0f-b1cd-22226af47919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e09963-d890-457b-adb6-8fb4e8223b1a",
        "cursor": {
          "ref": "ec6fd382-0b16-437b-8950-56cabcdc4fb0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "327b809e-5b32-44d3-bc0f-b6334de61ff7"
        },
        "item": {
          "id": "a1e09963-d890-457b-adb6-8fb4e8223b1a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97bc6588-ff72-4d54-8f85-efba60c56ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fae353-0e16-4fce-aeda-6f6647d88a69",
        "cursor": {
          "ref": "55540c52-5826-4542-b9fc-39c2a9b1309b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1df1c364-f341-445f-9587-cc8caa154acd"
        },
        "item": {
          "id": "c3fae353-0e16-4fce-aeda-6f6647d88a69",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "511e1c30-de2a-490a-9aed-e483cac023d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf319f4-afdb-4150-ab33-0b961f78c4d1",
        "cursor": {
          "ref": "aa108742-e4b9-4766-a627-b656a1e6efcb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1311a4ba-148a-4694-9e36-e59a3f16631c"
        },
        "item": {
          "id": "0bf319f4-afdb-4150-ab33-0b961f78c4d1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eda4a3e0-bdc9-42e3-9e28-8dd897fc7eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cd3276-31c1-4097-b16a-57893ad2d2c2",
        "cursor": {
          "ref": "42f7057f-adf5-4fbf-a589-95a7d4ab1214",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7e7a0eac-1789-4ea4-8a1f-ba93d77d3023"
        },
        "item": {
          "id": "36cd3276-31c1-4097-b16a-57893ad2d2c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5c06bace-6960-44e4-823b-f92b472e085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376519ec-bf7c-4ed1-8c0e-81aa15185ad3",
        "cursor": {
          "ref": "d9dc51bc-95fa-48ff-892c-4ac74919057a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dabc15f9-4ed6-4091-af96-b917e44cca79"
        },
        "item": {
          "id": "376519ec-bf7c-4ed1-8c0e-81aa15185ad3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "236855d4-e55c-47d6-9437-3b857f3548e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b11ac-ae23-4851-8f1a-d8e5bad02ca3",
        "cursor": {
          "ref": "f8beaf53-7f31-480b-9c08-58ff626882c9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "163f9cae-56f1-49f5-be2b-00e3050c928c"
        },
        "item": {
          "id": "276b11ac-ae23-4851-8f1a-d8e5bad02ca3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a62c0b33-d887-47c7-aaf7-21f647ed38a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6099103b-2495-4f16-9065-30e0b318418b",
        "cursor": {
          "ref": "3f6ed2eb-86d8-4404-9d67-146e9fcb0e2e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "474bc4d3-241e-4d91-b1a4-d42c85bb1c4d"
        },
        "item": {
          "id": "6099103b-2495-4f16-9065-30e0b318418b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e6473677-977b-4d28-9f98-f91749a40915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d53c39-904a-4388-af40-ec5ad907b431",
        "cursor": {
          "ref": "df985442-d4d5-45d5-860f-adc95eefea04",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "54db0265-3560-4248-8185-3b27b2846534"
        },
        "item": {
          "id": "61d53c39-904a-4388-af40-ec5ad907b431",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4892102d-e3d7-4731-a1c9-97043ab5836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055c5947-8a12-42dc-bc04-33c1611dbf75",
        "cursor": {
          "ref": "683c2940-ef3d-4434-b649-4d460c416b0f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ea895fb-0091-4884-a1a9-67972370a580"
        },
        "item": {
          "id": "055c5947-8a12-42dc-bc04-33c1611dbf75",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa6d0975-d970-4968-94ed-95982fd2f465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261febe9-ad22-4eb0-8945-2771b760bf19",
        "cursor": {
          "ref": "4befb394-13b2-4304-8820-c9ef9877fcd2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c8f2449-c2d4-45cb-8bee-bec8ac0e7d4f"
        },
        "item": {
          "id": "261febe9-ad22-4eb0-8945-2771b760bf19",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "548ca2c0-d28d-4f38-8b08-667bb847dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cf7694-3c45-4ead-b98d-cf8bac478c3d",
        "cursor": {
          "ref": "a2ad3657-1be6-4af9-b3be-408d23105d70",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "89d49759-9137-4007-8cba-0ac04dbcc0d1"
        },
        "item": {
          "id": "d4cf7694-3c45-4ead-b98d-cf8bac478c3d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1c549fee-96c1-4d46-bb19-139403e0e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e98ad2-b228-4ecf-a606-e9de83740aa1",
        "cursor": {
          "ref": "de03530b-ec80-4582-b814-de03e787d9fd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "edce804d-82fb-4f3d-be46-652cac721dfb"
        },
        "item": {
          "id": "43e98ad2-b228-4ecf-a606-e9de83740aa1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b9e64692-e0a5-44b8-b333-19646aaa8d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb22af1-3eef-4114-8a6b-51958b49ae91",
        "cursor": {
          "ref": "7ea1b988-4080-4b9c-9f40-470a3421bcc7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b0998c6d-57af-4d6b-8a2a-990da2a1f541"
        },
        "item": {
          "id": "3eb22af1-3eef-4114-8a6b-51958b49ae91",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7618a8fd-a4da-4dab-87d5-1852cd8053cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79efed4-8f34-4745-9cd7-4c0a87a5a52c",
        "cursor": {
          "ref": "0a0366f6-f5ef-4028-b5bb-61e9096bb0d5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8cae0c17-4a8f-41d6-a250-ab3656f424ca"
        },
        "item": {
          "id": "e79efed4-8f34-4745-9cd7-4c0a87a5a52c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b3d1977-3e74-42d0-84d9-7fb5b27bda67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b960e51-0fe5-4c09-a02d-0e93ec7de816",
        "cursor": {
          "ref": "c1002d6c-6da6-4ca5-83b0-57a0dde75f5b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ed99bd23-597c-42a1-8dd9-6c7a9709947c"
        },
        "item": {
          "id": "3b960e51-0fe5-4c09-a02d-0e93ec7de816",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "78a4289d-41cd-419d-83e7-4baad27947f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb339641-8a0a-4ee2-b8c7-3f93d216e05b",
        "cursor": {
          "ref": "651770ea-caed-4bb0-8a6b-7480540b6fc5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2fed2a8a-0fe6-45d1-b7c1-f98452aa6098"
        },
        "item": {
          "id": "bb339641-8a0a-4ee2-b8c7-3f93d216e05b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ce07c742-1d76-455b-b028-2a05f821f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8f2ee2-ebb5-4c53-8365-d1ff27d1c91e",
        "cursor": {
          "ref": "b92991ad-6d9b-401a-8659-e45cd278268c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1eafea68-4043-4b2a-9462-c6a2a98eee9a"
        },
        "item": {
          "id": "3e8f2ee2-ebb5-4c53-8365-d1ff27d1c91e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a36b28b3-3922-4c14-b465-f92ad8559453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71539ea-abc0-4e04-b8a0-5d14076fd2bf",
        "cursor": {
          "ref": "3cd6c586-bf25-4387-bfdc-f6628cb119bd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6dccf380-6977-475a-823f-4c9c91220ca9"
        },
        "item": {
          "id": "b71539ea-abc0-4e04-b8a0-5d14076fd2bf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c059953f-e4a2-48aa-89fb-c750ab6f0282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96600648-3963-4691-90ba-eac0e862aa13",
        "cursor": {
          "ref": "d2ccff9d-4b85-43b1-a000-9c59f48cebfa",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d3988df7-b6e6-4652-a485-0cb750ae4b46"
        },
        "item": {
          "id": "96600648-3963-4691-90ba-eac0e862aa13",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89a6b905-33d9-43f5-8f99-a9d91645bfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9238b63a-fc11-439b-81a6-b5dcc7f2ef1d",
        "cursor": {
          "ref": "54562658-c845-4975-a8d6-9aa8d6563a55",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0852dd32-b7a8-4b56-87e5-a7bc0d81bf24"
        },
        "item": {
          "id": "9238b63a-fc11-439b-81a6-b5dcc7f2ef1d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6d71c672-cd99-4fb1-ab1b-b2141b2eef29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10939ef5-d068-4e11-9d4e-6c6efa3d343c",
        "cursor": {
          "ref": "f0d40435-17c7-4f11-91ac-e1a2c841f345",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20f0e8af-d63a-4737-80b4-956a740ae772"
        },
        "item": {
          "id": "10939ef5-d068-4e11-9d4e-6c6efa3d343c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "17cc1df3-1d48-4dc5-acc5-6b62a4c30bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17bf364-92c5-472b-98a7-af7362ec0090",
        "cursor": {
          "ref": "760fd2ac-cac9-44d2-b867-c3a0ac02d322",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "72fc5ad0-c7f0-4486-8540-229832f30298"
        },
        "item": {
          "id": "c17bf364-92c5-472b-98a7-af7362ec0090",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "61e24f99-6a37-40a0-bbc1-2139016b9add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07ddbb-0b48-43de-8bab-75350d916779",
        "cursor": {
          "ref": "0061a92b-b74a-4cdf-a203-6439bb135730",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b8efed2-3726-4ccd-9766-94c8508358b1"
        },
        "item": {
          "id": "9d07ddbb-0b48-43de-8bab-75350d916779",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "15e10cb5-73db-4c19-8905-41721541ff8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c25c1f-82e6-4ee4-9e06-98a2f8f826da",
        "cursor": {
          "ref": "783a67a9-f9bc-4b44-9c24-ce1483fefcde",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9b5401f2-8850-4a9d-99c7-c63f6b52fe09"
        },
        "item": {
          "id": "55c25c1f-82e6-4ee4-9e06-98a2f8f826da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f2b1eb98-a19a-4944-88e3-51be446c7517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7881c2e-a3ac-46a2-9fee-9e6127e51f7e",
        "cursor": {
          "ref": "aa21b4ac-912c-437a-9b00-72a17ed63ba4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ba3331cc-eef8-43a6-88ee-294076e1b623"
        },
        "item": {
          "id": "c7881c2e-a3ac-46a2-9fee-9e6127e51f7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ad6d1ac0-5bd8-47f6-bc86-7950f977ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf647a5-3ee3-445c-b5b1-2ff0683dc300",
        "cursor": {
          "ref": "2a53b2de-0528-4434-9c5e-4d2849cd53e6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fe6a8fff-321a-4c27-90f5-f22bece3383e"
        },
        "item": {
          "id": "dbf647a5-3ee3-445c-b5b1-2ff0683dc300",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6640eaad-9e14-437a-bec8-8e70ad1122f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de68e7a0-4f26-4cae-aae3-2cd5bb9c3c83",
        "cursor": {
          "ref": "ee157041-6361-41ce-abe4-51fca50ecfa9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9dbd661e-514b-4198-aa26-b63ed7e6de55"
        },
        "item": {
          "id": "de68e7a0-4f26-4cae-aae3-2cd5bb9c3c83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2f572519-af42-4723-830a-db911955c15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5f1780-bdce-4ef9-932b-de9117283c0a",
        "cursor": {
          "ref": "88c64d73-3ff5-4f70-bf3c-3d86ec2d6abe",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6aedb8ed-2b5b-4eec-92d2-3d0d399944e2"
        },
        "item": {
          "id": "3d5f1780-bdce-4ef9-932b-de9117283c0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "23524d19-daf2-4306-8911-2cbfc50ddde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8b64b4-90b4-4f57-8692-794e1174564d",
        "cursor": {
          "ref": "d75cd20f-3402-4a78-9bdd-f72b4812dbd9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85d26692-8d97-46aa-b2cb-6bfcd187692a"
        },
        "item": {
          "id": "3f8b64b4-90b4-4f57-8692-794e1174564d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "482a2c12-79ea-4895-8b1d-4e02183f79e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c01e5c-eaa7-4177-9603-ea88d1546f1b",
        "cursor": {
          "ref": "1231a9b9-b4b6-4bdd-9de9-18cb29e7099a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0813c318-576b-4e24-a388-bab63336ccaf"
        },
        "item": {
          "id": "30c01e5c-eaa7-4177-9603-ea88d1546f1b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a806846b-45cc-4cad-a34d-cb1a81e830d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd29ca33-82cb-4bd9-a8b6-2948c11147b2",
        "cursor": {
          "ref": "63adcc43-ba8e-40f6-8503-55868aea71b8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "305f4902-333b-4b56-910a-e0059b566a8f"
        },
        "item": {
          "id": "dd29ca33-82cb-4bd9-a8b6-2948c11147b2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "79bba6a5-1f59-4460-b3a5-29bf7067418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44491ee4-cbac-42cf-bda5-1d4ba97d4c9e",
        "cursor": {
          "ref": "b485676e-b743-4ca1-98f6-02a4c43089db",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "646b71f9-0ba2-4169-8538-febb638f0c67"
        },
        "item": {
          "id": "44491ee4-cbac-42cf-bda5-1d4ba97d4c9e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "511dcc30-b06b-4e4b-a916-49a17961a1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f494f6-2b4c-4198-afd8-0cca5c79bada",
        "cursor": {
          "ref": "69195cfb-2179-438b-802b-8bf42ad436f0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "05385a5f-2b37-4c7d-9174-82c102a00cd8"
        },
        "item": {
          "id": "f4f494f6-2b4c-4198-afd8-0cca5c79bada",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5542aa1b-8745-49d6-9074-1ebac26fee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f49ee-6372-413b-821f-4038e75da81b",
        "cursor": {
          "ref": "36db2d6e-4158-409e-a7ec-661ab0a4afed",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a2f8a443-d48d-4847-9f92-8fcb9e6233e3"
        },
        "item": {
          "id": "787f49ee-6372-413b-821f-4038e75da81b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0cc04243-9d13-4f18-9f25-6de58ae05621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c3708-a977-4666-85a8-8431c36bba03",
        "cursor": {
          "ref": "383b41c4-7a58-4807-a677-dfffce96358b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "232f55b2-1d50-45e4-8967-fb4e97250163"
        },
        "item": {
          "id": "9e0c3708-a977-4666-85a8-8431c36bba03",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b3f6502e-3841-490f-9703-3cee302630f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a624a52-a8e7-4a87-88ce-290d6a91a055",
        "cursor": {
          "ref": "31577d8b-847c-4728-90b0-e04a1b61fb95",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "48c70574-ab20-43e7-b0e8-9c7626a4ee5b"
        },
        "item": {
          "id": "8a624a52-a8e7-4a87-88ce-290d6a91a055",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90112c70-526b-4700-a042-8ee1a11fdf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1aa15d-244d-4493-901b-a2e2d801030a",
        "cursor": {
          "ref": "3f507b97-e2b8-4731-b4cd-764e563fd0eb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7f566ccd-7613-4fde-9356-1d813abec754"
        },
        "item": {
          "id": "ad1aa15d-244d-4493-901b-a2e2d801030a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b06b20ea-f79d-4e6f-a570-c7106972ff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca77ca-b856-4650-94a4-2d85cb86f3c8",
        "cursor": {
          "ref": "0b7ccecb-300f-4a75-9233-b6646039b8c6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "777bb166-de5b-45ab-a0f9-2830938b3342"
        },
        "item": {
          "id": "99ca77ca-b856-4650-94a4-2d85cb86f3c8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "529638a1-4489-4c70-a691-dd5b3b36501a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59438a44-60bb-43cb-8e61-53bdcb3c458b",
        "cursor": {
          "ref": "3c2c53c3-ef6d-4f30-80a7-7277f05cdbdc",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0aea2d4e-1832-4fdd-9084-30b32ce84b05"
        },
        "item": {
          "id": "59438a44-60bb-43cb-8e61-53bdcb3c458b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bb5d1d78-957b-40ff-8ae5-8a2cb4aa08e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c4337-4835-4f3b-9240-12b08c901b79",
        "cursor": {
          "ref": "f29dd8f6-f9eb-4a8c-9a57-11cb9be299a7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92f5ba4f-5299-4e05-8c98-c9b9292ad7c5"
        },
        "item": {
          "id": "9e0c4337-4835-4f3b-9240-12b08c901b79",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7ab06554-d910-44b5-816a-c1eaf69f003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be8ee49-8239-4b84-8c1c-c3e630dc48e4",
        "cursor": {
          "ref": "b0845d96-9c27-41cd-aabd-c7c04e97ef0f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "15f43e1e-6779-450a-a14e-7a2e40c4f9a2"
        },
        "item": {
          "id": "2be8ee49-8239-4b84-8c1c-c3e630dc48e4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "de60f1ea-8039-4b2f-a44e-b3f373f74a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31359699-05bc-419e-bad0-9fa1b4c30baa",
        "cursor": {
          "ref": "86ca5ee8-702f-4a10-840e-674b0f4070df",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8f9176af-c846-46d6-aa16-4e15a9f69eb2"
        },
        "item": {
          "id": "31359699-05bc-419e-bad0-9fa1b4c30baa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d26db5eb-7806-4e8e-9986-fe39caa38c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9587a71-1763-4a4b-af93-b71882012b79",
        "cursor": {
          "ref": "b7f94854-4374-4755-ba74-26ef2630d08c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9ecad5e6-9040-4923-a4bf-5107ca1dafc6"
        },
        "item": {
          "id": "c9587a71-1763-4a4b-af93-b71882012b79",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "35015bd4-5808-4888-914b-34ebad9dd531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4aae8a-a163-4648-9b0e-64605172e303",
        "cursor": {
          "ref": "a68986b8-a718-48ba-85c7-d5810cc24ea6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a34594f1-620c-4b88-b792-a1d0be4d735c"
        },
        "item": {
          "id": "ec4aae8a-a163-4648-9b0e-64605172e303",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fc9317d8-5c1b-4cc0-b6ea-9a8bdf84a3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8516417e-89a9-43ae-abbe-8f183adc23ef",
        "cursor": {
          "ref": "ac39cb7f-90ff-4501-8b7e-d6e13f219c7a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f909fc9e-5d33-4f8d-9d55-c4ad48233513"
        },
        "item": {
          "id": "8516417e-89a9-43ae-abbe-8f183adc23ef",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5540b468-0d2e-427d-8e18-de1806e66c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa41a8c-e8c5-400d-a976-5864a4a63854",
        "cursor": {
          "ref": "613385c3-c856-4588-800c-0e666737d21c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0524cafb-5c3d-48e4-b5ab-0afe01cfa723"
        },
        "item": {
          "id": "daa41a8c-e8c5-400d-a976-5864a4a63854",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "20c495f2-96ef-4d09-9790-32478a367b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf59114-dd09-4fba-bc28-07d60d8f6ded",
        "cursor": {
          "ref": "0a50d044-f0ba-49e5-b7e0-154558155c3a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3689e891-2101-4bb6-be4d-90ed6f56e1c6"
        },
        "item": {
          "id": "bcf59114-dd09-4fba-bc28-07d60d8f6ded",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d6379acf-e708-4a8f-820a-7930fead190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d973249d-ee49-46af-b561-ae065d4fa8b4",
        "cursor": {
          "ref": "9eb0188f-51db-4483-86fc-82f03b8bac53",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0c4b257f-7a97-4d33-b1f6-7603b45a5c12"
        },
        "item": {
          "id": "d973249d-ee49-46af-b561-ae065d4fa8b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9409806b-5e40-41f4-84b9-0a5444ebd791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624e57b-39dc-4de8-8810-cad6aadfacb4",
        "cursor": {
          "ref": "9041ea23-ada6-4074-8e52-ac82df9d9c6d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a68f9310-ceaf-44c4-aea7-8d1d5c450d21"
        },
        "item": {
          "id": "d624e57b-39dc-4de8-8810-cad6aadfacb4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "80900041-ca02-4b5b-960c-c2ce248bc0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef93d0eb-12a2-4c85-96e4-ea7a1cfeee39",
        "cursor": {
          "ref": "15a08999-49e2-4623-aed8-85959b219de3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9f14525c-9063-4ea6-b02c-c7303de10160"
        },
        "item": {
          "id": "ef93d0eb-12a2-4c85-96e4-ea7a1cfeee39",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36dd82ba-7663-43a6-8b11-b0be05f9768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb233e-2397-48bf-83b4-3578b3fcfd74",
        "cursor": {
          "ref": "9c218385-68c2-4497-9039-32b32704dd5e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "39b0ec17-3a6f-4e03-bd67-7b128f819b8c"
        },
        "item": {
          "id": "2dbb233e-2397-48bf-83b4-3578b3fcfd74",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a7291930-2566-4e3e-91fb-29d981b2c756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeb44e3-7c04-4699-8236-f7f7c9f12c53",
        "cursor": {
          "ref": "6929ce9a-71fb-4683-9249-3fda20bdfb83",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d12593b3-7e51-4633-8068-53b00140778d"
        },
        "item": {
          "id": "aeeb44e3-7c04-4699-8236-f7f7c9f12c53",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9fe84930-01e0-4db2-8139-65030e6cc3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c153ad-99cd-4c8d-b0aa-df3e8f5f3a1b",
        "cursor": {
          "ref": "e467c964-b361-4964-b771-14e5b8340e26",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "167612d8-2d9d-4e2e-ae44-d53ca7f4b376"
        },
        "item": {
          "id": "17c153ad-99cd-4c8d-b0aa-df3e8f5f3a1b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "93ad411d-1f2e-40d6-a571-bac2959506f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1e15a4-b705-436d-92a0-e1495d033576",
        "cursor": {
          "ref": "15850acd-d947-431d-a4c7-99d6b29b3ef4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "35c186fd-0726-442f-9f2c-a6ce7f572674"
        },
        "item": {
          "id": "fb1e15a4-b705-436d-92a0-e1495d033576",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "88b2141d-863e-400b-9a3e-d8c131788fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f84eed8-b730-4e32-8c3d-d8bf8828533d",
        "cursor": {
          "ref": "06bdcf0d-5d96-40d9-96f9-6392bc3e78c2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e44aab5e-077f-4d37-a07f-7db9043b5a47"
        },
        "item": {
          "id": "4f84eed8-b730-4e32-8c3d-d8bf8828533d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a80af37f-5185-4e0f-a5d9-224ba819a8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1e01ef-34cb-4d18-9b76-be14b59f5ae7",
        "cursor": {
          "ref": "7ede28a5-2b2b-41c7-ae4f-8c3bcc643b77",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a0b87e97-2a63-4536-a4af-6c7935929a05"
        },
        "item": {
          "id": "8a1e01ef-34cb-4d18-9b76-be14b59f5ae7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cfaaa50d-3340-429b-809c-9c9c227fdd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afb5195-92b3-4c55-a6b5-d28acc17b11f",
        "cursor": {
          "ref": "d0eea373-9a0d-43ca-a731-83f5fd9f306f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "30e93460-481d-41ad-97a2-39985b022966"
        },
        "item": {
          "id": "9afb5195-92b3-4c55-a6b5-d28acc17b11f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "03ae45df-57d5-421a-81cb-d8906373956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355f85e0-a8d9-4a92-b453-93f45657cb91",
        "cursor": {
          "ref": "bfe05340-341d-407d-ada3-754ce470f190",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "855237fd-8ba9-43e0-9118-45e8eef4d788"
        },
        "item": {
          "id": "355f85e0-a8d9-4a92-b453-93f45657cb91",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3cce9e39-adb1-4954-9964-301e287d7f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5ab3db-c121-4463-9bf7-d048388cab65",
        "cursor": {
          "ref": "b83a7786-09cf-4094-aae1-578d05bb6166",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ba370617-c003-4c87-a74f-41bba9e7084c"
        },
        "item": {
          "id": "4f5ab3db-c121-4463-9bf7-d048388cab65",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5e91a4d7-23c3-44e0-a04e-1df6dda19786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1e861b-de34-45a1-b546-e3135547d835",
        "cursor": {
          "ref": "6e9598c5-cc29-497d-8c72-b4a36b28bc6d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a4660370-1df1-4749-8fa0-cf77b7e24053"
        },
        "item": {
          "id": "6c1e861b-de34-45a1-b546-e3135547d835",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c9e6c7aa-3bda-471d-90df-f78b1f2a838a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf52cd0-f530-4fab-996a-24e4ebfa271d",
        "cursor": {
          "ref": "2d99c5ff-ee75-49bd-9f73-3624dcfb71cd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bc884768-3cc1-45e0-8f09-c2745e845917"
        },
        "item": {
          "id": "dcf52cd0-f530-4fab-996a-24e4ebfa271d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f83890ee-c8de-405d-a4a5-9e71d9420f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cb49d1a8-ebee-43b0-84e4-5526fdc059a2",
        "cursor": {
          "ref": "a1b27b24-0b50-4877-91c3-43164b42680b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f197f4c8-2303-4b9f-995a-5ec12b8d0694"
        },
        "item": {
          "id": "cb49d1a8-ebee-43b0-84e4-5526fdc059a2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f17b3e3c-3d73-4b71-8941-931cde9bb436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a2eca3d9-26f3-4d16-89da-452c394017b2",
        "cursor": {
          "ref": "595c8c49-f087-4ce4-b80c-caf03f971c3b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9397c724-2f2e-4fe6-983a-fa3e4a2df2c4"
        },
        "item": {
          "id": "a2eca3d9-26f3-4d16-89da-452c394017b2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f80e2efd-5e41-413c-ad0b-c811a9d33c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0d35593c-d693-443a-b4ab-63ee2ebc2898",
        "cursor": {
          "ref": "49d718fc-7532-4b7b-9d44-0691e5a74e3a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c7ab515-95c1-494e-b5c8-b4ff8536dd60"
        },
        "item": {
          "id": "0d35593c-d693-443a-b4ab-63ee2ebc2898",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "065eee3c-f992-4899-97cc-f929e70f8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "49aca632-4cab-493d-ba06-4d4baf2fb505",
        "cursor": {
          "ref": "0f508801-6433-43c3-a34a-b682b1321d35",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "753f72ca-188f-4a02-b442-acd4d130e808"
        },
        "item": {
          "id": "49aca632-4cab-493d-ba06-4d4baf2fb505",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20cece3b-1bc2-4bc4-ae64-6c5900ac72b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1e08d116-3f01-4de7-9a51-918514635f48",
        "cursor": {
          "ref": "ba6f930f-ed89-4ab9-b56d-233ad54c755e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dd692e65-b011-47f5-a5e6-9fed7a416eb5"
        },
        "item": {
          "id": "1e08d116-3f01-4de7-9a51-918514635f48",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ad544d67-f748-4628-846b-9c958764f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e53a327e-cd5f-4fa8-9160-518a594640b5",
        "cursor": {
          "ref": "6b77fc9b-16cc-4719-bae3-51661a4ad46b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "349be329-1de8-41ce-80cc-590ea81945af"
        },
        "item": {
          "id": "e53a327e-cd5f-4fa8-9160-518a594640b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f0015b5b-9cf8-4085-9cb9-82baa0316dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "65dfcb81-f369-4a6b-a005-1683a548a392",
        "cursor": {
          "ref": "42691969-da5d-42f2-bc1d-ac30ca7bc87a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a3407253-7548-454d-a115-48598cd8dfc4"
        },
        "item": {
          "id": "65dfcb81-f369-4a6b-a005-1683a548a392",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e6b7faef-aed2-4178-aa58-6e02edd012b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6599746e-d5fd-4497-9ea2-4f98f93e70fd",
        "cursor": {
          "ref": "2e8545cd-a9f8-4e9b-a731-b15256c7822a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "502d29da-7f6d-4984-ae14-cf303930c688"
        },
        "item": {
          "id": "6599746e-d5fd-4497-9ea2-4f98f93e70fd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7adefd7e-eb78-40b3-852b-3f3f6be4f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3cd715-6c41-42f6-94e7-22fc9892f4c8",
        "cursor": {
          "ref": "c6eb5417-9949-40f9-94d4-489c1e987a82",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "81d3ecda-a43e-49a7-8e7c-77ed8ad437b1"
        },
        "item": {
          "id": "da3cd715-6c41-42f6-94e7-22fc9892f4c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b80a70a6-3a73-4c29-add7-325b4e4195ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cde357-aa81-4651-b11d-b7186be9edb3",
        "cursor": {
          "ref": "16e09f36-3540-410f-9dda-a805ac0c0ba4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b677b61-65a1-403f-99a7-c52cdf5166d7"
        },
        "item": {
          "id": "73cde357-aa81-4651-b11d-b7186be9edb3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46ff01ad-e575-4b43-9dba-4795da85b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb23129-87a3-4cba-9bad-b1f0ce40e515",
        "cursor": {
          "ref": "9326c89f-3efe-409c-af40-03297a83386d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95164073-8ad6-42e6-85b5-23eace733ff4"
        },
        "item": {
          "id": "dfb23129-87a3-4cba-9bad-b1f0ce40e515",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2bccfce3-b2c6-4b53-8031-740768ec130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4ea297-596f-4c20-9844-74ab7c2b7750",
        "cursor": {
          "ref": "32e38a85-cb5a-419a-af10-7f5544976c13",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "caf0d1df-e46f-4b7c-b9cd-fcc1ffe50c28"
        },
        "item": {
          "id": "fd4ea297-596f-4c20-9844-74ab7c2b7750",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d3d84dd1-1651-4a57-aaf9-bbaff9f2142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e86cd54-4ef3-4f64-9824-cdff6b6a5086",
        "cursor": {
          "ref": "4bd3e53e-c467-4bc8-9e74-46674d1e7252",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bd765ca2-c7dc-488c-aed1-95f56d67e204"
        },
        "item": {
          "id": "8e86cd54-4ef3-4f64-9824-cdff6b6a5086",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7bfb9cba-dcc7-4f8a-94ad-28ae3e645edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede3150-56a5-4357-a08f-db880d513475",
        "cursor": {
          "ref": "27597df3-e303-4098-b826-e12d8cb44bc1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5561a904-32df-42d0-84b3-6bf2ce208f39"
        },
        "item": {
          "id": "dede3150-56a5-4357-a08f-db880d513475",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "859b73d1-fdb9-49bd-9a95-62ab387d3207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70db071-e858-4115-82a0-706ef1fcc3ec",
        "cursor": {
          "ref": "54589624-c2dc-45f5-bc0a-7dc78e4dcc61",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7a82f942-63dd-48a5-97a1-99c87072dff5"
        },
        "item": {
          "id": "e70db071-e858-4115-82a0-706ef1fcc3ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "251908bf-2f23-4e47-b215-d8679a683328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ebf2ee-e17d-4284-a265-a1e70f7bf17e",
        "cursor": {
          "ref": "c0c6f9bc-51b7-434e-b9f1-c878c5f54732",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "481ca78f-6b2b-4c1a-91c0-4f5e0662aec9"
        },
        "item": {
          "id": "27ebf2ee-e17d-4284-a265-a1e70f7bf17e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1e4eaf2f-826f-4e28-b922-780d467ecfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f78b96-35c3-496f-b5bb-5186784ececc",
        "cursor": {
          "ref": "0a5308c3-1478-4c23-ba19-6ee5e015bf73",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ca336875-024c-4fc3-ad9b-3e431c9006db"
        },
        "item": {
          "id": "b9f78b96-35c3-496f-b5bb-5186784ececc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bdcb00dd-ef5a-4a41-8622-36a30617179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed45969-21fc-4708-beab-31a6452c1b3c",
        "cursor": {
          "ref": "66da7060-b900-46a9-8569-13f81037de47",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a17aaecc-4397-452e-8bfb-c96411280e31"
        },
        "item": {
          "id": "5ed45969-21fc-4708-beab-31a6452c1b3c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2d92f415-477b-4e81-8f8a-5e7eb6cdcbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45a8e77-d363-469a-8885-7f8902ddaa13",
        "cursor": {
          "ref": "544a0866-b637-4b60-bebc-79d4503e27d0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cd3f0174-abac-4b03-93d2-b5da564a35ad"
        },
        "item": {
          "id": "b45a8e77-d363-469a-8885-7f8902ddaa13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb67be92-71ac-4ebe-bd60-5425cce95bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0eb069-47c4-49ed-a794-508cfc0aa2a9",
        "cursor": {
          "ref": "8984672c-db62-41ff-be46-17ff6a7ace78",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "25b2e231-28be-4ca0-aec5-0a00fcd0f5e7"
        },
        "item": {
          "id": "5b0eb069-47c4-49ed-a794-508cfc0aa2a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6abf8a3-e794-467f-8203-61560277038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b09ad94-032f-4c74-9f3f-c2e18f922a96",
        "cursor": {
          "ref": "b5097a3a-4cc9-4d63-89cc-a637b0811a74",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8482b792-3544-41b6-8d5e-e69859c1fc92"
        },
        "item": {
          "id": "5b09ad94-032f-4c74-9f3f-c2e18f922a96",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a55f7c26-1da2-47b0-90bb-203c32678569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841ab3d8-039f-408b-b9c4-94d9a766c97d",
        "cursor": {
          "ref": "b2c4e3ac-9b4e-4457-94b0-3848a612146c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "617f286b-c991-4ae9-a3ea-489656ed8fa2"
        },
        "item": {
          "id": "841ab3d8-039f-408b-b9c4-94d9a766c97d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d9685a7d-7e19-4685-a670-22096499d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b514279f-8924-461e-8f6d-5ecc46f9b2e4",
        "cursor": {
          "ref": "b72a6914-994b-4487-b2ea-58ebc2900ba1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef06b4eb-45c4-4af7-8396-4c17e1117df2"
        },
        "item": {
          "id": "b514279f-8924-461e-8f6d-5ecc46f9b2e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "acd8704b-e909-4682-bbad-45324ea60685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51540d99-e80c-4500-9869-a3571c22f751",
        "cursor": {
          "ref": "150f6bb2-d4ce-428f-8a8f-7ca336ae0c25",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3b74561f-7da4-4d8b-a5ee-69bafeb441fd"
        },
        "item": {
          "id": "51540d99-e80c-4500-9869-a3571c22f751",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2c654766-1f00-421a-ad2a-b996fcf235a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7f16bc-3b7c-47d7-87d5-b3752ae2c147",
        "cursor": {
          "ref": "9c8ef4bc-0c79-41f3-8c8c-d66e4cca1aa2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "56592410-1d3c-4d4e-b20d-13af4bab51db"
        },
        "item": {
          "id": "2b7f16bc-3b7c-47d7-87d5-b3752ae2c147",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28875869-4a8f-45bc-9979-c41651849307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2115e3-30c6-4bfa-8c78-0e76fd55d9d3",
        "cursor": {
          "ref": "8bdfcbe6-bb09-4b33-bbf6-ac2aacee8daf",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3218072-0943-4afe-aebd-c160ff68a2b7"
        },
        "item": {
          "id": "5a2115e3-30c6-4bfa-8c78-0e76fd55d9d3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8dc1a04-20b3-4af3-8fa8-5ca5c03bb04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6063dc5b-1d1c-46be-a4fa-feeb4b403523",
        "cursor": {
          "ref": "d70d6b4c-1b26-4a2f-aa3c-4e0275db92f9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a9b2f542-ef65-426d-9f52-0c3f49cac4e7"
        },
        "item": {
          "id": "6063dc5b-1d1c-46be-a4fa-feeb4b403523",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a3e18e1-b1f1-4063-abad-2037a1fc2f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ec1c78-0de9-4fd6-8886-eebbbe23050d",
        "cursor": {
          "ref": "13a8ccc0-d5a5-4f0c-9c01-18756165123c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0501be22-d79d-4c65-bee7-85da99610a78"
        },
        "item": {
          "id": "57ec1c78-0de9-4fd6-8886-eebbbe23050d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e4405cf1-64b9-462d-ab60-0fc163245496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c99406-8306-4890-99fa-ae7a40cbc3ff",
        "cursor": {
          "ref": "12c72ba0-f9c2-4820-8012-2576dcfa0bba",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a0958f0-c8fb-4e42-a497-ebf950c9e615"
        },
        "item": {
          "id": "17c99406-8306-4890-99fa-ae7a40cbc3ff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab172db9-a26d-4774-849b-12cce2b1ba52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61759aa7-8494-48fb-9098-f36cee576396",
        "cursor": {
          "ref": "dfb3c197-defb-4472-b9f5-7c5cbc5bbf53",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "68aa5fa4-b0c2-41d6-8e42-e5b8cda276dc"
        },
        "item": {
          "id": "61759aa7-8494-48fb-9098-f36cee576396",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fa946723-ecd9-4d18-82c7-8da67c21bcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a6a828-55cb-45b9-a1fe-defe9419c533",
        "cursor": {
          "ref": "93dcf3a4-febf-482a-ad35-b9b99de32525",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3d55395c-fa40-40a4-8b17-9a9c4b48b992"
        },
        "item": {
          "id": "77a6a828-55cb-45b9-a1fe-defe9419c533",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0637cf26-c1fe-4184-b603-f86a90468741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956fb81-e5c2-481b-b140-722865a94364",
        "cursor": {
          "ref": "0815d6d0-9e56-42b1-bf92-a55cd8e4cb25",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77308f31-e222-4b2d-bd60-f91d0cab10f3"
        },
        "item": {
          "id": "e956fb81-e5c2-481b-b140-722865a94364",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ecaa1578-4e77-4420-9920-5d5156ee4709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1186d7-8be8-4687-be7e-9ab8ecec3302",
        "cursor": {
          "ref": "48abf9fa-927f-4148-a78d-bc78dc1c9238",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6cb860a5-1467-4f00-8311-d04cc160afe1"
        },
        "item": {
          "id": "2e1186d7-8be8-4687-be7e-9ab8ecec3302",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dffb75af-25ac-4a6a-9287-486a7c3d2fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634064f5-4451-48ef-b135-27a8c981edff",
        "cursor": {
          "ref": "4c5590df-c706-44d4-b372-e7d3af06be2b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3897af19-a0c7-4e0d-b941-e3ef4a44e1eb"
        },
        "item": {
          "id": "634064f5-4451-48ef-b135-27a8c981edff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "73225c4f-9365-4ea6-a2d9-afc77e1fe42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889bdd9e-1bd6-4d65-a7fd-0ddc5a208c29",
        "cursor": {
          "ref": "c724afc2-a842-4e8c-b317-c29ab05ef636",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bff411ea-4afb-4923-bd94-4734cb17131f"
        },
        "item": {
          "id": "889bdd9e-1bd6-4d65-a7fd-0ddc5a208c29",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fb5c20f-deef-4132-bd33-c68ec9431c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73365019-f890-4384-8932-302dcc828ea6",
        "cursor": {
          "ref": "1a0e3472-6dd2-4298-ba1c-36aa9f8d1262",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a34ad31c-612e-4a16-9e2d-93df30df4e04"
        },
        "item": {
          "id": "73365019-f890-4384-8932-302dcc828ea6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1028d6ab-ee97-4861-9f10-09379c2f0d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482951b-495e-48e4-af80-3461ec5d0563",
        "cursor": {
          "ref": "efac9e69-b0ff-4f6b-ab48-ffc5cf97051e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "685402ac-5df7-47a9-8a22-f5e595a0aa42"
        },
        "item": {
          "id": "c482951b-495e-48e4-af80-3461ec5d0563",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc852b0b-7a7c-4644-b2fe-889f6f3c179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce8fb04-8b3f-41af-92f7-b4b424a94097",
        "cursor": {
          "ref": "4384cfe6-5673-45ba-ab24-2015e5fc885d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a0a54332-a1cb-48a1-8d91-eb79a8aa405f"
        },
        "item": {
          "id": "0ce8fb04-8b3f-41af-92f7-b4b424a94097",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a9804c10-2f67-4770-9c8e-89a46b25e033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7246e4-6365-43f8-9aea-070371814cb7",
        "cursor": {
          "ref": "712ad069-15d0-4a5a-b36b-2cf6e99cafca",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6a894669-57dd-45df-83a9-33589bd2f5ca"
        },
        "item": {
          "id": "9f7246e4-6365-43f8-9aea-070371814cb7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "818e4fb2-4ccd-4478-8907-f75c98e3d45a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfe1712-f0b7-49be-95d4-f9ae3695d312",
        "cursor": {
          "ref": "01b9dbb7-6895-426e-83d6-587c79113ad3",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4b3b09c-e228-4207-9a0f-07be3cb8cba2"
        },
        "item": {
          "id": "ccfe1712-f0b7-49be-95d4-f9ae3695d312",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b16e7bbc-ad63-4a7e-ad1f-d29ae70bb7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c1660-7253-4f17-a139-246ae69882c4",
        "cursor": {
          "ref": "f6bd53e5-2d7b-4432-9001-ad1d411fe74b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5065bed0-4ca6-4f7b-9710-891bc2dcc782"
        },
        "item": {
          "id": "1c9c1660-7253-4f17-a139-246ae69882c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "745a4ed9-9d29-4bab-919e-404237f5e7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16a1e69-bb2e-4af4-aae2-cdc550c789ee",
        "cursor": {
          "ref": "bb9039ff-58b5-4316-9aaa-2e530dfb8bf7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "592224c0-d4ca-4a38-958c-70c53c8aa4fd"
        },
        "item": {
          "id": "a16a1e69-bb2e-4af4-aae2-cdc550c789ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5913929a-e46a-451e-ae51-bb4ea72711f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db1da7-fa21-4525-9f88-a2b555db9ce7",
        "cursor": {
          "ref": "56434777-7181-4456-870e-d38445be369e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "202c8108-b69d-4e22-a43f-bb512d400d71"
        },
        "item": {
          "id": "24db1da7-fa21-4525-9f88-a2b555db9ce7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3a58db38-5cd3-4c7e-a04a-85049eb32d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4d971c-5bf6-4a0b-a192-3adb6c9f1255",
        "cursor": {
          "ref": "39939419-1216-4069-8ce2-e803cbeb7f15",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "24f2b862-5ff9-4db8-94c8-97a4c5b16477"
        },
        "item": {
          "id": "1b4d971c-5bf6-4a0b-a192-3adb6c9f1255",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7772b01c-e21f-4494-8ac3-55c965d3241b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc393f-27ff-4b30-b549-1e8747963c73",
        "cursor": {
          "ref": "bc4e2b7d-990f-49ae-93a7-f12e9978993d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dacbc1b7-dacc-44c8-80a5-3fb777ba9e63"
        },
        "item": {
          "id": "35dc393f-27ff-4b30-b549-1e8747963c73",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "110c2173-051e-4f22-a5ac-e51de8b6e536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aa5292-c9f5-4766-a52d-ca44861c92f6",
        "cursor": {
          "ref": "2cb37a53-b8d0-49ae-83a7-ed6152b0a847",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "91fa07b6-8930-46e2-aea3-fb7177a8a8a6"
        },
        "item": {
          "id": "96aa5292-c9f5-4766-a52d-ca44861c92f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "62cfee6f-cafc-4fa0-bbee-84dea6d39128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2272297d-0b27-4aa2-aa42-55208fab00fb",
        "cursor": {
          "ref": "8392d831-7c73-4686-83b1-7b6852ccc718",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6570d4b6-869d-4380-932d-1206c7bdad52"
        },
        "item": {
          "id": "2272297d-0b27-4aa2-aa42-55208fab00fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e9501e3-d173-4e07-8954-2e35d051f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169e2d3f-9853-43ed-b9a4-26de63132f15",
        "cursor": {
          "ref": "f3940dd5-4716-4232-a3fd-dbb15e66956b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6108c7b1-83c2-4a7f-b503-254a2385e077"
        },
        "item": {
          "id": "169e2d3f-9853-43ed-b9a4-26de63132f15",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b86f12aa-abd7-4e8a-9737-dd8feaa15ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9696ac-f1b3-4b63-b7d4-3438a00c928c",
        "cursor": {
          "ref": "45d376c2-6c65-4448-b4f4-35a7a2352f5b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ab5c8f14-1572-45d4-a64a-ebcf10f8f231"
        },
        "item": {
          "id": "8a9696ac-f1b3-4b63-b7d4-3438a00c928c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ff144e6a-a388-4f5e-ba9c-0defb2774afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83bd5e7-5fac-4a11-b78b-681852c58819",
        "cursor": {
          "ref": "241bd1ad-e1c1-4564-8141-50e8bdc37fca",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c9b1f03c-c370-4f12-a1df-2efc55f63070"
        },
        "item": {
          "id": "c83bd5e7-5fac-4a11-b78b-681852c58819",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f2e6ed2d-f52c-4955-88e8-540d75e30ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6da4c32-5384-4d34-bc3c-043cd5f56f01",
        "cursor": {
          "ref": "e8b3c641-996a-45ce-bb2c-5b2968edfa5a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "78a912d8-d17c-4a50-b115-80a1ebc155a0"
        },
        "item": {
          "id": "a6da4c32-5384-4d34-bc3c-043cd5f56f01",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c05432ca-e8c1-4e37-8109-1ad0e3192224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959ed881-abf4-47d5-ad4e-6c664e72a75a",
        "cursor": {
          "ref": "92e87ded-83cb-4a01-87fe-bb24c28ea5aa",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "51ba9a84-3e5a-4777-90d2-72c0aac55fcc"
        },
        "item": {
          "id": "959ed881-abf4-47d5-ad4e-6c664e72a75a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0382953a-2ef9-49b9-bf94-9aafe0532e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401222ad-ccee-4991-8424-4a14cd6ea2cf",
        "cursor": {
          "ref": "545a5bda-3f68-42dd-809c-8c825643aaba",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bcbb4006-d1ad-439a-b574-3067d281d0ad"
        },
        "item": {
          "id": "401222ad-ccee-4991-8424-4a14cd6ea2cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d2c24bf8-fda8-419e-847a-7d51f22d77fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64440dd8-d513-4bbc-9cf4-ef8f07405bba",
        "cursor": {
          "ref": "e2d69264-d845-41f3-bf4d-8765b7d9dae7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba9e8a11-15f2-4174-87c8-32383682ed59"
        },
        "item": {
          "id": "64440dd8-d513-4bbc-9cf4-ef8f07405bba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54404a96-601c-442c-807e-784d4b914f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5957977-3692-44a4-be49-b2489c9d798c",
        "cursor": {
          "ref": "46f464e8-d67a-4a3e-88f0-cc3f1771d61e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e0797695-4306-4e48-9fec-9ed0b4e93e2b"
        },
        "item": {
          "id": "f5957977-3692-44a4-be49-b2489c9d798c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0bb2984c-5baa-49a5-97d1-2e0146dcf0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0570a01a-fa03-4f17-9b16-f775a5c810fe",
        "cursor": {
          "ref": "9645ea8a-b8f2-4a1d-bf1b-881e7b0d5962",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a7703b8-34db-4316-b96e-fb601d8a3594"
        },
        "item": {
          "id": "0570a01a-fa03-4f17-9b16-f775a5c810fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c4a519dd-960d-4271-a1eb-cb08e49345ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0135626b-efcd-40d1-9ceb-6db93464536a",
        "cursor": {
          "ref": "e31d4689-0275-4a32-bb6c-eed4b01c4905",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53823268-3a88-4bed-84fa-80b443283e08"
        },
        "item": {
          "id": "0135626b-efcd-40d1-9ceb-6db93464536a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3d05461f-ee0f-4f50-9083-5eb000cc2fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fccfff-5372-4bda-aaef-3a54fff32d45",
        "cursor": {
          "ref": "61123e74-f354-47d9-a79f-5af4d707f67e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b61f23e-6867-4d5d-8600-bde29ff34000"
        },
        "item": {
          "id": "01fccfff-5372-4bda-aaef-3a54fff32d45",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e0ffd21-6d86-4887-809f-f2d60526a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8732709a-8f8d-489a-81c3-8fae859b38c5",
        "cursor": {
          "ref": "58ccb72f-253d-439a-a425-515074ca7b80",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b208c816-1cc1-4c18-a77b-7c041ea0e442"
        },
        "item": {
          "id": "8732709a-8f8d-489a-81c3-8fae859b38c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "209f8030-5aca-4a60-8957-ad1331a69b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be9bbb-6120-4289-ae33-6f58c4d5020c",
        "cursor": {
          "ref": "119adf34-17f4-44cf-918b-94f259895639",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c9f838f-5b7b-4bf5-a1d2-5c2457d0ef50"
        },
        "item": {
          "id": "67be9bbb-6120-4289-ae33-6f58c4d5020c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3849b02a-fd8d-4112-8b4a-70c14e5d7213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a35a5dc-6230-43ca-8374-4a8cdabb5f51",
        "cursor": {
          "ref": "a7fc9da8-3bb0-4a36-a17b-4d283e540b60",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18d5cf2e-16a0-49bf-a1fb-aefc4a95f948"
        },
        "item": {
          "id": "4a35a5dc-6230-43ca-8374-4a8cdabb5f51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ddd5c59-32c2-4fe4-a821-531ebb2f2552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2337c8-4f0a-4cd6-8de9-9edc82b68a26",
        "cursor": {
          "ref": "578f369f-d8e4-48ff-b309-00a4d878327d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a583222-ae50-4152-a472-e24f9c353f87"
        },
        "item": {
          "id": "dd2337c8-4f0a-4cd6-8de9-9edc82b68a26",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a18523e6-6359-4a59-b256-c73beeb7ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767ff589-1047-471a-967e-03c2b7511dca",
        "cursor": {
          "ref": "9342400c-debf-4874-ac71-ca066b85c84c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e8ba2b30-373e-40a0-860e-832b7b5cb65f"
        },
        "item": {
          "id": "767ff589-1047-471a-967e-03c2b7511dca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "139f5664-ffec-424b-b8d7-e3f5c3f3f1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a264bea4-958f-4b16-a080-5f0d856d8a65",
        "cursor": {
          "ref": "ea71cd5f-a425-4b3f-b871-10a2d41699bf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9994e9d-6df4-4720-bf68-0fe0d9588a9c"
        },
        "item": {
          "id": "a264bea4-958f-4b16-a080-5f0d856d8a65",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b5f0a58-80f5-43aa-a06d-97e4a4a6420c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe72eee1-3ef2-44e2-9ec0-8ee0137321da",
        "cursor": {
          "ref": "a6257b20-2995-4aaf-aa00-5bc38d70b298",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9018cc66-a6d2-44f5-9176-d6deb5666b58"
        },
        "item": {
          "id": "fe72eee1-3ef2-44e2-9ec0-8ee0137321da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17de5764-64d5-4e53-b43b-8115f509490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c46747f-0f36-454d-baf5-18f72d9d0c0e",
        "cursor": {
          "ref": "48c7d04d-487f-4861-bcda-f720b7107146",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "092523c8-4743-4890-a9ec-daf63f5f51e2"
        },
        "item": {
          "id": "6c46747f-0f36-454d-baf5-18f72d9d0c0e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7a7a6013-1c0a-41f9-a167-10a9bb2bb747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54860ead-dc53-44b2-8fe4-56885fed5d87",
        "cursor": {
          "ref": "e7b348f9-bb8d-4af4-81eb-6a1053277372",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd6919ca-dfe7-44cf-b338-8c3d681da106"
        },
        "item": {
          "id": "54860ead-dc53-44b2-8fe4-56885fed5d87",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2669cef6-db71-4b52-b0e8-8f3bd644af07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49a2485-1b14-4c3d-bcfe-6f490229ffc4",
        "cursor": {
          "ref": "4899ec31-217c-451f-b373-f9e4ab33257d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e4c4a942-df8f-4b4b-8e37-d858bfa739b3"
        },
        "item": {
          "id": "e49a2485-1b14-4c3d-bcfe-6f490229ffc4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "213dce7c-e8b7-4c84-a15a-4ae44112ff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badf1881-c5ca-4617-86d5-0b235f8737a1",
        "cursor": {
          "ref": "2c70dd8d-581a-4836-b3cc-7d9c0fe878da",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c8a2cf73-918d-46ae-aeaf-9dccf01a37e1"
        },
        "item": {
          "id": "badf1881-c5ca-4617-86d5-0b235f8737a1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3125f6ad-838a-46d7-827b-9f27cf489fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d34c6-d45a-45dc-be69-b0f317040c62",
        "cursor": {
          "ref": "f15dbcbf-2f14-4dc7-ba3b-635f2fc29c8e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "08c9641f-f011-4f1d-aa96-23d80580f5a6"
        },
        "item": {
          "id": "ac0d34c6-d45a-45dc-be69-b0f317040c62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e862f654-fca8-4d46-bcab-2c024fdb102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ce74f-ffd5-46ba-b57d-1453dd8ad9dd",
        "cursor": {
          "ref": "4e4f0f72-5e46-4169-b28a-39ba3b0fee69",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4987245e-2b00-4b01-84e5-5b4cd12fb645"
        },
        "item": {
          "id": "062ce74f-ffd5-46ba-b57d-1453dd8ad9dd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cad22c95-7453-401c-b046-12c3c60c25f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a32991e-1539-4663-96f7-2faba95194c1",
        "cursor": {
          "ref": "6d324ad6-b6a8-4a6b-80a1-cd005df808f5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7c288b75-838e-47f7-a1db-3f538bfbfdae"
        },
        "item": {
          "id": "5a32991e-1539-4663-96f7-2faba95194c1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "898ed386-22b3-4692-8621-5e274db733f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c0716f-5dd1-40b4-8ffe-660461efd91d",
        "cursor": {
          "ref": "1470aaed-05fa-447d-a398-6db8b0f389b1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0671a181-01bf-4d76-8b5a-5271575de8af"
        },
        "item": {
          "id": "86c0716f-5dd1-40b4-8ffe-660461efd91d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "14df4786-089f-486b-993d-929aa04bfe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9285a2db-a4f7-4c3c-8dde-2ed1fc96b081",
        "cursor": {
          "ref": "6ff0d319-1f2c-448b-833c-3f42ecd481c5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90c401ab-9cbf-4972-8933-e9b0a09e9eb5"
        },
        "item": {
          "id": "9285a2db-a4f7-4c3c-8dde-2ed1fc96b081",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7f6891aa-1584-43ee-b1a7-5a2048b137c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e51e14-9875-4490-8908-ce088b772e4e",
        "cursor": {
          "ref": "20a7bdf1-54f6-43c4-832b-2e878843ff9f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f0a33c6-13bf-416b-b161-f665bbf400a0"
        },
        "item": {
          "id": "a0e51e14-9875-4490-8908-ce088b772e4e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "709e2b3f-5e86-4d81-ac8a-923dfd57e47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ba06bc-bffc-4e31-9d5b-aaf7d1baa0ef",
        "cursor": {
          "ref": "56242f4c-e79a-49b1-aba4-b9499f638af1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b7bda77e-a3e4-44f6-be90-8c373027784e"
        },
        "item": {
          "id": "46ba06bc-bffc-4e31-9d5b-aaf7d1baa0ef",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "62d03cd6-d73a-4203-b14b-9c92ba8e4c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc29367-ed52-4b3d-8458-01fa33c55f58",
        "cursor": {
          "ref": "f71493be-d43f-4438-b06d-2b6ec5270a3e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a733e1a5-b6c4-4ddf-a926-ce04fa50c0f4"
        },
        "item": {
          "id": "fdc29367-ed52-4b3d-8458-01fa33c55f58",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fef2bef3-092a-4fbe-b4ba-8f3474b301af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423c2a49-5caf-4b60-b4fc-9010024598df",
        "cursor": {
          "ref": "8c22cc0e-b759-48a0-866b-9280c5dd4811",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "feaadcfc-237f-4143-ae49-4a645db18424"
        },
        "item": {
          "id": "423c2a49-5caf-4b60-b4fc-9010024598df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3b10d04e-bc88-4173-97de-9111ee925489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2302e8ec-e46c-4e73-a6e2-3ba046b8e99e",
        "cursor": {
          "ref": "2d9fe722-7040-469e-afe3-0ba0e767715b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "85b97828-aee7-49b1-819d-6da578ae2695"
        },
        "item": {
          "id": "2302e8ec-e46c-4e73-a6e2-3ba046b8e99e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ab712898-80f8-4577-a7f5-729d88c990cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cca7eb5-72d7-4cf8-abe9-d82c1f562d50",
        "cursor": {
          "ref": "add4cdf9-1b67-44a7-97e3-5e2bb6f214ad",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0cf9ba91-7c28-43e9-9524-544303031175"
        },
        "item": {
          "id": "0cca7eb5-72d7-4cf8-abe9-d82c1f562d50",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "220df9ba-e969-4e10-97cc-5761d3508525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12e891e-a175-416a-818d-97b6ad287314",
        "cursor": {
          "ref": "c2329f20-f36c-4be1-8f7a-3ab4efda3e42",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ecb3c4d5-e5be-4324-8b14-14a35f89ef86"
        },
        "item": {
          "id": "e12e891e-a175-416a-818d-97b6ad287314",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "248317f7-c68a-47e4-8da0-80f5830c8c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04269607-447d-40f4-8a67-8059a439ace0",
        "cursor": {
          "ref": "5896bb52-4457-4187-9a43-cebbbde69493",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bf788e04-6eb0-4b04-be53-d86e060afc23"
        },
        "item": {
          "id": "04269607-447d-40f4-8a67-8059a439ace0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "470e4d69-9277-4ce9-93f1-741db1144f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab006d-d64f-4231-bf23-e111fd343ef8",
        "cursor": {
          "ref": "06151649-5385-459e-b805-00b83e377937",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f84b0071-77a6-4ea5-a080-e229890e122e"
        },
        "item": {
          "id": "0eab006d-d64f-4231-bf23-e111fd343ef8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5b50e920-25c8-4915-a3ec-7a7d99ccf476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28960eb3-880a-4638-b408-c59f9bb496d3",
        "cursor": {
          "ref": "2c8b756b-e931-4555-9240-0f6bc3588693",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f376d14e-64fe-441a-a390-6f319d40ef56"
        },
        "item": {
          "id": "28960eb3-880a-4638-b408-c59f9bb496d3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "964f5611-92e2-48e5-9474-d23cdb1c4f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc802a-1702-440e-9bb1-f3e836eca01e",
        "cursor": {
          "ref": "68bc8a04-5bb8-417d-b124-049b22424244",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5e76fa41-3b16-4493-b85a-2cfd776b97b2"
        },
        "item": {
          "id": "33dc802a-1702-440e-9bb1-f3e836eca01e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4adc2b2b-8115-4f75-96ae-8b401eded24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d237179-fa43-4956-9f2c-344bda900a68",
        "cursor": {
          "ref": "85232796-6670-4032-a6e6-6b52452737d1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1b1fdaae-9661-461f-813e-875cc0319cd3"
        },
        "item": {
          "id": "1d237179-fa43-4956-9f2c-344bda900a68",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "96fb7227-fb17-40d2-864c-442e7c6bf326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0888527-44e0-4e55-8417-ac8deffd5d7b",
        "cursor": {
          "ref": "c069a116-875f-464f-9fab-d7af63093186",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e308b218-4a80-4676-bdaa-4732fcaac150"
        },
        "item": {
          "id": "a0888527-44e0-4e55-8417-ac8deffd5d7b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1dc2a98-fe67-4908-90e4-40b46dcdb287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c32cb92-5f19-46e4-a3d3-19c9710a01b5",
        "cursor": {
          "ref": "74fb85fd-ef2d-4975-9f2b-657c2f06f6d1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3a645854-2a13-4722-8035-9e6fb087497f"
        },
        "item": {
          "id": "5c32cb92-5f19-46e4-a3d3-19c9710a01b5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2fb92f9e-2a0d-4d8f-878c-d2f0a74d03ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc223b-58d3-481f-8b0b-589f90307da2",
        "cursor": {
          "ref": "e2ebad32-d7be-4ef9-93e5-f67829510bd1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "edeb1a7d-f27b-40b1-8094-5d53a1b95b06"
        },
        "item": {
          "id": "19dc223b-58d3-481f-8b0b-589f90307da2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d30b0458-9c54-4b25-80dd-717e281735dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f61897e-a9dd-4879-83f4-3766466b67f9",
        "cursor": {
          "ref": "c4a1566c-b0eb-4a6a-95db-19a0706d936f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b6d452f1-0267-4ce7-8cbb-c0010d51cbfb"
        },
        "item": {
          "id": "5f61897e-a9dd-4879-83f4-3766466b67f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "305526ca-f1fa-491f-91ca-a4c66a801256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff0706-4258-4a6b-b313-95a4af907514",
        "cursor": {
          "ref": "305e3b89-2715-4589-afb7-ff2f0b49d809",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dc2b68ec-7469-4462-bfcb-a3f31a36274f"
        },
        "item": {
          "id": "9cff0706-4258-4a6b-b313-95a4af907514",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "be674499-603e-4ab8-ba21-fa78bd35ad1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b202e-1fcc-4595-80e9-6f58f0cb711f",
        "cursor": {
          "ref": "14250846-73d6-4107-8d9a-5923f490ac07",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df2e9899-1893-41ab-9a6f-0588eb44122e"
        },
        "item": {
          "id": "8b7b202e-1fcc-4595-80e9-6f58f0cb711f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "609c3951-b206-4281-b9c0-739c9a44cded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f493b-f24a-4803-8442-7ce113317b78",
        "cursor": {
          "ref": "58efa072-e7d1-4fa4-ad2a-cecfbba1feb0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0c7f2583-601f-4a60-89d1-774795ca4934"
        },
        "item": {
          "id": "e78f493b-f24a-4803-8442-7ce113317b78",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "36a6ee1d-c3b2-450b-82a4-7ce86db22a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09649699-a7da-47c7-bb61-ff4772ab4f79",
        "cursor": {
          "ref": "9c3f85ec-b27d-4683-8358-119609b924b3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67200137-051b-406e-8b3c-d3ab7ee10f90"
        },
        "item": {
          "id": "09649699-a7da-47c7-bb61-ff4772ab4f79",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fab65287-dbea-42b3-8f6b-c5c40f460127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc0185a-2954-4f14-8e75-3d3c4cc70ea0",
        "cursor": {
          "ref": "249448b9-41a4-42d8-9c4a-10f2d001c395",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4ec90d21-4a56-4cb4-bcee-6aff3a0d6256"
        },
        "item": {
          "id": "fdc0185a-2954-4f14-8e75-3d3c4cc70ea0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "56e83ad9-dfeb-48b6-b133-e3b0ab860eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af2d71e-08ac-4c52-ac17-12db6e312f0d",
        "cursor": {
          "ref": "5aa17b4e-6338-4d06-a292-5a9164763c23",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4275a813-333d-4047-8ef5-22b17595dbb7"
        },
        "item": {
          "id": "0af2d71e-08ac-4c52-ac17-12db6e312f0d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7283761a-050f-497f-a7a1-4b386ff8b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2293c9b6-4c94-4962-8393-8a865b68a673",
        "cursor": {
          "ref": "a13a5a9d-86c3-4cf9-bf80-81ba15b88848",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "292e578f-6344-4327-96fa-cac96d871fbe"
        },
        "item": {
          "id": "2293c9b6-4c94-4962-8393-8a865b68a673",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c107a23b-b6bf-46d8-964f-30ac41da8aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca811ef-4829-4fc5-bcfb-bcf1e8afc315",
        "cursor": {
          "ref": "52cf433d-a805-46b5-b139-107153259ece",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49c478af-1eaf-4bec-ac5c-3acdd22ba547"
        },
        "item": {
          "id": "bca811ef-4829-4fc5-bcfb-bcf1e8afc315",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "65d1f81b-9f9e-49fc-8eca-fc61a2b7acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac23160c-0aca-4575-b712-9a29a935a24d",
        "cursor": {
          "ref": "2067ebe2-0488-45e3-8605-2a794cc9ad04",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e772d171-ddea-4a96-a05b-38341c28736e"
        },
        "item": {
          "id": "ac23160c-0aca-4575-b712-9a29a935a24d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d6dadb4-c3a7-4801-864d-50d0e99734b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d0d46-4803-4f9e-bf57-3d69ce1fd3d6",
        "cursor": {
          "ref": "863e73d1-cbf1-41a9-b050-cb35c0b679df",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b61e71b4-920b-4857-82c1-0ecac119d3f6"
        },
        "item": {
          "id": "611d0d46-4803-4f9e-bf57-3d69ce1fd3d6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d0fcb57d-75ef-4064-915e-5a4c171d69be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0997a9f9-cbb3-4431-92ab-bd661338765c",
        "cursor": {
          "ref": "9f1463f8-34cb-4525-ace6-cd5aa8eb973f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "df871bf1-44e7-4ad7-82c3-ab66fbaec508"
        },
        "item": {
          "id": "0997a9f9-cbb3-4431-92ab-bd661338765c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "78691fd8-def6-46ea-a30e-672c6aff9793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d22ffa1-10da-4007-994f-eb7b80d086be",
        "cursor": {
          "ref": "ef6013a6-80da-4ec4-b811-7aa5006298c0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f083166-a69f-4d6d-9226-17415fd98592"
        },
        "item": {
          "id": "0d22ffa1-10da-4007-994f-eb7b80d086be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b3c6642c-02b7-49d5-8166-108bdfbc6ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc4498-5175-43c7-9042-f4cf2109230f",
        "cursor": {
          "ref": "652e90cb-ed4d-4136-94c2-c26323384417",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d80efdc-d3c0-4d68-a194-96acb5b587b9"
        },
        "item": {
          "id": "a8fc4498-5175-43c7-9042-f4cf2109230f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "24679f07-4d4b-4af6-a489-260ec625d781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f0aca1-b91b-48c1-8234-ef14c8b61353",
        "cursor": {
          "ref": "f2286d0e-a4b0-45f3-81a2-e54229a033c6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9b46a0db-8d52-4946-8a71-09b156a05b38"
        },
        "item": {
          "id": "64f0aca1-b91b-48c1-8234-ef14c8b61353",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f16c1c7a-e6e8-4cd7-a9b4-ab8a3b25bb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c55f2e-b559-42d1-9546-bb421c7912d0",
        "cursor": {
          "ref": "62c91dda-17af-4012-b759-df22ac99c5a4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "277eae57-36c9-4a16-a3e6-b8482630700d"
        },
        "item": {
          "id": "d2c55f2e-b559-42d1-9546-bb421c7912d0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c270c5e8-3027-41ed-a546-968eff83ba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ce15b3-eaa2-43f4-b957-1fa6baa30276",
        "cursor": {
          "ref": "cd73c75b-8fc6-4a91-841c-52d8c0382dc3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "838ce30f-b9c2-46b1-98b6-05caeea7a184"
        },
        "item": {
          "id": "14ce15b3-eaa2-43f4-b957-1fa6baa30276",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1667ce9a-29f7-4fe7-b650-de20d6b917b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d615a2-0ead-4732-8108-b0b41f5797f5",
        "cursor": {
          "ref": "540e5af2-f7f5-48fc-8b9f-d00e8987ef4e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4eea1ee-2d2e-4d42-a8e3-826d82100c11"
        },
        "item": {
          "id": "56d615a2-0ead-4732-8108-b0b41f5797f5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a3728966-4786-4f70-9bdf-3f449ab98a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271eaee0-45f3-4968-8a5a-2defcc5fcfca",
        "cursor": {
          "ref": "db0b27de-8444-4c26-8317-cf435bcb9040",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5ea84354-6b7b-4fb6-9858-3231448248af"
        },
        "item": {
          "id": "271eaee0-45f3-4968-8a5a-2defcc5fcfca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7c733441-f680-4d07-b134-70f55896e82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995fce58-b43b-4705-959c-185862b86641",
        "cursor": {
          "ref": "6cd8c2d6-8c8f-4844-a503-6ad16234183e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "50a5a5d4-9a5d-4348-bd7b-043c29bf2085"
        },
        "item": {
          "id": "995fce58-b43b-4705-959c-185862b86641",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e180d9d1-1699-44b9-90ab-37b586cd449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fed11a7-840f-4e50-b8a6-8c94a4cbbb73",
        "cursor": {
          "ref": "46e87438-e2ed-49ef-a520-1d4485938784",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "63cf5aff-1407-4803-ad1d-0634eddf8170"
        },
        "item": {
          "id": "7fed11a7-840f-4e50-b8a6-8c94a4cbbb73",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1b1362ac-4460-492a-8082-9e9e935aab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bf2fea-d3ae-472d-b0b2-266ef1f8cf1a",
        "cursor": {
          "ref": "d631ffe1-2bec-4b15-8464-aa6c97893d7c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "23f8634f-bb4f-41f5-a96e-1ba09f567b5c"
        },
        "item": {
          "id": "f3bf2fea-d3ae-472d-b0b2-266ef1f8cf1a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fcd08449-ea12-44e0-bcc4-09de47ebcdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91cc475-ec12-4a50-807c-4d0ea8bd5daf",
        "cursor": {
          "ref": "8a597f55-f5e6-4ae0-810e-99c4fcfeaf5d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eaf42e00-3d73-49d8-b3a3-43b60357879d"
        },
        "item": {
          "id": "e91cc475-ec12-4a50-807c-4d0ea8bd5daf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fd4b9544-9441-4416-a585-1c8aafd6c592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a43345-1bd5-43ae-a7d4-a725f5227ded",
        "cursor": {
          "ref": "f68b180d-700c-46ae-9736-0a103cc525dd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a2c2dc2a-5fc1-4f1e-8a70-a63a36977d59"
        },
        "item": {
          "id": "69a43345-1bd5-43ae-a7d4-a725f5227ded",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a307c9bf-a431-446f-b8a7-5346e353098e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0e08b8-79f8-421d-bb77-4113b067eeef",
        "cursor": {
          "ref": "0f99a677-a803-4337-8bad-79274d234657",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dadb19e5-fcc7-49fe-92fd-48d31f85f29c"
        },
        "item": {
          "id": "df0e08b8-79f8-421d-bb77-4113b067eeef",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6935f6a0-c5c6-4994-a303-03ba1272edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba80c0a4-be12-4577-887e-c8dbc1368b67",
        "cursor": {
          "ref": "6ded9b42-f5ec-4974-925c-a50bffd2282e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8030e4f7-20a4-40a1-b44b-1dcb6a31e00e"
        },
        "item": {
          "id": "ba80c0a4-be12-4577-887e-c8dbc1368b67",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b16d5ffb-1302-480e-9d9a-4102cc4ed945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c4ab66-1108-4141-916a-b1058067f773",
        "cursor": {
          "ref": "dc2a46e8-0adc-4656-8d25-397d06760f38",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce6f3c1c-2806-4076-ac35-0e40def002e5"
        },
        "item": {
          "id": "36c4ab66-1108-4141-916a-b1058067f773",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1a0cad1f-2798-4ee0-a393-abbf0e372f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890cab8-8d8f-4ec6-a103-4530ca55a624",
        "cursor": {
          "ref": "73781109-84e7-49a0-89ef-1dd894baae38",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0b316474-855b-4603-b448-f7cc8504b8c7"
        },
        "item": {
          "id": "b890cab8-8d8f-4ec6-a103-4530ca55a624",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fc015a23-9505-4200-8fe8-5440b2467f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bed03d-8de7-4383-87cb-7a033dc8c1eb",
        "cursor": {
          "ref": "5cae9b8b-63c9-4b88-b2cb-af06f7d0b290",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6cf2c881-e6ce-45d4-ac26-4faf73e10a2f"
        },
        "item": {
          "id": "e8bed03d-8de7-4383-87cb-7a033dc8c1eb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "18279004-375c-4cb9-903c-dfec71be85ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07888e3-9bd5-43cd-bfc1-35ba589c5db1",
        "cursor": {
          "ref": "d7535ad3-20e1-4fa7-84b2-11a13ece882f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "544fed35-aec7-454d-ab98-0b58213ad2a5"
        },
        "item": {
          "id": "b07888e3-9bd5-43cd-bfc1-35ba589c5db1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f3d5aad6-907c-443b-977d-f8a5cd401883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d27864-9632-4139-b8f1-38ebb55a9420",
        "cursor": {
          "ref": "0fa4ee30-620c-44c3-a048-e6b9f990e1d4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3f57e64d-0379-4f0c-9388-187b2dfd54bb"
        },
        "item": {
          "id": "a5d27864-9632-4139-b8f1-38ebb55a9420",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6e02a398-a7dc-4d19-a053-78158c271695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caca6b4-6f45-412c-b0dd-8f223c1ab9e0",
        "cursor": {
          "ref": "983e47e5-91b0-465d-96df-6ebf585cdda3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "64447546-efe8-4c68-a395-b79a7c536d92"
        },
        "item": {
          "id": "4caca6b4-6f45-412c-b0dd-8f223c1ab9e0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4bf79f3b-4d49-4465-9ced-8d01184422bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481f0a70-7ac9-414f-8d50-b7b43a192f0b",
        "cursor": {
          "ref": "309f79a8-490c-4352-9eaf-c38fe37848ed",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d3ededcc-77a1-4eec-9c60-e0850516711f"
        },
        "item": {
          "id": "481f0a70-7ac9-414f-8d50-b7b43a192f0b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "46f48943-2376-4187-82e6-c53b5dc5d07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fde64cf-3773-494c-8298-26dceaf94699",
        "cursor": {
          "ref": "e4917a38-b2e6-4d67-8575-1abe6f45d59b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "572a4b7c-95ba-4368-9775-44e843e120a8"
        },
        "item": {
          "id": "3fde64cf-3773-494c-8298-26dceaf94699",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7e17b3a3-17b7-49c4-b363-cd2e3059d4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c22d9ba-4af5-413c-b3da-1b8446cce8ec",
        "cursor": {
          "ref": "ca0403fd-79b9-4a56-b8a8-3f1b9f653644",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "584bc3cd-d2dc-498b-888a-4a1e1cb73977"
        },
        "item": {
          "id": "5c22d9ba-4af5-413c-b3da-1b8446cce8ec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2522bff-7566-4f57-b84f-93f6cbbecc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45a3299-3fca-4a52-8aa9-560bd708826e",
        "cursor": {
          "ref": "90f05ca6-3cca-4c13-849c-21a87e179abc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b356bf5-6ef4-4727-9192-4e18ffb3836c"
        },
        "item": {
          "id": "c45a3299-3fca-4a52-8aa9-560bd708826e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8ef9bcf6-e628-45ff-b8d6-a94a69916055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22e929-04b7-47c5-b155-736f9673e090",
        "cursor": {
          "ref": "87a0e76f-abf5-48c6-836f-cf57117673ec",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7a0c8902-41bc-45f7-aa64-b207ad12d22d"
        },
        "item": {
          "id": "fb22e929-04b7-47c5-b155-736f9673e090",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "35d5e702-b00d-4531-ae1d-9268e440c919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47ec3f-0ba6-4dc7-a111-bbbde53572fe",
        "cursor": {
          "ref": "4b969b73-21f6-43a5-a258-ea6f630c21db",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dfeb6a9c-93ae-4543-9926-a991668bbbf9"
        },
        "item": {
          "id": "3b47ec3f-0ba6-4dc7-a111-bbbde53572fe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ef5b5746-5f9d-4c71-a9a6-df2d0a401c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2087f1-4131-4274-9485-42b377bdb2bc",
        "cursor": {
          "ref": "b7c58d23-37b9-4f80-ad84-d040ed69a27c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff66aa3e-1409-41c2-bb07-64a83e46b32d"
        },
        "item": {
          "id": "7f2087f1-4131-4274-9485-42b377bdb2bc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae7e9bf1-8b05-4734-92d2-4c80bddb236b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "4acae714-1272-4d87-9dde-fa555b463032",
        "cursor": {
          "ref": "5b6be981-eb64-4405-b0e7-c3b9f65d79fa",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "88bd5544-6f63-46e9-95d5-b371b21856d8"
        },
        "item": {
          "id": "4acae714-1272-4d87-9dde-fa555b463032",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fb49080f-c6d2-47a6-b68c-d6e8689f467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9572ff0b-b471-4052-ad10-fa7cda534225",
        "cursor": {
          "ref": "205951cd-0fda-4048-af5f-2c0f19cb3da3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0ed60b2d-b326-4717-b7ca-fbf107b59928"
        },
        "item": {
          "id": "9572ff0b-b471-4052-ad10-fa7cda534225",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5c0d01ae-cb37-47f7-824a-dd0a216c78e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e771ea4-7e59-4046-85ca-aec8f43f4216",
        "cursor": {
          "ref": "f8689e28-725f-4ea1-b4b5-5195c7221c2b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "916f3be9-bb1c-4786-bd5c-59096421d532"
        },
        "item": {
          "id": "5e771ea4-7e59-4046-85ca-aec8f43f4216",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e72b4dc0-f618-4722-a956-0a9ad09f837c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10284ea7-f49c-413e-8341-a289aa8c953b",
        "cursor": {
          "ref": "e4b6db6e-14f5-4c01-95c7-651064062c62",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "58051d98-0dbb-4f17-956a-81c38ea4f038"
        },
        "item": {
          "id": "10284ea7-f49c-413e-8341-a289aa8c953b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5b161198-f514-4a7c-bbeb-5b760ab78c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c549f2a-2b15-458e-851c-2892f6643465",
        "cursor": {
          "ref": "d9d6c865-82ae-4203-b9f9-89881d4692f4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "38ecdcea-47ed-42e0-b712-0759df8542b0"
        },
        "item": {
          "id": "1c549f2a-2b15-458e-851c-2892f6643465",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e465af99-65cd-42ca-8af0-591c0d789948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8be18b3-cb6d-4cc0-8c88-24f8ea330c5a",
        "cursor": {
          "ref": "c180278b-8e33-4b35-8063-bc04fac1ed53",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "998c7769-c153-4eed-9b92-d604ebcdf5e8"
        },
        "item": {
          "id": "c8be18b3-cb6d-4cc0-8c88-24f8ea330c5a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bd46ff36-bf51-4ecf-a88e-ae86be71cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91b2eb3-695f-4408-95fa-45e8e4d06971",
        "cursor": {
          "ref": "e10a5fc2-6a68-4b56-b6a2-4c70e0980d68",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "785c5d23-5b8a-4596-a8ad-74fb13c9dec5"
        },
        "item": {
          "id": "d91b2eb3-695f-4408-95fa-45e8e4d06971",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ff6da750-7561-438d-8556-3afd722fef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f0b63-547d-468e-8646-d904984ea581",
        "cursor": {
          "ref": "19ddbc2b-1728-4d34-86c1-f6cfcaf28743",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "66d1d626-0e3f-4fff-be63-ec15f743550c"
        },
        "item": {
          "id": "5f5f0b63-547d-468e-8646-d904984ea581",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "580ea753-99b6-4671-9858-b280010f3ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f892ba4-10dd-4375-a929-8709f19ca23a",
        "cursor": {
          "ref": "cda30245-8f17-4ed8-988b-eaff3be0b951",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "71286871-5598-49da-a27a-3f9eca5c39ad"
        },
        "item": {
          "id": "1f892ba4-10dd-4375-a929-8709f19ca23a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f40174c-d971-4742-9c59-9ba36c315962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9146e09d-a848-43f4-a9c5-763381b69ba5",
        "cursor": {
          "ref": "05874279-434b-4a5a-b5a7-4d8ba01b58d7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "161ff39c-39fd-4dbb-a089-fb9592f78f1b"
        },
        "item": {
          "id": "9146e09d-a848-43f4-a9c5-763381b69ba5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f0499960-36b5-4989-b27d-f6b06ad094e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751ca4d-582b-49b2-a34d-3f04349471c4",
        "cursor": {
          "ref": "97148f76-973c-4515-8810-4c5e9fff428f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a7f9282d-5aba-4cdb-8843-c9697f1137a7"
        },
        "item": {
          "id": "d751ca4d-582b-49b2-a34d-3f04349471c4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "675bb547-5643-417d-8454-a7f1f6af5561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7258585e-ecdf-47db-9f67-07e746e5c94f",
        "cursor": {
          "ref": "09ad5ba2-aba1-450e-89d0-0905d0fb5918",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3d939642-e34e-45dc-9a11-57c5bb8f62d7"
        },
        "item": {
          "id": "7258585e-ecdf-47db-9f67-07e746e5c94f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a1ebe89d-456c-4e32-a2fd-307a09798b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fcc885-53f7-46a5-9e8f-41bdc6a1bfaf",
        "cursor": {
          "ref": "3ad9ad2b-d825-4cea-9be4-5099c1b93e39",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d93780af-2a54-46c4-847e-e6df8e5a37bc"
        },
        "item": {
          "id": "c8fcc885-53f7-46a5-9e8f-41bdc6a1bfaf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83320b12-6465-4f9b-b76c-d1bf4adb1f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b850561e-a917-4a6b-92cf-6e85b6092bf6",
        "cursor": {
          "ref": "6c012a0e-9336-4735-bd7f-e3054aae57b5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b3a53f33-3f5d-4e80-9730-af52cc9da22d"
        },
        "item": {
          "id": "b850561e-a917-4a6b-92cf-6e85b6092bf6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a777a55-2a72-4d9f-ba95-d05de9a7a89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69681da-edf5-4fea-a37e-01064236162b",
        "cursor": {
          "ref": "fa99a9d4-376c-4519-83e8-1f69d37a3033",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d655096e-ac33-4eb1-9244-a1f5a7d50b88"
        },
        "item": {
          "id": "b69681da-edf5-4fea-a37e-01064236162b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "262d74d0-838c-4b5b-909c-0c595aa5f98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c8f5c-594c-4105-8ab9-16e3b85c1cdf",
        "cursor": {
          "ref": "b53d4da1-1397-46ba-a4a4-a4fc4c6a74be",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ff415b78-0df2-432a-a542-bcd6c2f94ebc"
        },
        "item": {
          "id": "f22c8f5c-594c-4105-8ab9-16e3b85c1cdf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bf3e57b9-d19a-4b9b-ab04-2c12ca4e85f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c06607-a0d2-461f-b71b-ce92fdd041e5",
        "cursor": {
          "ref": "0120b7c1-fda5-411e-be96-14621e3cb4e4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "35c49fb8-c43f-41e5-a1f8-602dca74f113"
        },
        "item": {
          "id": "92c06607-a0d2-461f-b71b-ce92fdd041e5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "83e49260-f038-4043-9f2c-f8d7764b2846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e865fe5-0c67-406c-879b-f86daa27885e",
        "cursor": {
          "ref": "fadad383-6d42-4940-affa-b673c826849e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e399e2ec-663f-4ea9-82ea-4e4937fe5c10"
        },
        "item": {
          "id": "2e865fe5-0c67-406c-879b-f86daa27885e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "af1e020b-c051-468e-8c02-e62b43e01873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3e3567-3ca2-40db-bc8b-76234a1356c5",
        "cursor": {
          "ref": "bc22d71b-9970-4c4b-91ed-653f31d15834",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "47ad53ad-f76b-4201-b95c-9e610e293868"
        },
        "item": {
          "id": "8a3e3567-3ca2-40db-bc8b-76234a1356c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9eea9b0-2acc-4bf0-b7fb-445dbabad6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c0d18-0ca5-43c8-a324-87856a78f9f6",
        "cursor": {
          "ref": "2e921fb5-f75a-41aa-b2a1-ae455914cd00",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a6393c4f-ff6d-4579-96e8-888e61402a2b"
        },
        "item": {
          "id": "1b7c0d18-0ca5-43c8-a324-87856a78f9f6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2618325e-9df1-4583-b60b-e652dba9e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b559bac3-f421-44d6-a15f-1f155421b316",
        "cursor": {
          "ref": "5f21e082-cf2a-4542-8d84-fa1c47a6ce8a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "658e71b8-33bb-481a-8754-2f58e7db93ed"
        },
        "item": {
          "id": "b559bac3-f421-44d6-a15f-1f155421b316",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "31c104f7-1d4a-4274-a881-6c4308b88984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b919931-8620-469f-885e-470d86eb4f9e",
        "cursor": {
          "ref": "7d13c70d-5532-4fed-91a9-7e2935c9ce45",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "08ceef0f-24cb-44e7-9516-fe6e909ee5f5"
        },
        "item": {
          "id": "9b919931-8620-469f-885e-470d86eb4f9e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb006d5a-bc93-4244-b4bb-099ccb57d652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd5466f-51a5-4b7b-8dad-e02ab215cbe1",
        "cursor": {
          "ref": "2fe0fe3e-8bc7-45f8-b565-a2c19eeadb7f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2bfdbb4a-6181-435d-97c5-ef42e37a06ed"
        },
        "item": {
          "id": "bbd5466f-51a5-4b7b-8dad-e02ab215cbe1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "03fb6255-b68e-4c0c-9022-60140d5d9e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a57423-7de7-4d72-9994-467ef99cd37b",
        "cursor": {
          "ref": "10032cbb-b29b-4720-97ff-23d11f052228",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0b22ac2c-ad0d-4564-9bc3-b68e372cbf70"
        },
        "item": {
          "id": "f4a57423-7de7-4d72-9994-467ef99cd37b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14c3f151-557f-4cb9-962b-babcad4122db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a06e9e1-093d-4b93-96e8-556e9f49827a",
        "cursor": {
          "ref": "b6ea78a9-29e9-46d2-a359-c2f7722ef546",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "405c4c17-fd68-4eca-aadc-3dda54b985fc"
        },
        "item": {
          "id": "7a06e9e1-093d-4b93-96e8-556e9f49827a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ad6ed154-2c28-4cf2-93d8-0091891958eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e09a329-ad54-4e6f-bf4a-d785b1871368",
        "cursor": {
          "ref": "78f6c2ce-ec40-4903-a697-21bcccb46b23",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1f0610f0-5285-4491-80f7-20e36219cfb1"
        },
        "item": {
          "id": "6e09a329-ad54-4e6f-bf4a-d785b1871368",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae4c05bb-8dd8-4fc3-9428-321332ed4170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbfc176-21df-407e-8a4a-97218849725d",
        "cursor": {
          "ref": "d7d444f1-ed6a-4b43-a4be-8702901fed38",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aa9dc833-a3ca-42e2-9a3a-f580fe4b9899"
        },
        "item": {
          "id": "1fbfc176-21df-407e-8a4a-97218849725d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e5a91d49-50a1-4473-b161-29fb4269eb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491cafdc-9c5e-452a-9726-e82287c9b07e",
        "cursor": {
          "ref": "4332e7ac-c7e0-44ab-aa4d-23351e3dc47d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "41ddf43f-cc43-4d70-b949-8ef05dbc3fee"
        },
        "item": {
          "id": "491cafdc-9c5e-452a-9726-e82287c9b07e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8e6dcc05-298f-4200-a659-817de8a923cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c41bef-29e9-4164-9ae5-219ff198576c",
        "cursor": {
          "ref": "3553ff19-1873-45fd-b90f-973e4f03ea75",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "86132335-697b-46f8-84ce-2a63ed0edec4"
        },
        "item": {
          "id": "b7c41bef-29e9-4164-9ae5-219ff198576c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "588577b7-fa91-4d0a-8238-987dcc61b1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79a6bc-bced-43a4-a542-2dd000a03331",
        "cursor": {
          "ref": "192eb5d1-b4eb-4aa0-aab6-2cb6263032f4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "842d90e9-e6e1-4585-855e-7dc588f54282"
        },
        "item": {
          "id": "ef79a6bc-bced-43a4-a542-2dd000a03331",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "081a9869-678a-42a8-815e-e99773e798e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f951b2b-332d-41ba-a047-7fe4a5b148e2",
        "cursor": {
          "ref": "9b7bf715-357e-4101-a759-4213ab5677f3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8257f96c-9f54-46f0-930b-2125ed61d1e8"
        },
        "item": {
          "id": "6f951b2b-332d-41ba-a047-7fe4a5b148e2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "caa4097c-47d6-4216-b861-7ed8753bd507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45465e04-7ac4-4edd-9046-9f9e8979107a",
        "cursor": {
          "ref": "f6d28ce4-b687-405d-9cc4-04f1d73ff49b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f248d53b-267f-427f-ab65-1ead0b290955"
        },
        "item": {
          "id": "45465e04-7ac4-4edd-9046-9f9e8979107a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f3813770-41f2-4f45-a202-a1d12bc30723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1750bbd4-e5cb-4e75-944d-55571535a568",
        "cursor": {
          "ref": "8873d598-4546-4e22-96cc-191fd95163a6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4b4a4ed1-f9a6-47b0-8ae0-02035fa131d2"
        },
        "item": {
          "id": "1750bbd4-e5cb-4e75-944d-55571535a568",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cbe93f4a-6b7d-412a-8d0e-b0e8c6b40f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344105f0-8499-47f2-86d2-e1b4efec12db",
        "cursor": {
          "ref": "4676e6d7-c844-489f-842e-7c122c45e281",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7fc7a809-f00c-466e-814b-cdc1953ac32d"
        },
        "item": {
          "id": "344105f0-8499-47f2-86d2-e1b4efec12db",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d0e75c23-53b6-4517-bc05-ecbf2b0a9c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c23e2-6285-44ff-896e-cf4cd1bedbee",
        "cursor": {
          "ref": "f20dddd8-fd4d-4f5f-949d-61dee6bcdaf0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c4108c3c-709a-4118-92ff-a4ec44208123"
        },
        "item": {
          "id": "494c23e2-6285-44ff-896e-cf4cd1bedbee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d83437b4-33f7-4e94-bd3f-d501e22747ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0394252-f17a-488a-8136-2163f514ee07",
        "cursor": {
          "ref": "6526982b-9563-4a95-ac39-e2081d71dbda",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f5cea761-6ef3-4dd8-8b84-926af5628d0c"
        },
        "item": {
          "id": "d0394252-f17a-488a-8136-2163f514ee07",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ebe4b35e-0335-4f39-8796-30afe758ec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed4bfa6-53e7-4778-b782-a8c5ba21cf02",
        "cursor": {
          "ref": "16d55660-294d-4ab6-b269-7012bf02ca12",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "613ec38f-e9cd-4d56-b0a1-ee9c4887b757"
        },
        "item": {
          "id": "fed4bfa6-53e7-4778-b782-a8c5ba21cf02",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b04823c1-dd31-4c58-a706-1e01316f6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9741f6-1609-449f-b83b-13d520381d65",
        "cursor": {
          "ref": "aa818e8b-1997-4709-91aa-755020387a2a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1ebb2827-fcfa-4bf6-a4f1-e6282d7e1ee5"
        },
        "item": {
          "id": "3b9741f6-1609-449f-b83b-13d520381d65",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "348c0584-0cfd-423b-b47f-7d5c2a8d5349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316f06a9-d23c-47a2-917d-8d864f0b6f94",
        "cursor": {
          "ref": "aebe7d9e-fd17-4ab0-9f36-a5a355e2521a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "30974b0f-95b4-4432-874c-1c02e396527b"
        },
        "item": {
          "id": "316f06a9-d23c-47a2-917d-8d864f0b6f94",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "52cf3f5a-dbc8-4345-a786-e6dc96acf62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69137d0-80ab-44aa-9b52-e008286437b3",
        "cursor": {
          "ref": "c506f700-cc91-42e5-aa8f-606ca1b54878",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "68a1b079-15bc-44d3-9d78-5bffde10ec2b"
        },
        "item": {
          "id": "f69137d0-80ab-44aa-9b52-e008286437b3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c980d7f6-6523-4617-8ae7-cd2cf1c1b6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c828f6-8878-438f-a67c-1881899e7e30",
        "cursor": {
          "ref": "245a7e70-adcf-484c-b262-20ca3177e209",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8f5b3690-1eab-41df-a941-444d6c027dde"
        },
        "item": {
          "id": "e2c828f6-8878-438f-a67c-1881899e7e30",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fce89d61-dc3a-4605-9bee-1834d4d4f691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9c9517-53b3-4e3d-8c1c-93adbc8723f4",
        "cursor": {
          "ref": "0aaf1088-bf81-4838-9a8c-ddc9f20026fe",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1d69e342-dca3-4357-aa0f-8062af53dd57"
        },
        "item": {
          "id": "3f9c9517-53b3-4e3d-8c1c-93adbc8723f4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9207f720-8488-4e23-97ab-4a119a6840d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afa1a8b-bbde-418f-a62c-bd04e7917328",
        "cursor": {
          "ref": "6e5e67dd-373e-41b4-bccd-bfee75d00b68",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7764c277-6f77-4ca7-b84f-f35d781073ec"
        },
        "item": {
          "id": "6afa1a8b-bbde-418f-a62c-bd04e7917328",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8644cfe7-8c17-4dd5-a52b-d3c2997ec676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f0d961-1ff8-4a1b-8407-fe5e0093ebb0",
        "cursor": {
          "ref": "7423d75f-2f55-40da-8394-ceb564585d06",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a36b3353-f60c-4ecb-888f-1c931992b6f0"
        },
        "item": {
          "id": "51f0d961-1ff8-4a1b-8407-fe5e0093ebb0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cb9fc4e3-58f2-44a6-b748-370e6c7beb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1b8c5e-0f37-4ea4-bd37-e3929d730df5",
        "cursor": {
          "ref": "48ad7960-5ab2-4a30-b567-c5b9c4b0e1d8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e7ca4f0a-836f-46e4-849e-6863daeda78e"
        },
        "item": {
          "id": "5c1b8c5e-0f37-4ea4-bd37-e3929d730df5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2e015288-2a6f-4026-908a-c9f3f28b2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffa30a9-bed5-4d46-becb-641a4998eca1",
        "cursor": {
          "ref": "b39020a8-a99e-44cf-8175-6a61cdd7f9e7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "43c73c41-316d-43be-806c-8e69194d7502"
        },
        "item": {
          "id": "dffa30a9-bed5-4d46-becb-641a4998eca1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "87104c37-ad39-4db9-bd58-a4fcfbb8a47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0ec5b5-6365-4624-a2ee-7efe8231fff4",
        "cursor": {
          "ref": "be0b2cf9-a981-4c96-b305-fdf6f5d406f2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "598c4c21-0de6-47a6-9a05-f30196c15995"
        },
        "item": {
          "id": "8a0ec5b5-6365-4624-a2ee-7efe8231fff4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e017cb33-1a90-4a99-b0a5-028b9fa895d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94061f69-0f6d-4f80-b3bc-1cad22bc3c2b",
        "cursor": {
          "ref": "fbee2a9b-9979-4cf7-9919-b64b8a74b50d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f0301fa5-a551-439c-9fb8-30a6bf4b5d88"
        },
        "item": {
          "id": "94061f69-0f6d-4f80-b3bc-1cad22bc3c2b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1eaa57f3-f0ac-4496-93bf-f71c680738f7",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca546f0-bf5a-48f8-9ab2-0bca9c502dc6",
        "cursor": {
          "ref": "0ba60628-5749-41cf-b302-d3f20afe9ec3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7c6df953-03be-41ed-8cb4-6720af79ef23"
        },
        "item": {
          "id": "aca546f0-bf5a-48f8-9ab2-0bca9c502dc6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c5836471-2b93-43e5-a9f9-ceabe0bdc4d2",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d51b4-d534-4fa1-8d70-f26f5c6a1c14",
        "cursor": {
          "ref": "d0018aa1-e7a5-4f22-963d-0bd307b2c1c5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8bdc2605-7340-4181-80ae-7ca50d19e883"
        },
        "item": {
          "id": "660d51b4-d534-4fa1-8d70-f26f5c6a1c14",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "399e9d79-5293-46f1-af09-aab627bc5422",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d632cd4-e8f5-4c88-886e-ee6a85fc57c3",
        "cursor": {
          "ref": "e7023ea6-6ace-4bf9-8ee7-0e1b78faf5db",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cc17b782-9345-4768-9171-ab3a76482ac4"
        },
        "item": {
          "id": "7d632cd4-e8f5-4c88-886e-ee6a85fc57c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ee41d641-2c13-4ca0-bc5c-89127f3df8d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d632cd4-e8f5-4c88-886e-ee6a85fc57c3",
        "cursor": {
          "ref": "e7023ea6-6ace-4bf9-8ee7-0e1b78faf5db",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cc17b782-9345-4768-9171-ab3a76482ac4"
        },
        "item": {
          "id": "7d632cd4-e8f5-4c88-886e-ee6a85fc57c3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ee41d641-2c13-4ca0-bc5c-89127f3df8d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0491e8-17d1-4a3b-907a-9b77b09a20b3",
        "cursor": {
          "ref": "348c75d8-e791-488f-ad69-48bac1d3bc5e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "90a8efd2-20ed-425f-895f-485cf5fbc2a8"
        },
        "item": {
          "id": "9b0491e8-17d1-4a3b-907a-9b77b09a20b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1618fc7d-49b8-419d-8650-bf04c30cfc88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2fd376-269a-411d-b2b8-524a707f2c93",
        "cursor": {
          "ref": "52dde7d6-aaa1-4cc2-b762-61ab526b4837",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "95200776-02ad-4d48-8621-760703d1638d"
        },
        "item": {
          "id": "1c2fd376-269a-411d-b2b8-524a707f2c93",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11e22c44-3b21-4604-8287-2a5a0cc3ee39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}