{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e792cd4b-6583-44a5-a800-7a36443b887f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "35101060-79f5-4f1b-8213-e53bc8aaa8ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0287730c-9c7b-4a47-9b4f-807c4ce11c48",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77a227a4-c99f-494f-8328-5a3aa6b333ef"
                }
              }
            ]
          },
          {
            "id": "641caa92-4c41-4d90-89db-7b1545b227d4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c788404-6e25-41b2-8f86-34d534e8a756",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "291620c2-9b3e-4162-b080-b510ebc93d04"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "caaa1482-32e7-436d-9e4f-cbfa113b1de4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8e125ef8-90b6-41c9-9ac9-19cb713e1948",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5beb578a-b1d9-4620-bffe-9b08f2107afb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ac1912-6ea8-45b6-881e-0d024b4c89d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32e921af-12a1-4e6c-8b1f-a493676a5c42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ede3210c-2fef-4d40-acac-d16d01407526",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af8bf6c2-fcc7-4be9-90e3-6759c0ab485c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7bc56e5f-f121-480a-90b3-3fc384852274",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c47ee578-2d99-4225-8c49-0ac51ca041a9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56ac6f31-6835-4478-9ce3-f2293a035765",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d73a4442-868a-4329-81a7-926df13ba5a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87ab9111-c83f-4816-8ee8-4a20c79db439",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6df3d511-3f07-4076-b853-84c767487600"
            }
          }
        ]
      },
      {
        "id": "927e5629-977c-4bc1-b045-009510ca974c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d784b859-da0b-423a-92d9-46bc947e1e15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9378afa1-3a1e-4465-87cf-5efe93a13ded",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1dc76fd-cb5f-4ff8-be01-140c05da3890",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b233ae-a50c-4174-8d0a-ff1a511f413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac5a9752-99cd-4d06-9691-91fcfa394a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6a442-5c08-4132-8411-7f2acb61bbbe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9bc40e-650b-4bb7-9c67-93ce07956de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b7cb0ce-4abd-44d4-9fbf-1c113b4af93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf2739b-f05d-411b-be6b-2496fa2ee4a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4de9be5-6446-443c-8116-192b29a1e979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cf5ce9b-47de-4496-992c-82ad9b70af2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c485b8b5-5f61-4d32-9243-95cb78e4b421",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0273d224-bc32-453a-a548-9df7930986ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2ebd1a-afde-4c0d-b7b6-10264388853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0735207-f54d-4156-85cb-150dca28cd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5115b11-49c5-499e-807a-81091ecd07d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dc7a14-090e-4452-baf6-27d4c3f27562"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf6c56ab-9301-4c70-9409-1c2d098b28ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cabf5643-19c5-494f-93d6-22a54a9f7465",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad55c86d-ba02-416f-9686-9f2617109574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a424084e-ecd6-44c9-b86b-082beb304d6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7f9de6a-75f3-408b-9de3-f61a27be0dff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e8c8a37a-ad28-4789-a0f2-b15923c53251"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "631ba2ac-9953-4ba3-b1bc-1912abe19574",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57524cf1-132f-440c-baf3-e95416be736f"
            }
          }
        ]
      },
      {
        "id": "24d41afb-dc91-4250-95ee-301edb9a2d6e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5a2781f-ce77-47f7-ac1e-519a558b04bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df6382a8-e100-476f-988c-489c59901974",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2121eeb-8f65-4840-89e3-dd23e2f82f8d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19b0504-8502-4c89-ae93-0df4cb71bf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408dd43f-1a28-43da-bc0d-42557421877b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79d4af8-22da-46cc-857b-fd624da14300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad0b87e4-46fa-4be3-877b-fd8d090f2e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f63c5-bf9a-4b91-9d31-9d5bb8a29975",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f08a724-b70a-4533-bcb1-22905916d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d05c80-7155-4453-8324-dcb8e6d733b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db16a6-6178-4d38-bf3a-ab3bf7effa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe9bc14-3451-4376-b287-c59eb0f7bc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5596ccbf-a334-47ab-98e8-57111e7ab043",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e2e909-b709-4903-936d-b3dd55de5281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fe8c3a-2327-4175-98bf-8c0aa0f70c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeb64bd-25e4-4702-bb67-2b558d0447d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a28b087-e340-4e9a-987d-607bf6ef6b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca979f1-fb62-40ae-94da-6d9b11ee9e55",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba86f52a-27d7-48d4-a788-24f3964ba3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972d01da-aa7a-4136-8adb-135e38a57287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12d6b35-11c8-44fa-9d19-94b984fb62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ccc54fd-d6a4-4af4-b7cd-6208e2e32ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeba09c-3a86-43d8-8066-2deca83b2b2f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c171cadb-e299-4e87-bc4c-2ffda2f02156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2776c43-a859-4fcf-a3b7-19cee511fb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514fbbf5-6e5c-43e1-9682-11c4426a2648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2c1f16-d4b0-4aac-be46-0152dda6713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1a20f1-6a58-4b5b-b590-a763101dce7f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9fa69e-e301-48e9-8dfa-4cd815db6c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21418de4-70af-469a-bd1f-c78bb7a20eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6691721-9348-4109-9fb8-b1e67e3b6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94beb245-523a-4545-8487-f930ef2249f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21a10c0-0993-4f1a-bad4-dd314c2f5f77",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6462701-507c-4092-9b80-ad794f630204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ec5c31-ce41-46ca-9b4e-1c46c7ffbbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447d6488-fa61-4015-994a-9a1831792aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "facef497-cb54-4339-84d1-846ad0c3892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d77ed2-2435-43e9-9d41-56f3fde6b01f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a80e1b0-86b8-41f8-8959-df6adedd43b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af536548-c7d2-4a6c-ac31-384314a525d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e33002-24df-4bfc-a564-f400a731b2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc2c6ec-2a07-4ec8-bcf4-d8b6c7677b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51284f2e-ca4e-4382-9655-f92df75cd14c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c93bd2a-6acc-4603-9adb-3ab61922d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d85730f-468d-4189-b6ba-c370cb3ea57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08150df6-319c-4785-8773-2ea5c7723678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c3170b-a978-45a7-bc80-42437de62989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe97974-e195-4cc2-bb9c-220c600214b3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44352a73-b6f4-4fec-97d3-a2a1043e52b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd623f3-1088-46fe-8b4d-59ec42aeac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5dc53-8299-43af-9d39-1b331861ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0264b688-b6b5-433e-8b4c-4e180fd6f0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55923f9f-35d4-448f-9602-73f005da1008",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23052efd-58cf-47eb-8338-68d03a8a6207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f73f1-20f6-4c82-a49a-34539ee471ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cb2a20-966c-47bd-9d63-71e2d72b550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e93a28-6ae9-4f83-9d4f-d9aa9367f0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef3b33e-05a3-4378-91c6-fd5ac06e3f41",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41f50f-53ce-4aab-b2b6-8442bfbcf117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524ab3af-ead8-4770-9b37-9133447f580e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2693a1fc-24af-42e3-a002-d25f13289305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a4ee061-2232-4ef5-a04f-84a9ea6621d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec9c643-1617-4d9b-a0a1-9f0a59cfe09e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295ad196-9dbb-4c83-90ed-73bc2abd9a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9192cd-961d-4e61-8040-a77d70953a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ba86de-8289-4a4c-9b49-9a39cf244a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38a7e475-f1d9-4d01-8a8a-4d25821f5c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318352f5-2bcf-4c9a-b982-9d3e4903a4da",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85672c05-db4f-4927-b3ce-96c9b99618ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d2b627-f48f-4f3d-91c4-a384ff6df8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6dbf72-a5bd-4195-bda3-72fea3c0c17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94a22257-72ac-429d-a531-fa6ca333e0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfdb74d-3b99-45af-93a6-c533859f9853",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3f8a88-2d6b-4a81-b44e-92852f256e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6724b475-9376-4e79-894d-071abf1b81f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aa7521-b3da-44c4-929f-cc3a6634cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6710c97c-7dd2-4926-bf17-5b6de77266e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822a3840-46e1-4f7d-83cf-66c0c39b11ac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80051eda-7af0-4322-aa53-2cc77c7433d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9eaa1a-13f3-4788-a008-35b561fc1dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b84d33-93ce-4971-bcab-2eb5a9fb8d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83eab0fa-76f8-416f-babd-6e4b33cc0f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e12763-f7c1-4163-a7ae-0151ab87bbb9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09472482-436c-4da4-ae88-e9673dfc55dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96db79fb-56d0-43ea-bd04-19a86d80c5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7f719b-dacb-4d0e-9f2f-fbacfcd50387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc925a18-538f-46c4-b663-dd18670f0104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f27754e-cc03-4c83-8bc7-a86b99c33953",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9758f2f1-0658-45e9-b974-36fe9b5f12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d89b16a-da7d-449c-a2cb-04ac95efb8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a53b48-a525-4876-8f34-398f583411f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11ffbbc-7096-4434-bf3a-c3f5311e19a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4302ede7-3986-4159-9332-a0c3f1c72259",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ab8c72-f304-4ff5-a57c-744bc38a6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c74e32e-683a-45d5-9c4f-97fb55d53259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562b4ea5-02e6-4e3e-8815-b1e5cedff11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35ccd3f-85ba-4737-bdef-baec4011b93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b1cb4-fd02-48bf-8765-10c90de2452f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36aa3d3-6ada-402c-a0f6-9e50a944a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54647eb6-1072-4fde-bb26-6bc300785e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca24446a-70be-4233-8b35-e52769300dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9901564f-30ef-4b93-bce0-a9d1cff5cc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b36038-0a54-4a1a-92e8-c2c77dd9017c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e249c-3544-4943-9614-6a012398a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4181435c-322b-4d14-8c9f-dfb4dcf4634e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc31ca2-24b3-4b0c-85b3-3e07dfa9548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "326303f8-aa7b-46dd-9c10-6016487b8d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5ac574-bf5f-4bb1-baa0-2ee2698d09ff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5e7f7-56a8-4ade-ba5c-64ea321c9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4760af93-799e-4234-b02d-8db36c5f5073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c3dd00-4aa9-45a0-959c-1310e6f52697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a5c206-077f-4c59-97be-44e3ab41c8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f78055-ae5d-401c-883f-f4b7c6537c79",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc008b93-2a61-4943-8abb-173fcb357741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ccbef3-1400-4dfd-85e2-bdb855271d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716d87f2-bf74-48b0-8d93-0daf9ebc17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "823bcf99-23b5-4f92-b55f-f4cd22a6300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae29bd35-69de-4591-9ea1-134eac4b2702",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba78a5-01af-41a6-9d80-eadc7a34c0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2426b562-402a-4596-886e-66c2288f9291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bc0bf6-7543-4e1e-a852-b47783eae50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0c6c37-ed63-460b-b5c0-188402e6708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ad400e-0e34-4fd8-bdf9-3bedc21f7175",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862b3fe5-7a0a-4ae6-af72-aa0eb13d4775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef304729-d335-46df-aa9f-cb51588f988a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0345cc39-8a25-4cb6-889f-c056f8e93c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6bbdfd-2aaa-4609-86c5-43ac723c4b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7fbed5-b0b2-4810-83e6-f86cf99634f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347d5d8f-fc1e-429f-90ae-8b543c04980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4316fd5d-bdf9-4ff0-811e-26dce67f6945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd3a5cf-384d-48d1-82e6-f0add3c0c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de624154-10aa-4d41-bfeb-4581632b7404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684d2ad8-c8a3-4cc1-b022-9c2558ef8a26",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35474a3-256a-4763-ab30-4bd9330f3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21031ba2-08b1-4f2e-a903-297f27c5e1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fa579d-b28f-4040-a103-a2f05f6a62d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec735cb-7477-4551-954c-c82b1e986761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5c4868-21fd-4b4b-969f-0f5bec946fdc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b2d35c-c740-455e-8905-784374da5cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ee91c9-fc34-4b5a-88b5-79b45235c17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd14935-3ec1-4de4-bf8d-f9727ed033d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a3da50-3912-4e50-8bbf-0d314ec36665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5f852-610d-4d20-a78a-1402a5e7e340",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a72502-7a95-4b19-8054-0ebfb8f5cb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ffa122-2d57-40bc-8208-1f3a1be5dfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a408292-c242-404a-ba8a-d05881d12065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a0625f-1cc7-40eb-a2b0-c41f15c994f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8379d32-a75a-4631-9eb1-4a342b5eb2af",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6d3e05-78ec-46e2-854c-2f4e2c385a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129bef06-5e6f-46df-a034-c86b9fe08b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586a6547-7bf8-4dab-ab59-79d2f829f19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a6a352-ae4e-4203-9343-51813157e5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a6d741-5de4-4001-9e28-5231dab222db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52190e4a-e0fc-461d-919e-baf497e4c343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c933582e-30ff-4ed1-9fe0-1469740358f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ed8c55-0de0-4045-b6be-4bc9605354df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb71b272-8ee1-42a8-80a9-cdf56b26c5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1431ad24-83fb-401d-a512-9728f37b80af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278b891a-f7b2-4794-b777-07f2cb779b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad877897-8328-413e-ac25-c591b74230ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c621e04-77e7-4520-876d-d049da0c6d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829ec2e0-66d0-42e3-b781-cb6fc5fa15bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3631c7b-041c-48c3-8813-04378c8ad673",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf489f88-25c0-4b57-8082-aa6e26db1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b53570-e8f1-4660-95c0-b5c2240f2072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84a4d58-80df-47d2-9944-c15fbaccf0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07012ed1-967f-42bd-9cda-6420f595d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92765b23-6d06-4118-befe-c88824e63ddb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23190eb2-a8d1-4b0a-ae95-080b6678b42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7ebec6-735a-4fe4-9842-44f99a3043b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffca7f8-8061-48d5-a7ea-c4ad76c51d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "418b9a7e-de33-4426-82e5-e2d61399f64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f375211-d499-498d-836f-faa0416d8cbc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6dbe3e-4726-4743-94f9-150281448ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de607d2c-5e76-46c7-9ba5-c7819be37ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9992adfd-a5b1-497a-bb98-0d227eb0dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a89a075a-867f-46bf-8c35-afb9892ab7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba1032d-9929-4446-924d-ce15cb51fef8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c83f28c-b081-4292-8d3e-f8d7f6fe6721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "246c39e3-4941-4d9c-a357-19e2018ed689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833bf940-9c1d-4cad-8e66-307aa69cc3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be66cdac-c1b4-4011-8bff-73a6bcbe2190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9794ad24-87cb-45b3-ab43-33b113fef217",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d073b5c3-33bf-415b-9069-cc28611166d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08b6465-7898-465e-a6fe-bf0bd603c385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6ff99-26a7-46f7-b1a4-91cbe78df854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce48219-7906-4f90-b0c3-2b0a21bedd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb876a9-24f9-4154-a2cb-57c033ee736a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6a07d-e505-4c90-bb1f-592fee7b2f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7222c53f-d64e-499e-a774-5d2caf440eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff76854-0e82-43bc-ba33-4b08539c58a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96923df5-42b1-4155-bd95-4e0a7b563806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea3497d-4a17-443e-b02e-820ff369e37e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6984dd-d369-4402-98c6-470dd726079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec3ee60-b3c8-4bf2-ae17-a00adc18ea5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2cbd0-8303-4b60-9bf5-1a5491fd44fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69c7428-6f3f-4b9f-b466-7d9342f61985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde47162-54d4-4ed8-9712-6df6bb8d8e6e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f460d16-6a93-4f8d-ac69-f63bc29f14a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605f84af-6061-4bb4-9774-c3fec54dce01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a370f35-218e-4ad3-9cf5-836561f8ba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d0330a-bdc4-40fc-a014-bbafe286dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7a44d5-7d4a-47cc-abf2-355744fcc717",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30f4bbf-ed50-43c2-8d8d-b6fce920dcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73810b8-3421-41bc-8532-b8e0fcd510e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc08871f-3236-479a-97f3-482309459d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b56b52ea-30b0-4768-b6f2-3f5213cb868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bb8220-b78d-4ae5-8b4e-4566adc6222e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4afafa6-c71b-4825-b734-035f226d3c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6490a82-975b-4a25-8851-5b722741b620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec4bd3b-0ee7-4f6b-94ee-d1ca52960c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "beff5159-8260-49c0-b008-6ced51a10467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7e3eb2-c3e1-4dd4-9e7e-342547f0dfb9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319ce986-125b-400d-92af-df62ab139e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f7b519-ff46-4024-a20f-0516cc1e228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a2877c-35e8-42a5-9be8-37aeb70bab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2006d5ed-88f4-40a7-9659-eb69176f8a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0ccae6-1aa0-4f44-b43d-3ccc2322e7c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027fbe1c-433a-4ecf-9e0e-e58d6bbc4ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c9fab6-7c20-401d-af45-d46224f60cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ab5cf1-0db7-4c16-a223-4d0bd163e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "42fc3cac-1036-415b-a6dc-920bb5faaf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6082bb4f-a4bb-42d8-99e7-7bb994920f3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5727f6-a58f-4f15-86ff-09ea014fe6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d05a97-3a0e-4e0e-bae8-e7bffa8cbd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d110fa2-2265-4ad1-bea5-627058c99f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f916fe6-6716-423c-81f2-0382d3df9976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0b94be-bc50-45db-a16b-989bc183ce21",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d438c4-182a-4b39-a78a-88a0799ac6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1968a4df-0ce3-4a86-81bc-12cd758a8c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8648d86b-c606-4c65-bb7d-ce7826429023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bea6e5-2d14-4d07-a7c4-6738a8c8a6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a38d271-2430-4c56-aec9-1b4673a5899f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa12d7b5-9f71-45de-8fd2-9fce8d6ffaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0926d42-2819-42ac-8095-8ca3f1751604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4124bf5b-6b69-4344-8214-51b21ffb6c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43eedc69-9936-43ba-bcc9-cfc93b07380a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23267594-7c74-49ea-b73a-9e08851576f5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3652f-897e-47f1-aa42-4471c3d6425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6a867f-2008-4a36-a87c-76bd72d02d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bfb8f5-4aff-4d60-b21d-c2ec3e5644f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e74039-a9c8-4875-81a9-a0139ec60210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb0fb2e-52e1-4acd-bc0b-472e04f69838",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ebebd1-24f6-4e8e-bfe2-876e3923b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937f16ac-a53b-415f-a063-cb63d1d54aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a63dc51-4345-44f4-af27-603d51a414b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33bb4fe3-8ec4-428d-ba54-617b81edc3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a75bd7-0a7f-45c9-adb8-a78553c7ca8c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68278da2-15ad-445a-904c-633456e89803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d86da41-4a1e-4d24-9b67-5c0d823789b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daa1fae-09ee-4ebd-b3f6-e6cd6e900581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7925443f-a1d6-457e-97ef-ab36fe73f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6863e7d-cd36-4ce3-b504-c8fd1e06a24e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a125f7c-00e9-457e-9029-c555820b908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14c7242-b483-49d5-85b8-e5b3d818bef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2488a21e-e165-44bc-837f-96c58a346493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75116870-370f-4e91-b496-763dd1b77ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7330bb38-eb76-43a0-86ae-e1851b8bf601",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f5dcfd-87b3-4499-bb34-6d7ff41953a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dae15e8-ae26-4c91-829b-866e986374b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce35ebe3-8b8d-4c4e-8571-ce36766e3c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a168c85-b894-4871-9b32-0baf8da508ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfec668-d646-4a3b-a100-e11a4f020595",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52af5cf0-66b3-4b74-a2e6-9e265ee15182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414aa5a5-50b2-475d-9401-54506af3198a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caae08d-e70d-4aaa-8851-8f3a36212826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64d2fb5-4d3c-4827-b6fd-52363a745484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19743a7e-b4f9-440b-9a24-a6861d0ff06a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b0169e-a2de-476f-a374-16267bcd2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0dee33-b730-4564-9af0-24a012a70765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6398b-66e6-47ad-a200-795da2627d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "439515db-7a7d-4484-9b79-9e0d35c55361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc35816-4031-4a30-9cb9-8db5aacafff8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7886f4f8-c3a0-4504-8c24-a54bbd080d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571cf910-56a0-4378-b74b-3bb6f590d210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80bdf42-f27a-428d-9d7b-e7a15ad7f2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d9b161-8b05-4894-b613-4bca8afcb6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e2eb08-ad93-480d-98f2-a8f31da5c0ad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed2f07-16f3-46f5-b199-e425d58a1e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ee28b7-5425-4da8-a0ef-c91a6352e7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5255a10a-3a86-46c1-82f5-77c5d6f504ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "023fe6db-ad6b-4ed4-baeb-4c71af76a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5796b8f-43c4-488c-9081-935169eff799",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f638c72-fd0f-4963-bc7b-f54f2867aa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b51101-f145-4552-a6bd-894a0f8c64e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049ed224-32cc-49f0-a20b-d0b8b761848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16dde942-da44-423e-b483-dee2996e4d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471af767-0e2c-4343-84de-c25834ab92e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a6bc20-b2d5-424e-bf08-d81c303e6e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bc0d9f-d7db-4af6-93f0-a01264b3e981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b61613-93e9-449f-82be-094a02297d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff62b419-468e-4a0e-b453-124b73a983b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ba2ec-459e-4ec6-bf46-8f5acebb58eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c8e21a-cad0-48d4-b275-72d0ef12659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d93fb4e-dffb-4349-b88e-d3be4e254d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72c3b0f-527d-48ce-9051-e1a8822d0cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2daf9cf4-0c00-45e1-a6d7-e2eaf2c1dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a182b93-18ba-43ee-8432-b6e43273a893",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb4fb0f-3a58-4c2e-b8b4-82f26717721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8cf7fd-d4e6-4850-84e9-6c1e2f1887de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fd2701-d2d1-4bc5-92f8-0aeea67be309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef0aa6b-1e45-4f20-9dd9-496ffd61c12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb70b8-4f51-4fa6-bdf4-d9a6e71642fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860ccf97-a0eb-4978-ace8-a2b6dafd350a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96dbe9e-80a4-4afc-af8b-33a05012c9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adb23ad-66ac-4a5f-ac8d-c4aef1cc6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68c8c5f-b672-4274-a6bd-5fd4a7423bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aa0198-8034-436d-8685-d44877036864",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ebb72b-509b-46e9-a039-60c619e545d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd5aa11-523c-41ae-a8d4-9389d2f10bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef498e89-343a-462f-9836-05c83107b4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "840202d8-a1e0-4ab7-9d16-6f1170bbcc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b64acc-bfbb-460e-a70b-8502049e5fef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867fd970-198a-4e6a-94d8-000232f696b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f613408-430b-418f-bd7a-566fe3fe3dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc14f874-d613-4bf1-9d4a-d43ce99a31e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dfed93-0b15-417a-8361-7a49d86a442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcfec37-7a4d-49b6-a008-1af445918e61",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700a73e4-de3d-4170-8e77-5bf74b828dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9d8c34-2f39-43d5-ac1e-885ab4a6c79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e236c4-3835-47f9-b363-e8e9c0cd438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86def744-afc7-4582-8107-cf4160874daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6640232-165b-46cf-9447-a47f17d3ff22",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb562487-6adb-49d2-99f6-d6c21a70192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b173d8-1843-4464-9e96-3b947ca59f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f50bbb-84fe-4413-af39-5451a3fd8e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57470d6-59d8-4375-babd-2ffe3f2b0f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7a4660-2e38-4970-934c-4b928dc9772b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5ec083-029e-4f95-983b-75de1141885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2acb70-3f59-4661-b2c7-b39129685abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280cf853-e4b2-4bf0-8642-9ea0829991f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b323fe4c-03c9-4a8f-a133-9d459e1254e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd002730-6aab-4627-83cb-59f22d7a7aaf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f6ac57-cc08-43f2-8ec6-9fa6f30d2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31d6fe7-4889-4fd9-b5db-eeec558c00ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90b6372-4efa-471b-a907-02709a2ea709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c347af36-3049-4db8-be92-64f5653d684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c4f18-865b-4174-990a-f04d0440188d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247c583-b4b1-46f8-a5f7-8c62b3dcb63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe293d6-8f40-44f8-a9c0-a9f1fbec600e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c629551-9273-4666-8bc9-6f9533e0ddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9118aa0f-b3d6-4493-83a3-f5ce1577c56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee206dc-8183-4011-a62a-7be2c5672c81",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1722f6-3fde-4ab2-a358-4eda69ec0667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7613f-a4cf-4e82-a530-74a5398a42cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042219d-b68e-4e4f-8c12-b2e92b0cb9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62aa611c-0976-48fd-8475-9b12c93b27a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8993518c-509f-409f-9636-12f0a1bb59e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb0a954-a051-4c47-862d-1405dbe335a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2e0198-0b4c-431d-aec5-766579bcc6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f03ebe-f13a-4d37-9de2-8baec531af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "855a322c-2774-4705-9cc0-8db0b3b7b07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ce4a3-1b5c-4ef4-8a5b-acc9694ea125",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1ce5ba-156d-4067-9f48-96d8fab9b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018f8c2a-5f7f-48d5-8da3-978fdee0a6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b53997-74da-461e-90fb-b266e363457f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d441271c-82ea-4f93-88b9-09f46f45055e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a006a-91f8-4ec5-b6a3-5b0b9d452df5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd762ee-bd00-4d91-8043-15ed404e3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f5c0b-9f5a-4aee-9eac-64f66b82bf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a62762-e6cf-427a-a3a9-61035f1a00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "619db9e0-4411-4a94-8420-ca5509803108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08f05a5-0736-4c1c-89c6-23b7b2eda825",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c29d89f-a39a-43bf-993b-8b1f26585680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb78864a-7c76-4180-9ae7-095595825479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8e7eca-00d2-4a5d-98d0-64980f3f0989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dafee09b-65c7-436b-987f-461db90560aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62e6fcd-e3d1-499c-8054-174edc6ab0e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f0d73c-c71a-4d83-bbdf-c211fd334369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2352eb-bb49-4a2d-923b-a3ee75897cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8658ad3-1cf4-470b-b0d0-4d08731e0484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da534acc-dd5d-492c-a39e-e5c34e641b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeef98e-8cd9-4f2e-8d5f-58dd23498031",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a8c96f-79fc-4516-b981-fc0ede279211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b067db-479e-4eb7-8720-4446c68cdcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd8543b-5489-4b54-b720-8d66c306f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d525339a-fffb-4eeb-babf-d344b8f43a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e02214-4cdd-4afc-a7b9-93382727e418",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34e1ab5-56c7-4e02-bc1b-52b9e6f7e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00e7bc4-0466-4629-8830-5efdf1c68bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51f4e80-863f-4909-bc41-9127c4bf971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a68130-3768-473c-8683-9573c63c3b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9511a54-959a-4cad-98b7-502d65699224",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b0768-0ef8-4b11-a210-6dddd161a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baebfd6-1aa0-46bf-af63-b71a0a46d504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7972fd4-098f-4c97-b853-5fecf35248bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebe4d95-6530-429c-bcd0-4ba577e1f42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dac2ae5-4321-46d0-b0e7-ff8ed974cd05",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34a31ae-e1dc-46ab-ac6e-8aa5d086e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc52fcd4-7e68-40bf-8ee1-348bed64fe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858965b2-3aec-45fa-8926-2a5b3aef9d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85b6de8-a7de-415a-81df-7a4363f0fc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f9968d-8ac7-4e09-91c2-4ea49b97b13b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a24de-14bf-4f05-bdba-94b3b089cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265fb336-2423-4008-8643-403bc831f778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657086f1-a43b-44a3-be13-67add4bbed09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84b12b5-a91a-4ee8-9bb7-c0a4b4663b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab242ad-cd3b-4838-99b4-fa028dbd8595",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21732b3e-7469-4d61-a3a6-869766ae5ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5fc6a3-b178-4199-b73c-db745f1b49ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df81eb8-e04e-4dee-96c8-6b11413d0ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c39ca8-18e4-4193-b331-ac403000e709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da027164-3187-4408-b5fb-f043e0150722",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca7cdfe-53ca-4ee4-87e1-d59a4415b127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587d137c-ab99-48e7-9d5e-4af3f67c821c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386d22c8-5efd-45d7-98e0-4d2b91cf665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6baf90-2d73-49b0-95c5-8fc9584c68cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd94362b-66db-4995-a413-927af15de89e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c821a07-94b1-422f-8b45-582e89817647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879f53ab-3135-484e-9dc5-5d7488c44251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac6014-d989-41a7-bbb2-f8463a75d9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f55c5ceb-f9ea-4c00-abdc-1f8ad9fa6381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43bd34f-b48b-47cc-acc3-b37f50388d75",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2969e735-def7-4d22-9abc-d5a05e02f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62420e14-59e9-4ede-9f8d-d287fcb33183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2220f0-ade6-4b7f-a4d7-d8716dc46241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d06fede-b607-42da-be98-260d39001218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04df8f0c-5e42-443b-815c-e577974b3db0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145518f3-2179-4373-802d-6c0e55df8027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2f0f67-7ac2-41c0-8f1a-5321ee5707de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e40cb6-133b-44ef-a7eb-1a6c3b72df23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed241504-2a4a-47d3-9303-71e7910ed50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3183b4-a5a9-4748-a49f-0a3f2d516277",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bd4de4-1410-4162-bd83-3516d572fbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad96ae9-bbb4-457f-af47-540d705b476b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189dd4ca-f535-4154-a010-726afae22ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c68c5e-9d58-44c9-9b5e-f93f2ee5f809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08969d7-275d-4968-a061-a58cc9405d3d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d957f466-2e17-4350-a0f1-4d87188b40fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1675ae-2381-46a6-a370-685ad56743bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4020527-b367-4611-9bca-015d6687d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec62154-dce8-4558-be19-669acf3af87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef6056a-0f96-4ce8-958d-8ac56ffc619d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea18238-4e92-4a4b-a122-0f29df0a3963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0d1d5a-023e-4514-956d-5b4bcedf8e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b4a192-2f38-4614-a76e-49e82749b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4513b515-55bc-41e6-a972-60956e70e02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8f357-5e6f-4262-a166-f0f296ea9519",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc7f296-1ea1-475a-b385-2a8b5d9c9de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e36bb60-9c4d-4cf1-b017-b3644212e199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbd1fc9-8ce6-4d4c-91c6-e79d095cc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "148e93f1-2338-445e-be6c-88d986da5272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf6511b-ee31-41b0-88fe-671ae162e4f7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63871cb4-d4b5-46ac-b653-44ded9f15428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1c441a-cf1d-46fe-87e2-b78f91f1c275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f137c-2bbe-4ebe-8cf7-b9e869f9f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee7f251-64c1-40a6-9286-169a639640bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412db077-f5dd-4f33-ac38-3a671afeaf5a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bdbb35-a353-4a0c-9b6f-565650c61b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff47203-bc99-4945-8bd2-7400878a668f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd44e32a-37b0-48d3-b645-21e35226355a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "473de643-7038-487d-8168-64b71560c026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886288c1-1a39-4ef1-9301-1dc5ad542f79",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6650b9c0-b9a3-4eb8-b668-7ec346ab13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98fec93-d869-42a9-9032-c20b57222727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556bc2c-5330-485c-9085-5fc19f14ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7364c53d-ceea-4fb1-8f98-2fcb87cc4052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a59d963-ce74-43cc-8163-1383b9777ff1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbeab1b-2c9e-4bac-b87b-3440327c815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ecf73c0c-75f6-4123-8552-4f681aba201e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f7b096-f0e6-40fc-9ff8-7f71280f0c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f27ea11-1672-423e-bb16-b2b579aa8aeb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1a6e385-9f37-4a12-8db0-3095f391b176",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22d337d7-5a2a-419d-bfb5-d39fff7aaad7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021e467-c08d-4822-8981-08a9611c8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9700e93-ab72-454d-a923-d97f0e1617c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c9b13f-3408-4f3d-9d8c-6371876488af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc89db22-eafd-4a25-8365-bc4e5f8dbe7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6b6bdb5-af18-4a58-8c74-f0e8ec7a619a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c0d5223-efa6-4d54-b41e-7f83e52143f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a10595c-7e62-4c74-a1a9-81fd0872a909",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82a67b3e-1a3d-40bc-8dc0-c1f80a11c3ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ab03c6e-e066-4a10-944c-913e11936ce6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdcfbbfe-bcd3-4cc0-95b8-64b9002d444d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13038717-6ef6-47f8-b89b-9f5350f858e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9e90188-7ebe-44d0-b0bd-3e7920bbbbe8"
                }
              }
            ]
          },
          {
            "id": "36f5fc7e-9f30-450d-848a-c62ee41647d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc6ace25-ae8e-47d9-afd8-c3f52dca2c73",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "467143eb-dad3-4645-bab3-f708fb0904dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37ea249f-7f13-49b9-a3a9-6f2d8b34fdf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ab066cf-e5a1-4a28-9d6f-149e75147586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8df7f40-d9ec-4e20-9b5a-4a87ae429312"
                    }
                  }
                ]
              },
              {
                "id": "c1284963-c75c-4681-8fea-1675167c5713",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c5d78fd-ac59-4935-86d9-8d57e93368f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b02a5136-2ab5-40ff-abbe-7174ba8487ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2df79508-245e-4ea4-913b-83f489158b1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9784f651-9c05-4368-a19b-81bfa436a828"
                    }
                  }
                ]
              },
              {
                "id": "b95e344b-7873-48c0-9d65-b247f0c02f67",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f93d019f-319f-47ef-9bc9-769bf56ba112",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ea61f9e-7a76-4680-bd6e-7266710f658b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05de6a39-e704-4c57-882a-253e632325f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5b81ef0-e6d3-494e-b5ff-fce90ae535a6"
                    }
                  }
                ]
              },
              {
                "id": "a412f752-313d-4563-839d-3021718200ab",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdae2238-e9af-45c3-be24-3c1270251564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0492855-8a41-4eac-b8be-d53502e9634e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7914dec7-ab50-4ed6-b14b-83cd9dd17386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9ca96866-2f33-4b6e-a33c-c13d0b326871"
                    }
                  }
                ]
              },
              {
                "id": "9a0a9210-775d-4d18-9ecd-6d676bd2e0ac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b01a34-b0d1-48db-9e45-f872355c2ead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "291c07b5-98ee-4cd0-a8ec-98dcce2837f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "966d9321-a25e-47c2-ac79-2369b74558ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c8fff99f-a811-4f51-b24f-7724f35cbeee"
                    }
                  }
                ]
              },
              {
                "id": "976625a3-6923-44ec-af48-fad6accc5f37",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b1c38c7-7500-4270-a1cd-58170d8e1ce0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca9c2df6-b828-48e0-85cb-042861186dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bbc74dc-fff2-4a72-be78-d96ced3c73ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f302a13e-8755-4fd2-8a5c-bbd1f70c226b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1272c3c0-9330-49e7-881b-4d9817f964ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "274d2001-f713-4e2b-a3c1-7ba3a0f9a902"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6bfd0994-f7ac-4a94-92c6-a72cf883afff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26a7db96-df66-438b-ab9c-0f99aefafca5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96f04586-6bb6-4400-8b76-fb16a4d89c6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bb958d35-5666-4ae4-b614-7a7927af8f08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "050cd7a1-0408-4bb4-b969-54029f73d29c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fb0b2f1-dcb2-47b7-9fc4-e239b8044c97"
            }
          }
        ]
      },
      {
        "id": "92e169f9-633b-47f6-9db5-8e3271213cca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2ed04fe7-403c-4085-bdac-817f25e3d940",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfd4f7b3-828b-4f5d-ad4c-e9df4a96bd08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efa2bebb-7c03-48d2-99a9-3faf9595b069",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11293921-e639-45d2-899d-f7cc5a66dcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8389ddba-4ba6-4fd4-b92e-450066d97263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568939b-c631-4274-9a77-3ba362e2f472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f856d2f7-ec0d-4678-af1c-8ead307aea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a170bf03-f559-4ddc-8a6e-1d550f50ccad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d3965f-8983-41b8-b6cd-6bc13f5e2862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825b9378-e087-4486-9495-c27a46bf6d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e4a64-95ec-4941-bc25-73b2d2b7771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab48d716-cdba-438c-b833-a6d2181dbfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd81d42-ef78-472e-8f24-3a659cebbeaa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1e28a-8bd0-4308-92da-73afc2d6af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac1482a-c5c3-4057-8cc5-e63ed7bbc067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48435a24-6ba9-40ec-9460-43b128cc5620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aebda1f-5e20-43c5-ae9f-822d8fa98c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee4b2f6-ae01-4ae0-9633-a931cafd71d9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad1dad4-0e50-4b49-86e9-6838f636e896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd1fcf7-7915-446a-bc36-ef683b76e0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a96129d-4e9c-4ec2-a7d0-f5fbc10f2113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf61a6e-8a37-4d6e-8e7f-be14ad9f4d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f87bdc1-4f02-44be-a387-4ff1c56f9533",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a54a5e2-bcdb-4654-8d9d-92f0aa0628e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc3550e-d5c6-48f5-a3de-3bd3ef5139c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757c18a0-70fa-4717-9289-a48ce9e5e648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26100ed-2cff-4510-b214-546d6c0f962e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de03de6c-fcb5-4890-b315-12fa67ab750e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e88f254-6c5a-4668-bc59-46add9db9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fd2ccc-b45f-4d5e-8ef8-2b8ccf817057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7135fdf0-7373-408d-8cc0-67c4cbb6250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5848f6-8b03-4322-a90e-7e2fb146906d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361a437-9f3f-476d-855b-d5e7583f19de",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafb0cfc-c85a-40b2-9af1-58e47f8b6cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33484ea4-7b23-4501-8229-b461aa1aebf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95ade5-8de1-4074-a151-7e2d1b04a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29b60dd-7935-461e-894e-cf2cad270a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db4dba8-9950-4418-8d7f-94258c08f3c1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590ff69-73b8-4d2e-80eb-41b1d93aa662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5883b29a-ce66-475a-a85a-b3e16fdb5217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf74135-1279-4d7b-8fb0-41297c51682f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b639b8d1-a689-4904-856a-4a424205ec24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f6c05f-685d-4d40-a48a-384caeea8a4b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecf7e10-55bd-4a25-87f6-5f623d44dcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5697a17b-632f-407e-bba9-df7842ff8f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07808ae2-437a-4b92-9ff0-9d874c89890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abf4964-f7c6-492b-89be-b4234ddba480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669865b1-f469-4e47-9c97-631c6493fbc6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d601af-fca8-47bd-8bbe-acdf6fcd1347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8cfebd-b2ac-44a4-9ec0-95130d565b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386c6004-015d-4950-891c-22863ca9456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdabb043-e20b-445d-b75a-65551374195a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd9367-bff4-4edc-8161-9ab634c91d5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e9c271-766c-422c-a7a8-effbdefd76a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dc4f9b-938d-415f-b1b2-fdecd83b9c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89b12f6-a409-4025-bd4e-b539e91125cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22702f82-cfab-4d6c-8d6f-0ef7984b133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db624f9d-3e09-4291-aa26-d53d285edcad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954e7129-bd1a-4bd4-b21f-6dbe77b40e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c102e82-e28a-467f-ac80-9b544c961dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9281aa-caad-49dc-b393-49d72ee13032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8763cf32-3ee8-4fc4-8874-beda7498622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc774e-f07b-4f3e-aedd-1559fa7fd36f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a9fcdb-0d43-46f7-9522-234a27e15075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c04473c-4bc4-4d5d-a79d-0aef211c3b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81416895-3427-43ca-bdbd-24b90f2ebb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4333fb87-d4bb-4095-b5a5-c715c5013914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161e2c93-1bf1-4d52-a1be-1c2150329413",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd81f07f-f387-4f9a-b220-8fb8ecedff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33230893-0fde-4ca4-addd-7f06777fd438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be3d54-22cb-4982-976a-3f4bc923d382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2321b9ec-48de-4766-bef2-86b1c4ed7f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8c030e-efce-4037-b5a1-340be1d13c14",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa00ca59-9888-40e3-865d-cf3a7efcb550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6e3b48-6ff9-4232-8963-0fef6c5ce2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75e5f2a-e73f-4d44-9c9d-0227280e0099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "586bf4cc-6e4d-4f05-affa-52eead892044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d0eb1-173e-4210-a5b2-7aba7622edc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc133ea5-91f7-44ba-97d0-6bcb941614f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff23946-9106-4550-8892-785e4d39c12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18074db5-2ac5-4a82-b57d-a2cf4e620f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8500d0a9-1bd8-4bb3-bd8c-d5c6b55856b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bd34ca-d916-49ee-b9df-610c144ec4bc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fd8c12-7d4e-4882-b48d-2e9a2b8de429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61b0f76-03d2-49c1-a8a2-c8dc1c82c4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2f76c8-4ba5-4445-bd58-f83415045808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "673c01c7-ad1b-4d15-bb0c-1a032e3efec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48267490-37fd-4827-b3fd-358711eef707",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af871535-f95d-4e1b-8c2e-5b1480bb35fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a25a9b-0053-4849-abd9-96a578a8dd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201bcac2-b556-4977-885f-c8eb0ccfd2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30539cc3-97f3-49e3-b388-58d0435a7e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d7f34-406e-4451-b9e0-fa1c29ad6349",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926f5d71-b87f-4995-a6ac-395b950d2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeca62e-f301-48d9-a728-5293ef7b02e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3591a3d1-ada3-498a-b208-aa37310b58db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f424c91e-67a8-44b1-9663-a3dc5bc4014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca379144-4733-4124-9264-d197776f773a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7652ea-bae2-4ec1-9494-8c8ad3965fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52945fad-4540-4568-9293-608cfe60a08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccbd1c1-d133-45ac-9ecb-549932aff483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ab9f59-39ae-42f0-aa60-804b9bcc6a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d555050-e973-441d-be09-e1cbf42ade54",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dccdeb0-4f42-4b40-baa4-fbc86931cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bda5ea-e446-4932-a7b1-6819534f3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9783b9e-7df8-45d8-9f9d-36d3d1dd8236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20506e6-3d33-4df5-9517-89882c0660a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1a5a5c-ef1a-4d2b-93ef-b6d99b473ee9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426df744-d141-4682-8231-0a3cccc6e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df2388c-e421-4272-b068-cadfdf9d97c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4ed26c-31ac-403e-966e-bdd634e6ec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6789fe6b-efc7-4df7-bf1d-034772403baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d24ffa-df42-46b0-843e-cf7885d0957e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135f88db-66d3-47eb-b4bc-30d5d8e67801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3243c8af-7563-436c-b941-fa62971fbdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8d0d01-a9b6-4853-aa44-c9a4681acda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "068ea696-9412-4aa4-aab7-7d96b0fa1afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94976744-da61-47dd-b941-5b18086de28d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead3f5ab-719a-414b-b23c-146f81c0c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced50713-03a6-4425-bf4f-8c6493535e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2300f27-b6ab-4cca-8126-5053d47fe395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a079bd-1919-4484-8d82-7abad9cfd294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d7a76b-09d5-405b-a2c0-d6f91946ac8e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affe2bbf-e6c2-4503-aa53-8b6c94795af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38a2fd7-c797-4c5b-a43c-39cf1bd33508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cb4aee-cd07-4082-808f-f9f65e981b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec99236d-6053-49f4-bab7-b8cc9dbcac01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935f1bf2-c13e-414f-9a54-2fc825d2d655",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b997ee3-957f-41df-a07d-15318a154155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b59da9-9d68-46ff-830d-52fe24e56ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc55742-b8e4-464c-8d8b-7956226b0435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "799aa088-d733-4006-b52c-bd83b81b8b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7052ee-8dc2-46c9-90b7-62e201b59013",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a92474-2d21-463f-a679-a4eef5349aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c382b0cd-fdbe-4670-89c2-f06b51fcdc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1327c302-e21c-42d6-94a9-f3fb613d50d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f734c305-4485-4a25-9237-76b2f8fb6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e5028-d9f2-4e41-aa49-76e4b8dbc2bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74bca63-c94c-4d75-a938-8665d4d6dd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dec9c3a-f835-45d1-9fba-33f2decc8ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a03797-59d9-45eb-9a39-071a70fa49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eb5c41-fd23-4f75-86ab-501c55bf3390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75090c24-7bca-455c-bbaf-6079e293f4b9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d997ed6b-7cba-4e94-a3ad-c215348052d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0784e4-98db-4b26-9f58-64492d17a14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39df475-74c4-4546-9b37-1dbf51372fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9cc900-2e93-4eaa-85c6-0452c5a477ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f3635d-51ca-41db-99d9-1d5bcaa82ecd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3bbfe4-dd13-45e2-b459-caf67a217153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fb0c98-f6d6-4c93-be91-31b02cc2c19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c8fa2a-9da1-4309-9d21-2881b1bbe79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e511714-70b1-4416-b8fa-ce726828a8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b496295-f851-4039-8fab-ac8135538d5a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac74271-9fb7-44b6-ba38-b53db65d6d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340b1f4e-fa81-40b3-b537-a292cc8bd6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a31d5ce-9ce7-4476-b3d1-2d359f8dade5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4e282b-b9a0-4581-b0c8-b13012c8c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb5f68f-4881-4d4b-a76e-8604b6812f58",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654eced4-edba-4c64-94a7-9672d2069020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdb2121-bbc0-43db-b86b-8400ad92ea00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824b0ed8-eef7-409c-bfcb-a983dbf5109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc5668d-ba6d-4028-b361-31bcbc317df3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e508f8a1-3332-47fd-a1b2-96581c74d1d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb9df1ca-c3b3-4622-baa9-707a16220487",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d9e4f-4547-4d31-a02f-90a67b93306f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "490fec7d-524a-44a7-81fe-43ca19f6fe29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feab539e-f1d8-4ba1-b2e1-c95a0d15024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d01e130-827a-43eb-830b-988c20edf483"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a290d847-b74a-47f6-9829-06d399a00839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e485b6d-c2c5-425d-b1ef-b7ea1d76b11f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee780b88-1bbf-4ede-8bca-b6a799198e12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1635c16a-422d-4054-818a-ffebc21e3fd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44efcba8-f0c5-455e-a99f-8ae2fc6a039a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08ae3afd-3483-49c2-8da4-b6fb8df7b2d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76ea0142-cf94-4695-94fe-51580eb53247",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dadb273b-6bfb-4150-97bf-da70ed7b2647"
            }
          }
        ]
      },
      {
        "id": "d83defa8-5ebe-4ad2-ac4f-2ae9d9290103",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4d050ad0-109b-49f3-9ccb-91c0c866a962",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df48fca8-b5ed-4fe4-b6dd-7396cd682467",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fae8d18-5512-4e3b-96a3-496f0c846880",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10845dfc-c233-4b16-ad56-ec6b51f106f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cd028c-f5ce-4c2b-9570-6ee46277dc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7bd82d-b107-4569-94d7-08d3a4f6d47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d7f2de-b8f8-4e57-8dc7-467d905e48e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddde903-605d-4d3b-bc8b-9230c7ccdd41",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c738b9fe-47db-45fa-9e13-cb0ad0a1040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7687e47e-29f3-4fb3-b7b5-33efa384e92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b630ac8-818d-48f8-bfe1-afc0fa19263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e339c61-c098-4575-af82-3feb42a48be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa012cd8-eaab-40c1-8383-5d6b95458107",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a12b88c-6e2e-495b-b8d8-4af7e30eefaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8213bd-cc71-445e-8e79-a654e84a66d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e812a3ff-c0c7-4bd2-87ed-8efb56c9ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1695395b-fa1e-4a06-a47d-3bb1d7fc4332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cb7d67-a8b0-4934-b6bb-47a7d5f2adf9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffc78cf-051d-49fb-bc74-0874d04bdaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517a7d32-b4b4-4a43-bac8-869b01e36dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6269b0-88d9-4ba4-9030-4c722c54c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49baf1bb-25f6-4b56-9126-2b871e2800f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7e8ce0-9a6a-4982-a979-a479076c3294",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b7f9e8-66d5-493b-82fe-d562b7ec3539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4172873b-fbdc-4ae5-8264-d88aa742b7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da0e744-ab1d-4f50-a5b2-0e7b269905f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2435a331-0de7-4ce6-bfea-ae97afdfbac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41adca6d-4dc2-4303-93b1-38d9706d236e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f68787-fa13-4e50-997f-832c5b396c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475eb320-eacd-4ed8-a7db-02d33f0fe6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b18034b-5fdd-4cc7-9771-4ea3b582949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "631f8f1f-672e-4f4a-8453-b2ed9599ccc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8e2c75-f9fb-4c61-b676-14fb05995d96",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321903d-925c-4e63-b247-7e7ccdd9c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc002091-9c12-406c-9169-5b309bf72836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630574a0-15a5-4bc7-ba82-86674b2f31fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c7fa60-6a19-4e06-b993-d255051b3c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9fad3d-7f9d-48f8-856b-d423a4448184",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f86678-c0b1-4ac1-9274-e237d6ce0bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a94d6d-288f-43e2-aee5-3aa454149092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95223472-a6c1-4d8a-8685-74347acdfeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd136374-6c50-4788-b544-7fe7b3a68b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f34f862-6832-4916-a4d7-2430684d124a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f21510f-1176-432a-bd8b-1b82ee548854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884ce146-6305-4f36-9e34-f2eca41e793a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab85f0f1-251b-464a-be18-6a222ad7a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8dd1fd-2125-4cc3-9f83-7d2860be47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da4549a-bd20-441b-904c-a98c1b1e49ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5bded5-fbaa-4992-af6b-504041de02c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a9d5d3-2e45-442a-8bea-66d301b2f185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fb7679-d892-4975-ab00-3dca18f281ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42464875-465f-45e3-82c5-a9e19b927274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da95e193-c752-4f83-aeca-f381fe812d30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3b468f-68b3-4a0f-81b0-59bef1fdb051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44ece89-06fd-4352-a379-79ae88ab7fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8528376c-84ff-4b99-9d2e-f1dfd2bbf1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "84f7eaa7-9548-4230-90cd-0dc39cbff254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f592ba-efe5-4353-bbba-72eb1f5a49b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa800c68-b34a-4c5a-bedd-181fc93e258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50e6152-0a5a-45a5-bd48-66f99a7af8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdb1c64-fccd-4f53-b7ac-d786172f3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f49452f1-5d7f-44af-9e44-06dbf6ecc0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4d00c6-b56b-4c16-abc5-764d8aeddc55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf4697-0b4f-402d-b62e-83abd1acd21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cababe45-cea7-48d5-8db4-792c6d6b19e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8ca606-7fec-4eac-b1c4-ab8df7c0b503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7320d73-d9a9-4925-99c3-b075f88e41e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b25f7f-f1a3-46a9-af27-2bcf3c92856a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352104f-6ba7-40c5-bbcd-230ec2447308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3b7a64-d6e6-4a30-9d7e-dd7b3d484ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff81ee9-ab2a-4b2b-afb9-2e8e46b87765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34db7c0f-736c-47cb-a2bf-37c6936774fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df9b526-3ae1-4540-8821-387004fdcfaa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68425394-98cf-449d-90e9-8e7eb22e1f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836b4799-7798-4ccf-8211-568c3b811a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6f956-ff0f-4627-9823-87356566cff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79ea892-f7c3-468a-b205-53fd8e0b053a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b819af3e-ba1e-4749-8e68-f23fd574e4d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191726e4-c042-468d-8ec0-27160ab100cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803ce10b-2ca3-497f-99dd-4c5052c5b563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e2df07-bca4-48c2-8f1e-00fb9264544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1c9294-90ee-4c63-9400-5c2a81ca83ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b45aad-e489-4a08-9e2a-5c9deb140d4d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9e6807-d6d8-48d1-bfbd-0b2a28e6195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc165706-f886-4cb2-9370-1a744642fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0de3e7-f5fc-466e-bb5e-81e1ba8aa268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29fb207-cf4c-4075-be7d-03a9c1a1fddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6711ff82-c71c-4acf-bc60-713921398c92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc28689-38e4-47a8-9b3a-db090ff0bce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee30434d-bccf-4e15-ba49-e7c3b0f858d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e1bb03-2628-490a-aa5f-99c7a5f4f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d101962c-61e5-47ec-842b-68f40cb14adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd7563c-f391-4908-83c6-b547d7470dba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf74209-bb6f-4416-a1b9-b97abbb044cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc36c8b2-77c9-4d6d-aad5-2fdcc920a46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29c0032-9cae-4cb1-8ca6-25d19b10d611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cd37a2-5542-47e9-ab68-2dcb31a4e8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5227b1a5-7ded-4352-b431-941680b2b520",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071dbc5f-3ceb-4efc-96ed-586bad674bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1a8697-01c3-43ed-8d08-ae25b7e70291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0abdb4-3d1c-43c3-b34b-bdbffe4153c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb407427-884e-45d0-a62a-4f72833c446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc12385b-6482-429c-8265-b36468ea0ae7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e6c1c-cd86-4b59-b1b7-23f474a2c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34d1390-2e89-4a84-810e-926a3feebcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956708bf-7661-43f5-8a99-60b5e95a30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd932fb-13d4-4302-81d6-d22070df44f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582121b4-f9b2-4709-8eac-318a9908ed94",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c88a383-5765-4984-97c3-9106e5c30ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6e1400-92fc-42ff-9c3e-99711cc9f2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54808223-1def-435d-b968-6335466c9afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7338769d-2df7-4ae0-b60e-fd8ca7aa1df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c30569-1ac0-46b5-b20c-8f8590be059c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e5bac3-8a65-40ef-b4f7-412b626e6792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a40171-a671-4a5e-823e-547235c8eeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095a15d2-2ed7-4992-ae7c-f86726436150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99697151-978b-41c6-9991-bce428ddb989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0f5591-c6d2-45fd-bfa6-4d54579ac5a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2350aa73-4128-4861-9af5-c854d94924e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe3e443-7568-4e63-94eb-ff64dd4a4b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d315715-cda7-4e0c-99cf-9f2fc9fb058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be941c03-9b38-4d7c-81be-e9096b8e267b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a867de-09d6-4afa-8ff3-a9e9ccf5a227",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d98d2a-0848-4647-95a2-5aea37e961a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c832b98-39b6-4d47-aa2e-3d75de232894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847c7645-dd7d-4ae9-9eb2-543e642ccb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea20b699-831b-4ccc-a531-57280a528d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ac3f37-9e47-4851-a979-02f1b6a40c2f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d653ce-44d8-4fd1-a052-d8ee2fa83ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec62e842-0227-4665-8659-7eeb330fc249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bdb9fb-0106-4042-b907-b8e1dbb27652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ce348f-e305-49f3-b2b4-dc4baec852f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf1f155-b812-4d32-939d-2bb1b62f2064",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d508fa-de01-4213-86ae-d53ef998d563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eacb51-c4a6-4c15-a370-3016a970d689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61944ca8-1831-42bf-a363-c3811830203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a02216-a53f-4645-b23a-7e7200d1b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a127a76-2e28-46a4-9ad1-89661a874926",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e1c34-ea99-442f-ac48-9ddb415832a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61de4b3-0439-4eef-bea2-3596bc027c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6959a3-1db5-4d14-86e5-417721573f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be72e4c-4acd-4fbf-9eb8-db4f0afafeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44c119-fde7-4d1d-98be-f80c49c85b34",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397050f8-8d4a-46b1-ab33-cd18f63f117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576c01c1-3ef3-4ab3-afa4-0e454cc70c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984a5b07-298e-49e2-8379-6d17f1800cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5c494f-914b-41f3-ad38-ac834ed1623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798c5d8-7291-4819-858f-c75a8d7f9c2c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf563fc-3679-4bb0-a6b0-3da526401807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89848424-5b88-4edc-bd8c-e64f91aa4ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e7629f-5b5a-4d42-a333-dac56fe162a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "980280e8-7d5e-4350-85e7-525b76a082be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1fb549-2302-4373-ae51-809c9f5743ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cd8cef-dbdc-48b9-bb98-c06a2c6042fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6977b661-7507-436b-9c85-ada1b64e45f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3f0686-9365-46cc-8ba7-32324af8f1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff8a3c3-ac86-4277-a667-7687e7d2b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283d8885-c89b-4118-a71e-3a23ea4f4802",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477fcda2-7296-407c-b0d4-24e2c4d69e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be932d96-b521-4b0f-b6d7-4c9b92074656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6620f4e-abf7-496d-aef8-0711c2deb483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad0c738-9255-4816-a8b8-0d84a9082930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3643a44-4021-4156-b706-aab6bd80a373",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f490239-9283-4ee1-a23d-cf8b7abaa1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2f9bd-bdfa-4723-bf36-51c651f72477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2606aa96-a4b8-4ab4-b2f5-968071f4f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f11c4df-ba90-4f86-b608-b5b47f53c9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a7ec82-d35f-4a40-abe7-bd830619e022",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf8285f-8153-4657-b032-02772012873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adddd94b-1636-4c18-a645-d3f15d77b3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9c0bef-2bdb-455d-bc62-638a04cbc21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e5f973-2259-459c-9bdb-8322f3aa0070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bfb6e9-0213-461a-bc1a-b369e900c473",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06e9d51-141b-444e-a0fc-d5c3dec5cb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3070d25-1e26-4808-81b3-8e3c94320539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8c37a0-fb4f-4e34-90a9-dacaddeeca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f511b290-8945-4494-9bee-b77492f8afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e326f8-d220-4004-8f33-5eb9dde23151",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7a1bf-f96e-429b-bdb2-ce9364e81660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce27132-e75e-4f37-940e-7896bc347ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2871ebc0-453f-400c-b503-def4d8631350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8073e873-e229-4bb7-8d43-97540024e19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d90d06-c4f8-4923-a7a5-f010bf608d57",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84969b7-0fb3-462a-9e8d-5cb90b9ed64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd763d5-1c19-4f90-a167-54893297ef98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16054e93-e82f-4d6d-a5d7-a85bfcaa1747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5e84f8-077b-4f53-b4fa-83a2293f9c9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "902cbd93-912b-482b-b038-b335706f65c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92e680e6-fa5f-4014-b010-fd1272e36cbd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c624d93-7b0a-4ec3-bf40-dd1aa7f69cd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "caddb26d-7ceb-4bcb-adc6-847f461b0040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedcadcd-568e-47fd-9080-708085338bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d21dba9-6bf4-48d1-97e8-6ec1d248a408"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55160bd1-f192-430c-9894-6b4e1ff77177",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97557ba6-ff4e-4c74-a51b-0dcbe5a61b63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9934ac30-7c62-4adb-9a80-dbd2680f549b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f068a1-b259-4ceb-b8cd-95a03f751241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d77fd75c-91b2-474e-8fb8-4540d2640bea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bed2d7fc-bcee-470b-920a-a3ec5dbc0ec6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca45cbaf-e5bb-4133-95d2-fd0bd7f8f9f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ffcd356-a577-4950-964a-21691ff436c6"
            }
          }
        ]
      },
      {
        "id": "528090ae-82c8-4e30-b84b-42f17db77bc8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6dd84b54-fcc2-47c9-b39f-76f8c8bc949a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cda25ea-96da-42e0-9c26-c8109584ee10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d181ffa2-6868-4c7d-9f6e-8bf293120137",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1edc24-df1f-4699-a045-9c45b20c2523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36d1e08-e32d-4392-83ac-e9578bb1ca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6946798-85da-431c-acff-71f39a9a2c1a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b7515f-81b3-4ab1-b592-665a018ff352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbf1353-985f-4550-bc4a-e49c37b34df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26d7bd-f11a-4f47-b0f0-c6db2271db21",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213beab-1989-4f99-9eaa-f3c65c09e22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d880dd-294f-4a6b-b2e3-294a0f6b7a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fa1194-464a-4067-bd6c-b156b5f495f7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1505075-4fb0-4e58-831a-763d3de3b7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c341149-238b-42ab-baa1-8ede1f008fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bb8203-4c3e-4bb0-a8c1-cc15dfbba9e2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad6940a-0798-4b9c-a3af-233e670c6471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71382182-360f-4a19-ac16-1fb65c7eb64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b0ee5-0510-45b7-baa0-962b36b1923f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49d9d32-c020-4fb1-bea2-08840c076a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7410949c-0056-49af-bf98-c9936bff79f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46924d9b-9762-4fbe-bf99-898a16392e55",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e7c815-33a0-4ae8-a078-8fc8641c2a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7da6854-92b8-4f46-8350-ba7a2d8ffb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8fad32-b28a-4879-aea2-57df86203f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2596b1f-5281-4613-b673-57aabc5a078e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269d3b97-7e3a-43e0-93b6-07beced47263",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336aea9e-0cbf-44ad-8854-da0a90cd73b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f79277-929e-45c6-ba8c-8cc8f9ae1277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d964e36f-32b6-4877-af08-b1e71296ecdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6533285b-87a3-4ba3-a8bd-eabd220b9c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6931399b-4c3e-4ab9-ba9e-46248ddf3beb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafce4d8-5575-4ea3-bcf1-bd5dd5e70212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d2073c-81fa-419d-bb3f-309f4791e178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd600ac-22b9-4448-b399-5c71099e2dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36eecce-72a1-4a25-b616-78ec964d5147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6db24a-641d-40d5-a52f-0e74ce0b713c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a0252c-7900-4502-85b3-96bb18bca643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e102d514-f74e-4cfa-87e2-2dfcfcbd198a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aeab12-b1e9-443e-828d-b0babf03efa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6304cf27-908f-464c-b973-692717fc14bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd3e90c-4243-4927-8600-b07e9b866283",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d930df8-ce76-4513-a211-db425895ca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8c28b8-9cc2-4ee9-be64-69344dd1b1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded2b5f2-ed3c-4ea6-bb1f-f041b5db0079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac42fbc-6d14-4366-affe-7a781b5b627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2d4a9b-279c-4b15-9c1b-151e5755ac95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbf2f3e-b2e0-4718-82ce-a41647f8c839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780135d1-f005-456d-b387-048fee39ff79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250d9a9c-acbe-4717-845c-8291f032fb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63145c99-dbec-455e-aca4-f72048c27449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161dbf0-3135-4ba3-9fa6-a08b3d837b34",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb43e646-17d1-430e-b751-43eda67b5cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58f8cb8-455d-4fa9-afa7-192d8a10f2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46296a9-6ecd-4b71-b162-b89928afaa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b2fcc3-17c4-487a-ac2f-116bbc26419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3df88d4-e706-482f-bf51-c4cbe8950db0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79abf658-a7a1-4c84-9e6b-3c979a26d527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83c8403-cc93-4ee8-b961-6df6c1c5d08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55e42da-6659-4caa-a9be-ffeab8ef0e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0551df01-337e-448e-a301-4f46c013be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a42a26-7b8e-48e8-9e17-4dde760cccb5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d20343-bbda-494a-9414-1890097f058e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1ecd51-dde1-40cb-8115-470e8dd3e3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6d1d6e-b07d-489e-beea-33a30ebe4e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c04bd63-6dae-4b54-aa07-18f7d7c82077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d719164-4619-43c5-9042-387636af14c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e879e8-db45-4222-9e27-5a47da691aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddec26a5-128e-4c07-9e68-5bfc5115aedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8b911e-f54b-4ef3-af40-23892500ae34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bad276-52a4-4aa8-b687-94a35f7d0c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eb03d1-962b-4400-8041-b5039fde3fa6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bfe2f4-0047-4174-be34-eb9e35091894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6708c6a4-64e6-4aae-b8b6-711ecbae537f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cbedc9-25d2-499b-af63-3d760b7bed37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228a5aa8-831f-4650-ab78-a2c0a8b7f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45728b2-7156-42e4-bab9-c17a0c74f861",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1233342-d76a-4f02-8b90-aeed1b6e9e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5d33f3-8e0b-46c2-87d5-088c97631569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7cd28b-6386-48a7-ad0c-9acc82dd4cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50bd3f0-52f3-4f51-b039-c14ff9adf8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d4f107-b69b-4c84-a71f-a443783a101b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2d963d-729a-44e3-a73f-7b7b2a3911ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564e7c67-0ac6-4d65-94a8-9e4697dd5b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dac0f1f-986e-4f85-91e5-9ad651407bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786320de-f7e3-491a-ad2a-6043aa1796dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e27f591-c0d4-4a7f-b71a-efbbbb1fb152",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd91aa22-be39-4c82-a9b8-00b96f8eeade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef5e40f-9296-4aca-a369-78c2bc9f9ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf9c646-6f3f-4d90-9dab-9d3cadf88ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11986ff8-826c-486b-8392-2681c38670d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fea177-0cbd-4e90-874b-47d0c2d5f214",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebca0327-c200-4205-9393-aa9036e46e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63b5260-a805-4394-a2ec-cac9661a39ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b180e8-9a1d-4912-8c1f-c8b584184bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b07ed0-f1b5-4872-8ccc-98ac514e86b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f55fc-287e-41eb-88e5-0f21abc148a4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3a1904-1f00-4bbc-bf8c-ad4c1f55fc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47554ef4-5689-4938-95d1-5afc5f9b1323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c72bd9f-6f21-4f43-b719-261e7f31813c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fad1b2-923f-4bf6-9c4e-11d52999d5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1f56a-b805-4707-add6-eac3385c02d8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27708540-98b1-4823-8694-d6696a75091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82170fe-0fb8-4e72-a421-1f8839aa4dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa335ea-0284-48f7-8750-bbe9d42316ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6957618-ae0f-47c1-8092-26e50b6e122c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e9b6a0-1090-4bb3-bd10-35192bc6591b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff5e0f6-6f33-4c8f-981b-5e6a3bc64372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159a4a01-f664-4d1a-8fc0-caa9f3db89a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e85949e-daa8-4977-b842-ad3a8d1edb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0238162-4752-42aa-abf7-ca2fe112bea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a0dc6-6ff3-4247-8c4d-00a7a1eeb28a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87706231-a46a-4651-9624-59c3da13eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbaafb05-3fe9-459c-b7a8-c1b59f2a3347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d25ddf-07d6-4878-8768-f189bd15ed9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51953aa-26a1-42b2-b5e8-5746d3912887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002047a-9ea2-40a0-827c-cf7691259e1b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05635a93-42e8-4930-8774-4773cf039005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd18239-480c-4c74-b3fe-3b8671749884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249487f4-dc9f-4dfb-917a-11ed5edbb296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8499294-44d4-482b-ab29-70775be1ea4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea461a85-6d61-4de2-9991-5b5cee141c73",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50155642-fb86-4c40-a76a-5fd0c654d2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d84b4c-fce1-4f00-a93d-2eec219d1d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eaa6da-d73b-44de-957a-469c902da58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d496ad9-b2c4-4838-8b77-f85650854aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ab9355-0bea-4dab-aa2a-06ff4500cfaa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e41495-b0ac-42c7-ba76-8ea68c79408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fb01e4-d15a-494d-9131-67c8bcaeafc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2568e16-b498-45c8-8577-83539ae6b311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df454c9d-2941-4d57-95c3-f0591cc617f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46256b0b-523f-4d8c-a556-174d33adc978",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc0f846-f48a-4b0b-9208-a9b63c4db14d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf3fd46-6a11-47c7-8a9c-eb914f2edb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141e78b2-ee4d-4976-a743-f85dc82796d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b03c49-917e-4788-a9e9-df7280def68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e2d15-61f7-4cf0-acb3-b84da9037640",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c20801-20a0-4621-a5b3-1ca9808d30c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682fd148-17df-41ec-8c34-ae119767a9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712ad0dd-e5bf-428b-bdbc-477b5f91061a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f00b39-08d7-4c74-b8c7-e2a9f19618a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f0400-08bd-4526-b060-ceb254e2056a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9596a71-a22f-4626-b1cc-3378eca723e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914e6490-bff6-49d4-82af-2df3ac2a9168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e03a8a-c3d8-48ce-9d80-3e24579050b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f7ae7a-f2ff-4668-949f-d2c8832a36d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e166f692-71cb-44ec-a78a-dd9d65e8df72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60387544-bd63-458b-a813-3785bd28107a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa113cb7-bd1e-4357-9998-8d38c4964985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b40650-a682-42ce-a37c-0a246dd02f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7069eff5-a5b4-47e4-8c0b-959f2cfaee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614935d5-f5dc-4d67-9d99-77f6d3da83e7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97f046f-b769-4360-a44a-704818276c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff09582f-8390-40c0-94e3-96f5ddd8ef02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e041f269-46ff-429d-a64d-c2ab2238e428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dacc0e0-5506-4acd-94b3-a6b3d565f088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2ae5d0-5f47-4bc6-9340-f7cdcbfa865a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6cafb-2ba5-4ee3-bb0d-da73a2d87472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22269b3-d8a8-418f-b10b-69f63e58508a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c72d0-a6d7-4fe3-88ef-010d251b7cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f4d344-cac2-4d60-9ab1-d146b0bb32bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8378e474-0986-4b12-8ed5-54ff965ae6d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809058b-f109-4f7d-bca5-c0e548264b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e02943-ebbe-40ac-a9e0-d465d54898bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314080d7-ba65-448a-84c4-250bc36a30c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06bf121-6b30-4b43-afa5-6ded9adac07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ac5909-c7a3-44dd-992b-4eb1ff9b9c61",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935103d-b822-470f-824e-ceacbaca97ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ff1d19-ec7e-4942-b684-8caf6f8a0a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3096bd-4a4e-455a-93da-2aabbe3d14fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083f0692-4a12-42ac-ba27-98709db6afc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483a0bb-e3c2-4089-9ab3-1ad8539ced41",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dac991-87de-4b9a-9c40-3d31c4f72ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb010a1-3d90-4cdb-be30-bf0fe6ff61a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765ae404-eda2-4229-8c0e-ff8f1aba4813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a0fca1-6fe6-458a-b4e7-46ecc5db287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42809640-a921-43a3-93f2-c8973c58d62a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af4003-e05f-4a68-9cb9-b57de09b9d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64689c92-693c-47be-847c-6519e044aa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec998e2e-b854-46a6-a605-d0c21f95012d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d41bfb-8b8c-417b-9679-015aadb9f323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6516ca05-d5ec-4330-a366-7450acc6a63c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0757a662-f4b6-4dd0-95a2-59b2c1cf62d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56118c4c-1965-4dbd-ba3f-3e22a702ca2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ab85a4-929e-41e2-94ee-7392eb6ffc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cfcff-7bb3-42f5-b958-4f3de25b2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a801e93-329f-413b-b067-a6a78fa34528",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aa3bd8-6f25-411b-9825-52ea56be63f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88b5eb2-eea1-4d2e-8186-3707dd848d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c74b65-d38b-48af-93df-38b4ff3075ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174512be-01bd-4860-a478-0b5ebf812b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb77e920-bcdc-4d5a-bee4-56a5c8474a16",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531d687f-bcd7-44c0-82d5-e03b61b23b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9715f19-5a7a-4183-805a-cbbc67702bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6c722a-0276-4a55-a1f0-3f09779b5c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4ef29d-67b9-4cf1-b23e-a42fe1db9613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3273a9-cdbe-45ae-814a-ea32a146cbec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbe6fcd-07b9-4101-84ae-804ba398125f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3581cab4-78b4-4596-9ddb-34654089fc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0e8daa-9901-48e3-948e-24e8022f4951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca18aff-41f6-41b5-8d8e-533b1baf2126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100551cc-888b-4c64-a1e6-b443b5c2b6b4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54110329-c15e-4093-8a76-0b741c21ed0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445d34fe-08d4-441f-9331-be4144118487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d55980-b9ca-4f46-bf90-8ec2aba127a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598a69b1-dad1-4ca5-95c1-c6774e8941b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3d563b-be0f-4c55-b315-2b7107ff32bf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a1d2ff-3c07-4d94-bbbf-96534cd668b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b1b518-e510-4429-bbe9-5581bd343166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd4b774-9acc-4fce-998c-6dc3b2c9978a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be543d4c-5376-4976-98b9-d49cc594ac6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f428f878-efb2-4b84-83cf-5d85f97a9918",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017fdddf-98a5-4389-8df5-52f9e172d657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bc28d7-4b96-4b2b-9402-79be297331ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b31abda-1feb-49f4-9326-9fa4a5b370aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed6c8d7-2115-4d31-bbb5-0d540c58effd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69210752-d543-4f28-86bf-a2417f260a0e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b062ab-bfc4-4661-ba5f-b05c5c91f0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c39535-9afd-4ddc-8c22-f2031a20bb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c664126d-aa30-4a5f-83be-673b21297f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059d9c17-ef21-49bf-9462-261f650a20b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e6141b-a5fe-4412-98eb-425fd50d1d58",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec9f580-58ff-491d-937c-77bc976f845f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446ddc9a-5e65-43a9-aa2c-1cd03c698739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b52d6a-a6c2-4847-a68b-a36e10bf41be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135c3338-de3f-436a-992f-f0c9b03e90b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c1cc86-5d48-4c35-90c5-3315848d4a8d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694f175-fad6-4e30-9c38-581490c1c63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee3c1f2-9656-462c-96e6-f6f14d943f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987bb15e-32f3-47d6-954b-9df239d7612d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd47cae1-1daa-4fa4-84ad-107288dcee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41035a52-ba11-4db7-a216-968db81f23ad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8b813d-4d49-40c3-9e0d-09748c1114f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2deabecc-74ff-4c18-a94b-eb765857d1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d819ecc7-dddd-4469-b776-9376942c1561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2300836c-65ea-42ec-a958-75288cce69ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573cafb9-36a5-4891-8ac8-69e81ff2e144",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdb9a8c-5485-479a-a728-edbd4a71e6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c7794f-045b-4bb9-995f-8ad6a1a74f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba67d896-98c0-4be5-9c16-9cdc960bb618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975b9203-350f-4314-91eb-638b7d33b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9137863a-395a-490d-99f7-0649ecfecb4f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bbdda4-c32d-464c-9158-dc6f6fca7ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc030c-a274-41ba-8ccf-b7539a39e287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d72755e-4186-46b9-a677-cc184c56cd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861f109-1304-440e-9d59-9e0f257a5248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85d3d1a-3ea7-4aea-8136-85b6ef6b03f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba01c38-2ca5-46d1-bfea-1a594d2debe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52e6516-8008-4860-8a06-3b8154ece0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9234520-baa4-4270-bdcd-b873536beb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3961d58-5a06-407b-a421-ce4c9232f4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb4aa29-5724-458f-852e-8ff2af42fd31",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc3343f-ccbf-4bbb-a335-8dbd80e1f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff95a379-d929-4a9b-b10c-e6e291b95ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a223f352-53ee-4fea-964f-db105e546830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb13aa2d-b6b2-419b-94f2-c87393b01a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad701c58-667b-4597-9db0-6b5cda2a91c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a15e6c3-3bee-42ee-a4ec-2d93f402ea92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c561329e-ef8d-418e-a1cc-db04a34336e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a9d5ae-bdf3-418c-80f1-a0c9d30fb41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f7293f-d3d1-4c92-86a3-fc4b4cfc4536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866cd6c6-a9e7-4f08-bdc2-f4c1a40ae2ff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f21449-166a-435e-a60a-eca27d344ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f49808-dcac-4892-b0fe-3b26d0e1d750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1944a-e2f4-4912-83d7-50245226e60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d12ed4a-9373-4bff-bc86-ec37f00c4d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbe7504-4eef-4d8a-900d-dda1edd973b4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f105afa-05a5-4c06-9c40-5052ee8fb04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dbe111-f9f2-4a68-aa87-2a0f6b92bad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7682197-03d2-4670-84ef-48ef3dfa5a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcfa257-68a6-4c6e-8521-23fb3d949391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1937a32f-7cdf-4620-aacd-1a3a4d7a8007",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8456f86a-5d24-441d-bb3b-8fbd69768960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003c0a7c-42d7-4d89-b25f-41a277c0d0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fcf1b3-e406-441b-bb6b-a89dda1f6b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df26f9f-177d-453f-9104-1003c1152745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf926de0-c4e4-40ce-91e9-48f5e8d91216",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c895d29-5a7a-43fa-b533-038584441fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14235360-b0e8-4ea6-87e1-188f77898507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2092789e-26b1-4856-82a7-34e9f28e4ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d05fd5-59f6-4688-b17e-addc90ec402d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a7eacf-c509-49d7-8016-2b539a1ecd99",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecea465-9286-4468-a652-68a6d3ebd928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50ab2c8-84a4-4178-b58b-2327c9b8442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ec74ee-9f28-435c-b281-99c1c4a0e280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad73db6-1064-42aa-8030-16277390573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92640fc-9905-4c0f-935e-1c737a515f28",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e528638-2a82-4fcd-97a7-f0d5aec8245e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2b2774-b7a6-4e42-8d3e-1ff7ba063558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed93ada-9f70-4429-a9b3-4feb814a6d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691954ab-7211-4b86-85d0-d0ef23cee50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f73407-230c-46f0-954d-71656869be1a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a1a21-1ba2-4296-8ac7-3e03a95364e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c028237-0125-4053-be9a-da92a8f02f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d25ea-027b-4986-8ad6-207bcd3c01c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c1f16e-ed39-4c2a-9f00-f1029c282848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38071f0-646c-42c0-ac6a-43de2dcd67ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e015ad-99f6-4a02-8344-0eb2c6a693d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89547916-b56d-461c-93d8-77de93c1b260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bc94d6-a595-4312-bb2f-082ba8a3244d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad148fc3-24a7-4102-bfe4-2e267d0adb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda00ac6-760b-46af-81e8-cc613312ea30",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e1362d-6945-4f78-8a83-bc084cf11cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d9ed78-b31e-4308-b2d0-b681a43c2a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061f85cd-aa3d-4500-ad18-e66de3888557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4686ad84-f479-473d-abbd-d89e58f7251a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d242c021-b747-475d-b259-6a81b0b0a646",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0213f211-34f6-4ae8-832b-bcdaae186f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413e9f1e-fb66-4852-9f43-102882ed17c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0cecdd-442d-410f-84b3-1e94bf3d7b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae8f10-0de6-41e3-a046-a8df5ef51c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690e24b-c9c3-4361-9fce-e0418f0188b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a6298e-a276-4f44-ba49-90f078eac217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e310cca-a4e0-4d0f-b3f7-af850994d69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a60a46-51a8-4fbb-bcba-d298e0b5c074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642adb30-6527-4838-8911-19b6dd1e8601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926147a3-9a8a-4b35-8f42-bf4e55887ddf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c85edbf-af87-4109-a261-ba508a10e218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18797ba7-d66b-4fda-aa18-3330bdd8509e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cad4fb-601d-4a52-9458-cf0e9862b5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c838ede-4bd2-4408-9e28-b5fb954f6bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b7622-0fee-40d3-a45e-9b69f3508a3a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b5a5ae-cf46-48e8-bbc8-06a35660e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad585f7-e383-450a-bd70-ca4f51ef64d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38550050-7f8b-4fe5-b687-2eef5e15d954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67db40a-2729-45ce-8be9-bcc081a4a1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6927fbdd-2f90-4ef3-ad65-bfba1bac5d57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfa8aca-b7bd-4b8c-8db4-bbc21ee38e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660a61c0-e95d-4cb7-9b14-bcd9af8d7428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac76b63-db59-4fc5-8894-155b3edd96db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066a3193-db35-4705-92e4-5ee22b519c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ded66c3-e317-4d63-b7d4-58260f768c88",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481d516e-a9bd-4c8f-8095-51b74eb405a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380008ca-3017-4cd4-811e-1b740d3458c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dd4cd3-c91d-4de1-872b-cdb278c72ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ba5417-0be3-4aca-955d-e6943d4be6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b4535-5811-4aaf-b8ba-63fcbb3d29cd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd84a99-f410-4767-9b20-646f1fea220a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a5a246-f95a-4ac4-a343-c363617c0ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51aa9ac-bc44-4363-908e-22d8e0957a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1ac7d0-6584-4928-98fc-9cf3d9ba182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763572c9-ec49-4ab0-aadc-1b7ddee4da75",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f6eb9-8645-462e-84d3-346d667bf7b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc863eb9-f6d5-4658-9aea-426798b462d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4252af-f017-4379-b794-68f1e87ff293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c534c381-c04d-4b8d-adb8-b99ffecfbc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e7a8a-da9a-4a31-b618-bc798236959c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528b94b-d1e4-4692-b300-15b5fcd04f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba1c3e7-60ac-4d45-b857-55f27521819c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3d523-37c9-49ec-9830-2125ef6bf050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d323c3eb-56d8-44b4-b93d-a67f7bead181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267d29c3-fb89-4af4-a22d-7a6c3cdacf1f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a276e-2783-4ea3-b2b5-c2ff6b932223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b71b24-a444-45c9-b871-f2d3bd7b439c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b842c3b0-1024-4bad-b1da-b89108e94610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903e8bd4-be6b-47c6-905a-2107f7ec4d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2365aa6e-4add-4ac9-af4c-26aeb102b122",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703838a8-5801-4283-bb9e-b8bc642a529a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936ad4cc-4f21-4b80-a422-be63a212a60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c56a411-069f-40cd-9ac5-2a16f2bf3620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde5190e-157f-4e99-bd9e-8d48f68affe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf945d1a-073e-4f8f-9d4e-a4f9d3a3b474",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3462f638-dc32-47d6-b9d4-f2bdea4c8f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb75d17e-b086-45e0-a0c2-18abfa4911c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf2afce-a854-4474-80f6-625dacd4ab12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a635366-9887-45c5-bd9a-70829cf8dad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af425fbd-0c6f-4a2d-b109-030ae15910e3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ae335b-e817-4186-81c9-9a2d0d2c3d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0882ae1-fed5-4641-82a7-ef71bb827e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e88607d-ad49-43a1-96b1-a2e5d448b109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e912e3c9-2ca2-46fc-8213-1c106eb06a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a997b9e-9a47-4816-b8e9-f81fd5688132",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e11bfc-3e12-43e4-9f03-b8a9e465406d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08463424-5135-4b72-a10c-fc1e23be6dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a9244d-6553-4752-8e28-d391eb440816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d66e4ee-0d42-4448-8706-81982daddeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834cf3fb-6a0f-4d2b-bd25-6d5eabfce7be",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c800ff0c-b928-48a1-a4ce-1f535ca7cc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447056cb-940f-44e7-8d02-ad33e2faf9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2002f912-881f-4350-9280-fc3d39d9faa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff5c3a1-092f-4d3e-aec5-0e4ebd9d7490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd6df3b-5fd1-49b0-86f0-666a01d343f7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a283044-9d47-4e95-b740-0707f725981c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32ec1dd-5a5b-4374-84f7-b06ea1b22eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2db512-9f75-45ad-a546-6dfc3c8aebda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cce68e-ebcc-4d59-94c5-2d9c70186daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00145a07-0936-42cd-ab4b-bef26b2cfd41",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79015b9c-211c-416e-95c3-6e83e9c1d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c7b3dc-6ea0-4306-b691-895ed87f8d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e131e6f2-798b-45f9-974a-82573b041ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2030976-a327-45bf-876f-2a3726df6cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b66961-07cd-4dc2-86a6-0fc951039792",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae94657b-96f0-44c1-8186-ee5239d730f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1641db-20c6-4062-aec4-863b55f711f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76256c05-2f20-4c25-87bb-900c1ceebdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2dbec0-65cc-4e97-9a1d-0f047b2129a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4bf13b-7338-47df-b40a-c4a2fe0dda5e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1583341d-1950-433b-9912-42f26cf7933f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e05de9-f71f-48f2-9e10-6954fc7a97db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b095b78-a7b7-497d-b2b1-6e93bc564909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f9c9f8-8428-43b8-8ff3-9dc1d36fe0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f90fb87-6a92-4c93-878f-d6051ab1987a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67432e3a-fa84-4034-8506-0c2f2363eb86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763d2dd6-941e-43fd-9466-60f3402a75f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea179e3-a0d8-492f-b492-64227c776e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfaabd39-5ea1-498c-bc56-4b348ce89b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d15f2cb-b2d7-4263-942c-ba1be05a1957",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c46553-a5f6-429a-a9c1-20696c6144b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed587ab-b847-4b76-a539-8be579bd82ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd920f72-4872-4de5-bfa3-516c93fac489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42e5781-3ac3-40ac-9ba3-88593446c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c61906-d8bd-4990-b42e-bc39aad56916",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b38c86-c4f7-476d-af39-bb872e581cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d16a41-404e-4607-aa2b-7ad14296442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c4806-9624-4e62-a38d-c6cb6e7918d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325fd89e-0e36-446e-b54d-14a229f992a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70736764-4fb4-48fa-abee-7ad6213f2a9b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c711a17d-6162-4612-a913-a00e38a104b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9495e6b6-df84-46d8-9439-f58d8ff4c3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3852d342-e97a-4c7e-b26b-3a3cdc749c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f932be-a1f1-499c-a36f-5d47f9e371f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3188641c-8b90-406d-9f40-c0c5cffc82bc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75dd5bb-5297-4047-bae0-00b30fc6b790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad73df24-9921-45f3-89d5-12cfef37f865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b399137-554c-4ecc-91b5-25f390a11e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18833c2-2f83-478b-8aec-a108683de47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc25eb4-19ff-4bcd-92aa-01996cede8d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf079a58-22a1-4a28-ac83-ba2cca36b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570738c6-76b6-47a9-a891-1a416a89f9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2696ba-7547-4882-8f58-118c69f6c72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f627588-29ec-466c-8b2e-60f18dcbbcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aa126a-db5c-42a1-b501-fbe173cb7b6e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f035d6d9-f775-47a1-9277-ae76b2b25aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c042e11-27c6-4e70-9bf5-9bf9d18f9c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358e9a94-46ef-45b5-9b98-690dbf883c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c145a44-e8e8-489a-ab57-706917a56eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805bfffb-18e6-40c2-a840-3579638e4eda",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1e4336-6ce7-4567-9e35-875e638cf82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6f988f-ecd7-4a28-8652-77a50e11b1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41116948-21af-409e-ba1b-cdcc834a4a48",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a65fa3-5c88-4196-9244-b8e6f3ad9293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e58385a-06c1-4ef6-9f56-a2f4e50193bd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c85de38-4e6b-4950-8d6d-3a8e41c3f193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f020da-da90-4be7-a4c2-2dda527ccefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9060f79d-494b-4341-b2f6-c4f5fb3aaa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d66948c-cbff-4208-bf4d-8662d9d19fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ace92c-57b1-4d73-a861-23d89a06e573",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47970628-c20a-4b5c-92ef-db05e2d0750c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c194d61-08fc-4b2d-9ded-ec0430044a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6aff88-5d28-4170-a838-e3c7afd40aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc27a15-1e0f-4806-9015-9623174ea326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cad7bf-e438-41d3-9301-13f89f9952b7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfc48ff-0b71-4966-9d73-d6b6fc1cdcc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa287b0d-1238-44a7-9941-98e5c61e163c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488b30b7-9465-4f9b-bce9-87b0f7ed4b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3886883-6087-40b7-adaa-6bbd3bbebee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ce220-e313-467e-894e-f543d9056a3e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6042ceeb-7c73-40c2-822c-10bf85d811bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06948974-66c6-45fe-99fe-010469a7bd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e261bbb-c1ce-4972-84e9-4167d7ecb62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8143421-9abd-4e4f-a476-ab63517a027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02db0288-1f51-4668-9d76-96751d3d9fd5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2743228f-0231-4ead-9cf5-26ec52f799c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07d64fb-2e88-44b7-ae08-97dfe381c8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0971f8ec-4552-4d13-9435-d725d6d2ce48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dad4de1-00ac-449f-9e44-2aee097bba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c35089-9a30-4eb5-a9de-2e9b6c901564",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd8df1-79b9-4b12-b6be-7e56eb949283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2139a1-385e-4fbe-9c5f-f896b220b141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d5c139-c1c9-4180-90cc-8d156ec48db8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa6aef4-b7cb-438d-89fa-0cb60e76da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538065a4-ac0f-477f-acdc-13ac40ee31ee",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2bd01e-dbd3-4cf5-9390-a01908f4c62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac4f3c2-4b3b-4647-a385-ac993f2f6eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183b4b81-8999-4ae4-b21b-255f67678df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89a619c-1504-4737-a1fe-a1efcf9d8fe7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64973151-0efc-4824-8683-31823ff2962a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7cf5086-cc04-4489-bc94-ffdb1d5a3715"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4fc27fa-6580-47be-a815-a8860f9a04c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cfad48d-4ca9-441a-a351-a142914bfd8b"
                    }
                  }
                ]
              },
              {
                "id": "7e914c66-f3d5-46be-af57-8cb62ee56d8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f1a4c8c-f77a-42e1-8142-90dff31c2161",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6734ccc5-1339-4389-9e51-e4f3dd77108d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9853dc32-024b-48e8-9ce1-ab6944d4761c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd9545e-15e1-4aae-92d3-680c9f965a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d928aa10-77ad-4d20-940b-80fa2a9e7548"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "161c068e-4eed-41f7-9aea-a42345d53028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bcebc5d-ba43-464c-906d-57df9edc6bff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1cabae5-a222-41cf-a0c2-2a3b8c8894dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbe4a642-e486-4cc6-8e82-b2294a079952"
                    }
                  }
                ]
              },
              {
                "id": "ab5a0ff0-0caa-4a5d-9cfb-b760343257cd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "81bc6436-ea05-4e7a-85ab-3305a4f0b74e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7665a5bc-cc81-4dbc-b13b-16d9dc23d5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "548b5dab-8397-4ce5-8301-1c75ba6e39d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12977ed3-8d08-402f-a830-639ebe597ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19a3384-6efb-45e8-930b-5e80299f3105"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab543425-e272-4d82-8b55-dba518813983",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82fb056f-9602-4432-9225-20dd47050d3f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de0ac46-77c6-4ce5-9fed-1240ac67524b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08e08f86-2067-40ab-9c0e-73b26585360b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d317f3eb-5e49-458e-a80b-aeb8d86aab03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71210e65-20c7-4b63-bed0-a312f3b39cf9"
                    }
                  }
                ]
              },
              {
                "id": "83688be1-68e2-4e67-8d9f-745f720d2cfa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0b67ca4-dbed-44d6-8fee-0a0ef22b73ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "482ce74c-afd2-4c0b-a112-41f726739232"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "036a196c-ccf8-403a-89be-35032b09ee4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ccc633b-60a0-4496-b5d2-5414074c9516"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0f9b838-f90f-47f9-bebf-83b88f454a59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6681c9d2-d56e-4d51-a909-7d7b5d1f32e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5ad8331-5858-47c5-81df-25a91b702eda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe112610-1b2a-4fe0-b04e-2eb11ddf59c9"
            }
          }
        ]
      },
      {
        "id": "1054831b-8d6f-4965-960f-3ecd5e97e3dc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "87fe4eac-66bc-4f66-a232-4021936df262",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b072fe17-33cf-471c-a4ba-97bb9b9500d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84ac5ca7-92a1-43ba-8477-a13c8d5cd005",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7849a-7923-4664-b0f5-87c3b2075840",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dc229f4d-1c5d-4cce-b207-0a47c0495ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ed7626-fab8-47fe-aa56-bca3c43493d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c3872a2-cf4b-498b-bef5-9a0d7a0d1121"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae438404-1932-44dc-82fd-1f49093a43a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75b01df4-78d9-4577-ae15-e3c09713d8db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09d2c266-a0d4-46dc-b7aa-49c25d850469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69abe0e6-d29b-4f6f-a6cf-df5dd78e4ffc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1a541c3-202c-4b62-be0a-893b313897d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "879b90ee-e23c-41ea-8da9-e0c53803e24c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60c3753a-0adf-4b79-8716-3783dc6c0ff7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35c449d-14c1-43f5-ad0a-3fc8154e20bb"
            }
          }
        ]
      },
      {
        "id": "1b110ceb-b591-4085-8f39-8cedf9b3d4ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8260d7ff-fb7e-4cc7-9c1d-9a37eec8986a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4725e850-9a13-4006-a5c2-e59c18499e03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f8db403-59bc-465b-aaf9-841c4e1e9788",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20284e4-0581-4d7e-82f5-dfb55994c092",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7641db78-de3c-479f-b4b9-38cffbccf5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fdd8c8-917b-431b-b360-1f057b74d785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f857f644-ce6d-4ca8-bc17-f28717a3d8b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2174546-f76b-45b6-a9da-dff8eae66de1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2651649-accf-4e7e-9d51-11b1ba2d22e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53196118-c576-4d27-a832-403da937383e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e408dab0-404b-4a5c-bfc1-9d8df0b4e50a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48dfedbe-a1b8-4022-9f60-5d51343c18c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5a885c5-682d-4f88-b689-16b7e5428764"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d559dd7-9cb2-41d4-b0f1-4aa07ecca55f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5bb4651-4e48-4c1a-b8b3-5a4bd7de893c"
            }
          }
        ]
      },
      {
        "id": "5b1ea8f8-41f5-4aeb-bae8-8d07091e424f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "726a41df-dcd2-445b-b7ca-0ff3c35ad627",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8a31c45-abe9-44a1-8ff3-742ff53eca8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db0062ba-8e58-4d24-a7b0-dd7b1fd0d8a9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd620d5-f1ef-4401-bd25-a5491a2f5037",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e83bf0b-3e93-4730-95e1-caf1fab3b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831050cc-b361-4ffb-915c-89043c77e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83e19174-d930-40da-8208-c85070e94d05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b257ef2-3baa-4cb0-924d-937aa6533109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "374a0a3f-bfff-4546-802d-af6b2f2a351c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa1ed9b7-857c-447a-802f-f6293306dd97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4f60056-a8e4-4891-9274-37da7bc098cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a15ad32-c240-406f-8490-4570894d1cac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c80d6a1d-4be2-444e-9cb0-9a3674fdaf73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f2facbe-e5ad-4cba-9256-bfeeec1f6d2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a566a22-d26c-41e4-94fa-462d96881c5d"
            }
          }
        ]
      },
      {
        "id": "e72bf5e2-ad79-4fac-9771-6fbfcb98628f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e78a0cc-0d18-4cb5-bf63-16dae67d9b01",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a2a339d-a9e3-4113-bee2-676e61b9ca5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3f65168e-73c0-4cf2-bb10-ed1b1aebd144",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af4e6bc4-4586-4216-8c46-34b4f0bfd3e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7105809-fcad-46fb-a78e-28d9473a5f49",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 619.2499999999999,
      "responseMin": 15,
      "responseMax": 6495,
      "responseSd": 761.6450257478732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688950092218,
      "completed": 1688950280250
    },
    "executions": [
      {
        "id": "35101060-79f5-4f1b-8213-e53bc8aaa8ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ce451d4f-e483-430d-851e-b984d094ab1f",
          "httpRequestId": "c1257c26-648f-4c16-9e7b-e2900c30a352"
        },
        "item": {
          "id": "35101060-79f5-4f1b-8213-e53bc8aaa8ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c60c78d9-a9b2-4be8-8143-3c0445636100",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "641caa92-4c41-4d90-89db-7b1545b227d4",
        "cursor": {
          "ref": "28d3523f-cef6-4061-9b63-daa5051a82bd",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ad090413-32ca-4e20-9eed-8295b0c5f2ce"
        },
        "item": {
          "id": "641caa92-4c41-4d90-89db-7b1545b227d4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e047fb2e-a663-4640-b4b9-18ea0a493b2b",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "5beb578a-b1d9-4620-bffe-9b08f2107afb",
        "cursor": {
          "ref": "5510259a-f4d1-498e-bd67-f85a5e3c9566",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5cb8ef7-08be-4a63-b474-bb4d5ec6cd46"
        },
        "item": {
          "id": "5beb578a-b1d9-4620-bffe-9b08f2107afb",
          "name": "did_json"
        },
        "response": {
          "id": "86fea574-8dc0-4764-8356-cca13c14349e",
          "status": "OK",
          "code": 200,
          "responseTime": 1430,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dc76fd-cb5f-4ff8-be01-140c05da3890",
        "cursor": {
          "ref": "bb36f2ae-b376-45ac-8b3e-437bfa8d55c4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9563c661-29a0-4fc1-8597-1a42acba132f"
        },
        "item": {
          "id": "f1dc76fd-cb5f-4ff8-be01-140c05da3890",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee89211a-e764-44ea-9b45-86c1eb206fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dc76fd-cb5f-4ff8-be01-140c05da3890",
        "cursor": {
          "ref": "bb36f2ae-b376-45ac-8b3e-437bfa8d55c4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9563c661-29a0-4fc1-8597-1a42acba132f"
        },
        "item": {
          "id": "f1dc76fd-cb5f-4ff8-be01-140c05da3890",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee89211a-e764-44ea-9b45-86c1eb206fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6a442-5c08-4132-8411-7f2acb61bbbe",
        "cursor": {
          "ref": "8125ca69-1c03-4688-9d6c-8472e903bff5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a0ddb38-0335-4927-bca3-d73dfe523f37"
        },
        "item": {
          "id": "09c6a442-5c08-4132-8411-7f2acb61bbbe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "678775ae-1cf9-4741-8e21-50bc704500ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 815,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf2739b-f05d-411b-be6b-2496fa2ee4a6",
        "cursor": {
          "ref": "7e9020e0-b1b0-48a7-8f19-a84491e55c02",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7c84d2ca-6a93-4306-90ca-24b48197b7b7"
        },
        "item": {
          "id": "2bf2739b-f05d-411b-be6b-2496fa2ee4a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "084b8a38-e649-43b4-b3c1-aa9e244c3092",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0273d224-bc32-453a-a548-9df7930986ed",
        "cursor": {
          "ref": "56e071e4-b0e9-4ed3-9534-6fbcb3ff2ae9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "244d3eca-2fff-4ac3-b7af-6f6326ed1994"
        },
        "item": {
          "id": "0273d224-bc32-453a-a548-9df7930986ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38c5367d-effc-457c-ae0a-4892db9e3aa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabf5643-19c5-494f-93d6-22a54a9f7465",
        "cursor": {
          "ref": "82c790cb-bd40-4b0b-808a-df43cad48169",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2c742485-42b0-456a-ae67-054a43580685"
        },
        "item": {
          "id": "cabf5643-19c5-494f-93d6-22a54a9f7465",
          "name": "identifiers"
        },
        "response": {
          "id": "85727add-8e43-408f-b98e-b8313942983a",
          "status": "OK",
          "code": 200,
          "responseTime": 1283,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2121eeb-8f65-4840-89e3-dd23e2f82f8d",
        "cursor": {
          "ref": "3f1cdc2b-3cba-45f5-a496-06672651dae5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0ef5215b-3101-4e3f-b2ab-1f65a84356d8"
        },
        "item": {
          "id": "e2121eeb-8f65-4840-89e3-dd23e2f82f8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fba1311e-7694-41f4-9ffc-155c2592b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f63c5-bf9a-4b91-9d31-9d5bb8a29975",
        "cursor": {
          "ref": "35ff6518-f4bd-4a12-97c0-03297f558471",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "61283e09-f9fd-413c-9ef1-29bc676cc47a"
        },
        "item": {
          "id": "f13f63c5-bf9a-4b91-9d31-9d5bb8a29975",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76540f4b-06d2-4b96-8076-0abac8ab1606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5596ccbf-a334-47ab-98e8-57111e7ab043",
        "cursor": {
          "ref": "ebab9b0b-e5a3-471e-80fd-25e76b7c4baf",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3988dc38-df8c-45ce-bfab-5d04ff6264b1"
        },
        "item": {
          "id": "5596ccbf-a334-47ab-98e8-57111e7ab043",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b368ce0f-18e9-47a0-bbe1-092d07d5a57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca979f1-fb62-40ae-94da-6d9b11ee9e55",
        "cursor": {
          "ref": "12e27cf0-1a16-4f35-8d5b-a8db7742e21a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b3429cd-731f-41a1-bfdf-4bb6e9cdcc69"
        },
        "item": {
          "id": "9ca979f1-fb62-40ae-94da-6d9b11ee9e55",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "162bb8bc-7f8d-418b-9803-9f4dc47b9fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeba09c-3a86-43d8-8066-2deca83b2b2f",
        "cursor": {
          "ref": "9201b302-1b2e-4c49-8ead-2b5ee6514672",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "acf957b5-627d-4cbe-8ca7-98c0f573c338"
        },
        "item": {
          "id": "6aeba09c-3a86-43d8-8066-2deca83b2b2f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3916ae7f-54dc-4da3-b947-40412a2ecbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1a20f1-6a58-4b5b-b590-a763101dce7f",
        "cursor": {
          "ref": "df5956b3-92aa-4cd7-8714-c96b17790f05",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a30fb7b-0372-40cc-8287-16027b628db5"
        },
        "item": {
          "id": "1b1a20f1-6a58-4b5b-b590-a763101dce7f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "31a53ca7-e34d-4d10-ba61-0360b0e786d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21a10c0-0993-4f1a-bad4-dd314c2f5f77",
        "cursor": {
          "ref": "bf0a9bc9-53d8-4970-b768-6eeecf017e3a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ba6d230a-d822-4afb-9260-8d454befa409"
        },
        "item": {
          "id": "b21a10c0-0993-4f1a-bad4-dd314c2f5f77",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b448b104-bb2d-4898-927a-84490d6908bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d77ed2-2435-43e9-9d41-56f3fde6b01f",
        "cursor": {
          "ref": "17dd4ab3-6896-4b2c-9cbc-eded64ebd3b6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a00549d5-c971-4dad-a387-743f50950ebe"
        },
        "item": {
          "id": "47d77ed2-2435-43e9-9d41-56f3fde6b01f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "17c988f4-dafe-45a5-b79f-751efd509adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51284f2e-ca4e-4382-9655-f92df75cd14c",
        "cursor": {
          "ref": "abd448d5-265a-4aa6-90bd-e729441f3369",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5ab78d3b-b3c8-468e-b570-696be0656b14"
        },
        "item": {
          "id": "51284f2e-ca4e-4382-9655-f92df75cd14c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c00a75cb-7531-4d72-be63-bddc3b7310f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe97974-e195-4cc2-bb9c-220c600214b3",
        "cursor": {
          "ref": "be255fb4-76e1-4df9-a7b5-3c5b1df6fde4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14a86ea1-5a89-4e16-970e-dfff9517f18e"
        },
        "item": {
          "id": "ffe97974-e195-4cc2-bb9c-220c600214b3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "40a77bb1-1b26-4027-af5f-4494b3d2470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55923f9f-35d4-448f-9602-73f005da1008",
        "cursor": {
          "ref": "596c80c2-9cb5-4e38-8b36-747e84d41121",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a1e58b4-9c81-422d-8d04-f92d566d8ffa"
        },
        "item": {
          "id": "55923f9f-35d4-448f-9602-73f005da1008",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5f3f43d7-963b-4d11-b08a-54dae4b8832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef3b33e-05a3-4378-91c6-fd5ac06e3f41",
        "cursor": {
          "ref": "556be1da-c988-4ad2-853f-fe271a6a691b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8bd3f279-d2e5-4a1d-8aa4-a42c1077c07f"
        },
        "item": {
          "id": "2ef3b33e-05a3-4378-91c6-fd5ac06e3f41",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fae954a2-1b3c-4826-8e05-ddbaca58a5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec9c643-1617-4d9b-a0a1-9f0a59cfe09e",
        "cursor": {
          "ref": "18604b33-5188-4bde-9107-de0479b2dc36",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ff8636c1-3a13-4651-9479-75d76eedbd8d"
        },
        "item": {
          "id": "6ec9c643-1617-4d9b-a0a1-9f0a59cfe09e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "50290cd5-4172-44ba-8030-59a579359aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318352f5-2bcf-4c9a-b982-9d3e4903a4da",
        "cursor": {
          "ref": "a760bca3-f3a4-4a2c-ad1d-e229f887f08d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67ea804d-78e0-414f-be09-09fe1a0dfc54"
        },
        "item": {
          "id": "318352f5-2bcf-4c9a-b982-9d3e4903a4da",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9932b160-a263-4497-83a6-c2be48e35157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfdb74d-3b99-45af-93a6-c533859f9853",
        "cursor": {
          "ref": "775bf084-09d6-447a-878e-3eed9a143685",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7288c5c5-1c10-428e-be0c-4977168420a5"
        },
        "item": {
          "id": "8dfdb74d-3b99-45af-93a6-c533859f9853",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9a13ec1-08a3-4b5e-aa08-f31ed49ed6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822a3840-46e1-4f7d-83cf-66c0c39b11ac",
        "cursor": {
          "ref": "71dc9f77-2943-43d1-8c21-cef6e0adf593",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d8141b7-f16e-44a1-a120-8050150861ee"
        },
        "item": {
          "id": "822a3840-46e1-4f7d-83cf-66c0c39b11ac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b617f08f-4268-496f-809b-31b05c7fd82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e12763-f7c1-4163-a7ae-0151ab87bbb9",
        "cursor": {
          "ref": "da72cb52-bbbd-4ec0-a410-bc91c9eefe02",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "608718c3-df3a-43e1-bfed-cb406145948a"
        },
        "item": {
          "id": "47e12763-f7c1-4163-a7ae-0151ab87bbb9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "22503a02-3f65-4704-b582-e6673bb41fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f27754e-cc03-4c83-8bc7-a86b99c33953",
        "cursor": {
          "ref": "4655a922-99b3-41f5-b479-5a4c0c787c54",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "06df2fc3-c646-4e36-9048-7e68a8228dac"
        },
        "item": {
          "id": "6f27754e-cc03-4c83-8bc7-a86b99c33953",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5bbb78cd-6a41-4a3d-bfbc-5274248d7b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4302ede7-3986-4159-9332-a0c3f1c72259",
        "cursor": {
          "ref": "a0403948-768d-4a01-a710-ec880851f4b8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a3f85d20-0c11-4db5-a14c-c646427ea414"
        },
        "item": {
          "id": "4302ede7-3986-4159-9332-a0c3f1c72259",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3b2646b7-fce0-4d96-8ed3-c94fee397aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b1cb4-fd02-48bf-8765-10c90de2452f",
        "cursor": {
          "ref": "c11f244a-6303-4d31-a33e-4171b8c0d988",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "502f2e39-9c77-43a8-b816-e8210b8a619e"
        },
        "item": {
          "id": "754b1cb4-fd02-48bf-8765-10c90de2452f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7d6bdb85-f49a-47b4-a16e-66f8dd6557d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b36038-0a54-4a1a-92e8-c2c77dd9017c",
        "cursor": {
          "ref": "2ea00501-4bd6-4102-9e23-f72a89df01e0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "87722ee2-ebbb-4b9f-bef0-a8ed8f230037"
        },
        "item": {
          "id": "d7b36038-0a54-4a1a-92e8-c2c77dd9017c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9960c00e-5990-44cb-ab22-74f458c92720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5ac574-bf5f-4bb1-baa0-2ee2698d09ff",
        "cursor": {
          "ref": "ed8daa40-8830-4ae7-8b5f-ea3fe0b0720a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c960da3c-cb23-4ef7-a831-16c78634ab6a"
        },
        "item": {
          "id": "cf5ac574-bf5f-4bb1-baa0-2ee2698d09ff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6298785d-7799-4826-ad86-6d99fc7cace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f78055-ae5d-401c-883f-f4b7c6537c79",
        "cursor": {
          "ref": "abd3aa15-23aa-4034-a6c0-309b09c836c0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7eea8ee-b7d5-4ceb-93fd-4999fefd730e"
        },
        "item": {
          "id": "18f78055-ae5d-401c-883f-f4b7c6537c79",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ae32cfe7-ea10-4703-88ce-e71858e60311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae29bd35-69de-4591-9ea1-134eac4b2702",
        "cursor": {
          "ref": "76edeed9-7aac-4c8d-b139-8d4f5fcb043f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f29c3ea-8760-4d1a-b9d0-d5492226b8a2"
        },
        "item": {
          "id": "ae29bd35-69de-4591-9ea1-134eac4b2702",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "589eb959-82d0-471b-beb1-6d0c47175dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ad400e-0e34-4fd8-bdf9-3bedc21f7175",
        "cursor": {
          "ref": "1c395ff4-f70d-4dcd-8a2f-a91b45a74a79",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1090181e-39bf-4b95-85e7-6cfcd4b061fa"
        },
        "item": {
          "id": "50ad400e-0e34-4fd8-bdf9-3bedc21f7175",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a204f547-fec3-4a78-b31b-663dea3480e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7fbed5-b0b2-4810-83e6-f86cf99634f5",
        "cursor": {
          "ref": "ba1a9e48-aba0-4060-9138-cf464f03c6cc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae3349ba-cf59-4226-9739-50f4f6e9b27b"
        },
        "item": {
          "id": "eb7fbed5-b0b2-4810-83e6-f86cf99634f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "efe9a20f-d90f-426b-b725-a7970753c13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684d2ad8-c8a3-4cc1-b022-9c2558ef8a26",
        "cursor": {
          "ref": "8aaba32b-6b0c-4f46-913e-9e404a795621",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5942638d-da81-4957-a0b5-2d961b949914"
        },
        "item": {
          "id": "684d2ad8-c8a3-4cc1-b022-9c2558ef8a26",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7bdd3fc8-52e0-4139-9779-39526dc31226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c4868-21fd-4b4b-969f-0f5bec946fdc",
        "cursor": {
          "ref": "d540aaef-f243-46c2-871e-3fce642c38d1",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "58d81cee-5711-4c73-bc14-51223397406c"
        },
        "item": {
          "id": "4b5c4868-21fd-4b4b-969f-0f5bec946fdc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5eeebd3f-e9e1-475d-a155-ac23be3e1558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5f852-610d-4d20-a78a-1402a5e7e340",
        "cursor": {
          "ref": "df026615-9728-4e7a-8165-49983a3fcbdd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "892e8e23-f0a6-4a2e-8a24-6b1ab7568268"
        },
        "item": {
          "id": "edd5f852-610d-4d20-a78a-1402a5e7e340",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2fc25240-d286-415d-aa93-d14367dfb4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8379d32-a75a-4631-9eb1-4a342b5eb2af",
        "cursor": {
          "ref": "85f66986-d297-4d94-8100-8232d8499319",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1cca01d0-3e94-41ed-875c-7ac0bd78416b"
        },
        "item": {
          "id": "c8379d32-a75a-4631-9eb1-4a342b5eb2af",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69f2c45a-4469-4800-bebf-0064148d0a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a6d741-5de4-4001-9e28-5231dab222db",
        "cursor": {
          "ref": "c12a50a5-1ee0-4af7-b76f-0b34022002d2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "04d03e46-03a6-4899-9ec0-de2c60d087de"
        },
        "item": {
          "id": "13a6d741-5de4-4001-9e28-5231dab222db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1e92983-9c85-4ef6-be0b-d8dc77dbf553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431ad24-83fb-401d-a512-9728f37b80af",
        "cursor": {
          "ref": "59338f41-7c48-4bd9-8d3a-99dcca320898",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ff84b399-bcc1-49ef-806a-33d5f0a65fc7"
        },
        "item": {
          "id": "1431ad24-83fb-401d-a512-9728f37b80af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8dbea0c7-4fbb-4843-8a54-dbe79118af7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3631c7b-041c-48c3-8813-04378c8ad673",
        "cursor": {
          "ref": "3f298df5-2c02-4795-91bc-746d22c19c24",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0324ac41-add6-4f4e-9919-cf16fe3408e9"
        },
        "item": {
          "id": "c3631c7b-041c-48c3-8813-04378c8ad673",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f207cdea-290f-4c42-a5a9-0360b6e8797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92765b23-6d06-4118-befe-c88824e63ddb",
        "cursor": {
          "ref": "ad17c737-7af8-4139-a435-0e3fb008d2be",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e132f797-d191-4e8d-b6bc-34b31d7e6021"
        },
        "item": {
          "id": "92765b23-6d06-4118-befe-c88824e63ddb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cdeea5e5-14bf-4827-85b5-1cc2def16e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f375211-d499-498d-836f-faa0416d8cbc",
        "cursor": {
          "ref": "5599e1bb-26cf-494e-830d-cf5db7191099",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5588c4ec-8011-4d63-ad0c-80f15e60e044"
        },
        "item": {
          "id": "2f375211-d499-498d-836f-faa0416d8cbc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a295c763-1b93-4200-ad35-0f884f956f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1032d-9929-4446-924d-ce15cb51fef8",
        "cursor": {
          "ref": "980f3baa-fc8f-4099-a83d-a696abc041c0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c26bc48-3b9c-42cc-b99e-361175cf8d14"
        },
        "item": {
          "id": "2ba1032d-9929-4446-924d-ce15cb51fef8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f7adfdb1-e3bc-4e09-9fc1-7028acdb34de",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 797,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9794ad24-87cb-45b3-ab43-33b113fef217",
        "cursor": {
          "ref": "777d75cb-554c-4045-8955-bea2bc0c26b7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "102e8752-312a-44ac-b73b-6ed80f8f7cbf"
        },
        "item": {
          "id": "9794ad24-87cb-45b3-ab43-33b113fef217",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5cf902e0-a0c4-410c-92f4-dc6cd12a91d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb876a9-24f9-4154-a2cb-57c033ee736a",
        "cursor": {
          "ref": "02fb5c4d-6a74-4179-9e58-defcf6f37442",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bf2ae733-e0ca-4bd9-81a4-f4442ad1636a"
        },
        "item": {
          "id": "deb876a9-24f9-4154-a2cb-57c033ee736a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a8e15cd3-cd6d-423b-a735-fbc4966b2f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea3497d-4a17-443e-b02e-820ff369e37e",
        "cursor": {
          "ref": "12548abf-3bfc-4302-8583-344d4fd9b270",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd076222-bb64-4a2a-b173-40ffb46a8971"
        },
        "item": {
          "id": "9ea3497d-4a17-443e-b02e-820ff369e37e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4af478c5-c1f8-4f80-b8c1-1ee0cd0a207e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde47162-54d4-4ed8-9712-6df6bb8d8e6e",
        "cursor": {
          "ref": "f0b151be-6677-4d06-b06f-6dcf644f8f24",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6f93c23f-945b-485d-8420-053096593346"
        },
        "item": {
          "id": "bde47162-54d4-4ed8-9712-6df6bb8d8e6e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aea6d46a-961d-45d7-be54-54294338f17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7a44d5-7d4a-47cc-abf2-355744fcc717",
        "cursor": {
          "ref": "7262dfa7-f851-4a1f-8959-8aad94961bb7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4ddf2b0a-b010-47ab-b2dc-3550ae4dcc5b"
        },
        "item": {
          "id": "ce7a44d5-7d4a-47cc-abf2-355744fcc717",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d444dfe1-c77d-46da-901d-dfae8a75c87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bb8220-b78d-4ae5-8b4e-4566adc6222e",
        "cursor": {
          "ref": "66d8f029-9807-4c53-a4fc-f23b3caace08",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ddac1b9-2b40-4ffe-9418-bd4674238870"
        },
        "item": {
          "id": "e3bb8220-b78d-4ae5-8b4e-4566adc6222e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38387e39-86d0-4c3f-9648-0c198f296dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e3eb2-c3e1-4dd4-9e7e-342547f0dfb9",
        "cursor": {
          "ref": "ff1189ad-4f58-46d9-ad5f-2eaacd131d41",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8650ee1d-7bdd-4405-8cc0-b67dd44a840f"
        },
        "item": {
          "id": "6c7e3eb2-c3e1-4dd4-9e7e-342547f0dfb9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c77846fd-3201-4ee5-889e-ba7e0c7160b9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 747,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0ccae6-1aa0-4f44-b43d-3ccc2322e7c6",
        "cursor": {
          "ref": "bb575c5e-0853-4856-bb08-e524aade0b40",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "389a3741-62ce-4528-b4e1-6baede5b4aa1"
        },
        "item": {
          "id": "af0ccae6-1aa0-4f44-b43d-3ccc2322e7c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b900804a-8ffc-4146-aa53-fe07a4f5a5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6082bb4f-a4bb-42d8-99e7-7bb994920f3a",
        "cursor": {
          "ref": "045a98c7-c52c-485e-b260-26bf9529e902",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "193132d2-6da2-47be-871a-cd08cb9fb1ac"
        },
        "item": {
          "id": "6082bb4f-a4bb-42d8-99e7-7bb994920f3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "40895a24-9f9f-44f1-9b5c-aa7cc00c5414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0b94be-bc50-45db-a16b-989bc183ce21",
        "cursor": {
          "ref": "6325e991-4504-43c0-b608-4ebb1edc8914",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ef90dc8-5ec7-44ec-9a49-5d03e1afbd08"
        },
        "item": {
          "id": "aa0b94be-bc50-45db-a16b-989bc183ce21",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0f021b4a-33f1-40e6-9100-8aca9b1a677a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a38d271-2430-4c56-aec9-1b4673a5899f",
        "cursor": {
          "ref": "b3decc6d-500a-4759-b84c-89d0b646e8ea",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9af136e-14ad-4bbb-ba96-7144a0d4ab66"
        },
        "item": {
          "id": "2a38d271-2430-4c56-aec9-1b4673a5899f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f90d02d9-f423-4d12-bcf5-b77752eb66a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23267594-7c74-49ea-b73a-9e08851576f5",
        "cursor": {
          "ref": "1505744c-cfc2-463c-b5e2-363974a7155a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f5c06c3f-4bea-4d41-8bc5-0c71bb7e9f26"
        },
        "item": {
          "id": "23267594-7c74-49ea-b73a-9e08851576f5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fc27429a-b8f7-47ea-aa50-5629852be7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb0fb2e-52e1-4acd-bc0b-472e04f69838",
        "cursor": {
          "ref": "61865262-ac21-4ad3-8a3f-e87a70261b40",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31ce855e-510a-441b-b7c2-5ab97073f332"
        },
        "item": {
          "id": "efb0fb2e-52e1-4acd-bc0b-472e04f69838",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "01eb581d-ef8e-40ec-a4c5-0432d8dc7fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a75bd7-0a7f-45c9-adb8-a78553c7ca8c",
        "cursor": {
          "ref": "56e0a34e-8d77-458b-9559-bd7713693267",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "74a8938e-065e-43a1-8bf7-acefc7d54497"
        },
        "item": {
          "id": "05a75bd7-0a7f-45c9-adb8-a78553c7ca8c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a7ec682d-94d6-4891-9bf4-a60b154c7568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6863e7d-cd36-4ce3-b504-c8fd1e06a24e",
        "cursor": {
          "ref": "fb5cce59-d056-4de0-a979-a3633c37e94a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e7d960d8-4f8f-4535-a277-c44f11998365"
        },
        "item": {
          "id": "b6863e7d-cd36-4ce3-b504-c8fd1e06a24e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4dae4aa8-6d00-4874-b5e7-00e426c74650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7330bb38-eb76-43a0-86ae-e1851b8bf601",
        "cursor": {
          "ref": "de143583-3e2e-4b22-8947-b9e0b1621bb1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9a0d984d-a67e-4856-a916-ab71cf7d2b33"
        },
        "item": {
          "id": "7330bb38-eb76-43a0-86ae-e1851b8bf601",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1f6947c9-b792-417a-98b7-562aeaaafa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfec668-d646-4a3b-a100-e11a4f020595",
        "cursor": {
          "ref": "380c79d2-9825-40ba-8782-f6883cfeb933",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c128af2-d125-431b-90d2-e3a484b69d18"
        },
        "item": {
          "id": "bdfec668-d646-4a3b-a100-e11a4f020595",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c3db40eb-a1bd-42f3-a409-63d8e8525b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19743a7e-b4f9-440b-9a24-a6861d0ff06a",
        "cursor": {
          "ref": "37065a2a-8833-4bd4-8f49-54f1977765b3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "56e5002d-35e0-41af-84a4-a8597905df1f"
        },
        "item": {
          "id": "19743a7e-b4f9-440b-9a24-a6861d0ff06a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a92abdee-e2ba-462c-b5ff-1dfb96306629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc35816-4031-4a30-9cb9-8db5aacafff8",
        "cursor": {
          "ref": "61b2bb48-c143-4cca-a09c-d935d9f92a35",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f46c5cd-d2c6-4c92-9bac-e8192c12bed1"
        },
        "item": {
          "id": "2cc35816-4031-4a30-9cb9-8db5aacafff8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9dfc4b48-9437-422b-9058-8ecbdbab789f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e2eb08-ad93-480d-98f2-a8f31da5c0ad",
        "cursor": {
          "ref": "2f5bf332-5c9f-47ee-a318-4ee41f3decaa",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4b709913-2c17-4982-998c-d5c8fd6cc234"
        },
        "item": {
          "id": "54e2eb08-ad93-480d-98f2-a8f31da5c0ad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4bc8058b-d618-4cbe-8de6-8eef408b9137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5796b8f-43c4-488c-9081-935169eff799",
        "cursor": {
          "ref": "04ed3468-7f6f-4d54-b17e-627cea1c4834",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8fb62f18-b59d-43a9-9ee9-5235e5a3cd96"
        },
        "item": {
          "id": "a5796b8f-43c4-488c-9081-935169eff799",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "22856d82-79b1-4d51-8431-ae1a3def8c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471af767-0e2c-4343-84de-c25834ab92e9",
        "cursor": {
          "ref": "4ece33c7-40f2-4abb-b45f-816ff89988df",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fc963402-d8e8-4efb-871b-d58574e480b3"
        },
        "item": {
          "id": "471af767-0e2c-4343-84de-c25834ab92e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9090e9f7-ded9-4194-ad7b-cae5f722788f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ba2ec-459e-4ec6-bf46-8f5acebb58eb",
        "cursor": {
          "ref": "96223066-c529-40e4-9c29-fce86d60c974",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c043beb3-4af2-49c9-bb85-8d7b85f79716"
        },
        "item": {
          "id": "aa8ba2ec-459e-4ec6-bf46-8f5acebb58eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9c1d22c9-a23b-4244-b7aa-2aff89074ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a182b93-18ba-43ee-8432-b6e43273a893",
        "cursor": {
          "ref": "3629e03b-60c1-446d-993a-61c9518a50e9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4154316b-f8ae-4b19-b948-cfb1a136b79d"
        },
        "item": {
          "id": "7a182b93-18ba-43ee-8432-b6e43273a893",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0eff1c0c-10ca-426f-9fb6-efece9507c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb70b8-4f51-4fa6-bdf4-d9a6e71642fd",
        "cursor": {
          "ref": "c50885dd-1bf2-40a2-bd53-a3e39ab5bd05",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "efd3a43a-8d7a-4b30-b977-49061e2fc06b"
        },
        "item": {
          "id": "80bb70b8-4f51-4fa6-bdf4-d9a6e71642fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "05534f26-b79f-4dea-8fda-d4e068bf5368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aa0198-8034-436d-8685-d44877036864",
        "cursor": {
          "ref": "6fdcff3e-3ad6-4c3a-96bd-fa0155a38154",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "20a77276-e779-40aa-ae90-dcb850df60fd"
        },
        "item": {
          "id": "71aa0198-8034-436d-8685-d44877036864",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d76146b9-236b-4742-a324-ab13d20fb294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b64acc-bfbb-460e-a70b-8502049e5fef",
        "cursor": {
          "ref": "7c99694c-771a-4a81-8f3c-a77344d53d4c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "90969a02-4983-44ea-9ea4-9f2e11ed84ac"
        },
        "item": {
          "id": "a9b64acc-bfbb-460e-a70b-8502049e5fef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f1bebfcd-23fb-461b-8e54-58093f60e60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcfec37-7a4d-49b6-a008-1af445918e61",
        "cursor": {
          "ref": "83687ff6-d458-4a09-bbfc-0a7b5efe48f4",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "94beff7c-b107-4170-853f-53ff4bea75fc"
        },
        "item": {
          "id": "3bcfec37-7a4d-49b6-a008-1af445918e61",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "30b899d3-c734-43e6-bbbc-d0c3053c8b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6640232-165b-46cf-9447-a47f17d3ff22",
        "cursor": {
          "ref": "e2635f5d-3014-4313-98c9-789cdb1dcf0d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6ece3e68-7cf1-4335-9d6b-c2049561ab98"
        },
        "item": {
          "id": "f6640232-165b-46cf-9447-a47f17d3ff22",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "adbb15f8-ac99-403a-bf73-4dac8ebb10bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7a4660-2e38-4970-934c-4b928dc9772b",
        "cursor": {
          "ref": "e961e08f-5185-48ef-851a-e535ac2e44f5",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6ddc87bb-ba6b-4731-9e9a-5534f0a9f190"
        },
        "item": {
          "id": "3f7a4660-2e38-4970-934c-4b928dc9772b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "11e63089-ddda-45bb-9234-0a8671055365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd002730-6aab-4627-83cb-59f22d7a7aaf",
        "cursor": {
          "ref": "ea189513-d712-462a-945f-ec5805027f1d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c2045d0c-08a1-4c24-920a-50051ce402d9"
        },
        "item": {
          "id": "bd002730-6aab-4627-83cb-59f22d7a7aaf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0c0c8355-9ca6-4dd7-9155-78a06bd678f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c4f18-865b-4174-990a-f04d0440188d",
        "cursor": {
          "ref": "ce869d3d-86ae-4a98-8e95-c82500a08f45",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cd73ca3e-ca0f-47c9-8faa-59bb20276775"
        },
        "item": {
          "id": "866c4f18-865b-4174-990a-f04d0440188d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "58410ea6-13e7-4ff9-81da-a22c1389a800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee206dc-8183-4011-a62a-7be2c5672c81",
        "cursor": {
          "ref": "edf06ea3-73a4-48f1-9282-fa9936af1da6",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bcae25fd-01c6-46e0-be81-b06ee7396f6f"
        },
        "item": {
          "id": "6ee206dc-8183-4011-a62a-7be2c5672c81",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6bb0f336-9147-43eb-9994-68ddbdda64d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8993518c-509f-409f-9636-12f0a1bb59e0",
        "cursor": {
          "ref": "0f1a5dbf-e7c4-4aef-a6e4-3dc868134d27",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "263c888f-464a-4566-96cf-1eaf9388e123"
        },
        "item": {
          "id": "8993518c-509f-409f-9636-12f0a1bb59e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "545e8c6e-2f25-456b-bb94-b08749500b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ce4a3-1b5c-4ef4-8a5b-acc9694ea125",
        "cursor": {
          "ref": "9265c83d-ae39-4e38-bda1-35928642d24d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "41c5a6d2-48ec-461a-9f38-18c00a3f9394"
        },
        "item": {
          "id": "955ce4a3-1b5c-4ef4-8a5b-acc9694ea125",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3ea65ea6-0860-406e-bab3-d6206c8077d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a006a-91f8-4ec5-b6a3-5b0b9d452df5",
        "cursor": {
          "ref": "d1c27c43-9cb2-4519-b465-48621fd2a808",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f45c6b9e-1d1b-439e-a3cc-d05848fe9a17"
        },
        "item": {
          "id": "906a006a-91f8-4ec5-b6a3-5b0b9d452df5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7cdf228-5e21-491c-abf8-43da446e3137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08f05a5-0736-4c1c-89c6-23b7b2eda825",
        "cursor": {
          "ref": "08c318cf-fce3-4c5f-9698-5f06c5316d39",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9246b76d-22fa-4427-ac03-55f2e029a3f4"
        },
        "item": {
          "id": "f08f05a5-0736-4c1c-89c6-23b7b2eda825",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "be90fa06-118b-4c15-9f50-621eba953839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62e6fcd-e3d1-499c-8054-174edc6ab0e2",
        "cursor": {
          "ref": "92db6ee8-c260-40e5-a62a-347e44d0ccec",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b43fac6-5f34-466e-9b31-8939b63e2895"
        },
        "item": {
          "id": "b62e6fcd-e3d1-499c-8054-174edc6ab0e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5c9eca26-7727-4290-a9d8-48316679d3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeef98e-8cd9-4f2e-8d5f-58dd23498031",
        "cursor": {
          "ref": "87635e43-dd23-46cc-b6f3-3e8fc11b3b0c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b7f314d6-7a60-4f73-b097-7a9f2e08001c"
        },
        "item": {
          "id": "4aeef98e-8cd9-4f2e-8d5f-58dd23498031",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "105a4f23-f211-4d4c-a8a4-0165be5f4263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e02214-4cdd-4afc-a7b9-93382727e418",
        "cursor": {
          "ref": "6488cd11-9866-4709-b134-94c0f76e17da",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be889a5b-a454-49b0-97b6-91edba4a0627"
        },
        "item": {
          "id": "87e02214-4cdd-4afc-a7b9-93382727e418",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c045821-ae87-4b90-9b66-0a16fa5b5922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9511a54-959a-4cad-98b7-502d65699224",
        "cursor": {
          "ref": "6de35223-c21d-4307-93d9-4605d4219e71",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ee54229e-a6ca-4c75-b466-2a134453453d"
        },
        "item": {
          "id": "e9511a54-959a-4cad-98b7-502d65699224",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3ca6ea8a-d907-4e42-8451-d46cf72172f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dac2ae5-4321-46d0-b0e7-ff8ed974cd05",
        "cursor": {
          "ref": "fb3f6de7-851c-45f0-bfca-dd8401758143",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19f7a9c0-c7cc-46de-be67-501f78011e5c"
        },
        "item": {
          "id": "9dac2ae5-4321-46d0-b0e7-ff8ed974cd05",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "67e1bd41-2a3e-4360-aad8-7b476bf8e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f9968d-8ac7-4e09-91c2-4ea49b97b13b",
        "cursor": {
          "ref": "72a7d187-871b-4ebb-9fc4-396d9a3b5098",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "61a1e23d-697e-417d-8ec2-40571067198e"
        },
        "item": {
          "id": "c1f9968d-8ac7-4e09-91c2-4ea49b97b13b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a729b6a1-863c-417a-8ec0-c4d360a09e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab242ad-cd3b-4838-99b4-fa028dbd8595",
        "cursor": {
          "ref": "7b7c17d6-94d1-4b69-95e9-953b967dd86b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "982f4e64-fe85-49db-a853-8ca46a19acb6"
        },
        "item": {
          "id": "cab242ad-cd3b-4838-99b4-fa028dbd8595",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e15d851d-664c-41da-ba3a-961accb03446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da027164-3187-4408-b5fb-f043e0150722",
        "cursor": {
          "ref": "b773f180-e974-45ab-b51d-fcac55a65201",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6664f692-3fbf-40bb-b4cc-6fd439971b43"
        },
        "item": {
          "id": "da027164-3187-4408-b5fb-f043e0150722",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b926becf-09cf-4404-94d1-d77aaf8b4264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd94362b-66db-4995-a413-927af15de89e",
        "cursor": {
          "ref": "ae439c8d-a961-4ac3-9ade-2cd7bfeb872b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "675557bc-5cf5-41ef-ba4c-537a2f535981"
        },
        "item": {
          "id": "dd94362b-66db-4995-a413-927af15de89e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "09de24ba-2897-47d5-8fa6-ba63c8be935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43bd34f-b48b-47cc-acc3-b37f50388d75",
        "cursor": {
          "ref": "0de74c40-2d98-4d03-9f03-6ba0189c51e1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37f3b227-3988-4eaf-a706-295384e6fbf4"
        },
        "item": {
          "id": "b43bd34f-b48b-47cc-acc3-b37f50388d75",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f9b56aa9-835e-460b-bce4-8da917e97598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04df8f0c-5e42-443b-815c-e577974b3db0",
        "cursor": {
          "ref": "81bebccd-8504-447d-a021-dec560ad30df",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "822f84c6-1d61-4d39-8fe1-d74c0c403609"
        },
        "item": {
          "id": "04df8f0c-5e42-443b-815c-e577974b3db0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a37656e6-7b37-4edf-aaf8-d5646a607105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3183b4-a5a9-4748-a49f-0a3f2d516277",
        "cursor": {
          "ref": "44454d8d-00ff-41e4-90bb-2a900879f232",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2d891486-c932-4f24-8941-c507b3fa516d"
        },
        "item": {
          "id": "6a3183b4-a5a9-4748-a49f-0a3f2d516277",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "217e40b6-65bf-42bd-b46e-afb561c55321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08969d7-275d-4968-a061-a58cc9405d3d",
        "cursor": {
          "ref": "67a8d43a-14e9-476e-88b2-ac1ead556b4d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bae8e5e1-6b1d-4273-9e56-7d642ce7ec36"
        },
        "item": {
          "id": "d08969d7-275d-4968-a061-a58cc9405d3d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "91f5dcc2-aaef-4482-a65c-5cb1c9838bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef6056a-0f96-4ce8-958d-8ac56ffc619d",
        "cursor": {
          "ref": "d656d490-0d9f-4cf9-a022-e93e40719c1d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "15dec681-d781-420d-ae53-49b9370e2233"
        },
        "item": {
          "id": "fef6056a-0f96-4ce8-958d-8ac56ffc619d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "766ff806-2fac-47b2-a6b0-d2e233940066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8f357-5e6f-4262-a166-f0f296ea9519",
        "cursor": {
          "ref": "ff667766-8b69-4528-a77d-957c0210b5e1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "294f0135-6bc1-45d4-8acf-4ed1f70fa8a6"
        },
        "item": {
          "id": "fca8f357-5e6f-4262-a166-f0f296ea9519",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3c900963-55ac-4852-8288-ebb7bc4fdb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf6511b-ee31-41b0-88fe-671ae162e4f7",
        "cursor": {
          "ref": "2ca6e2c0-ee51-47d4-b55d-b9fc89857c8f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7d88f1c8-44da-4255-9863-adc38a936a1e"
        },
        "item": {
          "id": "0cf6511b-ee31-41b0-88fe-671ae162e4f7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "511239cb-4979-4e84-bda5-661f8ab8c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412db077-f5dd-4f33-ac38-3a671afeaf5a",
        "cursor": {
          "ref": "c02d771d-a659-4276-af51-32006f600d2b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a8c874d1-a9ad-4687-8f4e-7421d777582f"
        },
        "item": {
          "id": "412db077-f5dd-4f33-ac38-3a671afeaf5a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a343fd76-4e69-4c60-8d79-f92d8512424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886288c1-1a39-4ef1-9301-1dc5ad542f79",
        "cursor": {
          "ref": "8d83c9d3-dc2d-41ce-8b26-75bc87b0c6bd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7fd0ebb6-01ca-45a8-9724-894db7819353"
        },
        "item": {
          "id": "886288c1-1a39-4ef1-9301-1dc5ad542f79",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "acc0decd-8b9b-447f-90dc-7acf28c52635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a59d963-ce74-43cc-8163-1383b9777ff1",
        "cursor": {
          "ref": "b241ba33-d427-48d7-bf2e-4a2ca72e1d5d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d011364f-f9cf-4938-b5fe-952178aa6e08"
        },
        "item": {
          "id": "7a59d963-ce74-43cc-8163-1383b9777ff1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0cea815c-1aa6-4ad7-a74a-f9e5fca9fe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d337d7-5a2a-419d-bfb5-d39fff7aaad7",
        "cursor": {
          "ref": "3cb3a4b2-aa8d-4f7b-b758-6b588383e436",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bc6ef401-3624-4b04-881e-ce9b05dba8ca"
        },
        "item": {
          "id": "22d337d7-5a2a-419d-bfb5-d39fff7aaad7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4112d8ef-c96d-4961-b485-690d0bef7c2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6ace25-ae8e-47d9-afd8-c3f52dca2c73",
        "cursor": {
          "ref": "60de7f37-b88a-47eb-84d7-0df29693e6c7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e1d3490-6747-4324-9c2e-ec1208b0d359"
        },
        "item": {
          "id": "bc6ace25-ae8e-47d9-afd8-c3f52dca2c73",
          "name": "credentials_issue"
        },
        "response": {
          "id": "48f2b3e7-5207-4306-9ff4-b8cd9fd9a328",
          "status": "Created",
          "code": 201,
          "responseTime": 6466,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1284963-c75c-4681-8fea-1675167c5713",
        "cursor": {
          "ref": "a237666c-6f63-494f-a427-c926cbd4d926",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d6b5d6ac-875c-40ff-b2ed-1a96044e647e"
        },
        "item": {
          "id": "c1284963-c75c-4681-8fea-1675167c5713",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02b09c3b-f857-4c79-85fe-5d353aba6044",
          "status": "Created",
          "code": 201,
          "responseTime": 6495,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95e344b-7873-48c0-9d65-b247f0c02f67",
        "cursor": {
          "ref": "c87c9ec9-de98-473c-96c7-b0596fd0bddf",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "00b4b8b1-d921-4765-b738-4a8b7ca9e385"
        },
        "item": {
          "id": "b95e344b-7873-48c0-9d65-b247f0c02f67",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f3ec177-198c-47ff-bd4b-bf6d027952fd",
          "status": "Created",
          "code": 201,
          "responseTime": 5971,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a412f752-313d-4563-839d-3021718200ab",
        "cursor": {
          "ref": "eb2e66fd-7db5-4f26-84f3-2ef291968e56",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b67a952b-9da7-44be-a2ed-486402ff64eb"
        },
        "item": {
          "id": "a412f752-313d-4563-839d-3021718200ab",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "09032a4e-edba-45ba-b6ff-b64c735fbd48",
          "status": "Created",
          "code": 201,
          "responseTime": 5647,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a9210-775d-4d18-9ecd-6d676bd2e0ac",
        "cursor": {
          "ref": "9de0348c-8714-4eec-81d3-0fcf665bc9e3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0ee8dd08-9555-4fc2-961c-9b561905a385"
        },
        "item": {
          "id": "9a0a9210-775d-4d18-9ecd-6d676bd2e0ac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d020464e-25f9-4a37-b7fa-5dd6d164e01e",
          "status": "Created",
          "code": 201,
          "responseTime": 5992,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "976625a3-6923-44ec-af48-fad6accc5f37",
        "cursor": {
          "ref": "6e291f5c-3647-4ffc-8b01-eaae404f9c61",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d68a5a8a-45e7-4754-a411-3590447aa038"
        },
        "item": {
          "id": "976625a3-6923-44ec-af48-fad6accc5f37",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5f82fb8a-1a50-4085-9542-614b8dae608f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "efa2bebb-7c03-48d2-99a9-3faf9595b069",
        "cursor": {
          "ref": "6a1816fe-0cd0-4b59-92a1-e154e77cfaac",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "067408a2-80ae-4ed8-b200-e2d2b3119c8c"
        },
        "item": {
          "id": "efa2bebb-7c03-48d2-99a9-3faf9595b069",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4fb84c3-b704-4828-ac39-ba2c81eeaf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a170bf03-f559-4ddc-8a6e-1d550f50ccad",
        "cursor": {
          "ref": "1baf8b67-2d4f-4de3-ac87-dc2b098c7cc5",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50c5f659-a827-4495-81bc-a0158f305cdf"
        },
        "item": {
          "id": "a170bf03-f559-4ddc-8a6e-1d550f50ccad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "571d4181-f1a7-4761-80ee-40433ee5a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd81d42-ef78-472e-8f24-3a659cebbeaa",
        "cursor": {
          "ref": "bb04bf0e-3000-4787-af10-45096e5c30e7",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "689a5d31-755b-4922-9646-3fb3f8fd3331"
        },
        "item": {
          "id": "1cd81d42-ef78-472e-8f24-3a659cebbeaa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e361b5ad-2242-485f-99f5-f2102a0c299a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee4b2f6-ae01-4ae0-9633-a931cafd71d9",
        "cursor": {
          "ref": "b9cb350e-35c8-4f6b-a615-341baae29749",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "112a3422-1ddb-4d24-8433-b9a6e75ae394"
        },
        "item": {
          "id": "2ee4b2f6-ae01-4ae0-9633-a931cafd71d9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75893281-d65f-4ac1-8a42-bad4e87ef762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f87bdc1-4f02-44be-a387-4ff1c56f9533",
        "cursor": {
          "ref": "b25df504-b58f-4858-98da-e21723fbfd89",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "374f3ba6-dd4b-48cd-89f3-71b99bbdb63d"
        },
        "item": {
          "id": "4f87bdc1-4f02-44be-a387-4ff1c56f9533",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5f0fd384-f92a-4c54-9db9-d7708bef5136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de03de6c-fcb5-4890-b315-12fa67ab750e",
        "cursor": {
          "ref": "1144ab84-7abe-4506-8cf8-c15cac678c2f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8a9407e9-fd23-419e-a9cc-7a7d5de348f4"
        },
        "item": {
          "id": "de03de6c-fcb5-4890-b315-12fa67ab750e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e625392d-47e9-40a3-8a0d-9de41cb4ec17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361a437-9f3f-476d-855b-d5e7583f19de",
        "cursor": {
          "ref": "af4f2437-78ca-4af2-9030-6af510182b3c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b4ddc6a0-885e-43fe-b630-82c7dad4525e"
        },
        "item": {
          "id": "f361a437-9f3f-476d-855b-d5e7583f19de",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ce2e7662-bb82-4ca7-80a8-fc3720ab41b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db4dba8-9950-4418-8d7f-94258c08f3c1",
        "cursor": {
          "ref": "92b59194-4ee2-42d4-a844-483fa96bb8f3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "853a6b05-3f6c-4ecb-a2f6-db3edc0b86bf"
        },
        "item": {
          "id": "4db4dba8-9950-4418-8d7f-94258c08f3c1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55fbf515-beb4-47a0-83f1-47ad654fbd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f6c05f-685d-4d40-a48a-384caeea8a4b",
        "cursor": {
          "ref": "965389dd-bd4d-4567-8ed1-334d3e5301dd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "25ada4ad-fc07-4ade-86a7-710abe603164"
        },
        "item": {
          "id": "a9f6c05f-685d-4d40-a48a-384caeea8a4b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ab7797ca-5e76-40e9-b4bd-47b61ed78572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669865b1-f469-4e47-9c97-631c6493fbc6",
        "cursor": {
          "ref": "ce0c3fa7-8a49-44e6-9338-6209c7d9f5a8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "df027b61-6a95-4092-90b2-385e1ef8a49a"
        },
        "item": {
          "id": "669865b1-f469-4e47-9c97-631c6493fbc6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f4874b1-9f66-408d-8799-c20b2e867713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd9367-bff4-4edc-8161-9ab634c91d5c",
        "cursor": {
          "ref": "f370069b-2e05-46c2-bc73-2a0025d3768b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "40415b9c-f0c7-4d7a-89b2-f9bdc70c0af4"
        },
        "item": {
          "id": "11fd9367-bff4-4edc-8161-9ab634c91d5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4de8c78b-b066-43ca-91a8-7f5199be21c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db624f9d-3e09-4291-aa26-d53d285edcad",
        "cursor": {
          "ref": "548dde12-903b-4f18-9f72-c195327c7982",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4fad521d-09ff-4155-be76-31b68447b010"
        },
        "item": {
          "id": "db624f9d-3e09-4291-aa26-d53d285edcad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae0cbdec-b19d-41f1-94d0-c7a8cb47db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc774e-f07b-4f3e-aedd-1559fa7fd36f",
        "cursor": {
          "ref": "76d9982c-2f95-4b02-af5f-aac1f21dcf76",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2658ce43-80ff-44be-a5cf-6d28239928be"
        },
        "item": {
          "id": "2dfc774e-f07b-4f3e-aedd-1559fa7fd36f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8e779d9b-96fe-4255-b92b-1d50207b8abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161e2c93-1bf1-4d52-a1be-1c2150329413",
        "cursor": {
          "ref": "4dcfa30a-ba45-4806-9d62-c0e755db4d5a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8e163de1-2f6c-447f-bf98-3f7245408214"
        },
        "item": {
          "id": "161e2c93-1bf1-4d52-a1be-1c2150329413",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f92f7c01-a875-4343-a9de-5fd0feab6c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8c030e-efce-4037-b5a1-340be1d13c14",
        "cursor": {
          "ref": "4fd382c8-75cb-40d5-9622-492cceb7a709",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3ee11bab-08c5-4605-b249-53f2340401ee"
        },
        "item": {
          "id": "7b8c030e-efce-4037-b5a1-340be1d13c14",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6760c55c-3569-41a0-84ea-373f7084df24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d0eb1-173e-4210-a5b2-7aba7622edc6",
        "cursor": {
          "ref": "c57b2c4d-ccc3-4516-ad5d-4fcdbb850fef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ffc370f6-3f32-4974-8120-38eebe5f2ebc"
        },
        "item": {
          "id": "6b1d0eb1-173e-4210-a5b2-7aba7622edc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "39f66b96-4ec4-4ec3-bbb2-fec9a03e34ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd34ca-d916-49ee-b9df-610c144ec4bc",
        "cursor": {
          "ref": "784f228c-81c5-4ac4-8ee6-7b2593c1ac57",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd516d5e-60ec-4359-8fd6-1072a6150c83"
        },
        "item": {
          "id": "89bd34ca-d916-49ee-b9df-610c144ec4bc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae6cbedf-fc60-461f-b95c-e01bc68f0f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48267490-37fd-4827-b3fd-358711eef707",
        "cursor": {
          "ref": "e9a0f4db-3a47-45a1-a9f6-238ff1c1ea64",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "188d36c9-e6d2-4950-bdda-d2fd273eb4de"
        },
        "item": {
          "id": "48267490-37fd-4827-b3fd-358711eef707",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9aa6c490-ceb2-4c95-aacc-3c683c80aae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d7f34-406e-4451-b9e0-fa1c29ad6349",
        "cursor": {
          "ref": "22615553-8060-406d-9aec-5d5c5d01ab42",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5a61bbb7-3849-4d3f-a981-8274aa1714d6"
        },
        "item": {
          "id": "b87d7f34-406e-4451-b9e0-fa1c29ad6349",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d0ddb88-f55a-4643-9e9a-8f484dbc4b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca379144-4733-4124-9264-d197776f773a",
        "cursor": {
          "ref": "97017e97-2c1d-4e48-bf92-80290f7796f3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b122a94f-ae71-4d44-9996-b41d63533220"
        },
        "item": {
          "id": "ca379144-4733-4124-9264-d197776f773a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "44c46a59-0c32-4d70-8d32-0240f6c0afe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d555050-e973-441d-be09-e1cbf42ade54",
        "cursor": {
          "ref": "7b14a524-9f09-4212-af19-6bd1bfe39d5d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "92a46fb6-cb64-498a-a3c1-a545c40f7951"
        },
        "item": {
          "id": "9d555050-e973-441d-be09-e1cbf42ade54",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "736594c1-4cd9-40e8-881f-cfd091af9b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1a5a5c-ef1a-4d2b-93ef-b6d99b473ee9",
        "cursor": {
          "ref": "e1677e99-d0e7-4d7a-8978-f978b73cb353",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "052ad440-fe1b-402d-b808-103bf5c30de5"
        },
        "item": {
          "id": "5a1a5a5c-ef1a-4d2b-93ef-b6d99b473ee9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2721bb43-41f9-421b-a791-5a91f418c056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d24ffa-df42-46b0-843e-cf7885d0957e",
        "cursor": {
          "ref": "ceef4315-b62c-4a58-b7c9-38e624003046",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d93b5720-f721-466b-bbec-92babc4a4d2c"
        },
        "item": {
          "id": "66d24ffa-df42-46b0-843e-cf7885d0957e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb0d47c2-b21d-4836-87f4-a3ca1d07f57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94976744-da61-47dd-b941-5b18086de28d",
        "cursor": {
          "ref": "00650854-7eac-4f78-a4dd-a5ff0e848995",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d32c4f10-e96d-42b0-861b-d26389e328e6"
        },
        "item": {
          "id": "94976744-da61-47dd-b941-5b18086de28d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a881427f-049a-4964-99b7-3ec1d20c7bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d7a76b-09d5-405b-a2c0-d6f91946ac8e",
        "cursor": {
          "ref": "87e07499-2613-4123-81f0-b5ed57b4ca36",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4be0bdc8-bb87-424e-a925-891f6155f3d7"
        },
        "item": {
          "id": "19d7a76b-09d5-405b-a2c0-d6f91946ac8e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce1bd461-55ce-4973-9f19-6e059677a7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935f1bf2-c13e-414f-9a54-2fc825d2d655",
        "cursor": {
          "ref": "78223e29-1e24-4214-9625-aacab9d72dca",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f1241476-ad89-4333-9acd-1dae4b73ee57"
        },
        "item": {
          "id": "935f1bf2-c13e-414f-9a54-2fc825d2d655",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "23a36fcc-1363-4413-8a74-7070e298eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7052ee-8dc2-46c9-90b7-62e201b59013",
        "cursor": {
          "ref": "c317c2e4-63fb-4cb5-8431-c57c70c7f622",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ef36c7b8-f9ee-491f-8a9d-a1e3c839fda7"
        },
        "item": {
          "id": "fe7052ee-8dc2-46c9-90b7-62e201b59013",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ec61c362-76a5-4af4-a4ad-ec7c87f354f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e5028-d9f2-4e41-aa49-76e4b8dbc2bc",
        "cursor": {
          "ref": "11e8d33e-7f69-40c5-baab-336802979291",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba65564b-38e0-4205-a864-5abeedc3c626"
        },
        "item": {
          "id": "c90e5028-d9f2-4e41-aa49-76e4b8dbc2bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef92088f-3465-4962-897f-405b99bd744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75090c24-7bca-455c-bbaf-6079e293f4b9",
        "cursor": {
          "ref": "5f432c83-0a08-4ba8-b45c-b21b19f19a66",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c03c4f9b-6e9a-4bb3-96f0-f3a7ad26e583"
        },
        "item": {
          "id": "75090c24-7bca-455c-bbaf-6079e293f4b9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4a073328-6e59-4198-b7a7-3a40fc617c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f3635d-51ca-41db-99d9-1d5bcaa82ecd",
        "cursor": {
          "ref": "a9b1edb6-39a0-4c3a-912d-7afec12ca4c6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f13b9611-7b4e-48a2-8830-6339e051d48c"
        },
        "item": {
          "id": "83f3635d-51ca-41db-99d9-1d5bcaa82ecd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48226933-3512-4014-993c-dd4d1d4947df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b496295-f851-4039-8fab-ac8135538d5a",
        "cursor": {
          "ref": "ad220a9c-ac04-4546-b751-a39efaf31ff7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "96490056-e1ff-407a-b4ce-3eaa0908324b"
        },
        "item": {
          "id": "6b496295-f851-4039-8fab-ac8135538d5a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1fbd92ad-b9c2-4c32-9f20-9c9428826857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb5f68f-4881-4d4b-a76e-8604b6812f58",
        "cursor": {
          "ref": "2014c6f6-40b1-49b6-9d93-5cf86a8067ec",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5d0c99a8-554f-4ad0-b943-50719c7bff0c"
        },
        "item": {
          "id": "3bb5f68f-4881-4d4b-a76e-8604b6812f58",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dd650cff-3354-4264-a75d-dbe3ef771f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9df1ca-c3b3-4622-baa9-707a16220487",
        "cursor": {
          "ref": "b6774fa8-4b21-4b41-91cf-3a01d02c6907",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9dfcd7e9-a764-4262-b653-b09456a6a7ae"
        },
        "item": {
          "id": "eb9df1ca-c3b3-4622-baa9-707a16220487",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e0cf88ac-3442-4d4e-a57d-86f421936068",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae8d18-5512-4e3b-96a3-496f0c846880",
        "cursor": {
          "ref": "2ddb5984-eb12-4ccb-a608-574252bc725d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6cb08346-b829-49cc-8f73-b78d000017fe"
        },
        "item": {
          "id": "4fae8d18-5512-4e3b-96a3-496f0c846880",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d368a2a-9ffe-4bb1-9d3c-685c52aed5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddde903-605d-4d3b-bc8b-9230c7ccdd41",
        "cursor": {
          "ref": "1ffa67e0-af88-4fb1-bc90-a763e0acf684",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1a0c0b51-beaf-4e42-b1fe-55b0e2e1cd60"
        },
        "item": {
          "id": "8ddde903-605d-4d3b-bc8b-9230c7ccdd41",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e1beb740-8a59-4954-9ea0-bd7b4e2076f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa012cd8-eaab-40c1-8383-5d6b95458107",
        "cursor": {
          "ref": "80a13274-afb5-44b6-9088-e57b4d9720e6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c4e5371-4097-46da-81b6-84d7a1537a9c"
        },
        "item": {
          "id": "fa012cd8-eaab-40c1-8383-5d6b95458107",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d1f84ca9-1a50-44d9-af23-18e29cbdcaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cb7d67-a8b0-4934-b6bb-47a7d5f2adf9",
        "cursor": {
          "ref": "36026fcc-106a-4c6d-9a1e-aa539aa596e4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47264625-bccb-4f10-ae21-fdae4e80987b"
        },
        "item": {
          "id": "73cb7d67-a8b0-4934-b6bb-47a7d5f2adf9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ad1b8ed-35eb-4402-bc34-59ce5b6b461e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7e8ce0-9a6a-4982-a979-a479076c3294",
        "cursor": {
          "ref": "5ab32d64-176f-47c4-9d56-8a319fd2c639",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "68c86f7c-a636-47a9-8c6f-d540e3892fae"
        },
        "item": {
          "id": "9f7e8ce0-9a6a-4982-a979-a479076c3294",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1ab041ba-33e1-48e6-886b-9338361cb063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41adca6d-4dc2-4303-93b1-38d9706d236e",
        "cursor": {
          "ref": "f7c3ac43-bbd2-4412-a92b-80091fa1474d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "04d19660-6191-4b8b-92e6-de6f0333a489"
        },
        "item": {
          "id": "41adca6d-4dc2-4303-93b1-38d9706d236e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b37b2025-13c9-43c3-bb7f-8686897a23bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8e2c75-f9fb-4c61-b676-14fb05995d96",
        "cursor": {
          "ref": "93d9c48d-d4fc-4403-9fed-8bce8a51efc4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3f1297ee-f601-4b32-9099-0dc4a2826aba"
        },
        "item": {
          "id": "5b8e2c75-f9fb-4c61-b676-14fb05995d96",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "538d8be3-8ffd-4807-8e3f-35cb0ed1784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fad3d-7f9d-48f8-856b-d423a4448184",
        "cursor": {
          "ref": "368c251e-ca76-4ac4-9e4e-70479f6b1880",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e48fa1d8-f280-4121-a1d6-44ef68b217a9"
        },
        "item": {
          "id": "1c9fad3d-7f9d-48f8-856b-d423a4448184",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d03be34-1600-4960-bd4d-53ca708cb7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f34f862-6832-4916-a4d7-2430684d124a",
        "cursor": {
          "ref": "30edeb01-b2e3-4e29-ba13-30fd978df25f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8b9c34b8-1093-4bad-a8a9-df0f4f814f6a"
        },
        "item": {
          "id": "9f34f862-6832-4916-a4d7-2430684d124a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a781b27-0527-4269-a515-ba10f18165eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da4549a-bd20-441b-904c-a98c1b1e49ed",
        "cursor": {
          "ref": "811f5c0f-bb08-4fe3-94bb-afd204596592",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dca3d58a-0bde-4273-9b6c-2938d39fbf04"
        },
        "item": {
          "id": "8da4549a-bd20-441b-904c-a98c1b1e49ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc19b8f5-5da5-49ae-901d-ee584e8a3110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da95e193-c752-4f83-aeca-f381fe812d30",
        "cursor": {
          "ref": "871a97ac-edfc-46c5-87f8-33a950e8583d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7b5be93f-4acd-41ff-b8a9-6624f9c259bb"
        },
        "item": {
          "id": "da95e193-c752-4f83-aeca-f381fe812d30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "82c598ef-9d29-40be-8cda-b28d14bb26cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f592ba-efe5-4353-bbba-72eb1f5a49b4",
        "cursor": {
          "ref": "e7bddd74-bcb9-4364-b284-cfb7009abec0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "59fd2db8-9ef4-45e7-ab96-370f7e1bed6e"
        },
        "item": {
          "id": "c5f592ba-efe5-4353-bbba-72eb1f5a49b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c463abcf-fdea-4a16-b747-c6bde587b07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4d00c6-b56b-4c16-abc5-764d8aeddc55",
        "cursor": {
          "ref": "6e0b9c5e-3d60-4e17-9b1a-e0f59f731499",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8ce9fcc6-d3b2-4efc-b8d3-40a3a0dab62e"
        },
        "item": {
          "id": "9d4d00c6-b56b-4c16-abc5-764d8aeddc55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8065da5-7b47-43ba-aa89-57a49f0df243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b25f7f-f1a3-46a9-af27-2bcf3c92856a",
        "cursor": {
          "ref": "e8c6c0a2-6af2-4f64-a2d2-1a3feb0dbe8b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7e3eab75-d644-439f-ad51-b631d1c60f3c"
        },
        "item": {
          "id": "29b25f7f-f1a3-46a9-af27-2bcf3c92856a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6454e503-737c-4844-86af-0293e21c8768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df9b526-3ae1-4540-8821-387004fdcfaa",
        "cursor": {
          "ref": "2842f2a4-1f17-4672-b41a-d1c438baa528",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "453b43d8-89e0-4260-8ceb-31e465b10146"
        },
        "item": {
          "id": "4df9b526-3ae1-4540-8821-387004fdcfaa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43e2245e-7089-4a01-b609-fe5133c96b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819af3e-ba1e-4749-8e68-f23fd574e4d9",
        "cursor": {
          "ref": "a363d6db-66e0-4ce6-8832-9a03b275d6b7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bf6158eb-0258-48ee-b177-7f2ad0c7c7ae"
        },
        "item": {
          "id": "b819af3e-ba1e-4749-8e68-f23fd574e4d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd12e340-aee0-4dfb-90f9-f04030552844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b45aad-e489-4a08-9e2a-5c9deb140d4d",
        "cursor": {
          "ref": "457d3867-8190-41dc-8538-cc3f79e6ae36",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "330dc2fc-4052-4ee1-b0b6-ad1fbad97243"
        },
        "item": {
          "id": "87b45aad-e489-4a08-9e2a-5c9deb140d4d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "10e03888-faf9-47f2-acd5-59b5d782d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6711ff82-c71c-4acf-bc60-713921398c92",
        "cursor": {
          "ref": "a5d98228-3330-47f4-9738-0577f286c156",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ffc6921b-7df2-4d31-b7d8-8ab80c3b6e1f"
        },
        "item": {
          "id": "6711ff82-c71c-4acf-bc60-713921398c92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1e19691-4787-43c6-93b7-26a125824646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd7563c-f391-4908-83c6-b547d7470dba",
        "cursor": {
          "ref": "0b8ee58b-a46b-4a04-8b6b-fee11c8e56bb",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8782cc80-da83-4492-927d-b14888b952d6"
        },
        "item": {
          "id": "ffd7563c-f391-4908-83c6-b547d7470dba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a77dd767-5d5e-400e-80ba-6c71345b81b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5227b1a5-7ded-4352-b431-941680b2b520",
        "cursor": {
          "ref": "83fac3da-4c46-4906-b2cb-6bd83182ec3c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5086f551-adda-4419-a4ef-b458e7f23f0b"
        },
        "item": {
          "id": "5227b1a5-7ded-4352-b431-941680b2b520",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e8b5b1f-20b2-4d91-ae12-771e9f71996d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc12385b-6482-429c-8265-b36468ea0ae7",
        "cursor": {
          "ref": "fd27dcf3-c07e-40fd-b6f3-83e1bdfb4899",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "67de6c85-d46c-4c94-b9f8-e54a7b017664"
        },
        "item": {
          "id": "cc12385b-6482-429c-8265-b36468ea0ae7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0171aa50-081f-4a65-a0c2-d7bd42de8dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582121b4-f9b2-4709-8eac-318a9908ed94",
        "cursor": {
          "ref": "b955eba2-ee66-43d1-b954-5cbf3880adc3",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "91f0c1f2-fccb-4c57-81dd-e700b84df04e"
        },
        "item": {
          "id": "582121b4-f9b2-4709-8eac-318a9908ed94",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6606519d-a19e-4ab6-8693-0a0ad8caa632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c30569-1ac0-46b5-b20c-8f8590be059c",
        "cursor": {
          "ref": "bcd936e3-81fd-47d5-8532-67fd4e4f327f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3187b7c-3a73-420f-8ac4-3e616b8a8b59"
        },
        "item": {
          "id": "f4c30569-1ac0-46b5-b20c-8f8590be059c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87b3125b-6cb1-41ca-a237-44e2f5f49b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0f5591-c6d2-45fd-bfa6-4d54579ac5a6",
        "cursor": {
          "ref": "1c426736-0ff1-45f0-834a-691a1e98e957",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1a4266da-3d07-4fcd-b7ec-88d374aae34d"
        },
        "item": {
          "id": "de0f5591-c6d2-45fd-bfa6-4d54579ac5a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8efefb71-ed34-433f-bf5a-c1d9be830987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a867de-09d6-4afa-8ff3-a9e9ccf5a227",
        "cursor": {
          "ref": "7c28e956-adb0-4659-bc35-312a5dc5b7a6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "62d74a4d-c3f7-4a26-ba8a-c1665cdb339c"
        },
        "item": {
          "id": "d8a867de-09d6-4afa-8ff3-a9e9ccf5a227",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e6907f56-5422-47f2-92b4-78fe8b86557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ac3f37-9e47-4851-a979-02f1b6a40c2f",
        "cursor": {
          "ref": "343f6851-1f44-4044-9cdf-3cd865fb60e1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b331090d-4732-4a57-99b5-a106e22d9003"
        },
        "item": {
          "id": "56ac3f37-9e47-4851-a979-02f1b6a40c2f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3b02719a-ec72-4e62-96f6-43abf688d63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf1f155-b812-4d32-939d-2bb1b62f2064",
        "cursor": {
          "ref": "8dd343e4-f295-42f5-ba2a-1d504f6f037d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d90aaa16-8caf-4511-95c6-eb67ac740d4b"
        },
        "item": {
          "id": "eaf1f155-b812-4d32-939d-2bb1b62f2064",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "40a4b109-3c8e-4698-bab0-14c7d03b335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a127a76-2e28-46a4-9ad1-89661a874926",
        "cursor": {
          "ref": "28d26bd5-9ad9-4d11-94e0-aeb90c28f486",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "afdd4d66-f9a1-4569-bc35-331f03772be9"
        },
        "item": {
          "id": "0a127a76-2e28-46a4-9ad1-89661a874926",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a69e9ff0-9ce2-43c4-8298-73cdd5a217c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44c119-fde7-4d1d-98be-f80c49c85b34",
        "cursor": {
          "ref": "c705a5bf-cb6e-448f-9502-248abc3af638",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d222818-65b2-4bad-a0a6-6953e0d3c61f"
        },
        "item": {
          "id": "ba44c119-fde7-4d1d-98be-f80c49c85b34",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d98108c0-2b02-43ad-ae52-0b377c89382f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798c5d8-7291-4819-858f-c75a8d7f9c2c",
        "cursor": {
          "ref": "def7fb17-1bfe-4814-a0f1-504627b3c72d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "486ec7a1-a758-467a-9f2c-2a8158447399"
        },
        "item": {
          "id": "e798c5d8-7291-4819-858f-c75a8d7f9c2c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0e67e43b-00ba-4dc6-a0be-053a1491a026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1fb549-2302-4373-ae51-809c9f5743ab",
        "cursor": {
          "ref": "4c9ffaea-b95e-4214-90fe-2454c4af526f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0b122708-764f-47f2-a00c-14d81cb681fb"
        },
        "item": {
          "id": "ed1fb549-2302-4373-ae51-809c9f5743ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f501c80-f988-446f-81b6-96514e640b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283d8885-c89b-4118-a71e-3a23ea4f4802",
        "cursor": {
          "ref": "0949c860-6472-4a64-9b17-22730fd022a5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ade42d00-a7a8-4215-9b75-12c5ba84c6c4"
        },
        "item": {
          "id": "283d8885-c89b-4118-a71e-3a23ea4f4802",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e3624009-8f09-4f0d-a9ce-87197633588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3643a44-4021-4156-b706-aab6bd80a373",
        "cursor": {
          "ref": "040b95bc-294e-4c6d-bc1a-aaa4910093ac",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aaba69a9-490e-4e95-84eb-c1b7c988a009"
        },
        "item": {
          "id": "f3643a44-4021-4156-b706-aab6bd80a373",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f590eb0e-3cbf-4f6c-941e-6d92869592ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a7ec82-d35f-4a40-abe7-bd830619e022",
        "cursor": {
          "ref": "7cad4055-c4f1-4d77-8dc3-e93b42e370dc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02d59460-5d96-42a8-9c7b-2eb3f5206fbb"
        },
        "item": {
          "id": "93a7ec82-d35f-4a40-abe7-bd830619e022",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fdebadd4-c488-4d9e-a0a2-997e6f47bf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bfb6e9-0213-461a-bc1a-b369e900c473",
        "cursor": {
          "ref": "ace8fde3-11de-41dd-94f1-6ed2f5b99a3a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bdfc46b0-116c-4863-ba5e-69b9360cca23"
        },
        "item": {
          "id": "52bfb6e9-0213-461a-bc1a-b369e900c473",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b803a484-c838-4649-a043-8c61cf861818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e326f8-d220-4004-8f33-5eb9dde23151",
        "cursor": {
          "ref": "3c92dd2a-9da7-413e-9001-7d1b01cbaf78",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e008a852-ef1f-416b-871a-a993753ad7e7"
        },
        "item": {
          "id": "f6e326f8-d220-4004-8f33-5eb9dde23151",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bb9e5979-a7c3-46a7-928c-4666c30b592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d90d06-c4f8-4923-a7a5-f010bf608d57",
        "cursor": {
          "ref": "af3656ce-fa73-439d-972b-b77aa219ebb1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7a976381-2bc6-4079-acf1-aad438cdd84a"
        },
        "item": {
          "id": "97d90d06-c4f8-4923-a7a5-f010bf608d57",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a1d3093d-1772-429f-ae9a-c854466af245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e680e6-fa5f-4014-b010-fd1272e36cbd",
        "cursor": {
          "ref": "2a0b901c-f10d-42d9-bcf9-20a6cffe9ab5",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ff3eb365-67c9-411f-a6f0-0f5aa967cb99"
        },
        "item": {
          "id": "92e680e6-fa5f-4014-b010-fd1272e36cbd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14bab37f-e774-4477-9c6c-fa08193dc3d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d181ffa2-6868-4c7d-9f6e-8bf293120137",
        "cursor": {
          "ref": "b630608a-016a-41af-94a1-579fa835f328",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "55729b84-c2fb-434c-a803-cc315220323f"
        },
        "item": {
          "id": "d181ffa2-6868-4c7d-9f6e-8bf293120137",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c397876a-a6dc-4079-a4a3-7ee870a997cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6946798-85da-431c-acff-71f39a9a2c1a",
        "cursor": {
          "ref": "51d02828-9253-4397-bbb8-b99e2854e6de",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e669bc24-ae04-4ff7-8a3d-dc3bc7c8027f"
        },
        "item": {
          "id": "d6946798-85da-431c-acff-71f39a9a2c1a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5424393-d609-4eab-b370-3d64b56a3151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26d7bd-f11a-4f47-b0f0-c6db2271db21",
        "cursor": {
          "ref": "59b56077-c003-4cd8-ba77-d9e137781512",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b24d64a9-7772-4b3f-a1cb-0424f4061ff2"
        },
        "item": {
          "id": "7e26d7bd-f11a-4f47-b0f0-c6db2271db21",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7655481b-2795-431a-9d19-efdd1ff90dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fa1194-464a-4067-bd6c-b156b5f495f7",
        "cursor": {
          "ref": "da63cfc5-ed91-4d3d-9f09-0f694f5030f1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2c124c30-3fe4-4cee-a947-0f7848a60599"
        },
        "item": {
          "id": "21fa1194-464a-4067-bd6c-b156b5f495f7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21f4b842-fd8a-479f-8c35-c045cc57cc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bb8203-4c3e-4bb0-a8c1-cc15dfbba9e2",
        "cursor": {
          "ref": "a38204f2-b354-473a-8c50-98cd56f3c4ad",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d3e6615-ebaa-43f6-af65-309593ac2340"
        },
        "item": {
          "id": "95bb8203-4c3e-4bb0-a8c1-cc15dfbba9e2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7332d8f-3597-4df5-92bb-f5bbc9608e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b0ee5-0510-45b7-baa0-962b36b1923f",
        "cursor": {
          "ref": "f79eac3e-926a-4e6e-8315-04d3eff4d354",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "035e3354-173b-48a1-8a7e-0514f257179d"
        },
        "item": {
          "id": "501b0ee5-0510-45b7-baa0-962b36b1923f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "68d087be-c7e1-49ca-8523-380b4f33b8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46924d9b-9762-4fbe-bf99-898a16392e55",
        "cursor": {
          "ref": "92d1e3cd-e7ba-4c85-9cab-7db27b183c7a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ca7a9724-df52-4033-99ff-d0ecfc77f051"
        },
        "item": {
          "id": "46924d9b-9762-4fbe-bf99-898a16392e55",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd9ed0b0-ee8a-44d0-a91f-c1f5b20c5d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269d3b97-7e3a-43e0-93b6-07beced47263",
        "cursor": {
          "ref": "5c46d57a-3a34-4af6-b7c5-f0e7e83b75ef",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "846951c1-316e-499b-84f9-f799b0dba442"
        },
        "item": {
          "id": "269d3b97-7e3a-43e0-93b6-07beced47263",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "23a324e6-0791-4261-880b-9a96890a503a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931399b-4c3e-4ab9-ba9e-46248ddf3beb",
        "cursor": {
          "ref": "67bd81f7-ad0a-4d1e-97d2-a369c2c277d4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "41540bca-069e-458b-9cd0-93801e4ae350"
        },
        "item": {
          "id": "6931399b-4c3e-4ab9-ba9e-46248ddf3beb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3dba4965-e003-4a1b-95f7-c3822224e8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6db24a-641d-40d5-a52f-0e74ce0b713c",
        "cursor": {
          "ref": "13dfbf5c-3695-4f53-835f-5a11fd774e15",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1904f70f-5a6a-466b-b6c0-dba58805479a"
        },
        "item": {
          "id": "ab6db24a-641d-40d5-a52f-0e74ce0b713c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0c34631b-c282-441f-95e9-bfbee14d2407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd3e90c-4243-4927-8600-b07e9b866283",
        "cursor": {
          "ref": "2cf010f0-959d-4f41-823b-266c5545e0ad",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "02732e93-f1f2-4b05-9b96-14480e6240a1"
        },
        "item": {
          "id": "acd3e90c-4243-4927-8600-b07e9b866283",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "11be9747-b8cf-4cfc-88ce-a1fbf908eca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2d4a9b-279c-4b15-9c1b-151e5755ac95",
        "cursor": {
          "ref": "4eb0e412-74b2-4ec3-a179-cb1432ca9003",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "56f21ab9-90f7-48be-bf72-d9129ee1a674"
        },
        "item": {
          "id": "7b2d4a9b-279c-4b15-9c1b-151e5755ac95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec285f16-f87e-4127-93c4-e6ea9ea29320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161dbf0-3135-4ba3-9fa6-a08b3d837b34",
        "cursor": {
          "ref": "f5fe032a-0a05-45df-abe1-c5da35343aab",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eb0c3451-2936-45e4-af9a-5f4b9ebb5989"
        },
        "item": {
          "id": "b161dbf0-3135-4ba3-9fa6-a08b3d837b34",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "06e2bffc-2095-4b3a-9d3a-1d44866f48cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3df88d4-e706-482f-bf51-c4cbe8950db0",
        "cursor": {
          "ref": "4209f413-6ff0-4a3a-99cb-0a17a11f94d3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c749e1bf-f19f-4e25-b057-e15a7f65440c"
        },
        "item": {
          "id": "d3df88d4-e706-482f-bf51-c4cbe8950db0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bed01d2d-4ae5-4dee-9091-a12cdf37cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a42a26-7b8e-48e8-9e17-4dde760cccb5",
        "cursor": {
          "ref": "033af8c3-586a-4602-a773-eafd6511f8b2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0966a126-07c6-4152-a869-70712f418832"
        },
        "item": {
          "id": "b7a42a26-7b8e-48e8-9e17-4dde760cccb5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a81b80a8-4560-4e42-a38d-614487f6a051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d719164-4619-43c5-9042-387636af14c1",
        "cursor": {
          "ref": "4befb1f5-8e75-474b-959c-46de396f7615",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4ca232d5-9284-4b3e-92da-052342fac42e"
        },
        "item": {
          "id": "1d719164-4619-43c5-9042-387636af14c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "68de7259-5347-4ab9-bb1f-374b47dccce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eb03d1-962b-4400-8041-b5039fde3fa6",
        "cursor": {
          "ref": "b1057173-f5f0-4516-843c-006803d1f44e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fabdab78-f0bb-425e-8d57-3b485854515e"
        },
        "item": {
          "id": "52eb03d1-962b-4400-8041-b5039fde3fa6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6fbc170f-36ca-49cd-b936-e12d8eedb5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45728b2-7156-42e4-bab9-c17a0c74f861",
        "cursor": {
          "ref": "e2148ff3-9480-4b51-8520-fb7c9b9cb0e4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eafed931-c49b-47af-8b15-fee5c1da0e57"
        },
        "item": {
          "id": "b45728b2-7156-42e4-bab9-c17a0c74f861",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8211a8e3-5abd-4a7e-a9c4-f7fe3911bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d4f107-b69b-4c84-a71f-a443783a101b",
        "cursor": {
          "ref": "ae7f39b7-fca0-41b4-b938-f496e2bae026",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2a5511f4-d41c-469c-9113-2f90ae0430da"
        },
        "item": {
          "id": "13d4f107-b69b-4c84-a71f-a443783a101b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bfe2d0ac-3f53-4c24-8b1b-b4f505b29100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27f591-c0d4-4a7f-b71a-efbbbb1fb152",
        "cursor": {
          "ref": "7d45c5e5-d122-4f3c-81d1-559a98c0e7a5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6894f91-636e-4f7c-b260-047dc6e9228f"
        },
        "item": {
          "id": "7e27f591-c0d4-4a7f-b71a-efbbbb1fb152",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fb549a43-2ee8-42a9-b996-abe414bab278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fea177-0cbd-4e90-874b-47d0c2d5f214",
        "cursor": {
          "ref": "f98ac40a-0f87-4307-af4f-684dea137f1c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f7553f77-554f-4695-a8c7-2969aa7f894b"
        },
        "item": {
          "id": "54fea177-0cbd-4e90-874b-47d0c2d5f214",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8d49d19d-bac7-4e52-8613-0031f74573b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f55fc-287e-41eb-88e5-0f21abc148a4",
        "cursor": {
          "ref": "f60dc530-75c3-4b58-8d71-12e80551c573",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8fb0bd06-16a9-4167-8db3-ddc9bfd0e094"
        },
        "item": {
          "id": "640f55fc-287e-41eb-88e5-0f21abc148a4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3912fef4-cdd0-4047-8a02-fc8381e11bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1f56a-b805-4707-add6-eac3385c02d8",
        "cursor": {
          "ref": "8dc02c81-202a-43fa-9f8c-798f9d71ac3f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "524ab13e-3ca3-40d3-bde3-6306d716b09c"
        },
        "item": {
          "id": "b4f1f56a-b805-4707-add6-eac3385c02d8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "88c6ce45-e2ec-469a-9a0d-7cd425f99dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e9b6a0-1090-4bb3-bd10-35192bc6591b",
        "cursor": {
          "ref": "8eaf7bc3-1559-4925-a652-4599280f8062",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "16a80f29-c799-41d1-8f4d-5b3c6af1fa84"
        },
        "item": {
          "id": "a4e9b6a0-1090-4bb3-bd10-35192bc6591b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b3df328-1150-4185-a4b0-8b0717071be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a0dc6-6ff3-4247-8c4d-00a7a1eeb28a",
        "cursor": {
          "ref": "3e72bd72-fa61-4570-9fc1-b9b61f446602",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1dcef963-c9cb-48f5-a4e2-85207e357600"
        },
        "item": {
          "id": "f06a0dc6-6ff3-4247-8c4d-00a7a1eeb28a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f30ae19f-996f-4dc1-8a8a-6c3aa7a83a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002047a-9ea2-40a0-827c-cf7691259e1b",
        "cursor": {
          "ref": "7f810484-a34a-4f32-b14e-94f460034f7f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f603325c-169b-48a4-800e-adcb1921eb0f"
        },
        "item": {
          "id": "9002047a-9ea2-40a0-827c-cf7691259e1b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "315ebfaa-2630-4399-a960-0b2082b2d57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea461a85-6d61-4de2-9991-5b5cee141c73",
        "cursor": {
          "ref": "fa7386d7-39ae-4b47-9b5e-170400cce7eb",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a94b38b-ca28-4019-a727-fc55beb3132d"
        },
        "item": {
          "id": "ea461a85-6d61-4de2-9991-5b5cee141c73",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc7d5758-ef71-497d-9b5e-6dd92e6379a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ab9355-0bea-4dab-aa2a-06ff4500cfaa",
        "cursor": {
          "ref": "e1e015cb-5a29-4a21-b2f6-8b679b480676",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cf10b992-5aa9-484c-9c50-0d9de192ba82"
        },
        "item": {
          "id": "30ab9355-0bea-4dab-aa2a-06ff4500cfaa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f72ad47c-a8e1-4194-980d-03d6c76de27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46256b0b-523f-4d8c-a556-174d33adc978",
        "cursor": {
          "ref": "169582ac-aad9-4682-9394-76b6b4384a97",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc8383b6-0fc9-4d8e-88b4-5fdbf881e654"
        },
        "item": {
          "id": "46256b0b-523f-4d8c-a556-174d33adc978",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3209256a-3270-4cb3-be03-25cc70312a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e2d15-61f7-4cf0-acb3-b84da9037640",
        "cursor": {
          "ref": "f9550508-d4b7-44c6-a8b1-6f344651d91e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ed0cc08a-786f-43da-801e-11c9af448749"
        },
        "item": {
          "id": "e59e2d15-61f7-4cf0-acb3-b84da9037640",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "78163fe9-b31a-445d-a8ed-f4654e6f338e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f0400-08bd-4526-b060-ceb254e2056a",
        "cursor": {
          "ref": "64231f60-5924-44cd-aad4-1cd4c147368b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2b48e677-02be-47f8-8df9-3a73249f4f2f"
        },
        "item": {
          "id": "ad9f0400-08bd-4526-b060-ceb254e2056a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "61560a83-e006-4078-9f43-b24d4803e523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166f692-71cb-44ec-a78a-dd9d65e8df72",
        "cursor": {
          "ref": "38220b97-9033-493b-98d5-18f5efbc08a3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "406bab81-e1a3-45e3-b402-9f684c707de4"
        },
        "item": {
          "id": "e166f692-71cb-44ec-a78a-dd9d65e8df72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c2f3c7a6-c79e-4e6f-a7e8-7c80fcc8b4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614935d5-f5dc-4d67-9d99-77f6d3da83e7",
        "cursor": {
          "ref": "ad02b64a-562f-4a2c-b000-68b1a62a6296",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "59664993-12fd-42d4-a297-234c800263fb"
        },
        "item": {
          "id": "614935d5-f5dc-4d67-9d99-77f6d3da83e7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6a84e68-d239-4cc0-8802-2497e55a1251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2ae5d0-5f47-4bc6-9340-f7cdcbfa865a",
        "cursor": {
          "ref": "8abca4b9-c996-49aa-b10a-cd8626861621",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19e61b8c-5174-49c0-a04a-4f36b96cd57c"
        },
        "item": {
          "id": "7c2ae5d0-5f47-4bc6-9340-f7cdcbfa865a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f503b8bf-bece-4a01-b6b1-841b7fc8f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8378e474-0986-4b12-8ed5-54ff965ae6d8",
        "cursor": {
          "ref": "f61d1009-6e5e-437c-9e92-0e657082e081",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a29d8746-4059-435c-9f85-7a307ceef812"
        },
        "item": {
          "id": "8378e474-0986-4b12-8ed5-54ff965ae6d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "642d5991-ef37-4251-bb03-50787022938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac5909-c7a3-44dd-992b-4eb1ff9b9c61",
        "cursor": {
          "ref": "036ef6a8-e02f-4935-af4b-ca45ead3853d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1c057c99-6132-4c92-a3b7-8d5c1714cb02"
        },
        "item": {
          "id": "80ac5909-c7a3-44dd-992b-4eb1ff9b9c61",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b32fb6e1-8640-447f-aa70-800f6bef326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483a0bb-e3c2-4089-9ab3-1ad8539ced41",
        "cursor": {
          "ref": "31fa6e3c-4b12-499f-9886-55f959b312bd",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b207c170-c690-4e9f-902a-11e534e4b6f9"
        },
        "item": {
          "id": "0483a0bb-e3c2-4089-9ab3-1ad8539ced41",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "702a1d6d-ca92-4dd8-ac78-5dacd61a4241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42809640-a921-43a3-93f2-c8973c58d62a",
        "cursor": {
          "ref": "d3f17d69-acda-4113-8770-f5db7fb9e499",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d55a2c53-f61a-4ba0-bb0b-c95ecbf2953c"
        },
        "item": {
          "id": "42809640-a921-43a3-93f2-c8973c58d62a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa8c12c7-fa4a-4db0-94f7-99205b64a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6516ca05-d5ec-4330-a366-7450acc6a63c",
        "cursor": {
          "ref": "37272ac5-8f94-4a2a-aa98-e6948b7ef6c4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e6572630-fa83-45ee-a661-749596521c22"
        },
        "item": {
          "id": "6516ca05-d5ec-4330-a366-7450acc6a63c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "514e123b-1a22-4a08-ba11-f84055cd90dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a801e93-329f-413b-b067-a6a78fa34528",
        "cursor": {
          "ref": "d05628b1-4d19-4351-8e1b-7742e28cc73d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ec67cebd-2612-4165-adb0-67d5db6f5dab"
        },
        "item": {
          "id": "2a801e93-329f-413b-b067-a6a78fa34528",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1c4e83e4-d4e2-431d-842b-676eca208c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77e920-bcdc-4d5a-bee4-56a5c8474a16",
        "cursor": {
          "ref": "e5a5e2b7-1a2e-4567-8f3d-c3f90d04d360",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf44c1b0-3c7f-4045-90d3-f5872ce12db7"
        },
        "item": {
          "id": "bb77e920-bcdc-4d5a-bee4-56a5c8474a16",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a96c49f-3407-4c8a-98c0-17798865f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3273a9-cdbe-45ae-814a-ea32a146cbec",
        "cursor": {
          "ref": "496dc8c4-c88a-411c-be59-952d16864a24",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b80fe8bd-f6e8-4d1b-8dfe-c51d5738a9b8"
        },
        "item": {
          "id": "6d3273a9-cdbe-45ae-814a-ea32a146cbec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5cdb60d8-af91-476d-a118-0d283367492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100551cc-888b-4c64-a1e6-b443b5c2b6b4",
        "cursor": {
          "ref": "b4ebe20c-941f-4e9c-92dd-a19a7f77de95",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "55fe030a-a789-4991-be30-544aec0bcad3"
        },
        "item": {
          "id": "100551cc-888b-4c64-a1e6-b443b5c2b6b4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9fa28126-2850-4dc1-aad8-8720e73b73be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3d563b-be0f-4c55-b315-2b7107ff32bf",
        "cursor": {
          "ref": "c79ca7dd-879d-4960-8066-bd18fc300d71",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b49ce255-a204-43cb-9f66-3f80d9ace664"
        },
        "item": {
          "id": "fc3d563b-be0f-4c55-b315-2b7107ff32bf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c95a1030-730e-44f9-ac03-4acbb4ae332a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f428f878-efb2-4b84-83cf-5d85f97a9918",
        "cursor": {
          "ref": "36b133f1-3cfc-432c-8cf1-690f62caa33b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "280c792c-d9ff-4b39-92bf-bb09a55b0660"
        },
        "item": {
          "id": "f428f878-efb2-4b84-83cf-5d85f97a9918",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b19e7e48-dfa8-4497-b808-97531089aec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69210752-d543-4f28-86bf-a2417f260a0e",
        "cursor": {
          "ref": "1ae86218-22d2-4155-8c0b-f93e697e32b5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b37af07f-d7b6-4ffa-9a6c-e6e29e8d3497"
        },
        "item": {
          "id": "69210752-d543-4f28-86bf-a2417f260a0e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "66986bf1-46f2-43d7-b12a-a7c78dddb092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e6141b-a5fe-4412-98eb-425fd50d1d58",
        "cursor": {
          "ref": "591201ff-36ca-4cb0-a2fa-6aa065a58fee",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af15cfea-5aa9-41f7-a45d-962771e4de84"
        },
        "item": {
          "id": "13e6141b-a5fe-4412-98eb-425fd50d1d58",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2ab64297-79b6-4f41-baee-75c03c1f16c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c1cc86-5d48-4c35-90c5-3315848d4a8d",
        "cursor": {
          "ref": "a2227478-18e4-4d94-9bd4-96b5d07f8b4a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0b109c76-2d59-42ce-8adc-23593c64c013"
        },
        "item": {
          "id": "85c1cc86-5d48-4c35-90c5-3315848d4a8d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1e10d425-e73f-461d-bdfc-3ca55c2932ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41035a52-ba11-4db7-a216-968db81f23ad",
        "cursor": {
          "ref": "c326ec00-6dbb-4210-82a6-741dbc6f0926",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "677aa93c-7d5b-46a2-8560-027022bd87f1"
        },
        "item": {
          "id": "41035a52-ba11-4db7-a216-968db81f23ad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cbc676de-88d8-4707-a85f-4303e7f5c9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573cafb9-36a5-4891-8ac8-69e81ff2e144",
        "cursor": {
          "ref": "7b39426d-c736-4789-ae06-b0acb73ace0e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bb99bd49-8693-4359-83e4-b3746117d461"
        },
        "item": {
          "id": "573cafb9-36a5-4891-8ac8-69e81ff2e144",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e3c5a349-ed52-44bf-afd4-0040a1461a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9137863a-395a-490d-99f7-0649ecfecb4f",
        "cursor": {
          "ref": "8803c8b4-e7e2-4424-ad75-cc6627530bda",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a64b590a-f7d2-4236-986b-2558c24ead76"
        },
        "item": {
          "id": "9137863a-395a-490d-99f7-0649ecfecb4f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eed360bd-bdab-4bfb-965b-a4813352b82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85d3d1a-3ea7-4aea-8136-85b6ef6b03f7",
        "cursor": {
          "ref": "bd9c2b59-ef62-45d7-8daf-0591b241e587",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dda26a0f-8391-4153-9be7-a700950c700a"
        },
        "item": {
          "id": "b85d3d1a-3ea7-4aea-8136-85b6ef6b03f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "742c159a-1a78-4581-b724-c6f5f3ee2f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb4aa29-5724-458f-852e-8ff2af42fd31",
        "cursor": {
          "ref": "7b325681-9eb5-4faf-857a-e59fd84c6588",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b9155975-342d-4d42-a241-ea4779b1d4e4"
        },
        "item": {
          "id": "bcb4aa29-5724-458f-852e-8ff2af42fd31",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "61918b72-46d8-4f3b-a504-46f2a328059b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad701c58-667b-4597-9db0-6b5cda2a91c9",
        "cursor": {
          "ref": "700fddc0-a815-4081-b09d-f647bc7fa415",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4ce82b19-bf5c-4881-b29e-669ab3104d03"
        },
        "item": {
          "id": "ad701c58-667b-4597-9db0-6b5cda2a91c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c90053bb-685d-4f10-8e81-ee6318e8f0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866cd6c6-a9e7-4f08-bdc2-f4c1a40ae2ff",
        "cursor": {
          "ref": "6e6196ba-d2a0-4ccc-ad6d-98f160d33cb1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "394e62e9-9861-4115-b66a-56ca5eb697c9"
        },
        "item": {
          "id": "866cd6c6-a9e7-4f08-bdc2-f4c1a40ae2ff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "435bb851-2862-42bb-9297-dc6725e438bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbe7504-4eef-4d8a-900d-dda1edd973b4",
        "cursor": {
          "ref": "7b69818b-0611-42e5-b1f2-ade703a61643",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "684d2a33-0991-41ab-a108-4f590a75c6d8"
        },
        "item": {
          "id": "5fbe7504-4eef-4d8a-900d-dda1edd973b4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ee2c17b-6c7f-4f85-81fd-42612adec40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1937a32f-7cdf-4620-aacd-1a3a4d7a8007",
        "cursor": {
          "ref": "40e0b44d-6451-4859-8be3-2a9fa5b34375",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "22e01f08-45a4-40cf-97ff-b101d256b156"
        },
        "item": {
          "id": "1937a32f-7cdf-4620-aacd-1a3a4d7a8007",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "86b146a7-22f5-47c6-9486-106e65648201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf926de0-c4e4-40ce-91e9-48f5e8d91216",
        "cursor": {
          "ref": "13b47ce2-dfd4-4a1d-a5c9-8b34d360054e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8f984e71-c7cc-4623-9cc8-8b0b1c5e6093"
        },
        "item": {
          "id": "bf926de0-c4e4-40ce-91e9-48f5e8d91216",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "72eeb904-1d91-4def-a5ea-8b4255746ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a7eacf-c509-49d7-8016-2b539a1ecd99",
        "cursor": {
          "ref": "9ad0fb7a-9e9e-4407-b247-0408a74d3479",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bd7f931e-6417-4e9b-a22d-9bd393858a36"
        },
        "item": {
          "id": "c9a7eacf-c509-49d7-8016-2b539a1ecd99",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0382b21f-dc8f-47be-ab80-56790e172620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92640fc-9905-4c0f-935e-1c737a515f28",
        "cursor": {
          "ref": "13ad68da-4ad2-49f2-a407-7b3e4a5efa64",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "32995950-91ea-4e81-a45c-f89e25d232c9"
        },
        "item": {
          "id": "e92640fc-9905-4c0f-935e-1c737a515f28",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "22377da8-d088-4a2c-8c25-8fe6556cf970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f73407-230c-46f0-954d-71656869be1a",
        "cursor": {
          "ref": "9a3acf24-9ba4-4aac-9c6f-62373556c806",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "128ef9b1-47e7-4606-ad15-58d1bb6e5b28"
        },
        "item": {
          "id": "94f73407-230c-46f0-954d-71656869be1a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "630a00c0-ed81-48f0-88e7-849cc66430a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38071f0-646c-42c0-ac6a-43de2dcd67ee",
        "cursor": {
          "ref": "c3df7066-ae30-496b-8df3-ae14b145efda",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b41313d-e39f-49ab-aace-29531d85dfe5"
        },
        "item": {
          "id": "b38071f0-646c-42c0-ac6a-43de2dcd67ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cd76cba4-f57a-4282-b866-848335bc4c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda00ac6-760b-46af-81e8-cc613312ea30",
        "cursor": {
          "ref": "b40263bb-b43f-46d6-8dd1-ea0feeab0da1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a67b63de-5edc-4095-9a99-d128fa824479"
        },
        "item": {
          "id": "fda00ac6-760b-46af-81e8-cc613312ea30",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ac0757c1-297d-4d09-8b1b-8790ddefe71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d242c021-b747-475d-b259-6a81b0b0a646",
        "cursor": {
          "ref": "8ba48fe1-8fe4-4637-abb3-ac563a4d84f9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2902b2ba-fd12-49f3-bed2-ba9fe9f7a592"
        },
        "item": {
          "id": "d242c021-b747-475d-b259-6a81b0b0a646",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "33c213c5-1b33-4110-a878-e06a62a7761b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690e24b-c9c3-4361-9fce-e0418f0188b2",
        "cursor": {
          "ref": "4f14d782-d738-40cd-8d8d-90a65aaaaa64",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "053d5be7-05ec-4de9-b3e2-c32aecdc1ef8"
        },
        "item": {
          "id": "0690e24b-c9c3-4361-9fce-e0418f0188b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "07d02f70-ca88-4a6b-814e-55f12319820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926147a3-9a8a-4b35-8f42-bf4e55887ddf",
        "cursor": {
          "ref": "5477e5a0-193a-485c-a7a8-f01f25e9b12b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a5865bdc-24f2-498a-91fe-d8e1ab11ebd8"
        },
        "item": {
          "id": "926147a3-9a8a-4b35-8f42-bf4e55887ddf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "55a10790-afe7-4fb3-9e67-e953d1ac56d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b7622-0fee-40d3-a45e-9b69f3508a3a",
        "cursor": {
          "ref": "40539716-1b2a-496e-afe2-e37ed315e58b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d7f303f0-8eb7-4876-8318-014d6beea09e"
        },
        "item": {
          "id": "5e6b7622-0fee-40d3-a45e-9b69f3508a3a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "380d28fc-f36c-45da-955b-34dfb6e41167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6927fbdd-2f90-4ef3-ad65-bfba1bac5d57",
        "cursor": {
          "ref": "8d61ab29-aae1-4121-9ec5-89942e8eb84e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "638a1236-f128-4170-8788-611ca4bc7f0f"
        },
        "item": {
          "id": "6927fbdd-2f90-4ef3-ad65-bfba1bac5d57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "594f55fd-be58-4b97-8435-6426d62b3fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ded66c3-e317-4d63-b7d4-58260f768c88",
        "cursor": {
          "ref": "651df3f5-ba65-4fe0-8919-975fce4a1129",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5f3a3941-6c41-4f8c-b2e2-77516591490a"
        },
        "item": {
          "id": "4ded66c3-e317-4d63-b7d4-58260f768c88",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "73bc086a-3b08-4220-bd1d-2767fc0b9301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265b4535-5811-4aaf-b8ba-63fcbb3d29cd",
        "cursor": {
          "ref": "0479a2fa-6411-4391-aeeb-6ec1c9073e81",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1d8d396b-15ba-47e5-853a-0e9415d186e3"
        },
        "item": {
          "id": "265b4535-5811-4aaf-b8ba-63fcbb3d29cd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e7c6017-3683-49c4-a5f5-b8c982461c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763572c9-ec49-4ab0-aadc-1b7ddee4da75",
        "cursor": {
          "ref": "7455b8f5-f583-4009-b2b1-845381d7ce03",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e712e5b0-5966-4ea8-9903-a83ded14bd78"
        },
        "item": {
          "id": "763572c9-ec49-4ab0-aadc-1b7ddee4da75",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a7c3c4a7-945c-4a27-abae-5e89b4bbfa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e7a8a-da9a-4a31-b618-bc798236959c",
        "cursor": {
          "ref": "ed91cc57-990e-4214-b867-927195c96e31",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7fc87899-5229-4897-8562-872619d34e82"
        },
        "item": {
          "id": "1f6e7a8a-da9a-4a31-b618-bc798236959c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "602a8b63-88f5-4f10-b403-ea5682fefdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d29c3-fb89-4af4-a22d-7a6c3cdacf1f",
        "cursor": {
          "ref": "d81697ce-0e5c-42a4-9e62-583c5669ec16",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67c4256e-d1cc-4110-b7d5-50eb4d100222"
        },
        "item": {
          "id": "267d29c3-fb89-4af4-a22d-7a6c3cdacf1f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9047fbf7-7929-48d2-81db-12ca0d34ab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2365aa6e-4add-4ac9-af4c-26aeb102b122",
        "cursor": {
          "ref": "0a6aa48b-8e92-41f3-81b5-cadb39bf21be",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7e2cac69-8ab8-4a96-8138-bb491aa1c20c"
        },
        "item": {
          "id": "2365aa6e-4add-4ac9-af4c-26aeb102b122",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ff62dda9-a68a-4ece-a2c3-c45f85c0343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf945d1a-073e-4f8f-9d4e-a4f9d3a3b474",
        "cursor": {
          "ref": "9f66f613-484f-4bbc-95df-ffe87c643665",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9a3202cd-e448-427f-a382-3e632d4af757"
        },
        "item": {
          "id": "bf945d1a-073e-4f8f-9d4e-a4f9d3a3b474",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1e733ef1-bca4-4148-bb74-5d5c1b577bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af425fbd-0c6f-4a2d-b109-030ae15910e3",
        "cursor": {
          "ref": "3eacd781-caba-48ea-9e67-35c0e7085d88",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d5c1df62-46cb-41ed-92ea-a8231ed65bc6"
        },
        "item": {
          "id": "af425fbd-0c6f-4a2d-b109-030ae15910e3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a2316ed-0de3-4ffb-a198-5e139cefead3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a997b9e-9a47-4816-b8e9-f81fd5688132",
        "cursor": {
          "ref": "d0745a9e-a73d-45bb-8a83-8627463b9081",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d7d4375e-dab7-4b87-b20b-7c4000aee22a"
        },
        "item": {
          "id": "4a997b9e-9a47-4816-b8e9-f81fd5688132",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e2eb65f4-db98-4f76-84b1-e0cfdfc5ebb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834cf3fb-6a0f-4d2b-bd25-6d5eabfce7be",
        "cursor": {
          "ref": "af2697ed-d374-4534-b395-fb02287c404e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "646757a6-b27e-48e7-b8a8-7eb829dbab71"
        },
        "item": {
          "id": "834cf3fb-6a0f-4d2b-bd25-6d5eabfce7be",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0eb274d8-37d5-4f3b-8b71-1f2ac4b1b79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd6df3b-5fd1-49b0-86f0-666a01d343f7",
        "cursor": {
          "ref": "374996c5-1785-42c0-a113-bf35ed50a45b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c06f20ed-45e0-4d33-9be7-f3e8310a9aac"
        },
        "item": {
          "id": "cdd6df3b-5fd1-49b0-86f0-666a01d343f7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d0de5083-4c0a-4286-8244-727c85812bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00145a07-0936-42cd-ab4b-bef26b2cfd41",
        "cursor": {
          "ref": "ccda320f-d851-450f-8aca-0826ec63faac",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f944e2c2-c2f3-4f85-9f5b-b992096dcaa2"
        },
        "item": {
          "id": "00145a07-0936-42cd-ab4b-bef26b2cfd41",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2ee55c9d-c0fc-49a8-b3cd-4b79116b0373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b66961-07cd-4dc2-86a6-0fc951039792",
        "cursor": {
          "ref": "a27800e4-14ac-4a62-8b09-6e1437a78b6f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6c4deced-eb92-436a-8fc8-9c4381a02cc6"
        },
        "item": {
          "id": "e7b66961-07cd-4dc2-86a6-0fc951039792",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e4d09912-f3b0-4708-8492-4c5ac4a4f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4bf13b-7338-47df-b40a-c4a2fe0dda5e",
        "cursor": {
          "ref": "107eff5d-0604-41af-b8a8-d07fd4532819",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7d945994-3f1c-44a7-9915-955440cc83f0"
        },
        "item": {
          "id": "3a4bf13b-7338-47df-b40a-c4a2fe0dda5e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f0d30feb-8268-43c7-b92c-8de90768f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f90fb87-6a92-4c93-878f-d6051ab1987a",
        "cursor": {
          "ref": "bcebaebb-bf53-4e05-a062-9ba7dfc80ad3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "26416ebf-4bec-46b4-80c3-128362626d1e"
        },
        "item": {
          "id": "2f90fb87-6a92-4c93-878f-d6051ab1987a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "891620a1-b16d-4322-bc43-772bdf9b2dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d15f2cb-b2d7-4263-942c-ba1be05a1957",
        "cursor": {
          "ref": "3fae93e2-0fec-4b57-b36c-730f1866fa58",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1160f21f-3d64-40a1-bff5-e6d7b0c88f03"
        },
        "item": {
          "id": "0d15f2cb-b2d7-4263-942c-ba1be05a1957",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c79fa7a5-5a03-4153-bded-6a600fcfcded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c61906-d8bd-4990-b42e-bc39aad56916",
        "cursor": {
          "ref": "ad356c61-db6b-43c0-83f6-3c168abf8495",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f9f73f70-2d74-494d-b928-004a3b028f23"
        },
        "item": {
          "id": "46c61906-d8bd-4990-b42e-bc39aad56916",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2995c3ea-e728-4cd3-ac10-d9993e846961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70736764-4fb4-48fa-abee-7ad6213f2a9b",
        "cursor": {
          "ref": "f69c4f7d-6898-4e7e-8df1-9bb4a91cbf38",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a6d96694-a9e6-482e-81be-2b97ff545faa"
        },
        "item": {
          "id": "70736764-4fb4-48fa-abee-7ad6213f2a9b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9593b108-b7e9-4b04-8f66-1f4db66c864b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3188641c-8b90-406d-9f40-c0c5cffc82bc",
        "cursor": {
          "ref": "2e21eaa5-1b2f-407a-ad78-0ce5f28dbf66",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "067cac39-3af5-47b0-ab7d-fc4fc2cf5fe6"
        },
        "item": {
          "id": "3188641c-8b90-406d-9f40-c0c5cffc82bc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "26e47072-536d-4535-89ca-bd1d920fcd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc25eb4-19ff-4bcd-92aa-01996cede8d2",
        "cursor": {
          "ref": "29a81248-823e-44a0-b45c-c67deb6394bb",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "98efb2c8-9fea-4c79-8631-16bb6c33d578"
        },
        "item": {
          "id": "cfc25eb4-19ff-4bcd-92aa-01996cede8d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4e49fff3-92e0-4eba-85ac-b1d57edf9430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aa126a-db5c-42a1-b501-fbe173cb7b6e",
        "cursor": {
          "ref": "950e9efc-681b-4a24-868b-cdd42ff83ca3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a7ac5c26-e2f6-4897-89a1-ddcf0dddfafc"
        },
        "item": {
          "id": "47aa126a-db5c-42a1-b501-fbe173cb7b6e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec593a92-3e83-4603-b76c-adc9aaacec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805bfffb-18e6-40c2-a840-3579638e4eda",
        "cursor": {
          "ref": "9f19a4af-3cb9-4c64-a0e2-62fb17d76356",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ab5c6487-9041-485b-abea-ab18fcc96188"
        },
        "item": {
          "id": "805bfffb-18e6-40c2-a840-3579638e4eda",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cbdddb0b-fd64-4976-81f6-308dd559b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e58385a-06c1-4ef6-9f56-a2f4e50193bd",
        "cursor": {
          "ref": "4b1c4e05-e49e-43e2-ae79-2e859a06687b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dd3f19a5-750c-4be7-bc01-b3b03f92ae7b"
        },
        "item": {
          "id": "6e58385a-06c1-4ef6-9f56-a2f4e50193bd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ef25bff6-dfcf-46d1-bc18-7e83a22ecff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ace92c-57b1-4d73-a861-23d89a06e573",
        "cursor": {
          "ref": "4d0a8e5b-43e8-44ee-8b4b-509700619501",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7e6a229f-2aa0-40fd-a08c-cc4bb98abb15"
        },
        "item": {
          "id": "c2ace92c-57b1-4d73-a861-23d89a06e573",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "33f53060-c09b-4f45-b7da-9332401f0995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cad7bf-e438-41d3-9301-13f89f9952b7",
        "cursor": {
          "ref": "fc268fe1-cffb-425c-b21b-9749c79073bb",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e69fa39c-65bb-4337-8c22-a1ecf7218daa"
        },
        "item": {
          "id": "85cad7bf-e438-41d3-9301-13f89f9952b7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "baa79617-67da-4395-8103-fb407a5a759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ce220-e313-467e-894e-f543d9056a3e",
        "cursor": {
          "ref": "178cd6f1-742c-4657-896c-9db536bec73f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a5cb7875-ab9c-4b66-8486-777eb3e122f9"
        },
        "item": {
          "id": "6f7ce220-e313-467e-894e-f543d9056a3e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "02b4172d-4aa6-4ff9-941a-3b60f7407c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02db0288-1f51-4668-9d76-96751d3d9fd5",
        "cursor": {
          "ref": "c7061d63-e033-47cb-b120-4868f5997d3a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "12ae8951-88ff-4abd-b2a8-8274b4092cec"
        },
        "item": {
          "id": "02db0288-1f51-4668-9d76-96751d3d9fd5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6bd016de-ae8d-4d78-8c6f-3157e32adc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c35089-9a30-4eb5-a9de-2e9b6c901564",
        "cursor": {
          "ref": "e8400246-1f4e-45bf-8132-e15e52fc5a84",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "39fb7120-9a20-4cc9-9ace-4e33ee6bc7da"
        },
        "item": {
          "id": "76c35089-9a30-4eb5-a9de-2e9b6c901564",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3fecb2b7-891e-43eb-9715-35680c3a4a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538065a4-ac0f-477f-acdc-13ac40ee31ee",
        "cursor": {
          "ref": "9c6b1164-f75f-459d-93a7-334014e821e8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b2122bd3-e53f-4b43-8bdc-fc5cef1ba724"
        },
        "item": {
          "id": "538065a4-ac0f-477f-acdc-13ac40ee31ee",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e9cacc81-6a1d-4598-96b5-3973d42c6c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a4c8c-f77a-42e1-8142-90dff31c2161",
        "cursor": {
          "ref": "e3d4aa5e-48cf-4ebb-a68d-7f98d8f1774d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9e8fe5ca-8368-4dd6-ae16-9aba1ea023a7"
        },
        "item": {
          "id": "5f1a4c8c-f77a-42e1-8142-90dff31c2161",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c948501d-cdb4-48a3-a25a-3f0d109ca3f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bc6436-ea05-4e7a-85ab-3305a4f0b74e",
        "cursor": {
          "ref": "227d5600-2355-46e9-bee7-de28183a3b2b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d11d95cf-5dc8-4046-b9d4-aa12c248975c"
        },
        "item": {
          "id": "81bc6436-ea05-4e7a-85ab-3305a4f0b74e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e5a42f08-f70f-4803-abd7-555d742a9b19",
          "status": "OK",
          "code": 200,
          "responseTime": 438,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb056f-9602-4432-9225-20dd47050d3f",
        "cursor": {
          "ref": "b79137a8-e3e7-419c-8645-3f9b86855f68",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2fe9e223-55a4-4268-8cb3-d0b2cb767a1c"
        },
        "item": {
          "id": "82fb056f-9602-4432-9225-20dd47050d3f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c734d9f-9c7d-4c88-8713-2c6e70e796af",
          "status": "OK",
          "code": 200,
          "responseTime": 1548,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83688be1-68e2-4e67-8d9f-745f720d2cfa",
        "cursor": {
          "ref": "46e07fa3-4a37-498e-8da5-a60d5e3585ea",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b7b8d771-aca9-44de-96c6-27cb94e92b07"
        },
        "item": {
          "id": "83688be1-68e2-4e67-8d9f-745f720d2cfa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d1a36482-d52d-4036-8717-29b494b60cce",
          "status": "OK",
          "code": 200,
          "responseTime": 1585,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac5ca7-92a1-43ba-8477-a13c8d5cd005",
        "cursor": {
          "ref": "b58ab7bb-5f6e-4809-943f-5ee07c44359c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bf006a30-7435-49f6-a5f0-c7329cb1ef44"
        },
        "item": {
          "id": "84ac5ca7-92a1-43ba-8477-a13c8d5cd005",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8d052c33-6912-4230-9cd8-cb92d896c042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac5ca7-92a1-43ba-8477-a13c8d5cd005",
        "cursor": {
          "ref": "b58ab7bb-5f6e-4809-943f-5ee07c44359c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bf006a30-7435-49f6-a5f0-c7329cb1ef44"
        },
        "item": {
          "id": "84ac5ca7-92a1-43ba-8477-a13c8d5cd005",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8d052c33-6912-4230-9cd8-cb92d896c042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8db403-59bc-465b-aaf9-841c4e1e9788",
        "cursor": {
          "ref": "d4a918d9-9b4b-4e32-9ccb-93d1eda55d39",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "317f0d45-b6f4-4f09-99d5-4f71995e28ee"
        },
        "item": {
          "id": "2f8db403-59bc-465b-aaf9-841c4e1e9788",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1c3ddbb-0527-431f-8881-c8d910efc4fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0062ba-8e58-4d24-a7b0-dd7b1fd0d8a9",
        "cursor": {
          "ref": "054e1716-5956-4e16-8c3f-c497c8340da9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a766dac5-1256-4189-91eb-1b108f80cab8"
        },
        "item": {
          "id": "db0062ba-8e58-4d24-a7b0-dd7b1fd0d8a9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "098987ea-1037-49fb-9d74-2789c225f6df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}