{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4334f48c-36d2-4835-9cf5-ee8ff626ad5d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f97cae3-4bbb-4c8a-81c0-09b24e225098",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fe465c5-2299-48e4-ae4d-a54ec91bbdd5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "165f6ff3-1a00-4ffc-8c56-261e866650df"
                }
              }
            ]
          },
          {
            "id": "a6ae37f0-5599-4a83-9d7d-71baa4056249",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6021d991-614e-48f8-804f-414fae30edaf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e63c190-f78b-4daa-ab54-6c52f90d4f60"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c751ae4c-a59f-44f4-bbb6-afd08fec2af9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "307e7118-6dd9-4be8-8db6-1ce3c4c6d4e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1669f6f-5a3c-4f1f-8036-26d7bb4adc7b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f56ba67e-794c-44f7-93cf-cfb943a9091b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "525ddfd9-7384-4a28-8e0a-ca4649a44b02"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a913f5eb-c8ae-40a6-ac8f-1682805ac351",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "055046f4-91f5-4285-b35e-0081897cc89b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73dfe06b-5eaf-42d9-9e73-f6d883cd3ff1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6867f9ea-040b-44c7-be00-fe709b01546d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bf69feb-30d4-467b-8e23-af487cbfaf43",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c6c3a8dc-aa83-4b3a-be4b-06c28dc952c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e4cd71c-e853-4863-889b-ef278a23e813",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd006e9f-a932-4e1b-bc5d-f279bb628817"
            }
          }
        ]
      },
      {
        "id": "73196487-71db-4957-a6bf-a6c4a7ece9c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b57cd830-0d95-4d62-88f5-fbf36ac73eb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a3a23c7-9ebc-436f-8c38-a76c33c9f930",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb3c4707-ad8b-4ffc-8939-0759875a459a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf9febb-4cfa-4e4d-9816-df9b85be4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "887d83c8-6d4e-4a5e-88cf-66278370d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef86d3-a883-4fcf-94ed-2d29cc646407",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736725bc-b6d8-4530-b432-828a1df7ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18d71c31-4e86-49dd-8e91-399e1deb2f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb4cce-e857-49ca-a02c-f3edd45678cf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ebb968-3f6d-4161-9fd6-309e3f0f5432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d479cd7-5dfa-4595-a3ec-979c118703b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d87a868a-f3c4-4b2a-9401-8749c59abd1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41605ed0-1743-4c10-a338-995206a52fad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e021c670-5f61-499b-8ca8-b746c4751bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f535e0bf-2340-4c9d-872a-1e7cec2e7381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff90e133-df34-41cc-8a99-1c599f8ea881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c894a5df-e386-4038-be18-a8e38029440f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f9f16ab-9324-482d-99f2-ce8321a07e8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61758cd9-92b3-45f2-81f2-427957fc3974",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "609c4a1c-30a4-47d4-ae28-469a46b2e80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bd9d1d56-6aa3-4b03-864f-c2503fa40736"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a10c4f20-c4be-4423-848c-4e6e7ca57015",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "65d585d4-9315-44ba-b842-5ebcb89ed018"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10090e93-3314-475a-8743-7f275fbb06c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e22c628-8466-4866-b777-6f2dc21f69b6"
            }
          }
        ]
      },
      {
        "id": "07ca8b0b-ec21-46bb-a42e-b6e09c17eea1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ee1d2e1-2f0c-4a27-baea-289f94b46afe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78f9c0d0-636a-4c4e-a33d-02069c8fa589",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "53d83891-93ae-44eb-b2ed-967bb079db9b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b769dc39-714b-4fd0-8a1c-644d3bfd9896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dece319-6cc9-435f-8508-0679f38df72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229d5dbf-36c0-4bc8-9d21-ac1fcbaf0234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c84bb7f-47ee-4fc0-946a-4e8311e1a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c0536-59ff-47fb-9f7e-e94def247005",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf6d829-ac0b-475d-a31c-bdaabf3fd603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9c5264-1b5a-4986-aa38-de41726a23eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1ad527-2233-46b9-a6db-15f365e7e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07b48f6e-f93e-4143-93f2-4df664c5189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4554ea73-70c9-4213-a964-103e16045143",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de50b90-f2f0-4285-bef1-ae133647d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293661dd-93f9-4f5e-bbd9-f23d604fe1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5505101-6121-4ad7-a914-101e2a9317e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e1ead0-5215-4b02-9787-34df52b6a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3e201a-4808-4d2e-a5fb-0f6a586c141a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757413b0-04ed-4d55-a0e8-00e30f4e9dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97407897-9f9e-40cc-ab68-4ab91c1c2372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe6cc3e-2e61-49ae-8b01-7b6cf73dc0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2852348-ccf2-4a6a-98c0-56ef29516195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df07e6a-e574-4347-9ee4-79156c95198b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83baf7ab-5009-4fee-bd00-6dcbed94f972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ecad70-9da0-421e-a799-3eea5a1fcc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021aabab-f108-4702-a683-7eef2fdb1928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40295492-a77a-4103-9452-ed9625d88614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e48982-ae3c-41c0-9ea5-ac1b9888ca8e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c5046b-338b-4084-bee7-6e913441cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d883396-e53b-4a6f-8f7b-76404d6439af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc95ec9-a9fe-4c5b-b462-35a65a4b09d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19fc6382-b61e-4826-8595-56123f18620c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd25569-5290-4809-8b30-d78b84cfc4d0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c66e3dd-3fdb-450e-8b10-b02a26767646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b43371-f341-4931-a2d4-03784de344ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52adce-86e6-4cb9-9599-260da39b6c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2316fef-4a4b-498b-a39a-19a3ca099336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28705bc-ee4c-45d3-a531-ed656138644a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69ec70c-5134-444b-ab2a-7bbd0b3c9cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e5960a-0785-48a4-b616-50b5dde86656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e02d602-40d2-4b00-8d81-3d1c4b613f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15edec2-091e-434c-9f8d-cef3c9ef386c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c95e8f-76bd-46b8-ae68-87cbf67036e9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3afe08-4446-4347-b5b3-275b37995ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0220815-cf6d-4102-beac-03eb085c593a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aca9b20-d71c-4416-8602-a7550156cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a4c214e-c368-4892-a96f-479d8e256b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72afecdf-5623-4d60-81f8-49ae88b1be62",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae982c3-ea5f-4204-8ccf-e05af2db235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd389281-d4a3-42d3-a601-d095993fcdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4629f0c-1b47-4ca1-8580-9eb2f1c32005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96abebce-f2c8-4f24-9384-b5cd043dc787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85407849-19d2-4f7b-b972-0391213ca0dc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9867ed88-cb08-42cc-b90f-d26a26ad3304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccae095-c42e-40f2-98ca-5a9c7258cc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609ec1b-9127-47f8-8c2a-a55dd9c5725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feb6279a-5adb-45ce-88fa-35b34875de5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0221603f-1252-4779-a366-27e0be03fd99",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79afa0f-7b1f-43d8-9237-f6ffaffce30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc5ccb-89f7-42ef-8859-43fd2f2b99df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72533261-85b7-418c-a249-870ae3ce167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4497cfac-581c-4847-8792-d8970fd77045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df109078-e5be-4d52-a980-866a67d31360",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c101f26b-db7f-47ad-a776-e1fb99b53041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f04262-ca28-4141-bfac-f2bcf4cf2068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b381b-7ea0-4f77-913b-180f0def2d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8edaab7-9154-4c51-b31a-ab7b86cb39b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e67eb-71b3-4994-a38f-d9f1c18d8359",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21082ee3-876e-4693-ac2d-ecd40954f06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091838c0-5dfc-42bd-913d-275e5f176266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b37c8f-e5de-4278-8ee4-e170ec778256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79498689-2d9a-44ef-b438-8bb577a7430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e68e69f-ed40-463f-adf3-56f2d6f1e5c9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d75e9f-e4e9-4504-9979-457542e85798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd1837c-e448-4ef7-954c-4c2c70152cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1460898-bb49-4213-b79f-8899d582d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec8d19e8-7313-4fc4-9cce-86394d8f8eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c9b70c-403e-4452-b26c-217b5143aeda",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acca066-f1d4-4fec-b977-d439167e6126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c6ae24-ef52-4fd0-bb2e-c8bd944aed95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f7be4a-0ee3-4c46-a824-3ea4da9acbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad112702-f718-4314-9905-6195e3ee1135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962beccd-1b63-4d08-8c11-ae347f3ebaa7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79b6f8c-f907-43cc-8906-653f8f31466a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f0e71c-aa1d-43cc-bc44-421efacb2326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51632b54-a291-43d5-9014-cf295d173a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb8dccf0-ae96-4b07-81ef-7145eb0ad05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2f94eb-21c5-4e6f-9b63-851f224a23d6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795ec1d0-be1b-48e3-90bd-e120b2ffd5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bde4d88-fd95-4478-ba90-f318acd60e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b126db1f-c3ea-422a-874c-3916b660a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b733533-e2b5-4a16-a90e-61a5b1de94ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2288e4ab-513e-4865-9545-dd7f63004d1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc738f57-bf64-4da7-933d-d642f854795c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af1f4ab-4b1a-46f6-8b15-02214a58908c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f5b668-937d-4517-9919-87d4d4a0ba7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "060b7b8a-656b-43e7-ad83-93127bfe2ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978e06cd-46a7-4414-b1e0-3ca95df74f88",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d9964-bdf6-4d00-a292-1e0c61b5cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21556aae-e255-4cfb-845d-8f6b7d57019c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b492b66c-ba4a-49f1-b37f-9500d269553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "939b3f5e-8161-4f63-b314-fff5a8b9afc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68741808-330a-4380-bfa4-7b0237e108b9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fda2e9-fbe5-4b78-8838-3c3efa5987d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e78dbd1-f2c9-4ed1-bb40-91bb25bb718d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e28208-b495-42cc-95a6-c10170a46ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8675148b-82a3-4c61-b796-3dc0c6dcab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbd9293-9f04-4e4e-b9d8-70f8e92c1b83",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be96d428-ff8e-4586-8beb-3c58a2793ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d9b4f5-323e-40a7-907e-cfecd38377c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32498cf-1ded-49d5-a727-3392e0bc8ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd766e1-ba17-46b9-842d-22d9f04697e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05e55a-6e78-4097-8f94-16fd8d01ad58",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a445f82-ea54-4ce7-82ab-96a264af1202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bcd304-9fd4-4d02-ae37-dad8d652af61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac0273a-1ec3-4b16-8e46-8dead59ba0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2250150f-6b8b-4694-861d-bf543fb915d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd4686-e289-43b6-8d82-37e78e968022",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376ba58c-27fe-43cb-b126-fa631d71167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc20477-f5e6-4be3-8819-5fc006b0ded5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468aed8d-c766-4cc2-a65b-6a5543773ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "838e6040-ec95-4c81-9e6d-d3ed8af943c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e709b6ed-caa1-4430-aaa4-d2a95a2ed369",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2440ba0-a45b-481a-8de1-941aabfcefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade31510-af76-4007-aab6-a9620387c0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d694943a-5f55-498c-91f4-bd25698bb294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f42eb11-106d-44e9-ac7b-1a8cfc96b4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b900d76-312d-48a6-b773-48dc41f60206",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4e130b-8d41-4f04-84f3-ef83fcda1ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d30a84a-8a0a-4cba-b951-13b12945ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d3006f-c9fa-43ce-8594-f11c4fe6d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9278fcc3-212e-494b-ab49-c7ea96d7b26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc84af2c-1ebe-4ec6-afa7-6b42d0f9d7af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9f80cb-4488-4af0-9182-04d58fe90ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88067243-42a6-433d-b1a2-552e7190eb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca62574-8dcf-4a28-af92-30237c7af164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49db9570-2b9d-4731-838a-187697a918fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e2c0cd-bfd9-4662-803c-00d009091b53",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ca541e-93bd-443e-84df-ebcc04d79ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c679f17-4052-4509-90ce-9605a227b96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5964dc-1ff6-4d21-8135-a10d3b9bfaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d880f0-81c5-41f2-9535-d6e5622e149b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f6c4dc-04ae-48f9-8c39-de477553943a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3a8a1-e99a-4d01-a7e7-3dc7c3db8b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006f7097-5346-46b9-b76d-8f6216f58fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbf5a0b-974b-402d-a738-91c32c6aa1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f07172d-7867-4923-96e0-77cbfd73f68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f04e6f-a69a-46b9-a1a4-9774fc7822b6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d86875-7d9b-4160-812a-dcea02971384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be433c59-c3e9-4ce4-a16b-b64d5677693f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db6b2e5-0dac-4903-9283-cc17bb160ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df343db8-9840-4e74-a6b7-fceba7416aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e8cdc-43fd-4f0f-8c93-5e80b50c9107",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f0848f-c8fd-4c6f-9e20-e3104db5049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fda5ed-e799-4c79-b75f-4a919f6d67c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acadd34-e718-479a-9e05-de2a1997503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a4e1f-3529-4971-9c00-4b0a085b24fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae82c65-62c9-466b-977a-0a3217097def",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e256d8-6449-4bc8-9a4d-be936d8c4836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10c0840-a4c1-4de6-b748-2ec6c563e064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d14ad11-40c9-4d69-8f78-39cc760525d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b2394d-2a2c-43e2-b46c-219b7903b3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e0da0-d237-4e8f-88ff-841d2d5fdd39",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1983a8a8-c9e5-44ef-a167-1a0901882b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aed56c-ddd3-401d-9541-562e786de438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39f15b-5e1d-415b-ae86-abae5a3e78f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f427c92-ef18-4169-bc99-68233bbcc9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc20600-d096-406d-80e2-ffcb0773d997",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1cb28a-f5ac-48d3-ae1e-77dd6f4ab57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd1fbdc-61b9-42bd-b92a-7297b2381f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ef64b-e6f7-418d-ba76-5772deea6d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcd79f6-0dda-4ea1-96c0-32e92c217d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ac7baf-61c7-4eb4-9582-4da62f53a454",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627d03b5-fc39-493e-aa83-3a7a3ba818a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46860167-526d-4036-b1ba-662ba959934b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e0320-e93d-4995-b78a-e6ac98d29862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebfa380-018d-42fa-a7a4-2233f31c31d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4d879-3d1d-49a5-84dc-93cdd8fc3d0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011e3bb1-dbcf-4863-bd2b-854f19179d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fde0e69a-39f4-4a5e-b314-432320e0ddc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e8401d-7ed5-45a7-9835-f4a3fa7d3905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca5be2c-cc84-4d71-a04d-e0c10709561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf4c9c-ddc2-4df3-a75e-6856e550d700",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af07ce-7989-4b4b-b9f1-f78ec7d13f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5c92da-9067-4d32-b1ed-052fcaa48403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aed39f-c782-4df2-b228-3090ee31af76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47e9b7a2-8bda-4d7e-bc2a-744a241d2e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b0ad18-e714-43a2-aea3-39c07b4cd779",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69c88e7-4b8d-4cae-ac92-acd74805b73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcb3377-6267-42c4-bf5e-010c0f16fedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d079e87-6ef5-4070-9a02-7feabffe5128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "953294b6-e6c3-4807-9246-d20eca896598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bdb20b-4e21-456e-be7b-29c881b5c5b7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378c2bad-94a6-400c-a1f9-19aa2c386446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507dcff8-ba20-4c42-b04d-ecc25a96ab0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db59634-7412-405d-9181-eaee7ac4e279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc82e58-218a-43db-996c-b86ff8935504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9c56e4-772d-403a-ad16-f57132c28a39",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3721768-0e5f-454b-974b-36dd4e5d4d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed5588b-1469-4c65-8af9-cbf8c2709b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4386061-0553-49d8-90c9-fdc9aaedc8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a2cbe2-2168-4d8a-b47b-f4d350f81835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28eb177-3803-46c0-a19f-069494be864f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11108e-8631-4d3c-ae21-73a6aead656b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0c6b22-7753-468a-94a8-ebaf2b1baf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d220a-d01a-4eff-8f67-1ef37697ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a00e422-22d8-48a2-8e5e-162f13088179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73a2218-6fe9-4f36-84a9-c3b613c91825",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e1f364-7f95-4c20-8dfe-2ea7fb0509f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd912e2-772e-4e5d-b128-d880c1f0a5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0821ed28-387a-4d3e-bb58-476e55b1256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f27eb8-6209-414a-abd3-051bc2becf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad82ad2c-a495-42a9-a314-8cbc2d3d962a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f50a3c3-eccb-42eb-835b-03768d429731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27100c5-2537-4f1a-acff-5277f949c7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ff975-31ec-4913-8d00-767a058c08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b65592d4-8c38-47fe-9ef5-42ceb709006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098686ad-52cd-4305-aa33-4e4e43ad3dae",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417d1fbb-b52c-4928-9f69-1ff9f9b0fe8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e591f-e2a4-4a3d-84a5-84d3dd29ae1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d90293-8a7b-4615-ae22-7b78eb92d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6914f9-328c-4688-846c-9273b708df77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a013066b-f33a-4d2c-b520-eccf02b884e8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72a3cdd-2dbe-4d84-b648-3297ce2163b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532f3b56-edab-470e-bf2d-22d5a6b73ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db6c24-0f2d-4915-b903-a2917402ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9d2b23-d567-4c6b-bf69-e63b59d651c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe6949b-4ef8-4cd7-83fb-27e8ad6630c8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e655670-16ef-439d-af44-3356556e30bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6258d307-1f0e-469f-80da-5c7c10f9b287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed197d6f-97ea-418a-b2bb-1e68995687c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "276543a6-72c9-4042-a81a-80dd83470f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf0caae-b48c-44ee-93b5-1748eb8f7466",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79330a36-afb6-4ae5-a9e6-631efda3fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2973793-32b9-405e-8df2-3bb01b6c4786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9441f429-5f68-44e0-bca0-1021101e2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "208d2007-b9ad-4464-a370-35c5e324def5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959303df-0dd0-4909-9026-a2d71fcd6c71",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118cfa34-9e79-4be6-a9fc-eea7bcdc979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956230a0-9c74-4197-8658-923010356726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc0ae0d-d2d2-4019-86c2-f9783313c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "678e646f-fc14-4808-b7c9-f1cc94bce154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a696ae-538f-48c5-9580-7c5751315f61",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851ccfb7-a597-445a-b1b4-b7bc8a611ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5728e69c-b570-4b0b-baae-60145928eab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103f4cb-36e4-4a5b-87ca-da282b39f3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "231074f4-6bab-4d69-b693-20daa5d98d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7dddd0-1ffa-489f-b323-93b84b46d4c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7185b0fb-0d80-4e25-88ff-5036740326af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7eb9f7-f4d3-45b9-b8d4-ca997d976000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcac112-2436-4dce-b876-25e4c45b0f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b7afff-0ac3-4c28-8429-87c1658ec7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1c6857-3b84-4484-8c4e-7d967ec9cdeb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff5fd26-14bf-43a0-a847-6e2fe96aebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33a45aa-0eab-4e3b-a973-668f29002d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e5dc65-dd64-464f-a322-c3203892ed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc68c5d6-a928-4dd6-938b-8a50561e4ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48291307-efb1-4934-a4f2-d60d4ce433d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4b5940-37e0-44ca-83d8-ae3d32efc022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d84f490-86c4-4d8e-938a-dd2d9fc5691e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c392ed-1ac4-4a89-9f14-aad7b57bdc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db3c48b-5344-4ab1-87ab-9bea9c449135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68a0ab2-81ff-4e9d-8b82-fac7ef1e2b41",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f6de8-a41d-436e-91ec-cd14dff9122f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a27323-1da5-4f61-a0cd-0ad0e7bfe4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e2117f-98d8-4e2f-9504-b99f472a97fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f63d782-b936-4262-ad69-aad403ead1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ee5507-0163-4fa5-b14a-498dc1b40089",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb479cb5-4956-4b0b-99ae-9c037a51b65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2048e7f-1bc8-4919-858b-46d70f24b2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371ec37f-e041-4865-bc34-c7e29f93d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05111ad7-5db2-49f2-8085-efc946a5fa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab01ada9-f822-4445-ad72-9c593385636e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b4739-677a-48ef-89d2-7e43084fc84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8171458c-1e88-4232-be1d-5b3493071ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b154df-5274-464d-89e2-42050ee6308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e190faf-7c67-4eaf-871d-da695e1390d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d8dba-0980-4092-8be9-279b608b8ad8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7cbb19-3226-4607-9d4c-982883e4cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e522e8-dff2-4181-b90f-72d5d72d7c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59563ef3-fbf5-42b3-8415-0aada2861e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b78846ed-caa9-4499-a439-3b9399a5039b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce6e2bd-9c5d-4c86-a68f-0f6e7895ecec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b374264-1271-432c-903f-f6b20b619a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f8eaa8-d7d1-4c08-b7e5-da6a32457666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf2d506-4bd2-4438-8486-374a28323cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2aa42f-b620-4221-a063-874e7c84c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1b4aeb-ca29-438c-9657-d620d4176587",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c704bc3-21e8-42ec-9211-8f3892432f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346bf8d1-b327-4478-b1e4-f0d481f7b0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed764e74-39e5-4da9-af92-360858141257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "660dab02-43bf-4579-90c9-1323db4c2cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467ccc7d-12eb-47e7-a7bb-cd67615c4a17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d82756-3642-4f82-afa9-0ec0c1ba4f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc466df2-f3d9-442d-a35e-07eec5d1fe55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242e1c33-ac17-41c8-bc9c-bc8daae86a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0a8409-0768-4023-afe9-8f428510e127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833d846f-1582-4e2e-990b-64dbfcb07cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f557816-bbe2-4299-b24b-a364d7fe72e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b622a63-6caa-43f6-abd2-f978bb9ce705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a093c1-2c8a-4eb2-9dbd-e706ba1f0544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5f461e-c116-4f97-88f6-a19d6e69aaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675d88fb-1a19-4a4e-a284-796506ff7b67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b103de-5d39-4855-a410-45997c3bb622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9472e26-534e-4684-b1f4-cd9b5d9b04d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99493345-6842-4d91-8ecd-94e45b0fc3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6044b11e-a001-4c2f-bce4-df7e77dc4ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e8d14a-f241-419c-8833-81b34bd0ede2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988bd5d6-e9d8-4a88-8e55-2c8228d95636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f64614e-9546-4c87-9231-9903e94dcb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b987c6fa-5a80-4df5-9885-b76ed8abd9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0127b0-bbc2-4514-8f6a-2873b7a53974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dca78c9-0e71-451d-aeba-77d747d60e4e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319a0669-5b65-475f-9771-e909ce49bbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4cc5b7-1d24-4002-9063-e56d1eb86176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f48e88-762d-4736-b3fa-ccba6978f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25113eb3-8478-438d-b5b9-7f2044f6313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c4684a-1242-49ee-ba1c-a8da41b4a5e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dcb4cd-86cc-46af-9983-ce5e8d9349d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbc66be-0c7a-473d-bdaa-ec606839960e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada1cf65-9e31-465b-9bbb-167e5bbbf189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b0de4e-e451-4ca5-af2b-bc13f16ef503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c3e6a1-2b67-4cee-bdf7-421b218ae575",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b46aa51-64f0-4d40-9c06-d6621de97220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134ae726-e175-4012-9cb8-d92f6be98373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8a1868-9433-459c-bf29-e6a804f64949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af54bbb4-f53f-4a5c-af32-7b4607959901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbe3cda-8127-4043-a292-f7c70a7bc1ed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c6d38d-9987-47c0-be62-4ad3a78ca4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d3750d-1b17-4d72-8089-7f4ba442a834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d8a1c7-3a74-4c88-bcb7-6082daef1e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c7e5cf-6673-4e4f-9a7b-18fd116eb8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f5900-96c8-49aa-851f-39bc253982bb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19065ee2-9f90-49b5-905d-e2e869e09092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ffe36f-34fc-4cfb-aab7-832f11f0905d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c6617e-e571-4e73-8e52-ecaa81816856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d7985d-02b3-4f58-9ab8-1848e8e81336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad72aa1-1439-4568-b6d3-d3616c7160fe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d1fc46-2777-44be-a617-7db4cffcc760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576f7740-835d-4894-a8bc-e7a876052737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2a906c-2089-487f-9f6f-926f9e4009d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9be43a-2833-4c85-b44c-d3591509b15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99388b05-522e-4047-9502-57b68b55c133",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa57bb8-4707-4fa2-9cf1-324e114ee57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0a947b-c808-4fd2-a466-c91625306b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372b3ecc-0de6-4e03-a1ff-0af27240ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa1f6ac-2b86-40f6-83c5-93868fdfd199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4163184-d4d0-47b7-a3ea-bae36ef533af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88026554-4d77-4cb7-b974-1725ceee7d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da902726-e06b-4084-9217-bb360f2cf64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301ff476-16ad-4ccf-87b5-2169d966df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c978abbe-ab54-4482-bdd6-3ceeed40eab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aba8272-ccfe-4f81-8d87-febb69fcd57e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575f8507-587e-4001-8952-4cd60731a862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242b9567-23a4-4536-a026-fb403d649900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2abef0-43f3-4889-97a1-3f95fec0aa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cc3da3-f94f-4700-8e6c-96a93f329f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126d21a5-b610-4796-ab19-37eba0362467",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dc0cb5-7446-4db9-9ed4-468cd5389a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968682be-473b-45f3-a2de-b9c6ac598a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be6c83e-adb6-4321-b912-5553df5dad52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbf78e0-8e88-4bf7-b7ac-ef3d4a0dcc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad5ddc0-3866-4bd2-a3c1-de425b818172",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94adab05-697c-4e97-98d3-111d9ed0a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96463506-6966-442b-b265-7a697a70e66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b2f7a-1abc-4bc9-a6fc-831c9854083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "364bc074-6941-44b0-ba54-02e7a4fb21d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a016ab-157a-4f96-a2dd-0a3854b07a30",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0699cf-4dd9-4a39-af4c-ace110398cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03d4cc9-4b6b-48c1-b093-0e85ea30f3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28f5ada-cbb8-48dd-b1a0-1b6ebd73b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "761d735e-b098-4f11-b003-5cb95cc5b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905cb3c2-ca6e-4b78-a4b9-7f2c136cef35",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ce86df-4cea-48f1-bf33-e5a2849e9683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3b5294-a1a3-4785-9b35-4d53e2881bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfbf366-7372-4580-a4ae-f459d48e9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27817438-0aa9-4cf7-bbd6-b5d7b006ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29676978-deb1-4f66-8968-dd8b7c7e3cc2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7c5437-779f-4f2b-9489-104a99ee36bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2aad078-329f-48cd-98f2-55c4539f3807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b8adfd-3f9e-4865-b9f1-bb7b69206d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9ef9f8-04f5-4569-82d0-e91208b292d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa36c2-c5b1-4d74-9094-566c2273746f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba76fb-df6b-4438-bd1d-f15aeaf91596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400948e0-02af-4195-ad88-01cf721002f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc95cb-c667-467a-947c-bb833b4efeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f445327f-ada5-4811-bb28-e9d9cf71f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e7efdf-eaaf-4bbe-99b5-a8124c09710f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cfd29c-b2fa-48a1-9fe1-c4e24299105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d04a7a-5558-4086-a9a9-3ec83524d48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa99a78-d7b1-4dbf-8d63-35bdf6daa0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f3ef13-3376-4af4-b85f-c749baf7c278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5439edad-2cdf-4fbe-9e0b-ddf423584d3f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a4d0b-0c83-479c-9428-9f2e3b254b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59975187-8fe5-4fef-9c5a-4e3641e66da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57559a40-aa29-4fef-ba60-6a510f744215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f16d695e-e9e4-4db3-ba01-5a7732186712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0b6719-3d48-4fa3-ac3a-0fd28b665e19",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f59084-166a-4dd6-a4ad-8f83a6c81f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939456eb-94bf-4128-b4f0-ed55f349bfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24c4703-c090-4551-8250-3fc59e35c435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6c5c26-f289-4377-87f6-739963e00afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9a2772-0ec9-4a17-b628-7e604d0cf743",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a2f1a0-44a8-4b00-b87b-36bbb171bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d88d1d0-addc-441e-92a6-72a12daf8803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca8e97-aa1f-4a1d-b710-dcf6ffb7bf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc701eba-b277-4ce6-a33b-27aa680e29f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3976fe8d-dc8d-4250-ac12-e0a95f784820",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90349af-e84d-4282-8110-14e9ceb3508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8634d6e-6623-481f-b2d4-39c3749bc7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c9e5db-b181-47c1-9258-fb65f2ff608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "367516f3-a0c2-46d6-8fc2-e7c2fe4f5d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346271ac-6935-4925-8d24-af6e3892c64a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b007662-f813-496e-8da8-afe64d69238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cee3de0-1d37-4cda-8a5e-e19f49145bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babdd385-443b-4dcc-b418-d15ed34dd75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab15f088-670d-4995-b219-b1b2526013f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6634b4da-6284-4b85-88a1-0487329e0203",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6a550b-bc89-4a83-b6ab-99ab3fa2286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc856e3-2e70-4dba-888d-70980ba8ff76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbb8822-7b6f-4ce9-91d7-a8bba8aa18d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37363cee-aafc-46bd-a1b7-e29cd509b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44a30e9-ec54-4bd2-a19f-b89064200684",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ada01f-3220-4ef9-a362-1aa571ee92e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea929c3d-6bf1-4f53-a23f-a80a45b3faf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7006d3d0-ba00-4bc8-a56e-5fda56043742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8a4dc3-280d-4c6e-97cf-44ec5872f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4b1bb-5992-4dfc-8f20-7bbc740892ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f7238-18ce-4fca-bcf3-da59fbc3149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db39a6fc-39b4-4521-b61a-2fe09e108f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f51b6bb-2d9c-4117-8869-c94d06ee05ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d048737-9a24-4be0-8ffa-14b839ca2f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3490ed-3594-4339-9cdf-bbbc55f1db09",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482af4cf-a4f8-4bd0-890e-28b635bcca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754f24e4-c7df-4ed1-8651-d16afc695c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9d10f-71c7-4d1a-954f-b434a8b6ae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95290588-37cd-4193-8e98-d3535e4e821a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2e4bee-f119-4c4b-9aa3-36e31ff9187c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa7be18-5a34-45b2-9106-87d43094586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b4b206-467a-4f79-a9b3-672075c52d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bdd7de-41fc-45e4-9d36-228cac1789da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "462734e0-f8d2-4a33-9efc-6a613f66729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba40f687-c4c6-4f3c-81ae-9261e25e1773",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92719cf0-cde2-48a3-ae08-5e26917f84f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83532b9-7655-4560-92de-c2818913d5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a09fb3-a415-44c5-8b3a-50c02939c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eec4123-4eef-462e-a9ec-e31f523b6ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8ebb12-7a9e-4edc-881b-074cf90191c3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c7dd06-2e1b-4a25-a097-9ae2f98f4f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65145816-4c22-412a-88e3-9dd86771a4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1177e5b-2cce-4131-9b1d-f248c8e6e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "caf4f87e-ec8a-405b-ba51-270a85a6b1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9df46-ab3a-49c0-ae8e-bde896ef6954",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4278a319-1858-4468-a63c-2b88c49e36a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d1c20a-64cc-42f5-b1fb-cec4cef70d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c68ac1b-2f3c-46d4-b4a4-f17813eb92eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e07482-1040-453c-8069-7f26ca63cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658138b1-406c-4d0b-b588-98113542c63f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24f4e18-3db7-4b5c-8c69-bbeca96f2d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "154732eb-461e-4f2f-9448-abb83011a0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04752e70-14e4-488d-9b54-04fd12b917af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9a905c-6625-4ee1-8af9-b19f2f1b352a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d15e622a-5b36-4bb7-aec7-6187457a2038",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b767e891-f917-4f0d-b44c-cb16afbc2436",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76def96b-61f1-4289-91dd-aa63dc33e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ea3b5bc-4c43-493c-8d07-503d00314088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5ddf5b-c954-4741-b7cd-be8d830eea91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f2d4964-1896-471b-b25e-08a5d8965ec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2fc6ba3-a2b5-4fc2-842d-571039dc2832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34ef49a4-6c95-4e8e-831a-0308128102de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3aeeb9a-de3a-4060-ab99-d38f2b54604b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f65c1f87-19ae-4132-9cea-cdb12294e1c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "485fde03-5363-4b30-acbc-cfb4fd13a3a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "140ce114-a81c-43bf-bedd-a7ab16428d32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dbcec01-7749-4b67-9f47-e37c7bcedd68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e9b6779-6f99-4e4b-8004-082224f59232"
                }
              }
            ]
          },
          {
            "id": "972968db-2deb-49ca-a653-6accd72508db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e517e46-f863-41fb-b56f-834d6fa17b00",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "516fcd50-43a1-456a-8444-2c2483654686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9692445-775e-469d-8004-7999286a7dab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f5bd66b-c872-4623-8057-052289301988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87fffb7f-eb15-4d08-a013-fb517f532eed"
                    }
                  }
                ]
              },
              {
                "id": "d10afbdd-bc9e-442b-b0a5-539a9d191477",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99874851-155e-4a38-90d1-169d08f50dfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ccd59a9-6443-4c05-a248-f54f40d325cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54d47e24-c6e4-416f-b025-92791cbcedb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71730ff0-e373-4635-9e99-44f7e4d3fe8b"
                    }
                  }
                ]
              },
              {
                "id": "4b2b5469-f5fe-40a5-9ffb-079486376b18",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8b0f830-4545-446c-809e-9947f0a7fdf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b63a6fd-ff35-4af4-81f3-aa1972657063"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab6c7a1-b254-4d06-8c0d-7794c9c2e50b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4077d82a-9b20-494d-9a7e-cd8c5c43e474"
                    }
                  }
                ]
              },
              {
                "id": "2d0eefef-44da-44d7-8c95-31892b8ac554",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3373c4a1-49d2-4b03-874f-9fea1c0fceba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a822b6fb-835e-47ae-ac03-6ae8e73f0dab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf3316b-ed4f-42d3-b38b-d8056ee05094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62436629-4f03-407d-a049-c67c3e990957"
                    }
                  }
                ]
              },
              {
                "id": "9f0a8df6-4e0b-4b00-8cee-47d1f43aa327",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c264bf0-7d62-4d91-a447-9e59d9158f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "396ff3f2-658d-41cd-9325-a71d6508b4ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac9a0422-77c5-4d23-b8be-5ce9958683ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "15657249-01c8-406d-b398-eb12f8dc472c"
                    }
                  }
                ]
              },
              {
                "id": "c8541c76-6701-4a55-9098-b7c6de6846ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba012859-7f1a-437f-a9c7-7b930ff8d856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91ae357b-91c0-4a70-9ee8-b61bf6c2cb72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dc63025-93f7-42d6-a507-28cd60d0bdaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a82b4cd-088e-4117-a06d-b2e994862ee1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55a827bc-20a4-4372-bfa9-f7a0efd88a28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "235e91b9-89ca-4e4c-b736-f75bceeaa683"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "314382ce-bac4-410f-9221-66f9aee614a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f432e146-d9fe-458f-b546-7418469fd7cc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc1df99-d82c-4d4b-8f60-3d7730e0b7b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c0947b88-e2ec-4d9c-a500-98a6f7cfb7fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea3f2c5d-eae3-4c8a-a5ea-a2f4f16a8a9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80fbeb45-02b9-439d-b260-ccc43db04f56"
            }
          }
        ]
      },
      {
        "id": "cf6a96bb-0e7a-42df-b575-ad7ec6a1b2b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "00292d97-3e48-41df-9e15-d9e16bd286bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d373a818-8a2e-4c31-9dc1-3316cb1d9c8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "453f361d-4b0d-4c3d-aa21-e9450663eaba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67489a47-ce40-4378-9704-5bc94bc45511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f64262-1a17-43e5-bdac-2d91779fcc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f678f-2f7b-4013-975d-dd1598d5c94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d38d71-074a-4c70-8f04-ba776723f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93df1522-6fd3-43d1-bd65-430d718a89ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c12e46-58be-4a8e-bbe6-4900756c0026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4857b9-a6f4-4ddf-a749-456a842af4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211f283-7b2d-4958-bffb-e9cb2e09c1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "246391de-f57f-4a0b-b037-7828ea12129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fb893e-20e9-41be-bf88-1483a7d61855",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cdeea5-86a2-4384-9b65-d3762c730981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185e202-22f3-4980-8eb6-96df578377dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57531b7-f5eb-4986-8b86-947421b102ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c824e42-7cc6-4476-8ab9-bafaa9dbcba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b7370f-d7d5-4c84-9726-13cfa1eb5984",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f07399-134e-4597-b72b-0cde07a4dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdf4f9b-6fc4-4213-85b4-e94a8dbeb240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d50ce-5a34-4cf1-9f8c-515a7ec3d0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f928da1f-4656-4dd4-a16e-80a63ae3f615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0893370-2ba7-4dd3-807f-e38122f91fa7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21855f1f-2902-435c-a3f3-d8b382ffe5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c774c0-4e0c-484b-bfa7-8252af515122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb60e51-707d-411d-b4c8-459340d98f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085bbb0e-7880-4b94-b324-c5ee0738c5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7cdd73-fab9-465f-88bb-1e513dd18ba8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5197338c-a4d1-4ffc-b6cc-a7fa1c79bd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0f5643-1df8-4820-8025-1f8ae91cd09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8c85da-ae8a-4232-91b6-efdf5f1a4e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10a4c65-78de-42ac-b355-33851e5b7d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8102ac4d-307e-4b5e-ab62-81f268c7a450",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1845232b-9fb2-4c16-840d-9d8de5a109c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960c16a0-b5d6-4b51-bf0b-d551d90e4e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd37e4f7-6d5f-441b-906d-b681607a5555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26ad603-03ba-4fd4-84aa-30e364d57cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c2ad5-4c69-4434-bbf2-e826910cfd12",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc31716-7b6e-41d4-9e8f-bbcd7b8f108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34011264-98c6-4029-b978-28ea3ebf9da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d615831f-b795-49e0-bb10-c930819a5f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e98e81-b488-4c67-ac27-d476f122bdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a04ee0-049f-4189-af2d-37ee94238229",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1f1f88-afd0-4026-b997-1de56da35a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a31817f-052d-472b-87dc-2a519f40e368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e397be3-63e2-4615-a458-0c7dc56fc9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e44a588-2528-4312-ad38-23baaec13308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4de6ad-31a3-46c9-a4fd-230749829ae1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fa3ba0-95b7-4061-9bae-2ab5975f9440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4947ea-95f2-4ff5-9c3b-0bf9fdcf4133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2db61-5ccc-461b-9ce2-d11d50d564a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7043783a-8a6d-4a25-899f-aba354748f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b03343-5ea5-418b-a54c-97a88e6d8137",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de233b6-871b-43d2-8819-0db5c916feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5eddea-478d-4e80-b3a1-1b9400017d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e35b84-64eb-4273-9067-1d89766c5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f11117c3-f321-4ff2-92a9-42b3ed995675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39874dc4-2a3c-4377-ba25-df5355f6b10a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4297079e-a763-497d-84a4-03ee56c186ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67e708b-08af-4f9b-b80a-6eadd2cbc857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05b1cd-31bd-409c-96b9-e5b6c9f7c024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d36e027-5911-4584-8ec1-bc2a62cf7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b59c514-331f-4d64-b34f-b75ea9e3e60c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f33ddb7-6e74-4c74-88a3-3bf3ff0d1399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fc08ef-2d0c-41b4-9ac7-84408d02c12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc37d7b-a169-4866-9c8a-38c143d2948f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5fbfb7-88f2-4dfa-951d-f4b4548772a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43bf4a1-0c92-47a1-9719-c875a2a26487",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7447245e-5a80-4d59-80bf-5a116de53f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bf8d58-6aa9-4e12-b09d-f4843721820d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc96f28-58f2-42ba-96c6-efe2695596e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7815683-bdeb-4a80-9d24-f0f86c27e8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c40c3ee-83b0-4724-b2d3-3fc29aa79361",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1953fa1d-d6cc-48ca-8f0c-964c2e67332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e6166a-29a4-4ec6-9841-994c17ca4b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fc7093-34e9-4cd5-a62c-c1ee5dc8667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff665c17-af06-4b01-b3d1-9f0bd788acee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b486e74-6e4d-4dc3-9cfe-7968303c767c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc694898-a99b-4e84-9e16-827a802a4c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815d708c-fd8f-4aeb-800e-e66bfa21c7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d5f64-67d1-4880-a3e6-839e63a0e3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abc6ee7-62c5-4918-9c88-a204b00d54bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bffd70-e09c-40fa-ab30-6c2ee22829c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd96417-b260-432f-8398-7c3f11dbaed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b12759c-f3c2-490f-8f52-7c0356c0dbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb96dc9-1d9a-4c59-8579-4ec2a68e33d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "43cbf30c-5a63-4b28-b34d-8474fde40323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c8aa1d-7d2d-4a2b-b665-4f210ecfaf2f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad8cd57-4159-47aa-b67a-f076d02aa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857a1d2f-a734-4780-8070-f09a7a604dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51592dc-6c0e-4db4-95d2-72f9f22cc124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b3fdcf-4e83-42e9-93a7-d432354ebb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84185530-9fd0-47e0-8339-3cce91141413",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8187807-eabc-42ae-ae31-e151b50c217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736be611-5632-4f1e-a91d-eeddaf31694c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5865a6b1-9217-489b-81fe-39217f78fe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad38ebc6-5dbe-45b7-b20b-4e10854e25f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d836e4-a3d7-4601-bd34-c7f0856dab09",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fb9d72-acf1-4af5-840b-2d6456094170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccac4df6-e9f9-48c3-890d-4e687547e45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee64f8-55b1-4c1c-8fa2-5e747c8fd2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd09bad-838f-48ac-aaf8-f9abc6d08975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dabc740-f2be-472e-ae1e-0e3ccefcb03f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d24d8b0-86bb-4232-aae6-591a5dea5f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e0e869-5c11-4603-b930-67952b179024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31084015-f72b-4ee6-a495-03c086f5fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1fe239-db35-466e-a590-9305f33b7ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c31670-6abd-4d53-a620-108c1dccd8d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1259287b-09ee-43f5-bce4-695250c3641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc57fb-0719-4896-8bc9-e56e02bfbcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82438db-9326-42ff-bfc0-0a81b7349b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57838564-afa6-4dc1-bbd6-3e77bd2c80db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76be7470-24c5-4599-8b69-0e63a278b76f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62499273-2529-45ee-a025-356636f4b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e522cb3f-020b-4b5d-91b6-d43f2a62b702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1e4a46-a282-47d2-b91b-54ee10228a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "163e8ec5-d407-4a54-a843-0244029dd8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66590b8-4772-4c77-ae54-117f22f68243",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f347e8-bb57-4a68-a3eb-ee414c295014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a36b72-1525-486e-86f5-f51de4c74ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83af459-4d02-440a-9be0-4d28c70ea84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e29b247-1890-41e7-a0f0-b070f43adb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8440e-145f-49ba-82ba-a6f09dcc35d6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7c3bdf-1a94-4972-b088-98e4f2c2d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93c4c00-3487-4250-be72-20f8a47e19cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857869fe-46b7-42e5-b8e8-c0d71f425f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f838539c-7b64-4964-b528-d49eeda6905e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb3999f-0ca1-4e6d-bf81-8c4bc84ad8d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bedad8-d4f1-44cf-9ecf-9eabe1b4ba0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275f0a45-ce9a-49b5-b14d-6c060dbffcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f7010-9edc-444e-b949-eef4afb73623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5233e5b0-4793-4fcd-80aa-9ea130affa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975a4901-4f5a-4a3a-bfb2-bc5317d1353e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf1b41b-25d5-439c-8fdd-bdbb619c2821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52acfff-9233-4f36-afb1-8136ede6faae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fd711b-8163-4c1d-9367-f5a79dc0832a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9105802-e3d9-424b-8b93-1c8eea07c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc801d3b-4ef3-4053-a797-6a244acf54a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0bdbb6-246f-48e4-88c6-986f6f950a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df5437a-38ac-48d1-a1f3-137e4ffab608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d033883-62df-413e-adc7-33a3c13f39ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57cd1ad-b314-4a94-9467-f89fef31ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466714f-574a-4905-b066-bc37a6be1392",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1506e0de-127b-4162-a64c-93297068f0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976383e4-f77c-4939-ae66-ea15be8fd3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e1b213-f003-447d-ac91-301579980ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ad26bd-2fdf-4a12-b3b9-ec5cfdfe0065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df0301-7347-4c94-aa48-5d1cb224097d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baba0d9-4155-4d71-83d7-34bbe61b1a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a470bb2-bbb6-4f7b-8873-fc19672b268a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cb5bee-0662-47af-85ee-413c0c59b0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a5c63c-10d5-4351-8127-8a361b003aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f6d28c-5afc-42a8-b117-49f6f6dfcfb0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fdd6d3-d0e1-47c7-bae5-e807334b6162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e409a8-bab8-4956-9b21-0e2c3932eb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cabd5bb-4e82-486f-b439-416c85ac50f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41efe316-6fa6-4462-9553-ec83ccf8a780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78c0e3c-f89c-4459-ab58-c254fbc24ff3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6da649b-d4c5-4d7c-bde4-f93a45328f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541bc389-149b-4254-8459-bde61c73665a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089a2d32-678e-441e-b99e-5fd4bafff5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ac7926-e9bd-4ff6-a254-5ece1162b70c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f947c0a-70eb-4193-b3b8-c1d8e40940cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8a4c078-2bce-4eb0-9d0a-a52cd2a87d41",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc5a228-4511-4faf-be5c-3e0cc1c2ed1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7187d3-8f70-45d5-afea-f8a8bb021a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd3ea88-9524-420e-b434-007f0a9efed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e01a0e9-2595-4296-b907-db72c9d5df49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee5d9d0-ec5d-4ec5-929a-684a54e14a5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5f359c6-1be9-4415-b03f-776d7c1da80a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "117857ec-4671-4337-a9c6-ee1c13ae061c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6969541-e910-4dfd-911c-43ba7c4ca988"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9850dff-4acb-4074-9183-f94680d172d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "769c1734-aaa5-4ae7-a341-935c3b6149d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8992ede2-718c-4e5e-895c-5a3d704fafc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aa42dd7-ccee-41a7-89b9-06ccdc15fbbf"
            }
          }
        ]
      },
      {
        "id": "2deb93ec-721d-4db5-8749-49258a38d688",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1fe38b84-40c8-48bb-b7ba-ac7665205f6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "275970b0-cffc-4b7b-93f9-0ea3cdfd3832",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8581a55-2089-4a5e-98e6-79a4d8133e05",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d24c11b-98eb-42aa-8221-997106a828b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eadb09-d6f3-460f-a32e-65021b0b6149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328b233d-2705-471a-afd3-1f1dcab057f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f31992ed-8123-4c42-ac94-abea83e35db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b034d2-cd8f-4cae-895e-1601d7419fb4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76323cc5-d9b7-46d3-b742-58e5ae80c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b532b1aa-abca-44e6-8bc2-666bdf24869b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40e39e4-cb59-4e3a-8a86-d46128ccade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c4496d-4133-406f-9049-95faf89dfa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679d687a-5db8-4051-b201-a23222e94479",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18514804-679a-4c8d-9aac-3986380d3e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd707bfa-58c1-4f10-898c-8b3c6265186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73f01c-aa7b-43b0-8c8e-4d7c5649664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12b4092-f941-4236-8990-f91cf515a1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3687c44-ca7d-47d4-a513-49b8b2a6706b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d879806-dba4-4548-8293-90bb6d84b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8cd51b-cf80-47e1-a391-ea55792bb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbb7fd7-75bd-45ef-8453-ed84ec2aa4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ecc216-de17-4d78-a25e-c3957535e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab016c-92cc-4725-be31-0f93c5fe17a8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cec446-dbf1-4755-8227-7a374351cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014a5ba8-a5a3-4211-9f2f-77fe8b5971c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be94969f-1da8-467a-9f52-0ed57afee60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf875a2-18df-4c2a-b836-1fa816d8788a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa13157-a076-4992-8a50-0392f3aadfe3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a118d8cf-d260-420e-8c83-e78f6e5d4503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497a3034-1c98-4620-a476-96ca18cca9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da54897a-1280-494c-803d-f6681adb4c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be1bc35-da6d-493c-b106-2a9014974143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d03bf8-0c06-4d3f-b4e9-5f6a6ae0c845",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d2409b-6931-4443-b891-4be1c6460c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafc9649-ea01-4fde-a1bc-e53142c107d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18c328c-5263-42ff-b401-8aa42184cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "29850a8a-36e2-4015-9136-02cf5baddd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d74c79-a50a-4335-91a2-1085f3b6b23a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f60f7b-30c5-444b-acbe-0cac1e838eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8786f873-5ce9-4048-80ce-5195922fe862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde5cafc-63d3-4cdf-a456-f99e2b6d169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "519d9972-40a0-4818-890c-6301ecdbc830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b930c5f4-0188-44ff-9d1a-401fadce258f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47abe09-73cf-4b54-97fe-cbda5ae54899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f25eb0-0f07-432c-8295-56d25dc5be6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55963d32-7196-4e08-b477-e335fcfe5301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4e82fa-f1f6-412d-9bf7-25a28636beac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12af76af-fd3f-47b7-9baa-bacbd7ba817b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a11953-65af-4931-987f-02ab90ad1aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db34a6c8-b0fe-4001-a3a3-4d0c8ee78808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ab451-50db-468d-99c9-ef5d843844c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ee5601-d181-4979-9c1e-be26f8b23527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afb79cf-c4a1-401b-a997-3ffe9296b580",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b536741a-a060-4346-bb7a-e34885cf74a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1fdb52-df63-42e5-b311-cf59da63c5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c7c87f-d8d9-4173-994e-9f6970abadbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3b2780-5db0-4c18-924d-328ab99366ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d34d6c-ea50-471b-8cfb-bbabf8d17a58",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b7d7c0-6c06-4529-8e5f-d8554802dd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3f6a96-22e8-419a-bd3b-02a49e381969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3202eeb-3bd4-43dd-b38d-07b7b6071049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea8891d-a632-4449-8e31-8019437aafdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43640240-2760-4e58-970a-26bc42ba7add",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc482c79-f314-46df-b8a5-d16fe2cce0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e9c9e1-ea88-4c75-806a-60a0450cc056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d733daf3-f174-4c67-933d-43b46690bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf0f385-6c79-417e-9164-61c1cc1577f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1699035-19a7-449f-ae80-925bb9b792e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a5e2cb-555b-43e3-9b58-fbe7187ebd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21180c97-7134-4701-a807-ceeaecddae3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967363ca-4a4f-4ef9-8cf0-e441571704fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd73627-b4f4-43f4-be26-8573026cba47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafb1896-3cb1-47b6-914e-5c942010cac7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a6da2-d408-45ab-914e-9b96f140e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d2ca5f-b98f-46fa-923b-5f5d26d854ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7c23e7-65f0-4627-a38b-4c8a58e7417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dff795-6ae5-4e64-a602-54e93709edee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbe07ed-db7d-4ffa-afaf-953a725150df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86751921-7d5d-4529-a223-ec774de47ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b57bca-6e8c-4cd1-ad20-5ad41e20d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e74575-81db-44aa-a878-4cad451020f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3a15d0-7b48-48c8-a3f1-0c368c0d49f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3b6c1b-4032-4c37-8e80-f0acc407f29a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079e6822-ce92-4c54-b817-ab194d653024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8115df64-1d21-4924-b1fc-7d0a5a9a318d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747a4269-9802-4e7a-afdb-400ee3310fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce8a8d7-ea98-4d38-af4f-32406294fd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4830f4a6-93ef-4e1b-9278-5c88aaf6168a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1917cf5-06d4-48bc-9db2-548b3cc5adf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7349614-e423-46bb-a568-27cdf4c6f38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e83549-30f2-4c1d-9c77-13277ad5095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d160c20b-fe95-4e64-b463-6d682c9672a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a883732-1335-4035-91eb-2192a5caabf4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de759a92-b846-4b9d-8373-6eb5ef5df7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7da8f5-af36-44a5-b7f3-adbdd05420f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1eb132-993d-4ad1-b811-1778541956af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cebbd1b-f5ad-4f73-a90f-30846d1adee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051972c9-b7a5-4ab5-a82c-963120490b3b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b14162-07c2-4ce0-979a-91734f41a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4edb01b-9b34-417c-aabe-d2dde3dc08d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae055e0f-0726-496c-909c-dbc9cccba352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af555e25-164a-4cde-ae30-452115b0a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa818b7c-53e1-4cab-b5d1-025a3001c69f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fb2b76-9688-4d4e-a63b-63f289d7c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f4dff8-9858-4ee8-b493-e0a68a3a7e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84d1963-2f52-4964-81bf-f94dd7c4167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82500a2b-2d6a-4de1-854f-7db95414f7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ab5f34-3837-4b94-800e-87facd24911e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1db855-f0f8-49f3-8384-756514bf2bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012ad709-e083-41d8-b9bb-972fcd8ce969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e94f3b5-b934-44df-b26a-caf367e938bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a0e1c4-17ad-4bf2-b675-8f88177cde8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863dd5e6-6a9a-4e76-84a9-394ce10fe300",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b1b08-4a03-4b86-8f32-3f9121151b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f5d765-6ed9-4f60-a540-ad439ccde52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebad970-6433-4667-9302-8f86e8f4d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fcc88d-b092-4bbb-9d4f-c36f8f0c57b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eade683d-328d-41c4-aad9-c89bd53d7dc4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa9ec4-be5d-4230-9ed9-a3dda329e69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4064c6-2d0e-4e5d-afd9-8020f07aec22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac204d8-5e59-4246-b757-a38ee720f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237e3c36-e052-4212-8783-b3c3532e8617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf70dd8-d790-4a0d-8e17-06a2dbfcd59b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9611ec9-f7d2-4214-898f-bb5836e55c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97070c34-954d-4e5b-85f0-9032ac6663e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f0d0ac-79a8-46a1-8653-753645c54367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd604295-0a3a-4ad9-b3cc-7d0085498caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b2a374-947d-4c13-a676-ef600e9a1924",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204550aa-3674-42a6-b61c-be41b67f998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9940e389-2a37-43cc-bda7-fff98cb4e463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7503f01e-75d9-4716-a48e-26484639d03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a29356-0969-4e8e-83f3-2bc252db50b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea21a5a-42b1-4fef-bb4f-ac40056667c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ded15-eb09-4aad-b2ba-8942963d4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dd589e-d6cf-461d-ad4b-11dc1a427aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f58a8e-002a-48f2-acbc-d98dc4994f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42705fa4-efcb-45ae-b71c-86b07a12bdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9c17a2-0834-4677-a4eb-680b48d54995",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa412c9-1dd1-4b18-a07c-f6043f814e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cce814c-d25b-40f1-b218-3a9f0c2987d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d770cd6-f1fd-427d-af00-c2587bea1634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fbcb0b-7264-4bd0-89f8-2cca4eb53264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fef25f-a948-47e4-95fc-ed028489954e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b147cd6-0cd6-4c6b-857f-0e235104454e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d97ddb-082e-4734-a4f5-6da457c45c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12b7be2-8582-41cd-a333-26398b30fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed4640a-4b53-4333-9dd1-868e0e5a1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb77d11e-ac7d-42b8-a84a-a94dad14bcc8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3c7bdd-fc39-4266-9801-d44a3539b826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92f4b64-16b8-4786-8cb5-65e13c9f1755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8ce9c9-27d4-4705-9f82-6f94d4aa018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2845a38a-49c2-4b83-8179-fdc0057b4ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff59ad-10e0-492d-8490-f675e653b5be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8af925-535d-45da-bd3e-de581990f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286da197-c733-4283-9168-a862f84791ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a28667-825b-4476-b450-696bcf5a0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c36976-456f-42eb-a752-a2ad1606c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4831dd26-d859-4515-94a7-6b54431287c0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfde4f2-c51f-4f8e-81c0-f9e67f6c20a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acf7f4e-9f4a-4c04-a36a-3bfe7961639b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c16e1-b994-4366-90be-2e07932bda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a137aeb-3d39-429f-a5dc-31561089d1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805091b5-8f18-480f-8382-b2baede64cea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19072e60-2c0b-4f9f-b222-fd0cac743b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5758ba90-21dc-4175-9649-ee02a913de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce2e6f-8ec0-4068-a7c9-86c6f76b7089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9648fe6f-cd28-4aaf-892b-b6e52d947386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbed9817-704f-4988-83c3-36535207590a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbc7314-88aa-44fc-acc5-c5bb089732ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde7e26f-52f8-4d89-adf7-dfe6ee2d6392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d02b127-46e1-4ddc-a0b8-0fb4cf03bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e28980a6-e23f-4ce6-9913-72a4a5ed9dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd97820-ebda-46ad-abc0-a7f460945909",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a686a6-afa8-4974-805e-140d86cf803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9defae24-9590-4956-83af-e1fb0a5bb2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d76707-d8f8-4752-87ba-211135779494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34188f87-8507-4dd7-b833-677b267cd7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf34820-e418-43ed-abec-5591c820dc2c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1323e8dd-5e2e-46b7-9de1-0b21ca7ada36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2da0ad-7de8-4ee5-983d-aecb68454600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2dceeb-8a06-451f-b674-c166a56de146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a26259-ee29-46eb-b095-8b5061f7bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cf462b-1f7c-4bbd-94c0-1daea11e9fd7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f22a94b-5541-4696-9d96-5670603e8a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bca19e5-f43f-43c9-bc95-bfcc984d0ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5ebe77-5044-4323-83f9-139f650d8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd46dc48-6293-4847-8cf8-54c819cfe53e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2ae5217-7d4d-41bc-a3c6-0d798cef805b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "852acb06-793b-4c88-a7ae-28c9600f0fe5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b076259-13d2-43a6-a307-21e0638edcc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eccd625e-9810-4eec-ba21-8aceeb41640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48380e87-d722-46be-860c-fe266fc5beaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc118270-922b-4e2b-874e-da4eff9957f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bbeeb80-dac1-4658-afc7-441241c088f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44f835b6-0216-4098-9caf-646b0c146b80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c7f7983-9d05-4c22-a305-f1809998c2ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b76b686-9906-4b23-82aa-8bae967b7a4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cf2cfe0-842b-4e2c-94d3-68840a9f7413",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c81e2776-bf2f-4670-bf86-b0aa0c077b60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e6b6b1b-8533-4f7b-a74a-34a2308a3e34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16873414-feb0-478c-b5b7-8d68990f745a"
            }
          }
        ]
      },
      {
        "id": "f03e955f-e606-4c40-91e5-b6cda941d540",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a5c0075c-96d4-4c63-8f2e-0df50330b52d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b20f9f68-3614-4c0f-8106-453c4bb7259a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17de709c-289e-4470-bdd1-b8c7a0c8d94e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623a7300-62b5-4363-9a34-126c727be428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9623d582-1837-48f6-a6c5-e71550d30eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4effbadd-9d0a-472e-b82f-644f059c6758",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81604e2e-1cca-4efd-9dce-99ff81811a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c988b0-819e-4893-a65b-b3f321eed5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a60dea9-5338-4178-b734-c1539a03b924",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb90a4e-7d88-46af-a36c-a40c5db0c440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbdefba-d4c9-4127-918d-fd1f702aaebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eafa190-6854-42ce-975d-8b5d9d8451ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c6b0c2-f382-46d3-a24a-24ba59584bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dedba8-d769-4229-a6f5-22645901be98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99724588-a026-4e9b-a014-9bce81269eeb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1ed7b2-353d-4400-b287-f19b809f28b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e767caa4-415d-48f4-9f91-11ac02d2fb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09bc0ae-bdad-4ad3-8d8a-ed503fbf47ad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6505df05-531f-44a1-9c96-b402ca15b1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d506367-31ec-4df8-b457-8fff614a9132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1d6988-7cde-491c-a71c-66bc1194990d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b14d0e-5b06-4c3a-a491-d2119e3663f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa13e6df-1779-48d5-b149-8f389f6eb20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12adf75-cd0c-40df-bbf8-96c1632b00ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd7c5b3-96a0-4d5e-874e-b0b615b4c857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e2b755-090d-4845-a8dc-8226cc79d183",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eb4cf0-c569-4a63-8c0a-2ecc7ec12618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1adff455-0fa1-432c-86c0-27d88fe37965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a6cbd8-0fae-4647-b73d-9ca840a80bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b83f7a-25a1-42f9-b808-a148440de2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e7319c-cddf-4afe-82a9-2aafc0acb7e0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c917bdac-96f2-49c1-a38a-758c114f7568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41930f16-4076-4f7d-855e-1ad4a8cf8ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584d248e-7fd2-4236-b0dc-9ebf40641152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e6eef1-183b-426c-9984-568de4dcdf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455255fa-2a6f-46fe-a2be-05f58cb0546d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b170e-ec20-4728-957e-90b4d1d0f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237a5743-2258-48a5-95dc-7c65679d5550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b3d84b-9de7-43e1-9764-e542b19e6ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ae3696-8bf7-4e35-a184-9c285f68e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95ea5d1-bcb9-4fb0-9db0-955c40901e46",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff36f3e-5099-4ecd-970d-fd83fbb0dd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7511ab-0c2f-4b79-a58e-442fa0a31eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aae414-df9b-4b2a-baed-d364a0ac84f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a9bef2-0558-44e9-a9d6-d592c8f29cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac67c87-ae3c-451b-9489-98241ffb3a49",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8008e8-82d0-40c0-aec7-fe855c641bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7ed694-30ea-4bc6-b6f1-511745a7471b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7619d96c-f746-4308-ab9c-6be994b39c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c814819-88f9-4e79-808c-84bd440a4b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672092b0-ad7c-4b3f-877f-37648ef93782",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e07a7e0-ae60-4d38-bb32-d2dac3fbeaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e0ad1d-75e8-4ae1-9d55-c7d0640cadc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3f5679-7b3c-436b-95f5-9428a87b7f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7497369-4772-4af4-8a3d-fc500040d7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ce7adf-d97f-4165-9bd7-0d9db97134dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a08fb-dc57-4c02-ae08-3a62ea90f62f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e3ee00-79f8-4535-9178-19cb88327bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2823b722-8e81-4f73-ad47-b7b47dadd0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb9ee0-bc9e-4f42-b47a-f8c52b06760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422064cc-d3b4-46c2-932a-f430166d2e0a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb31f933-923c-4aad-b548-701cbe4f9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69ed6cb-9b7c-4b10-8af1-ec212d7df5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6445182-07a3-476b-94db-1e95931a55c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11150a1c-f93a-4e37-8fe5-4a43a5852cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e7818a-cf1e-4541-8cda-469053d71cf0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efcc64d-e3b7-45e8-8af4-19b29d73e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e04194-a786-4b81-9298-39180d7b92e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d5c966-38db-4ba3-905f-1475cdea0d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a094a9-b3e1-4ab4-982a-2af2e51d2776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8789f51-5dd4-447f-9627-d31a06c69cb7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6392c072-02dc-4c6d-bbd3-bf34ec05bca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075e7d61-93cb-4611-89de-61bfc7813d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61065729-292f-425d-8486-9a39fc9aced3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abef005-c0bc-48b6-b8cd-82c44c2652ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5f790a-7cf1-4639-b9a3-1dbf7a9007ef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59ef33a-6576-49f8-9ec3-defa73c0e9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b314c84d-2885-40d5-9dc0-b11476138725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d65e8-22a3-47c6-91e4-20f319412108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a85c806-30d8-4757-8c43-7010ffd09749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd4bb21-df4c-4919-b43f-bdd4c4a2e2f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cadbed-46a4-40dd-8dbd-d05235cc89f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ca60d0-1288-49be-a648-0bd1a0e0010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8a304d-9dd9-41c4-a183-dfa48565178f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86291f14-8b06-4ac4-ad80-2cb1d35187d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764b5b0b-f82d-4e0c-ba9d-ffc3caa74266",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079de19-c0aa-4858-ab65-cdd633408905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad4400b-4cce-41b1-b048-2bc25906d9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5012593e-114f-45d9-9089-ba3deb1185c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e33c3-e808-4d8c-9881-761511b91fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6214fb4f-c745-4466-ac72-219a92752f99",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f788e7e-e70e-4042-97ff-d5ff9ff8f573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8042fad-8c61-47ba-9096-4064502ef702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28600a85-5514-420a-9765-b423d1d2383f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f61e9f-d48e-4f0e-b5dd-4e6e74236097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49053b40-ed4d-4a2a-871d-e337b8197981",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a950fbc-8327-4946-a138-c7a70810bc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b7b9d2-c65e-4a2a-b61c-1820dcb71946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8775cb95-f260-4374-b86b-cef8ddad4996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3141c911-d1aa-46c1-9c09-c6d19c1490e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f824074b-8a8a-4227-a63f-bd04c58ad454",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd15ced-f525-464d-abd5-d3e0664c253b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b74eae-741c-4ead-b443-71f848686049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748e8fb-3074-47ed-b782-b5d1999af27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2fb5e6-63bd-4bcb-8ffc-e31fd1882f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9a6aa5-a5fe-488c-af49-6c1d9bf37aa4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee67e091-ba0a-4391-a682-2e474c55ff93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c80fa4f-8a05-4729-a5a1-2815073bfb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b60130-21e9-40a6-be9e-f7eefd9d24e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75683de-5408-4e2f-af3c-ece68d9a1fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d8d0f6-5ea4-4209-a695-d9da48e85fdd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76908b1f-0d4a-42a9-89a2-56cbd8275dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d71181-3d7f-444e-9f77-48b5e6e2305c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbfb6e5-5bea-40fd-a460-be4ece3a564b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0bc53f-cc7c-4874-8bab-ccd0cf372bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88514e9a-fbec-4e3f-a232-988aa1254af0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6bfc3a-dc34-44f5-9bf9-5b1617745520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a49fcf54-a25e-416d-8ca7-0380d2275c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60cf1b6-6edd-4014-81b0-9e29424f6942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8feb77-a5b2-45b4-8901-4787391fe667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22bd9be-6155-4d7e-b971-3be3b12a63dd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff11407-0b63-4894-b5c8-6f1f2c7eef47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fcdbf4a-e613-4807-9eae-dedf432a0a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e04141e-79b4-4151-900b-f99424f4954e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04028fb-e44b-46e3-87e7-998ad2326039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab212f0-0d09-4cbf-acaf-e05186e1cf1b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34ec23d-964c-49c9-aeca-ebe1b94b5f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894d64d9-5617-463e-9c70-a05f72609bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a4a762-ec5a-4c2a-aab4-d5ce3118ff7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c73ec71-47f0-43de-9177-6a2cfb95f7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309cfc7d-98fd-4d55-8544-c39e3e6f679d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1281a39-a7cc-45b3-9f9c-8ead1a42e723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6597c80-b1b5-4079-898b-18ba403583a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134b29b-2354-44e6-bdf1-8c46f0c8132e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c525e2e-e3dd-4b5e-90de-af7d699c2aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddab0530-6135-4eca-9771-08c1bea105fd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a166a27f-f12b-41d0-96dd-14a063154a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c5a8d5-1cf2-4a07-9249-e9d24c0220ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071dfcbf-b6f8-4a5a-adda-f8e494bda9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdaa09a-072b-49ef-90a7-48247379ea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef87a54e-2938-49c7-9765-5ee559d4e058",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647c0f51-0531-4b3f-814a-9be040d55369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f87316c-1880-4ea0-ba48-409e221233c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed111140-7018-4c92-b2d5-8fdb06628fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f2dcc-fec5-4513-8104-4766189287a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6d0845-83b5-4563-a06a-201d649bf9c5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec253c-5f69-41c0-8d32-6d61a3684425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24d8daf-c21e-4c59-8663-d6b8acf36617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a811556-7d65-48d4-bdf6-99ab03b419fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870a9124-4722-43c2-849d-1efa878a639c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a36ed47-5e6d-4378-b037-b0fc3cc80c44",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49f1502-1786-4b09-bc19-f0b64d6f3650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62ec8b9-51e4-4cc1-a435-9dcde31b5e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6605ec6d-716c-4e44-8d09-23f9dd36df08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daa018b-190b-4685-aa50-f5738feee9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36e21a-b295-4592-9cc0-827497516036",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccdd00b-e1d3-40ce-a58a-f3683e573b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022a8410-05e0-4a0e-88fe-5619c8843860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1f6581-f121-4362-93f2-be6790eebb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbee3af7-b19a-49a2-9f7d-606ce438e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4223ffa2-c297-46fd-8c8b-609e6ecf4f00",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ce98a-4024-45fb-9a29-100dbaafea96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cc2c19-263c-41fe-ab68-a8a02606f8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e1baa7-0470-46ba-b1ef-79d04e13d2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def977de-592a-4381-b2b0-5cf2ae4321af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7833745-a6fc-4ead-a7b3-97939375bc33",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a86bc-303d-4e91-a365-c77c9fe40a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e57de0-31cc-4201-a99e-6926584c7eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27a9937-9b3d-410e-b4f1-2bb2ba02d72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15232b89-5762-4f3f-8caa-e895b5abbd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c1a59-403a-470e-bcee-b45aada35da6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faf607d-4cd6-435b-9c40-012511cc1082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4773c775-db14-48e5-a429-c1915dc1afcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428ab543-fb99-44f9-b9b6-3ad092533642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2c7586-846a-483e-b30c-5c264e1987a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc47ab2-6919-41ff-808c-aa7a2b25423b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d92081-b60d-4a91-82dd-a313b4a971d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b171b5-baa9-413d-bf9e-cb9a3363fcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01d60bb-cc57-4a37-85db-bee8957c14fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21693ea-ffa0-4a61-a42b-cf958ff504ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04dc615-f789-482d-83a9-114234d54215",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e02b12-af62-42b1-97e1-486402d88651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee202fe-cc79-438a-a5c6-4639ae299bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e0ec26-2337-4d57-8589-2b9254982e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6045850-61b5-4a13-b1dd-7fdf6150b442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a87e008-80f1-48bb-9331-2f78e88ec207",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de873e4-d6e8-4bcb-9f67-4413de5d37e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529c2342-bf90-493b-a9a6-6f4ca18c7d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccebc87e-7a90-4fe1-aa4b-5d7451fcc19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd03c44-6921-4446-9d4a-555066568e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2019904c-c694-4589-bf35-0342ac678ecf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd54434-5306-4fa6-a0fd-b6ac159c594e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5d06f7-643d-477d-b291-a5b245a11cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76019c11-51a7-4278-9a16-e6789ee16933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e818c052-d2db-460b-a111-2a92ceacfa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0304e99b-3256-4310-8739-2d732053a089",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9407387b-d5ce-4e74-ab35-27e7307d1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d776f58f-659e-4952-8971-63bb33ee52e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7f6b98-8c70-43c5-be84-459c88ab6242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a76174-13da-4eaf-924c-5ca8676ff76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465a9989-2335-4118-8c91-75854e223b19",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28768d8-edbb-4b94-89c6-ff98e7eb433a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdc7ade-92f0-4b7b-b69b-f7a30e5d412e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c191ed-1f59-448b-b4b4-d3cfaa04f3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e19cfad-f5a5-4632-bfb8-ce8c37fd3288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59546bea-2420-467d-a412-7777b87b6d1d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24f69a-d768-41a0-a9e3-bce982ec0b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6956fb7b-c868-4497-a4dc-1988f4912ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dea788e-18c9-4828-bda1-f6f0a1a09b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028d5234-2bd7-4046-8318-e26e0f35bc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58183a1-fb7d-4677-bd14-b09b1dedb7b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db6f6c-2937-453f-8b66-1d82bbe8d197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b0acd9-247a-4f1f-af67-6dd12d3e5fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1d3fae-a1c6-432e-a9db-9dd4fd76afaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b78049-d17d-4eae-b7cf-a17cf6bee776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b741cc45-1b84-4e00-8610-ba522b41939b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d00af1f-8be6-41b7-8112-afe03c293fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107c5ce0-7ba8-474c-91b7-d5276a22c066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dac29c-e627-49d0-ac16-9eabc91ee94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd5c9d6-dd95-4c75-9222-dc36413be4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f4575-16cc-49e7-9356-e2111bef2ae9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4169b6-8b6d-4065-b890-0247d9db20bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86d5356-1ab4-4ae2-9b50-176caaf01992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4227d741-0c59-4464-bc5c-d6bc3623cdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45771777-52db-4057-b7a7-0dda18ea0270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9f9d00-011f-4397-bc19-48e7f42fe8a9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031cd1d8-2971-4f1b-9633-6fa166678be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032bef1e-835c-40aa-908f-ee6ccc63d2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da4f4e0-f395-40f1-b9b4-113d55183fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c1d826-7c03-421a-a200-aab64cea74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26d90c7-a04d-47c8-807f-c581805a4506",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e60147-94e0-4cc3-bf1f-6aa2be2d4f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd64320-1f30-4d22-a265-4f52b3b73b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123f6920-91fd-4494-ac9d-70c40cda0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbd80a9-49af-4001-adec-a930146260c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c348474-7f4b-4778-bc5f-c284a31e0f50",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed86d18f-a48d-4aff-9600-56f43a230d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6866cd-5a0f-4c98-b387-900e2a4540a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9f3eda-6aa8-4dd2-9ed5-477ccb517c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa0a671-c5c4-41d3-b9bb-ea63c6700767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b25307d-5776-4d7b-925b-ea979feed83c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b23c98c-b4aa-424a-bea4-c56ccc612f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef797f6f-368e-4a95-8b9f-602d1999195a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c88630-e619-4058-8bf8-d2df21ecc395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9db536-be1e-4b02-974c-30a1c8c4f662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f280b07-234d-423f-bbe9-1e42363bdd79",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468d013-87c2-432f-949d-9473677b2985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2fc004-1917-45ee-a903-fc58fe74fc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6992bd-072a-4065-be42-1bbba7890938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456d2445-7849-4726-8e71-5cb2a53969de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692b2eef-d77b-4605-8120-bb02130c43c9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3facbf5-4b99-4cdb-91f6-5c4b4b1d2baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2475232-6311-4805-976d-e7de9a39da7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab945e7-a936-4341-ba84-bfdb7cc00f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9815124c-648a-455d-9818-4a3b74581cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1bedc8-f951-4cc6-b4e3-a6409eebeae1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a5764f-5c49-4365-a882-bf2bb1c56aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48be402c-3370-4f44-8ca5-76c97ee54712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9404a307-ff11-47e9-acad-a0dbb18b2a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e919c5b4-9878-4592-a241-13f3992cc3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12394bc8-78af-4482-9d67-3ff70327dd77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b644bc-88d6-4e3f-a8b9-e5d81b810b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70604f16-9739-47fd-856c-2750666c7ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cebec08-5d79-471b-ac15-a3af1df757bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d254f62-db65-41aa-a80c-553719f9c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0ed58d-1c36-47ea-8981-64d4f7b38a12",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7c61e-4986-4116-a4a0-8bdc4a8661cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb338d2-d434-4336-87d2-a51ca3cc36cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18d4315-bb0a-4a11-8dde-41a93cef37ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9419ea-05fa-4bfa-a9ee-2c7006757f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0baf346-6f7a-4c9a-a9c8-cfb2417e266a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af5a1d-c9ea-4a2e-93d1-76003b84fdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99998a19-640f-4e46-be01-7ed89b5274e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4771017e-9e6e-406a-abe6-5cffcfaa1f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f0b58d-acc2-4a18-8352-78dcff426956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5713562d-8651-48cb-b0fc-a7b54a0c856e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dd45bd-8385-4379-b630-0dfed314b3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6654f8a1-7ef5-44dc-80c7-b17f064f17a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba1cff0-1f2f-4cd3-ba12-0d5614b7755c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c30d0-86dd-4ea3-a4cc-4d545d02e9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141b1004-3a27-4a5c-83ad-3db14449ff16",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc80df6c-666e-4a48-8228-ff96fa0f532e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfda177-56eb-415e-acba-51980305f280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c526596-3c67-4b87-8988-a1b4192ea763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ba96f3-64ce-449e-99fc-f496a8b29e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce72f6b8-29aa-45a5-9c87-27155ca02c7d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf7a0f-ed06-4138-af26-59df3ee53c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aa1926-f3ee-41f9-a27e-f296d211e733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c1953c-d837-40d8-acaf-e300f433000c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c665a95-e7f7-4152-ba1c-fcb94e048b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3067d17c-9550-46af-b381-8042478208c4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2382ebe7-5de2-46d0-bc31-7bed38cff63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d875b982-d811-4304-ad7b-93e7fc88626e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aa3341-6855-4fdf-bc13-f1e832a94954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3217f28b-4a1b-4000-bf2d-30e52af2d90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df7ad0d-7e78-4bde-b1c9-3f635fa0c3a3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1c662b-2e6e-471e-8df8-005e54756b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d1fadf-499e-4d40-919a-0d2246ce4f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede3b5de-cb9c-48c3-8cf9-37eaff2f7c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb49d25a-20a3-487e-a72a-91dd37018be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f711582-be8b-4e6e-8003-c3f12267104b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45e367b-5af8-483f-a75a-e098aeeffeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a8d006-2b1d-4efe-9de8-79c9ce7d9bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb1c9ae-5b0a-4931-9c85-b410e6fb75db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399badcb-6998-4ee4-bb30-5d53aa116c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3e5c0c-fc32-47d0-9558-dc60247a23e8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452940a2-2d16-4204-8007-408bb241bf67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b83da8-1058-4585-8d58-e0292fd08d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41474f4-43df-40ea-b354-ba515373e7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d299db1-6e32-40e5-9399-e0e4798ff3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee2c6a1-2cd8-423b-b26a-b8f4c465dd7f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67730297-354e-44b3-843d-ffefd0bd4c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2157a8c-0875-4017-b989-ee5ac01d9a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b744fb-8567-41bf-9158-1d961360c274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff61d3d-e31f-487e-a4be-187c874f1765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819fdbcf-8007-467f-8d57-7deaf2bffc80",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0dc7fe-016f-4d21-8f03-43a3e6a609cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b3bd78-29ad-4c59-9e9c-34526daa0bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5954ee51-6904-4b50-a030-b2a36bea60d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b76d0b9-8d62-4c62-b15c-7f0e3d288faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bdd7bc-8167-4c48-9fbd-9811a5c4bf45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a02319-a24b-4ce1-86f6-65ba6c4df350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54649ed8-8a09-4f79-80cc-99a3b94e967e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4847e6e5-cedc-4ed2-aeaa-8e2cc0ea41f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379f61b2-7b6e-4110-916b-f578f9571879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fb9037-b644-4677-a453-b3588ab90ea2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ae456f-1eff-499b-b7dd-b86c8dc54f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dfa1a4-a974-4634-a0bd-5a53ac3e0b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4ad98b-4ec6-4176-a44e-0d86adb7d483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22852b06-ddd1-4dec-8b7a-897996a70088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3da3b3b-ba87-415e-b7f9-bea376843634",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae28e98-8aee-4580-80f9-3b682a6c9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b18825-752a-4931-954b-0fa3ec84bf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba3b51b-1da8-42bf-a6f7-314496ee0b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43899d6-8e22-4212-8fcb-24ce8d43f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649f0704-9d59-458b-b1ea-6c5db537dcf1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ee03bf-38bd-4024-a0cb-9f66a51d53ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c55258-a3c5-48ab-b47d-7437e1474805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db03af14-de05-4ba8-8034-2cab4a344467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca0bfb9-4b89-4006-8493-29a2c029f35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9654118-8700-477e-a0b7-687bd0b1755c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22ed1f1-2c57-4a53-a5a6-8485eaa86ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6395b1-b617-4d83-94a1-14d760192db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b5a8b-112c-4cb5-8bcb-170091a64003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedad372-11b1-4c95-a601-b017041e1191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbf786f-6493-4fbb-81d8-26c7bd67bfce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c93dfc2-6cb7-4e81-947b-83694ec16d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08340491-1a26-43d6-8286-715992bfa40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4365eabe-d508-4f37-bb17-0362a308809a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad71e4-7081-481b-a02d-2839f8de4c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3976488a-b850-402c-866c-6f00698dedac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eadc173-d169-4b73-9433-99ee38b13168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314294c6-5c6b-41bd-87ea-914d928614a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60223501-ca2d-46a6-953c-4e4b94291e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc25a24-c345-4a7e-890a-978e8f69085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f83d3c6-b37f-4837-ad7a-d358875325c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0edeff4-bc0d-44f8-a64e-5d09e714ccd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eddaedb-8526-45e8-8edd-932b8deba923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27eb27af-ef67-4f0b-8e6d-21ef2c9ee2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace6bad3-9f19-4078-ab46-a3b1f217a7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0031f579-e741-4cd7-bfe2-d1caefcd2ab1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ae07d8-e0bc-42b5-bbf6-b88e8b76450b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9754a5dd-d7f5-40a2-8691-ac189b1f2b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94461d79-69c5-421c-8fa7-adcc4b22155f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b65629d-5289-4cb2-bc26-563ee2b3f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808e6720-533e-4284-a527-b14b18a03ab9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4694e1ef-e1fc-4785-8de8-64b558e28bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac52598d-fed8-4996-9a36-0f071bd6469c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05995aaa-a664-45bf-8dd7-5d5fd4c8f56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40b822e-fb48-40b4-bf34-4c3d7d54e387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e291718-e506-4f7f-a251-687d9268bf28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf46785-8eee-42fd-a2a8-51095349c829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf4acc8-820b-46d3-85d4-afa09ab01b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5370c8d4-22b1-496f-bb3e-740b41b83b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05a0fc9-3946-43a1-a334-c4d6eab06958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a60c81-107d-4d41-ad8b-6e40c60009e4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e956986-f07d-47ed-b5b0-aeb1c68f5144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee91f297-4099-4ee0-8854-101cbd2c7f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663fcdb7-c4fd-473b-942c-0997bcdd90b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702252db-5fbe-4869-845d-cbbef5da3478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e977d7-ddc8-43ad-a323-da1d1203d209",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bef6bb1-ffe0-4d5f-9993-1f883655b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd235e4-ca24-499c-a521-253dcb9da90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6028aa0-b523-4c64-be32-7b02c30f4525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4274763e-cd67-4a57-b6f1-295197315762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3240f6-c590-4432-8ad9-44afeb84682c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6aa761-e443-4153-8bdd-ff1fa1e47304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb4856d-cac3-41e2-abea-0489f6cda8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d51f6e3-1155-4b1d-b8f6-24782cb9380a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674efcd6-1d6e-4e21-95fd-163567ff57f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc3e00a-b254-4dc9-8c07-5b5d2b86e165",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699109c3-ba38-4db7-8702-73ba81a743bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5946e3-ed66-42db-8077-4c4d1673c9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6421eee4-f248-4e58-b81e-e6dd38cc9051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8456d5-c234-4595-96b9-0a1b42be1dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768d00ce-4f78-4410-bcc0-8b61b593d141",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb8aedb-380d-46c0-acfa-5549c7cb5507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec05fe1-a79d-4b24-9b69-d9c88175fd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31a65f-abf6-4c5c-a9e5-49286ffde488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db660284-bfda-42eb-aece-ddaa9192e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f332eb-99c9-451c-a5e8-fd3d1b1e4933",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6399205-3599-4d0d-8c0a-7af2114de5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e77430d-a6e1-48c9-91dc-50108e1c3b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5215911-8414-4052-a270-2abae943b33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94334a9f-e9e3-4b82-98a2-0886314035a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b42efb-e6aa-4392-9625-cf3f38f09a1a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf12499-d829-4ce6-bb97-5adf57d41442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d728eb12-d05e-4a5e-9b50-e97be6becccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0978c6-0d00-41ee-baf4-07a471a3d127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63abd2dc-235e-478e-aaec-da4ce3623743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e975a43-8306-4c3d-9ee9-0c750dcc0ff5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44e451b-493a-40da-80c5-8b415f47a090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95862b2f-7337-4485-9e74-95f3ea5f4edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2036e3-c495-4f8f-a2a3-fa832e916693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2b4838-5d46-4280-9123-0fed35741100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a272cb-895f-4ec5-a5c2-3a27de29c058",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c203fe2-c2ab-4601-bbb3-d08de740ab1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798326f2-9475-441a-8de6-8d5de2e567ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6640222-b430-45ee-a866-256d22c9c75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d48bdef-6cb8-4bb6-82c6-8d919826e945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb9264-601a-4f6c-8e3d-78f5323602de",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c82bfd6-72e3-49c9-b6ca-3da86fa1ca11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c664d0-1bc2-4c9c-9695-7bc93e779620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e39fd99-e8a1-4f43-b2f7-ab0b2e4006fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3419fe24-9abc-45a6-b6c9-205a76dc4d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132364f1-b781-4142-8c13-3ecf7b821885",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d53d33-aacb-43bf-9d82-d47f01e635e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be8af57-6e80-47a1-9aa6-ae039399ae94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c4537d-c51a-4722-9c5c-5e93c0d52772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73421fe8-85fa-412f-bf5a-e71ebf33f0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b26b21-5186-4993-872b-cba02e042e34",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900f1ac-312e-40e6-813b-b2eb0da80ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14029bc8-7a4f-4818-83af-bf530302e81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb719db8-d5db-4f54-aaeb-292e75e8dd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a370d6-8bf6-4ea8-8531-d288708bdcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adbdb9c-daf5-4e5b-9b33-a09b54031f02",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78625156-bfa9-4a6c-87dd-275b2b1222ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629771d1-71a4-4645-b469-f918dbcdd8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40df380-b83d-494d-96a5-e36cc5c5b484",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d3456c-f28d-44c5-a3d1-2c37d53f619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c56c3e-6121-43cd-ba00-e40fb3be9994",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091854e7-e9a7-429e-94bd-3163f78999ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab92a6fc-bfa4-4516-960c-cb28c8866253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bfee5a-e3e7-4eb6-9f46-05066f0aed82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec96ab3-9308-4eae-a738-806a70b34610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1158c04e-34c7-4153-89d8-85358b8ee232",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66504413-c626-425c-bcbe-550ed37be298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee962c3e-30ec-4f22-8b30-a90358123794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d037599-cecb-4230-9bc9-677b3470b4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b339e6d6-5dd7-45f1-86d6-da5e67ed4163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbccc1a7-e7e1-49ad-a507-088cc8a4ac27",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139a1a61-2852-4ccd-97bb-83d9d5ec7fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c88e896-91c5-4089-81ee-3dffe18e86f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c3ba6-616f-430e-89d7-2972c1276715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5142e1b4-9c4a-4436-b317-3b6f0c7be4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2bcfff-e99a-4ff3-852a-c9d22be52562",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512ef98e-fdf9-42c9-9363-67800c43f845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1512931a-0e72-40c3-a105-546c137c7622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923b8aba-0508-4648-86fa-eb6d14dfb7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d0bb4b-cf12-458f-849b-951fa67873d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7620bbee-2fd0-4b56-b70a-a475ca746014",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c46cb9f-a992-42bd-9e22-335416c3abf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1768871e-180d-471c-af3f-4ecedc0d4729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc013cf0-f75d-4e58-8536-de02868329a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b3982-df86-4644-a0be-d4f346b4f812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f85aa02-388a-4e6e-b3f4-8c48ab7d0a9e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d368cb-5176-40a2-aa47-8d29ab07b6e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c051b4c-61b8-4885-ad50-078a27cf2620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12e0bc1-f53a-4c9e-a8f4-42baea84b097",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955d4887-4ac7-4f7a-8ab9-1f54b2c587a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46cfeb6-1e53-4630-9515-16906464d9be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4d70e3-f597-4b11-9803-adfd22d6fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2356f5d-33fa-4e4a-bc6e-afbb9ec43074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64d607a-8926-4343-bef1-171b096dbf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5ad7d2-7a29-45a2-b733-8325e4dca8f3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a25f730-e93d-43e1-ab52-05b291d5b2b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a45e1535-d621-4504-afcf-672c0f99a41e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74da4200-745d-40f4-a775-2891bc807a25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3b368f1-2d49-4b79-8928-50a8fd6e1748"
                    }
                  }
                ]
              },
              {
                "id": "b8a573d3-4f3d-4561-8de6-69197905b96a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44a169d2-6b39-4c9c-ae0a-adf90f39550d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca8bfc1-b090-437b-ac9f-641ee60b7691",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b13b4323-c068-4bb4-8b51-8343b61598de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d81962-a1f5-4210-8c94-0bcc9a3d673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66020767-0f2e-4414-823c-e1c43a51d04b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bbb697f-5023-4ba9-b39e-87d2f9dd0ff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe462c6-8f6e-417b-8f2c-29f780772947"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45a0774-b3bf-4f38-8a43-e4585cc6a5b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97f44460-adf1-4360-8ed8-399f1cd4f477"
                    }
                  }
                ]
              },
              {
                "id": "8bb68967-fe83-4eea-94da-ef0a5d19fd82",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f8dd633-9cdb-4a01-aa66-e9ece28114a5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98e3d6-86bc-481a-8038-2baca679f14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "64d2ee13-9b4f-496b-95f2-c8b1691c2e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f713b02-d960-4282-bd69-08f518311619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fab9d6-dcfd-4205-b512-4abdc72bc8b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8cbbe42a-85ad-4476-91bf-5fa4f54d0fb0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1afbdfb5-7238-4363-8ed6-0c49f8d460c8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed3f7be9-8650-4b71-bfaa-e0d62c6f909c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "863526a7-e4df-4232-9000-1356b9830c3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d9a4dd-dd09-43c3-aa52-c068736ecb4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1257a150-2dee-48ae-a004-1048b172d056"
                    }
                  }
                ]
              },
              {
                "id": "c847031b-4a2f-4682-abda-783ea3037f8a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b4d85b-6f04-4d27-b317-8f50c28be41b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7edd796c-348a-4fbe-9b41-54234c566be6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b32586f-32b2-49e0-95a4-e43e8bb69cc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2a71880-5630-4761-8d69-2483db484651"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2321d3d7-7a0a-48e8-b393-44cac6108b43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "55e90f4b-6014-475f-96dc-d1689482970b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b54fe698-54f3-46a1-9dc9-c3206b7cf335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e65df9a-71f0-4e41-bc2d-8baed0ba11e0"
            }
          }
        ]
      },
      {
        "id": "6cbf9b7c-49b3-4309-8ea5-e37d8567371d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "133fac2e-9bf0-49d8-8a18-aa1e105c1c51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51175ae9-79cc-47b4-9e16-2aacabf3635a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d41a938b-56c8-492e-94be-7408292cc6b1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5cc722-3759-4692-8a81-01407326cd79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb8b9ac5-014e-499f-b16a-bbedca132ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313791de-9fb1-4fae-a2d9-94c65f70b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1da0f751-bd84-4baa-b64c-03170deab615"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a41c6528-c747-472d-bea9-bd61c374cf56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "999ea158-5a78-45f2-ad94-626d9ef885bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c2be111-1438-4594-a2d2-9f7e19488ff5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7c8be90-cf07-4fd5-9b98-f5e27bf8e0cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6eed2ef-1540-4637-926b-a4562c7ab046",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b0a4f2cf-ff66-4d68-8138-7ed5c4a33e53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2955bf7-4994-4b1f-8158-1c6452aee059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81ff2709-5b2e-46a6-88d2-ec4cb599e55d"
            }
          }
        ]
      },
      {
        "id": "be462ffd-a1d1-4195-abaa-7bd3d65f3d03",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7704af2c-56db-452a-b1a4-1995f6241ef2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80512fa8-49f0-4285-a854-4309571aba9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "683025db-77c3-4135-82e7-2e29f04d6e5e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281026a7-7c79-43ea-8564-edd95ff7a1bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b65c42-ef9d-4752-aa79-7797f527c574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2f4755-9792-472a-b38c-6254eb8d6322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e953c42-c0d1-4ddd-889e-c0bb3aabc23d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2081fab-155c-43e4-b535-a4eb6fde9a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09459fd4-b852-4298-a49f-e1c241c7d9b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2237c5f0-cb6a-437e-82ce-8a2704be5851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb0f9bfa-c0dd-41af-be73-97ba2bf66c8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51a8f67c-b32d-4cac-80a0-d86cfe7b6305",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c06fdfd-26ed-4c2f-979f-4dfc1f6134aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "861121ee-f3ed-479d-8409-150efa87d672",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0eb1e9c-6cf7-4dc4-8896-a77978926a03"
            }
          }
        ]
      },
      {
        "id": "7828ea1c-b5b2-4726-8f7b-e0b329fa687a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "82a45d93-30cb-4ba5-8b62-39a568fd581f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9bf28b8-e4c1-4f68-a6d5-fe8bce39037a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9157f15-c652-4368-90f6-bb7323d0f9e2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd3aeb-ed7d-4336-b901-4746bc208062",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7075a0-6dc3-4687-b599-324804536a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e44447-9db5-4537-8bbc-31b872cb7638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d49a08ec-1323-4ab6-a11d-d9f5c13a442d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b7bb55-77ef-4e07-b928-9fb241566f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7add63f1-173c-45ce-814e-a91f95a84988"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a1a9d38-f0d4-4761-89e3-3f71e8a67c0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8be4aad8-13c3-4d0c-b5dd-cef8a2e3faa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e22bdbed-8c55-4300-a7ea-d7ddfe1242c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c1f60e0-52a9-433f-a8d0-6103970bb314"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ccb645e-f44c-4624-9d50-e7a42a6c37fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a7de0d0-4e40-4168-9cf4-f4f891ad4bac"
            }
          }
        ]
      },
      {
        "id": "ab721e54-d2cb-4d58-b4ec-283354c95f52",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "809bbed1-b9b9-43af-a368-d390b0fef1ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92ed8546-570f-4ee1-bcf0-b41f0823152f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8c5ab17-92ed-470d-9124-7d9b526d31eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db9dc9d9-c81f-4555-a7d3-eba8e190614e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd6f70fb-b929-4f50-ac0f-419f4799da76",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.74999999999999,
      "responseMin": 14,
      "responseMax": 358,
      "responseSd": 24.541804661767223,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693873929809,
      "completed": 1693873954466
    },
    "executions": [
      {
        "id": "0f97cae3-4bbb-4c8a-81c0-09b24e225098",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "12a1b311-e1ee-4d68-82a1-ca62fdcdea2f",
          "httpRequestId": "903493f8-6a5e-48bc-a60d-fd635d274cc5"
        },
        "item": {
          "id": "0f97cae3-4bbb-4c8a-81c0-09b24e225098",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ca70d88b-2c16-49a9-ae3c-7e43763f5587",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "a6ae37f0-5599-4a83-9d7d-71baa4056249",
        "cursor": {
          "ref": "22a7f27b-26f8-465d-8ac1-838a33d59ea7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "edacf947-db21-4b08-b6d5-2bdcb7e89968"
        },
        "item": {
          "id": "a6ae37f0-5599-4a83-9d7d-71baa4056249",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c73fdeb3-b193-442a-853b-67351ed70acb",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "a1669f6f-5a3c-4f1f-8036-26d7bb4adc7b",
        "cursor": {
          "ref": "e37055c2-b420-45d6-93da-2316910e675c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2d123a1e-54a4-481b-ae89-42b8ad3d357e"
        },
        "item": {
          "id": "a1669f6f-5a3c-4f1f-8036-26d7bb4adc7b",
          "name": "did_json"
        },
        "response": {
          "id": "e365fd7d-5510-4009-a916-a66f8a6b110a",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c4707-ad8b-4ffc-8939-0759875a459a",
        "cursor": {
          "ref": "85326911-e3f3-40d9-adea-32a9cd6ef7b8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ad9a93b-66f3-4d1a-9f72-e8b32ef11429"
        },
        "item": {
          "id": "bb3c4707-ad8b-4ffc-8939-0759875a459a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b0744b9-91ea-4934-99ea-db98e7ca3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c4707-ad8b-4ffc-8939-0759875a459a",
        "cursor": {
          "ref": "85326911-e3f3-40d9-adea-32a9cd6ef7b8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ad9a93b-66f3-4d1a-9f72-e8b32ef11429"
        },
        "item": {
          "id": "bb3c4707-ad8b-4ffc-8939-0759875a459a",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b0744b9-91ea-4934-99ea-db98e7ca3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ef86d3-a883-4fcf-94ed-2d29cc646407",
        "cursor": {
          "ref": "762ffa36-ab65-402f-883b-a709d71b17fa",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "965094fb-ee3d-422f-b40f-e0bfec825a25"
        },
        "item": {
          "id": "09ef86d3-a883-4fcf-94ed-2d29cc646407",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa1019ce-7b2a-40ee-8dac-559e2c2606a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb4cce-e857-49ca-a02c-f3edd45678cf",
        "cursor": {
          "ref": "658a32da-2360-41dd-b1c6-fd348dafa9cb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f7316f4-0052-4b74-adcf-14a5fc96fca4"
        },
        "item": {
          "id": "fcdb4cce-e857-49ca-a02c-f3edd45678cf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af887cea-4981-4bed-b78f-14784d4becfd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41605ed0-1743-4c10-a338-995206a52fad",
        "cursor": {
          "ref": "920910ea-f787-4430-89ac-398ace4212c7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03a055b6-b5ae-41c3-8fd6-8e1bb263d147"
        },
        "item": {
          "id": "41605ed0-1743-4c10-a338-995206a52fad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "641159a1-2886-44a8-9721-9df31380d229",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61758cd9-92b3-45f2-81f2-427957fc3974",
        "cursor": {
          "ref": "399a19c2-99f3-430a-bfb3-1c9f8b40c99a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "95eee8af-37e4-410a-b7d9-12f27a32d8e8"
        },
        "item": {
          "id": "61758cd9-92b3-45f2-81f2-427957fc3974",
          "name": "identifiers"
        },
        "response": {
          "id": "5042b3ce-f321-4499-80a1-7da09440abf2",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d83891-93ae-44eb-b2ed-967bb079db9b",
        "cursor": {
          "ref": "66a205bc-045c-4a0b-a919-0f3f7742da5b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce284ff3-2e14-423d-916a-e45b6596580a"
        },
        "item": {
          "id": "53d83891-93ae-44eb-b2ed-967bb079db9b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6e6b1c72-7976-4d4c-aee6-e041d0d3bdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c0536-59ff-47fb-9f7e-e94def247005",
        "cursor": {
          "ref": "00d264b0-ed25-4c13-b78c-2394a8b025bb",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1cdfa22-57cd-44e7-8084-e61ff354a96f"
        },
        "item": {
          "id": "aa5c0536-59ff-47fb-9f7e-e94def247005",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7eb56231-c2e0-4d49-add1-007861ad5d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4554ea73-70c9-4213-a964-103e16045143",
        "cursor": {
          "ref": "37b257fb-8712-4624-b118-5cb7c60a7f30",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c0a806d-fd93-4084-b92f-a02a63264cfc"
        },
        "item": {
          "id": "4554ea73-70c9-4213-a964-103e16045143",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f72ed137-ff5d-4046-819c-62bb60a80011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3e201a-4808-4d2e-a5fb-0f6a586c141a",
        "cursor": {
          "ref": "84dfcd70-9e2a-4bbc-9829-c4f068726b36",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "caacb677-0a39-4df2-99bc-e12351205eb9"
        },
        "item": {
          "id": "9c3e201a-4808-4d2e-a5fb-0f6a586c141a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b776ca5b-8f08-40e7-ad22-cfaf3448bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df07e6a-e574-4347-9ee4-79156c95198b",
        "cursor": {
          "ref": "59b9a26d-c776-4c1e-9d8e-5820c8a2401e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5890f4cf-2530-4bac-978a-d4a9c434d2d9"
        },
        "item": {
          "id": "4df07e6a-e574-4347-9ee4-79156c95198b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f6aa060-4759-494a-beaa-cfe73f0d5421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e48982-ae3c-41c0-9ea5-ac1b9888ca8e",
        "cursor": {
          "ref": "b17eb76c-fe47-4c4e-9c67-7550c94868b8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f52b0dde-13e6-4c12-b959-39a05f4379c2"
        },
        "item": {
          "id": "18e48982-ae3c-41c0-9ea5-ac1b9888ca8e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8e38fe83-d03f-4716-b659-0542211694ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd25569-5290-4809-8b30-d78b84cfc4d0",
        "cursor": {
          "ref": "556675d7-325d-42b7-8d7f-cd893151e59e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c63c314d-600a-4d56-9379-b1fc4eefa7c7"
        },
        "item": {
          "id": "fbd25569-5290-4809-8b30-d78b84cfc4d0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5bbc002d-0cc7-4a27-9e1a-e749a17e2656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28705bc-ee4c-45d3-a531-ed656138644a",
        "cursor": {
          "ref": "0d7ad7d0-bee5-4454-8241-9e2214150f87",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b721eb56-d871-43b2-bf5a-d6c13a978892"
        },
        "item": {
          "id": "e28705bc-ee4c-45d3-a531-ed656138644a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d484d26-e87a-47dd-bd69-2c541f4a2f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c95e8f-76bd-46b8-ae68-87cbf67036e9",
        "cursor": {
          "ref": "4a1f5838-52aa-42b5-bd5f-7f89de8050a6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c8eaf871-781a-490c-b916-cd0c9d30fe83"
        },
        "item": {
          "id": "10c95e8f-76bd-46b8-ae68-87cbf67036e9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2732f815-d123-4439-86fa-f61503af6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72afecdf-5623-4d60-81f8-49ae88b1be62",
        "cursor": {
          "ref": "9b65afce-171f-4303-9e03-c9c1fc5e0d67",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45abe01a-17fb-43ac-92e8-07fffd2b2701"
        },
        "item": {
          "id": "72afecdf-5623-4d60-81f8-49ae88b1be62",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "04c448ec-027f-4ba3-8e53-c07ce0c53135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85407849-19d2-4f7b-b972-0391213ca0dc",
        "cursor": {
          "ref": "4fb53475-f9dd-466b-8550-60cc0b11949c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "486115a1-f03b-411d-ab7e-da19fdf9d9f9"
        },
        "item": {
          "id": "85407849-19d2-4f7b-b972-0391213ca0dc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a1e737f-65ec-4e62-b447-721d29e509e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0221603f-1252-4779-a366-27e0be03fd99",
        "cursor": {
          "ref": "e7fee004-b055-47c3-a8bb-bad83bc2e674",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "19475d7a-0a3b-4667-bc18-e13dbf605587"
        },
        "item": {
          "id": "0221603f-1252-4779-a366-27e0be03fd99",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91a1cca9-ac55-449b-b8cf-c62405b15267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df109078-e5be-4d52-a980-866a67d31360",
        "cursor": {
          "ref": "d1df78a1-711e-4207-9878-0cc0cf1f3d8e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3f98ad20-eaf6-4fa5-b5d3-c00e4c7c513c"
        },
        "item": {
          "id": "df109078-e5be-4d52-a980-866a67d31360",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff3d5ccf-939b-4831-ba03-b896a44f5ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e67eb-71b3-4994-a38f-d9f1c18d8359",
        "cursor": {
          "ref": "7d7755da-6a7c-40c2-b861-97cb6d3e6ba2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d8b6031a-85ad-4cb3-bf72-126f026e8597"
        },
        "item": {
          "id": "d85e67eb-71b3-4994-a38f-d9f1c18d8359",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5e7a498d-890d-4808-af7b-2a0ebc2ab81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e68e69f-ed40-463f-adf3-56f2d6f1e5c9",
        "cursor": {
          "ref": "3ed92835-381d-4d26-960f-ba15c6da3d32",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cee2079f-357f-4346-8363-8b2cb60ae7d9"
        },
        "item": {
          "id": "2e68e69f-ed40-463f-adf3-56f2d6f1e5c9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7410609b-cc41-46be-944a-3423cf425fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c9b70c-403e-4452-b26c-217b5143aeda",
        "cursor": {
          "ref": "d92fff92-b4c0-4263-aad6-9a48b067596a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "58b79976-4fdf-4a8e-841d-cb80cc618b9c"
        },
        "item": {
          "id": "98c9b70c-403e-4452-b26c-217b5143aeda",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "43088b17-c9fa-4818-bcf0-3af7e8b463fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962beccd-1b63-4d08-8c11-ae347f3ebaa7",
        "cursor": {
          "ref": "18c1226d-204f-4d03-8db6-d30399796ef0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b86fba30-5ded-4635-9006-8acc35d3a75b"
        },
        "item": {
          "id": "962beccd-1b63-4d08-8c11-ae347f3ebaa7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6de3945a-7a67-4664-aa5e-b1868a929468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2f94eb-21c5-4e6f-9b63-851f224a23d6",
        "cursor": {
          "ref": "6e45c5c2-4b1b-4eb1-91b6-ca9f0693f87b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fc2de561-f4d6-4dea-beb6-23bb8e44c27e"
        },
        "item": {
          "id": "be2f94eb-21c5-4e6f-9b63-851f224a23d6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7ada04af-5399-40b3-a207-0a735842d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2288e4ab-513e-4865-9545-dd7f63004d1a",
        "cursor": {
          "ref": "6a1c3f1b-979b-4b10-84ca-610997f6b754",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5279371b-6dac-4386-abb0-298258e3dd6a"
        },
        "item": {
          "id": "2288e4ab-513e-4865-9545-dd7f63004d1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c297c86d-1fd3-43fc-9418-7f73608eda0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978e06cd-46a7-4414-b1e0-3ca95df74f88",
        "cursor": {
          "ref": "b43f31f0-6d7e-4733-8b1f-c7045c3958d8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f4bd8a74-ba56-400e-be3f-9b5b2d95c841"
        },
        "item": {
          "id": "978e06cd-46a7-4414-b1e0-3ca95df74f88",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f829a885-0e7c-48da-95ef-7c92fe0a132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68741808-330a-4380-bfa4-7b0237e108b9",
        "cursor": {
          "ref": "5b559679-f2b3-43be-88fc-1c926c3a8ea3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "134fd2f1-253b-4d88-8353-a4cd0d16e08f"
        },
        "item": {
          "id": "68741808-330a-4380-bfa4-7b0237e108b9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "adf7e8ce-0617-49d0-9294-86800544ca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbd9293-9f04-4e4e-b9d8-70f8e92c1b83",
        "cursor": {
          "ref": "7d452624-4fc3-4dfa-9707-741d949e9571",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e352bc79-cf7f-42d5-9a6c-e07540f139f4"
        },
        "item": {
          "id": "2dbd9293-9f04-4e4e-b9d8-70f8e92c1b83",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e21f18e3-8639-40c0-9e0a-e429daeaa4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05e55a-6e78-4097-8f94-16fd8d01ad58",
        "cursor": {
          "ref": "4cbf81b3-ef1a-4c18-bf6c-150cb07fb24b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0006b00f-8d55-483f-b7c6-99f84477c653"
        },
        "item": {
          "id": "df05e55a-6e78-4097-8f94-16fd8d01ad58",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "87056001-5763-417b-b85d-65e78c3ddee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd4686-e289-43b6-8d82-37e78e968022",
        "cursor": {
          "ref": "e956e9e6-2ce9-494d-8f3b-a022eb5ad417",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cda8c545-9a1a-4f5f-9974-a56dbce1ed86"
        },
        "item": {
          "id": "5cfd4686-e289-43b6-8d82-37e78e968022",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c421881-dffa-4441-aa6c-42dabea30f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e709b6ed-caa1-4430-aaa4-d2a95a2ed369",
        "cursor": {
          "ref": "6c1ea7a7-0226-4869-8afa-6817226bd6a0",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb3e4f5d-712b-44cd-96cb-468a26fbbe8c"
        },
        "item": {
          "id": "e709b6ed-caa1-4430-aaa4-d2a95a2ed369",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ed0afa1b-41ec-4534-98a3-2d7b7ac5e1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b900d76-312d-48a6-b773-48dc41f60206",
        "cursor": {
          "ref": "f0991186-f8c6-47d6-98e5-56e7d6079536",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b67a4c6b-8d01-41d5-bfde-ea33a4a7435e"
        },
        "item": {
          "id": "4b900d76-312d-48a6-b773-48dc41f60206",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd3ec9cd-06ab-4751-8f78-32331203a3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc84af2c-1ebe-4ec6-afa7-6b42d0f9d7af",
        "cursor": {
          "ref": "4ceed24d-f25c-48bf-968c-04de195b44fe",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dc50b537-5e68-4938-a0f4-1fd89d46a9eb"
        },
        "item": {
          "id": "bc84af2c-1ebe-4ec6-afa7-6b42d0f9d7af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fcc40d66-1dde-4f5e-851b-f32ac7c9f9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e2c0cd-bfd9-4662-803c-00d009091b53",
        "cursor": {
          "ref": "cd2130dc-19c8-4861-b889-16acade93e55",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fbed1c6e-bd29-41bf-aaad-c2fe9479928e"
        },
        "item": {
          "id": "59e2c0cd-bfd9-4662-803c-00d009091b53",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "db6c6dcc-51a2-45d1-9582-fbce951ea3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f6c4dc-04ae-48f9-8c39-de477553943a",
        "cursor": {
          "ref": "53e5716e-bff1-43a2-80a3-aa8fbdf48bb2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "558f3e0e-e525-4cf7-bbb9-e6214639264f"
        },
        "item": {
          "id": "c4f6c4dc-04ae-48f9-8c39-de477553943a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "44c9943e-0a60-41b4-9fb1-00b376189383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f04e6f-a69a-46b9-a1a4-9774fc7822b6",
        "cursor": {
          "ref": "088a3f27-21a5-49d8-bf05-553b04425bc2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "486de8bc-eca4-47e2-94de-fcff713fbd56"
        },
        "item": {
          "id": "16f04e6f-a69a-46b9-a1a4-9774fc7822b6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b3f9e126-48ea-45fc-8b68-3f42efe7b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e8cdc-43fd-4f0f-8c93-5e80b50c9107",
        "cursor": {
          "ref": "3d50d9d8-5375-4c18-a770-92b4ad804ef9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c6ad6254-591b-41b4-8617-164da9499f4a"
        },
        "item": {
          "id": "1a1e8cdc-43fd-4f0f-8c93-5e80b50c9107",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "337a9c36-4db2-4e36-ab3c-b12b479e8ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae82c65-62c9-466b-977a-0a3217097def",
        "cursor": {
          "ref": "3a93a7f7-ac2e-483a-83a0-ad64a0b23edd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "055280e8-046a-4c4a-807f-c77496c4baba"
        },
        "item": {
          "id": "cae82c65-62c9-466b-977a-0a3217097def",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e17181d2-003c-4717-9c22-255a52e081c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e0da0-d237-4e8f-88ff-841d2d5fdd39",
        "cursor": {
          "ref": "423ad052-fe94-4ec5-8321-c75613459581",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8ab6e306-9689-4239-b866-36f36eae0865"
        },
        "item": {
          "id": "670e0da0-d237-4e8f-88ff-841d2d5fdd39",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "87140758-498f-4ce7-98af-4c89908893b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc20600-d096-406d-80e2-ffcb0773d997",
        "cursor": {
          "ref": "b229f841-3b8b-46c5-84e2-170499e4b66f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ad451219-1f37-4150-8d81-1b6774707823"
        },
        "item": {
          "id": "ecc20600-d096-406d-80e2-ffcb0773d997",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "54da5179-ab0b-4128-93c7-b20b2cb6ad8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ac7baf-61c7-4eb4-9582-4da62f53a454",
        "cursor": {
          "ref": "f7c06260-2754-41ab-91c2-4493202ae81a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c54bf555-4b83-483d-8332-fcefbf904b88"
        },
        "item": {
          "id": "50ac7baf-61c7-4eb4-9582-4da62f53a454",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a8e49cc-de3d-4bc1-b2a4-7825ee315fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4d879-3d1d-49a5-84dc-93cdd8fc3d0d",
        "cursor": {
          "ref": "fc284873-eabf-40fb-ba7b-9061afe84331",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "356b8c59-618c-45ec-85fa-ccabd125819e"
        },
        "item": {
          "id": "56f4d879-3d1d-49a5-84dc-93cdd8fc3d0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b4b01ce0-12bb-43ae-b1d4-ae02f3bd0505",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf4c9c-ddc2-4df3-a75e-6856e550d700",
        "cursor": {
          "ref": "428d6118-d58c-47cf-9cf0-b57b643382a0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "642a8356-46be-4127-a5ce-677f3c23216c"
        },
        "item": {
          "id": "e3bf4c9c-ddc2-4df3-a75e-6856e550d700",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a736555b-b174-4501-91bd-a6e1bebf4b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b0ad18-e714-43a2-aea3-39c07b4cd779",
        "cursor": {
          "ref": "62274a03-74af-431b-957c-8950d55ab702",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "201a548e-51e6-4218-b3f0-d0782c427531"
        },
        "item": {
          "id": "59b0ad18-e714-43a2-aea3-39c07b4cd779",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "39eaf06e-ac18-4856-b084-6de7342c99e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bdb20b-4e21-456e-be7b-29c881b5c5b7",
        "cursor": {
          "ref": "b6ae6f9d-dd5a-43f7-903f-006243d5cd39",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ee0ced26-b62d-47c4-b61b-57dab83386f9"
        },
        "item": {
          "id": "f1bdb20b-4e21-456e-be7b-29c881b5c5b7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e882ad6e-4ec1-4756-b67d-986ecbca23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9c56e4-772d-403a-ad16-f57132c28a39",
        "cursor": {
          "ref": "5981b499-7d80-41f8-b9cc-f0ddda45c78c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f17def6e-f230-46c8-8d8d-ef6ecb762db0"
        },
        "item": {
          "id": "ce9c56e4-772d-403a-ad16-f57132c28a39",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a01a61cf-38f3-4b78-bb61-503b5f4895df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28eb177-3803-46c0-a19f-069494be864f",
        "cursor": {
          "ref": "2665dad7-3aa4-428d-a77f-198564ad339f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "54cb5885-db52-43d6-a07c-05bd4b473a9b"
        },
        "item": {
          "id": "a28eb177-3803-46c0-a19f-069494be864f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef253e4b-3cfe-4d0e-a140-034f7eab6a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73a2218-6fe9-4f36-84a9-c3b613c91825",
        "cursor": {
          "ref": "a999d43b-54ad-4eb1-ba34-b5bc42e70b8d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "08022b94-42ba-440f-881b-c29ed4dbc1ef"
        },
        "item": {
          "id": "d73a2218-6fe9-4f36-84a9-c3b613c91825",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2fe72bd4-21a5-4f1a-99fb-c766622363c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad82ad2c-a495-42a9-a314-8cbc2d3d962a",
        "cursor": {
          "ref": "f10bbed8-6c59-440f-af49-8b80608348d0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6c7b4308-1d78-4cb9-8ce5-bba574cffe38"
        },
        "item": {
          "id": "ad82ad2c-a495-42a9-a314-8cbc2d3d962a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d1880bc6-4cbf-4e54-b69c-ae92a70d1ea8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098686ad-52cd-4305-aa33-4e4e43ad3dae",
        "cursor": {
          "ref": "e66fb5f5-94b9-4d0b-8967-5ab939b590ff",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "11084a9a-63b7-4db3-a36d-40b1be1f51af"
        },
        "item": {
          "id": "098686ad-52cd-4305-aa33-4e4e43ad3dae",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3ca6f57d-363b-4dba-93cd-a9b01e2d9332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a013066b-f33a-4d2c-b520-eccf02b884e8",
        "cursor": {
          "ref": "e0292346-5077-40cb-b60c-e1f49483fc37",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cdfeb713-ef00-4ba0-97d9-f9734f9055c0"
        },
        "item": {
          "id": "a013066b-f33a-4d2c-b520-eccf02b884e8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "93954e21-23ff-46be-a328-d09eddf86aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe6949b-4ef8-4cd7-83fb-27e8ad6630c8",
        "cursor": {
          "ref": "f41cf143-2885-4f7f-adb3-0e65959dc1ab",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc7ce6c6-6f10-4d68-b40e-078c3bf08336"
        },
        "item": {
          "id": "4fe6949b-4ef8-4cd7-83fb-27e8ad6630c8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f086e496-9408-4c02-917f-fc658788af6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf0caae-b48c-44ee-93b5-1748eb8f7466",
        "cursor": {
          "ref": "ce6cecc5-0948-4315-bb16-1df828187545",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8020691-1e30-405e-aad1-e7475ed8dfa4"
        },
        "item": {
          "id": "dbf0caae-b48c-44ee-93b5-1748eb8f7466",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5907d61e-a080-4451-b509-28470680271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959303df-0dd0-4909-9026-a2d71fcd6c71",
        "cursor": {
          "ref": "3ec0ae85-0cf7-4aa3-a819-3186a4c86762",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "54de15a1-b737-42ce-9f14-db26e9457fc4"
        },
        "item": {
          "id": "959303df-0dd0-4909-9026-a2d71fcd6c71",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b0d085cb-9a1a-4394-90f7-6bc338938320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a696ae-538f-48c5-9580-7c5751315f61",
        "cursor": {
          "ref": "1aa0a301-3f5a-4d41-b67f-0b149071d6e3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05e0a893-b1e4-4d20-bf31-cd1557803720"
        },
        "item": {
          "id": "66a696ae-538f-48c5-9580-7c5751315f61",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "86bccb6b-1ad8-4a23-8043-5cfcd2007b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7dddd0-1ffa-489f-b323-93b84b46d4c2",
        "cursor": {
          "ref": "b222d4ab-1460-44e5-9f1e-839f1c1d3b3e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc7cca64-0832-441e-b5d3-6e3c45cef734"
        },
        "item": {
          "id": "1a7dddd0-1ffa-489f-b323-93b84b46d4c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3ab839b3-5443-4a42-aef6-58f32299ae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1c6857-3b84-4484-8c4e-7d967ec9cdeb",
        "cursor": {
          "ref": "3fcf4622-1d55-47a4-934f-41c4775455fa",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bc7fe274-fb07-4b26-90bc-06b4ab60f2f5"
        },
        "item": {
          "id": "1b1c6857-3b84-4484-8c4e-7d967ec9cdeb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "beca2d17-da86-4acf-ad56-5a7481f1c857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48291307-efb1-4934-a4f2-d60d4ce433d9",
        "cursor": {
          "ref": "faa224f8-5b82-4b17-b26d-0b04edafe47a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "85785353-cb11-4ab5-b0b2-715e0e850a04"
        },
        "item": {
          "id": "48291307-efb1-4934-a4f2-d60d4ce433d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4b6552ca-dbd2-4c15-ae67-be20a8d18d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68a0ab2-81ff-4e9d-8b82-fac7ef1e2b41",
        "cursor": {
          "ref": "93295d08-65b6-407b-84e6-0c1b4fef175c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2a99bf2b-519b-482c-b045-ab1f12037675"
        },
        "item": {
          "id": "d68a0ab2-81ff-4e9d-8b82-fac7ef1e2b41",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "26feac8a-5891-4020-a4cc-1a7113eb1c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ee5507-0163-4fa5-b14a-498dc1b40089",
        "cursor": {
          "ref": "7a4236a1-afde-4f81-8007-3efa457eccde",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f6b31eb-578e-43e0-8d3f-956652c330f4"
        },
        "item": {
          "id": "72ee5507-0163-4fa5-b14a-498dc1b40089",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77d26670-f3b9-456e-adc7-cb96b8535969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab01ada9-f822-4445-ad72-9c593385636e",
        "cursor": {
          "ref": "afadb1e2-79f9-4276-9bbc-b2cba58e914d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fa67591c-742c-454c-b1b3-f73d5427a131"
        },
        "item": {
          "id": "ab01ada9-f822-4445-ad72-9c593385636e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac2ca84f-dc45-4867-b038-7cdc153b83eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d8dba-0980-4092-8be9-279b608b8ad8",
        "cursor": {
          "ref": "b33cfc9b-5185-4013-bd4a-45e9be840cab",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "56f68f41-df6f-41ac-8fc7-ca3739e63734"
        },
        "item": {
          "id": "351d8dba-0980-4092-8be9-279b608b8ad8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5ffe55a-458d-4e90-b295-b8e1cb30819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce6e2bd-9c5d-4c86-a68f-0f6e7895ecec",
        "cursor": {
          "ref": "628e9421-8870-43d9-b155-46904b90d5da",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b674bce-338a-488a-961a-82b9c67a1bc1"
        },
        "item": {
          "id": "bce6e2bd-9c5d-4c86-a68f-0f6e7895ecec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "80f84021-fa66-4af5-a88d-9c8e5484a217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1b4aeb-ca29-438c-9657-d620d4176587",
        "cursor": {
          "ref": "9c7ec3b8-2044-4159-b831-801c36db3862",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5f9d5ec3-a86a-4fd3-b827-17c46ec687c9"
        },
        "item": {
          "id": "6a1b4aeb-ca29-438c-9657-d620d4176587",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b49963a3-925f-45d0-901a-68aadf0b5e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467ccc7d-12eb-47e7-a7bb-cd67615c4a17",
        "cursor": {
          "ref": "54286b39-aad6-446c-bad8-aaddbf759410",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "287ac8bc-733a-4f11-a605-e626efaf4fcd"
        },
        "item": {
          "id": "467ccc7d-12eb-47e7-a7bb-cd67615c4a17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c7fa3b11-c3a3-4e98-9488-e258b0dc706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833d846f-1582-4e2e-990b-64dbfcb07cc8",
        "cursor": {
          "ref": "a4fd9a50-cfd5-426b-9c7d-55f6f137e09f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c0d7900e-5439-4abb-8991-fa342165432e"
        },
        "item": {
          "id": "833d846f-1582-4e2e-990b-64dbfcb07cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "73fb6105-6982-43ee-aa1f-fdabbb94dbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675d88fb-1a19-4a4e-a284-796506ff7b67",
        "cursor": {
          "ref": "de5e40c8-58bb-4149-94b3-e5eaa94880de",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b90effc9-42cd-403f-b3a5-b02abef28381"
        },
        "item": {
          "id": "675d88fb-1a19-4a4e-a284-796506ff7b67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a9867461-e01b-4212-8bc1-ab0b93c75c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e8d14a-f241-419c-8833-81b34bd0ede2",
        "cursor": {
          "ref": "6a7e2227-4b1a-47dc-8d9e-d8631c96f54f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8a193ab7-d8b5-44ed-87bf-37dc6b9e81cc"
        },
        "item": {
          "id": "94e8d14a-f241-419c-8833-81b34bd0ede2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cef14d98-c13b-483d-ac24-920726758dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dca78c9-0e71-451d-aeba-77d747d60e4e",
        "cursor": {
          "ref": "45bfbf78-01ad-4bc7-968b-a52f4485fbf9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "021ef7dc-af62-4b89-b887-a099a03cd2bf"
        },
        "item": {
          "id": "5dca78c9-0e71-451d-aeba-77d747d60e4e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b2a4ea6e-e8d8-4ef1-9e1a-a9a0546cf4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c4684a-1242-49ee-ba1c-a8da41b4a5e1",
        "cursor": {
          "ref": "db8102f9-802d-4d65-a40b-5517a8ceff85",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "99d1e333-ff89-4124-a39a-c95ef29f3e52"
        },
        "item": {
          "id": "34c4684a-1242-49ee-ba1c-a8da41b4a5e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e53fce45-b0e4-4b26-ac80-971345a3b01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3e6a1-2b67-4cee-bdf7-421b218ae575",
        "cursor": {
          "ref": "1d90b5b1-4127-45d5-a67c-9bce5853b47b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb35b574-df5e-430d-a023-0898d0a8b5fa"
        },
        "item": {
          "id": "02c3e6a1-2b67-4cee-bdf7-421b218ae575",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1878dc7f-7216-48ad-a237-208b728f74cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbe3cda-8127-4043-a292-f7c70a7bc1ed",
        "cursor": {
          "ref": "8cb4b90c-6537-4943-b5bb-81faead5f60e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2378695b-f016-4066-a721-b0b84d5d38b4"
        },
        "item": {
          "id": "6bbe3cda-8127-4043-a292-f7c70a7bc1ed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "149c18cc-5588-4ede-bfc2-62068d826eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f5900-96c8-49aa-851f-39bc253982bb",
        "cursor": {
          "ref": "7a33e2c7-f251-4553-8991-5a955f0bb21f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "06ac048d-ba1e-44cc-820b-3d1354a73d98"
        },
        "item": {
          "id": "706f5900-96c8-49aa-851f-39bc253982bb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b2422dc3-1cec-419d-a210-13b81e48a48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad72aa1-1439-4568-b6d3-d3616c7160fe",
        "cursor": {
          "ref": "e3bb3ac2-5e1c-4f97-8d32-04416869e432",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "81d30d16-adca-4333-a943-f79b1ee41f64"
        },
        "item": {
          "id": "bad72aa1-1439-4568-b6d3-d3616c7160fe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2136d63-d875-40a1-b904-43ad6560e2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99388b05-522e-4047-9502-57b68b55c133",
        "cursor": {
          "ref": "a56495e1-288d-4fe0-bfed-9c4ab14aad0b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d783be65-5e28-484a-a64d-264ea54822f2"
        },
        "item": {
          "id": "99388b05-522e-4047-9502-57b68b55c133",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "883456c5-31f0-450a-9452-0b3252ed47ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4163184-d4d0-47b7-a3ea-bae36ef533af",
        "cursor": {
          "ref": "fc493bd3-b175-4cab-a511-35f3e410ec7f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c02d3b1-2830-42f2-8819-ae417c412a18"
        },
        "item": {
          "id": "b4163184-d4d0-47b7-a3ea-bae36ef533af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "74752a53-dff0-404b-84a4-5ae2ac06065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aba8272-ccfe-4f81-8d87-febb69fcd57e",
        "cursor": {
          "ref": "d2abf3c0-c4bd-4309-96b2-78796f7f3c0a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4be106a4-3218-48c0-8a7b-7dd3d60cf556"
        },
        "item": {
          "id": "9aba8272-ccfe-4f81-8d87-febb69fcd57e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a48c7068-2bd9-4cb4-bd4f-43d8e9b16d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126d21a5-b610-4796-ab19-37eba0362467",
        "cursor": {
          "ref": "8dc33dfd-6f3d-43c0-9a2c-cdb717cb75ff",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8549e6dc-ff3f-4e36-902d-327c94172f17"
        },
        "item": {
          "id": "126d21a5-b610-4796-ab19-37eba0362467",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "14f7387b-3c8a-4e67-9bd8-e8c236f4d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad5ddc0-3866-4bd2-a3c1-de425b818172",
        "cursor": {
          "ref": "21a3bccc-b9c1-48d6-8328-d07d849b172e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "48810034-1faf-43be-ae8c-e7ac8fce90e1"
        },
        "item": {
          "id": "7ad5ddc0-3866-4bd2-a3c1-de425b818172",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "06afc390-8023-4895-b691-2dbb2f4549f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a016ab-157a-4f96-a2dd-0a3854b07a30",
        "cursor": {
          "ref": "3fa43e79-fc61-46d4-a172-934629b5484e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f03d3412-dd98-40a3-8b25-4f8ef6e2f495"
        },
        "item": {
          "id": "60a016ab-157a-4f96-a2dd-0a3854b07a30",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13c980f5-3c44-4a14-a682-e94a896adfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905cb3c2-ca6e-4b78-a4b9-7f2c136cef35",
        "cursor": {
          "ref": "faaff9bd-e5a3-4076-ab65-1c55abd8df63",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3ecc88e4-54c5-45fa-b290-0fe27fee3e31"
        },
        "item": {
          "id": "905cb3c2-ca6e-4b78-a4b9-7f2c136cef35",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "850772f0-b239-4ae7-b8eb-fe43846b5268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29676978-deb1-4f66-8968-dd8b7c7e3cc2",
        "cursor": {
          "ref": "fde4898b-0a7a-48da-b4e0-cac1dced508e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6ca6e321-96b1-4a1f-aa4b-547e52d42877"
        },
        "item": {
          "id": "29676978-deb1-4f66-8968-dd8b7c7e3cc2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fdfec581-25e4-4703-a0eb-35dd33c3e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa36c2-c5b1-4d74-9094-566c2273746f",
        "cursor": {
          "ref": "41168868-57e4-4b75-bb4b-5c97d885d548",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "08a5dbd4-f638-42db-8ac9-adb34f7c7057"
        },
        "item": {
          "id": "c6fa36c2-c5b1-4d74-9094-566c2273746f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e2915fd-56f9-4fa3-b819-daef079897b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e7efdf-eaaf-4bbe-99b5-a8124c09710f",
        "cursor": {
          "ref": "84924450-2887-44f9-b6b3-923c68d17530",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8607fcc7-7f9f-4236-807d-cd12b0d393e3"
        },
        "item": {
          "id": "57e7efdf-eaaf-4bbe-99b5-a8124c09710f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2899ef31-fde2-4eab-b417-dc6e12a616af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5439edad-2cdf-4fbe-9e0b-ddf423584d3f",
        "cursor": {
          "ref": "b5876803-4683-4fa9-804a-b8eff7936894",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9f21287e-6b6e-40a4-955f-37e0f3f2ebd7"
        },
        "item": {
          "id": "5439edad-2cdf-4fbe-9e0b-ddf423584d3f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "17086a34-392c-4163-8a8f-3f6f72306aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0b6719-3d48-4fa3-ac3a-0fd28b665e19",
        "cursor": {
          "ref": "96ef5bed-e791-408c-8d38-a94eec416ee5",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c31206e3-d502-4350-a17b-a733ed12638b"
        },
        "item": {
          "id": "6a0b6719-3d48-4fa3-ac3a-0fd28b665e19",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "48e161ea-7312-43da-86cb-71d77ac424bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9a2772-0ec9-4a17-b628-7e604d0cf743",
        "cursor": {
          "ref": "caa08539-dc0e-41ff-834c-6ce5d2ae9853",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b36cdddf-ec9a-426c-88bc-b2803d528d4c"
        },
        "item": {
          "id": "ef9a2772-0ec9-4a17-b628-7e604d0cf743",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1f374a2a-bfe5-4e7c-a131-f9e0ff4e3fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3976fe8d-dc8d-4250-ac12-e0a95f784820",
        "cursor": {
          "ref": "45917926-26c9-4d05-ba22-3ac230fec733",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "17c3d551-5dbd-46e2-a718-5f5243d06f15"
        },
        "item": {
          "id": "3976fe8d-dc8d-4250-ac12-e0a95f784820",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "29bfb2e2-03d4-4603-b0ef-340810b6c69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346271ac-6935-4925-8d24-af6e3892c64a",
        "cursor": {
          "ref": "837be57a-29e7-4ac1-a858-910c70059158",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3710e31-032e-427e-b673-9c2505fd2b29"
        },
        "item": {
          "id": "346271ac-6935-4925-8d24-af6e3892c64a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "486700f5-6095-47e9-ac14-017ccbbffad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634b4da-6284-4b85-88a1-0487329e0203",
        "cursor": {
          "ref": "1c1ad57b-8709-41be-8bd9-0702d9676cab",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a57de515-5fb6-41ae-9119-7b28809a87ab"
        },
        "item": {
          "id": "6634b4da-6284-4b85-88a1-0487329e0203",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b03155dc-9ee4-4638-9abe-251a9dd91a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44a30e9-ec54-4bd2-a19f-b89064200684",
        "cursor": {
          "ref": "b0e56cd7-d7e2-4a39-9ab7-987c7b2311d8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2be77f59-7ae6-4d6a-9bec-9f8160fcafa3"
        },
        "item": {
          "id": "c44a30e9-ec54-4bd2-a19f-b89064200684",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e6a7e00d-3889-45f9-989c-697a9d9021c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4b1bb-5992-4dfc-8f20-7bbc740892ef",
        "cursor": {
          "ref": "baa8844c-c830-480f-a654-5c9532099fe0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "989dcebf-23d1-4763-83ab-c928fad5574f"
        },
        "item": {
          "id": "75f4b1bb-5992-4dfc-8f20-7bbc740892ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2af18047-4a0b-411c-8f8a-5bede3c3522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3490ed-3594-4339-9cdf-bbbc55f1db09",
        "cursor": {
          "ref": "17be89de-b628-46e8-86df-985a94bf8862",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8dcad895-5ed7-4553-822b-d3e86c8dbea9"
        },
        "item": {
          "id": "4c3490ed-3594-4339-9cdf-bbbc55f1db09",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "178cec62-1b7d-409e-be74-c33357920255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2e4bee-f119-4c4b-9aa3-36e31ff9187c",
        "cursor": {
          "ref": "ab9c66a6-0134-4b07-9bd3-d1851b5239a9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e4d9a243-5978-4f05-83ad-1322868c5d44"
        },
        "item": {
          "id": "0e2e4bee-f119-4c4b-9aa3-36e31ff9187c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bbec7699-90ec-4913-9508-5884ec5b8986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba40f687-c4c6-4f3c-81ae-9261e25e1773",
        "cursor": {
          "ref": "98dbc73a-b2dc-4393-9218-a7a8e70e2437",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "db0ced40-a196-48ec-a0ac-1139f2f12131"
        },
        "item": {
          "id": "ba40f687-c4c6-4f3c-81ae-9261e25e1773",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "95a51701-8bf4-43cb-8e16-12f6d18ba409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8ebb12-7a9e-4edc-881b-074cf90191c3",
        "cursor": {
          "ref": "041b9bf6-28c5-4f18-aeb1-bcfdd01c50f7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d27d5b01-c5c2-47df-9349-dd396a9c39aa"
        },
        "item": {
          "id": "9c8ebb12-7a9e-4edc-881b-074cf90191c3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "678074fc-37d9-4ad9-93ba-e0130653b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9df46-ab3a-49c0-ae8e-bde896ef6954",
        "cursor": {
          "ref": "f8436b79-03a8-4ac0-a047-d69fe4a02203",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eb1ee626-0d5c-4721-a30c-621f2ddc8071"
        },
        "item": {
          "id": "64d9df46-ab3a-49c0-ae8e-bde896ef6954",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de8d7700-d340-46e9-b229-ab1942de3cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658138b1-406c-4d0b-b588-98113542c63f",
        "cursor": {
          "ref": "63d973e8-3e15-4919-849c-6b3cf85a13db",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b30a52b3-9cd0-4525-9dab-5893c871c79a"
        },
        "item": {
          "id": "658138b1-406c-4d0b-b588-98113542c63f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d6fa933c-b2ad-4013-ba3e-4e779cb5fff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b767e891-f917-4f0d-b44c-cb16afbc2436",
        "cursor": {
          "ref": "a11e4e9c-a711-453a-8e5e-2645b7ec8c9f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b784acbe-c820-40c4-8f86-bab18f3cf45d"
        },
        "item": {
          "id": "b767e891-f917-4f0d-b44c-cb16afbc2436",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c4b72042-0d76-47dd-b2f6-0b2f555a7de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e517e46-f863-41fb-b56f-834d6fa17b00",
        "cursor": {
          "ref": "5dfe365a-5058-4dfe-b2a8-388f52823d02",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "453b83bb-93eb-42d2-b88f-3ae6c053d911"
        },
        "item": {
          "id": "2e517e46-f863-41fb-b56f-834d6fa17b00",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1e889e67-33bd-42fa-94c6-88c60cd3a37c",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10afbdd-bc9e-442b-b0a5-539a9d191477",
        "cursor": {
          "ref": "b6a032cd-c61d-49fa-9e7b-1bb84608add0",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2b517bf1-890c-40e6-bbf4-7cbbd65b678b"
        },
        "item": {
          "id": "d10afbdd-bc9e-442b-b0a5-539a9d191477",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "304a4ccd-5498-476b-8278-5554155da1b2",
          "status": "Created",
          "code": 201,
          "responseTime": 189,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b5469-f5fe-40a5-9ffb-079486376b18",
        "cursor": {
          "ref": "63afc525-0401-4d8c-bb7e-869f63fd568d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f6ca875-e42c-41b4-8f7a-7575974cba53"
        },
        "item": {
          "id": "4b2b5469-f5fe-40a5-9ffb-079486376b18",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09b7a230-3203-4d72-9095-8f93a091300f",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0eefef-44da-44d7-8c95-31892b8ac554",
        "cursor": {
          "ref": "b533d410-c5ed-404c-af33-6f28f051c869",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2af3e888-87ca-4537-b066-00f2c2e7b0b2"
        },
        "item": {
          "id": "2d0eefef-44da-44d7-8c95-31892b8ac554",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "deae3518-aef9-4851-9280-a3c940bc6283",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0a8df6-4e0b-4b00-8cee-47d1f43aa327",
        "cursor": {
          "ref": "bc6d583f-41c9-4de4-8bc2-eae1724da500",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "38af9e15-bed3-479a-8217-bf403f8be608"
        },
        "item": {
          "id": "9f0a8df6-4e0b-4b00-8cee-47d1f43aa327",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1911d797-6d79-4b79-96db-a514b596d562",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8541c76-6701-4a55-9098-b7c6de6846ce",
        "cursor": {
          "ref": "d3631c21-9daf-449c-8dc9-2c50ec13cc2e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "97545a93-63b8-4a68-8324-29e1bb9a1efc"
        },
        "item": {
          "id": "c8541c76-6701-4a55-9098-b7c6de6846ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d9917adc-9be2-4ff1-87a2-120dcfb2fcd1",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453f361d-4b0d-4c3d-aa21-e9450663eaba",
        "cursor": {
          "ref": "29e19dfc-a800-4cfb-b59d-b6133886e854",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d36ffe32-fb5f-4795-bf8f-0dceffd7ce19"
        },
        "item": {
          "id": "453f361d-4b0d-4c3d-aa21-e9450663eaba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ca122660-6077-4ff7-a379-66a3b853db97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93df1522-6fd3-43d1-bd65-430d718a89ab",
        "cursor": {
          "ref": "1a439eab-18a4-47d6-a3aa-60954b4d3a88",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be330e6c-bee8-4a6b-8807-e278f1060f6e"
        },
        "item": {
          "id": "93df1522-6fd3-43d1-bd65-430d718a89ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9026ad46-e2c7-4de5-bbb4-be80c34b6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fb893e-20e9-41be-bf88-1483a7d61855",
        "cursor": {
          "ref": "0ef2edeb-1260-4969-8986-f6d8a61efc36",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a88829c6-9ac4-4a13-90d3-660fca61ca14"
        },
        "item": {
          "id": "09fb893e-20e9-41be-bf88-1483a7d61855",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49e1749f-87a5-477a-a3c4-9af300711430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b7370f-d7d5-4c84-9726-13cfa1eb5984",
        "cursor": {
          "ref": "e9254b89-7f8b-4c17-ae20-c432dd9df6bd",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bdbec5a3-e323-4a34-9f53-d6bc0a75a081"
        },
        "item": {
          "id": "99b7370f-d7d5-4c84-9726-13cfa1eb5984",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6282660a-7053-421d-b92d-0a1cbc6ca83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0893370-2ba7-4dd3-807f-e38122f91fa7",
        "cursor": {
          "ref": "694bf1cb-4f91-4626-81e7-4fd506fa440c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d82c01e-de6b-4a9a-9717-79d3e6ca82b2"
        },
        "item": {
          "id": "d0893370-2ba7-4dd3-807f-e38122f91fa7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "24e98492-b8c8-4520-bed7-b46fc53cc54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7cdd73-fab9-465f-88bb-1e513dd18ba8",
        "cursor": {
          "ref": "51c6f3a2-7b9a-4cbe-bd33-d1c6f8955231",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7c4a84fa-7024-432b-ba91-ff3bd3853e7e"
        },
        "item": {
          "id": "be7cdd73-fab9-465f-88bb-1e513dd18ba8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "15f4e6d3-7949-46da-bbfe-5dca16d3e39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8102ac4d-307e-4b5e-ab62-81f268c7a450",
        "cursor": {
          "ref": "fe244576-dc0e-4b4a-bd5d-dd94603f4ad9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe3f0fb2-39be-455a-b0a9-5d66dad4314d"
        },
        "item": {
          "id": "8102ac4d-307e-4b5e-ab62-81f268c7a450",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aee4545e-c570-46fa-b94b-0d6e87ade2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c2ad5-4c69-4434-bbf2-e826910cfd12",
        "cursor": {
          "ref": "70afd4a2-d65a-46b9-a7a8-72846ac624e1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f04b9be-d8df-4cdf-901f-42ff990d144f"
        },
        "item": {
          "id": "e28c2ad5-4c69-4434-bbf2-e826910cfd12",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c9b33fa-0a4a-4912-b444-05e86fa6c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a04ee0-049f-4189-af2d-37ee94238229",
        "cursor": {
          "ref": "fe56b716-eb42-465e-9450-2df2b53c5b0f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "918e68b3-69a0-4f1d-91cd-581ecbd69fe8"
        },
        "item": {
          "id": "90a04ee0-049f-4189-af2d-37ee94238229",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2d58fe93-642c-4e2d-97e0-cb618c282bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4de6ad-31a3-46c9-a4fd-230749829ae1",
        "cursor": {
          "ref": "27ad63a4-c9ca-4528-aeca-4b3bebdbffb7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3ef7961c-b778-4a5b-adc8-39cd1cf30d1c"
        },
        "item": {
          "id": "cf4de6ad-31a3-46c9-a4fd-230749829ae1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df64b68e-7101-4cdb-9ee8-b1cc6dad4e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b03343-5ea5-418b-a54c-97a88e6d8137",
        "cursor": {
          "ref": "bbdc1056-b6ed-407f-8624-32b339c4fc14",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7214e43d-5915-4bba-a643-135a5722d495"
        },
        "item": {
          "id": "b0b03343-5ea5-418b-a54c-97a88e6d8137",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb7e44a4-f964-4e35-8d33-69ece112e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39874dc4-2a3c-4377-ba25-df5355f6b10a",
        "cursor": {
          "ref": "0561ed75-6132-457e-8a0b-c9dd3b1d952f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5f30a26a-9339-486b-b1a6-59648c73ec07"
        },
        "item": {
          "id": "39874dc4-2a3c-4377-ba25-df5355f6b10a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "543a355f-2e81-45e5-976d-62f3ea0c233d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b59c514-331f-4d64-b34f-b75ea9e3e60c",
        "cursor": {
          "ref": "ae56e532-15c9-45ad-8535-9a16a1507387",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "70382286-c1e7-4d2e-bb45-d2b07862eb3f"
        },
        "item": {
          "id": "6b59c514-331f-4d64-b34f-b75ea9e3e60c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "41e57f9a-d80c-4c9d-925e-a0b643d8f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43bf4a1-0c92-47a1-9719-c875a2a26487",
        "cursor": {
          "ref": "2d70f9fe-f167-4f6e-86f5-4d604806d330",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "75e7ebff-1ba6-440c-9b51-63e922c7fb00"
        },
        "item": {
          "id": "b43bf4a1-0c92-47a1-9719-c875a2a26487",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "301ea7c5-5147-413d-bba0-948fc5adcdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c40c3ee-83b0-4724-b2d3-3fc29aa79361",
        "cursor": {
          "ref": "a53af2d6-0683-454a-8b03-1cb0d27ffeca",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2295c47e-2803-4c89-82a4-aa77696bb8cb"
        },
        "item": {
          "id": "2c40c3ee-83b0-4724-b2d3-3fc29aa79361",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1549a13-008c-4155-a599-811cdac9fddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b486e74-6e4d-4dc3-9cfe-7968303c767c",
        "cursor": {
          "ref": "e693a9ce-4dd7-4729-8aba-b562bf9fa326",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "03acc2bb-a218-45a8-9a3f-46752eb91a5b"
        },
        "item": {
          "id": "1b486e74-6e4d-4dc3-9cfe-7968303c767c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0e2b7f49-abc5-4243-89fe-a68924a3bf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bffd70-e09c-40fa-ab30-6c2ee22829c3",
        "cursor": {
          "ref": "1e530798-f322-44a7-b7ae-5fd957c75a5d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "84492a78-7fd5-40a5-8a4e-15fd37f61992"
        },
        "item": {
          "id": "21bffd70-e09c-40fa-ab30-6c2ee22829c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aec1fd5d-82cd-4c16-abdf-08814a3d2633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c8aa1d-7d2d-4a2b-b665-4f210ecfaf2f",
        "cursor": {
          "ref": "26e7d8db-8681-4735-90e1-ad183633fdb3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "657d7e91-2066-46df-bdb2-c98ef3685759"
        },
        "item": {
          "id": "b8c8aa1d-7d2d-4a2b-b665-4f210ecfaf2f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efe070db-7f81-4dfd-840b-81c901ef62f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84185530-9fd0-47e0-8339-3cce91141413",
        "cursor": {
          "ref": "d64007d3-9936-47c8-ba2b-69294f83fac4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2e439847-ffb4-4c7b-aac7-70f38579bd01"
        },
        "item": {
          "id": "84185530-9fd0-47e0-8339-3cce91141413",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71495c73-a12b-47f5-9aa2-e6c4eb09e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d836e4-a3d7-4601-bd34-c7f0856dab09",
        "cursor": {
          "ref": "a258aeb4-78c3-4a45-ab3f-464ef53402d5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b671ccd1-832f-4737-b371-e8ad2bb2ffe8"
        },
        "item": {
          "id": "d9d836e4-a3d7-4601-bd34-c7f0856dab09",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7563f53d-04f8-4fcf-a91b-2ad9fd2786f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dabc740-f2be-472e-ae1e-0e3ccefcb03f",
        "cursor": {
          "ref": "a5208a2c-f84e-418a-8d69-cb1b54ee5820",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdeebb5a-34b4-4e91-93e2-3edb34a22d4d"
        },
        "item": {
          "id": "7dabc740-f2be-472e-ae1e-0e3ccefcb03f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b0aad3e-735e-4f2b-a645-0b70414b461e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c31670-6abd-4d53-a620-108c1dccd8d3",
        "cursor": {
          "ref": "cfb9bda9-7fb6-43e6-9530-df90f693406c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "db3318ce-2b8b-40c9-9a89-fef38f889ec5"
        },
        "item": {
          "id": "07c31670-6abd-4d53-a620-108c1dccd8d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8d86ede4-0462-473d-bc3c-3fd0a6804c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76be7470-24c5-4599-8b69-0e63a278b76f",
        "cursor": {
          "ref": "2213501a-acca-4460-a4a3-eb4e03f4679c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8597b791-59b1-4341-bb15-1b86787e9113"
        },
        "item": {
          "id": "76be7470-24c5-4599-8b69-0e63a278b76f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e1afcb71-aec3-4426-8c6b-7527c89da4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66590b8-4772-4c77-ae54-117f22f68243",
        "cursor": {
          "ref": "97db8950-e937-4000-9d4b-6cac4b409f05",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "73be7947-dc3b-4476-bb9c-6794b2fba850"
        },
        "item": {
          "id": "a66590b8-4772-4c77-ae54-117f22f68243",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd188f31-f465-423e-9723-e9c1cffc99a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8440e-145f-49ba-82ba-a6f09dcc35d6",
        "cursor": {
          "ref": "7ce42b75-bae7-4199-b2e2-f5a7c853231f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "81c10c36-d709-43f1-bfa9-f976f4d0814f"
        },
        "item": {
          "id": "11b8440e-145f-49ba-82ba-a6f09dcc35d6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "29832f3b-08fe-4cad-9651-9604bf4bed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb3999f-0ca1-4e6d-bf81-8c4bc84ad8d6",
        "cursor": {
          "ref": "353eeef2-4b88-48e6-a30a-085e3cfccc5d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0988196-0260-46d0-a914-676cdfe85e65"
        },
        "item": {
          "id": "cdb3999f-0ca1-4e6d-bf81-8c4bc84ad8d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "195c22a5-1b56-4fbe-b733-c4e1b7b8b910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975a4901-4f5a-4a3a-bfb2-bc5317d1353e",
        "cursor": {
          "ref": "c4575e2a-3115-4319-bc53-bc02e7308057",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "65efe282-54b4-44f0-b68e-8acac8cdd72a"
        },
        "item": {
          "id": "975a4901-4f5a-4a3a-bfb2-bc5317d1353e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2546670c-a2c4-42aa-a25b-7fd9f5604dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc801d3b-4ef3-4053-a797-6a244acf54a8",
        "cursor": {
          "ref": "039dc7c1-f9c8-4f6c-9dc7-18e191213b8d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c6fcc5c5-51d5-465e-a082-5bd1427c8e58"
        },
        "item": {
          "id": "dc801d3b-4ef3-4053-a797-6a244acf54a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2b0a11a1-d2d4-4375-bd24-79042aebe0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466714f-574a-4905-b066-bc37a6be1392",
        "cursor": {
          "ref": "94c0eca8-a6ca-4e6d-afcc-6f0ff1ec2ee4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f033234a-6bf2-45b4-b25f-b30abb888279"
        },
        "item": {
          "id": "a466714f-574a-4905-b066-bc37a6be1392",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39eae60e-151b-45bf-a6cd-71b9a0317701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df0301-7347-4c94-aa48-5d1cb224097d",
        "cursor": {
          "ref": "1ff737d0-7fd8-4cfd-a324-bb87a90b0695",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fb25a02c-86e5-41bc-9dc8-86b3fcb599bc"
        },
        "item": {
          "id": "62df0301-7347-4c94-aa48-5d1cb224097d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "65f0648e-7677-424d-bff0-be6520b195c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f6d28c-5afc-42a8-b117-49f6f6dfcfb0",
        "cursor": {
          "ref": "3a23f72b-1340-4f33-872f-09fa763a1e62",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "01aea5a8-5d1c-4cea-84eb-391e9321abf1"
        },
        "item": {
          "id": "a8f6d28c-5afc-42a8-b117-49f6f6dfcfb0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "87959ecb-139a-4af5-a8b0-ce28d416298c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78c0e3c-f89c-4459-ab58-c254fbc24ff3",
        "cursor": {
          "ref": "d25532b9-05fe-43ae-8dc8-7d958d036fc8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81171f19-4b00-4974-b02a-b6dfa690a35d"
        },
        "item": {
          "id": "c78c0e3c-f89c-4459-ab58-c254fbc24ff3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dac99c63-31ef-4656-aa0a-bf48cd8d11ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a4c078-2bce-4eb0-9d0a-a52cd2a87d41",
        "cursor": {
          "ref": "06e39d69-60f5-4e4e-8efd-26ffa49f589f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "55f0ba64-cea2-402e-9809-fa3022507507"
        },
        "item": {
          "id": "c8a4c078-2bce-4eb0-9d0a-a52cd2a87d41",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d8de5c52-3f88-4b7f-a2bd-0bc5827d9cf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8581a55-2089-4a5e-98e6-79a4d8133e05",
        "cursor": {
          "ref": "a3d960cb-2581-4234-9de4-348439708187",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46a711ad-d6fa-45e9-96cc-ce775a1b79ad"
        },
        "item": {
          "id": "e8581a55-2089-4a5e-98e6-79a4d8133e05",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bca01dd4-f421-4eee-b463-da4041745d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b034d2-cd8f-4cae-895e-1601d7419fb4",
        "cursor": {
          "ref": "243da48e-75e8-47f9-ac65-3b835e96e889",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e496611-ca83-4719-b779-cfce1d39e6a1"
        },
        "item": {
          "id": "a6b034d2-cd8f-4cae-895e-1601d7419fb4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3328669f-b19f-4a08-b292-4814599b8a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679d687a-5db8-4051-b201-a23222e94479",
        "cursor": {
          "ref": "8ea13e9a-b48c-4207-8ba0-7715cab51b63",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a922a562-c7b3-46ed-baf6-8b18ff988867"
        },
        "item": {
          "id": "679d687a-5db8-4051-b201-a23222e94479",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d046a4d-3bc0-46ed-8ea5-27f7d570b365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3687c44-ca7d-47d4-a513-49b8b2a6706b",
        "cursor": {
          "ref": "f9182082-abcf-40aa-8e0b-a646c2b3a1d7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a23884d3-fbaa-4b77-aa7f-f9628f5d8dad"
        },
        "item": {
          "id": "a3687c44-ca7d-47d4-a513-49b8b2a6706b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a6c67b5-b02b-4e28-a8ca-b83140e72f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab016c-92cc-4725-be31-0f93c5fe17a8",
        "cursor": {
          "ref": "7d81cb5f-67fb-4ffb-96d2-89f2a7493248",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "262554b1-9c99-4140-a055-a45768b6b4eb"
        },
        "item": {
          "id": "c9ab016c-92cc-4725-be31-0f93c5fe17a8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d10fbe1-1b2c-4fb0-a1ed-8aed2b0f1032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa13157-a076-4992-8a50-0392f3aadfe3",
        "cursor": {
          "ref": "e56dafa8-c7de-4920-a6b5-364539ab21ac",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f66deb45-bfe0-4bd7-b911-39586dbd3a8d"
        },
        "item": {
          "id": "4aa13157-a076-4992-8a50-0392f3aadfe3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c28d6706-d485-49dc-913d-55ff58e8fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d03bf8-0c06-4d3f-b4e9-5f6a6ae0c845",
        "cursor": {
          "ref": "5be84fdb-2be3-491c-b505-ca089782be3f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d5041a55-2cdc-4bd5-8e88-487aa693b89a"
        },
        "item": {
          "id": "e1d03bf8-0c06-4d3f-b4e9-5f6a6ae0c845",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "064fa334-a653-4f7a-b8c5-647d33821934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d74c79-a50a-4335-91a2-1085f3b6b23a",
        "cursor": {
          "ref": "43b018f7-871e-4844-9e0d-0114d5805dc9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bb120760-efe2-40bd-9783-43aa787db50a"
        },
        "item": {
          "id": "e1d74c79-a50a-4335-91a2-1085f3b6b23a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8c39353-d6c5-49d2-994d-b397f28e502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b930c5f4-0188-44ff-9d1a-401fadce258f",
        "cursor": {
          "ref": "016b2aed-360b-4188-8212-56fb88ad63a6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "13509d94-0832-4008-a93f-510a66d9cd34"
        },
        "item": {
          "id": "b930c5f4-0188-44ff-9d1a-401fadce258f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38e975d1-96de-4a44-9245-b94fb8f1526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12af76af-fd3f-47b7-9baa-bacbd7ba817b",
        "cursor": {
          "ref": "f0cf3475-57fd-4ca3-ab0a-48146ef808b3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f6b47031-f92f-4b88-a352-6ec028630fe4"
        },
        "item": {
          "id": "12af76af-fd3f-47b7-9baa-bacbd7ba817b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4778a6d3-e204-48f7-8afd-f37dd7185009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afb79cf-c4a1-401b-a997-3ffe9296b580",
        "cursor": {
          "ref": "20257fcf-c29b-45c5-ade7-5106c78af7b9",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ec59ea8b-68d3-4bc1-954f-ef666477d690"
        },
        "item": {
          "id": "0afb79cf-c4a1-401b-a997-3ffe9296b580",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "546dff6e-6abc-460a-a2db-78a7b2da591f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d34d6c-ea50-471b-8cfb-bbabf8d17a58",
        "cursor": {
          "ref": "59218466-55b8-4d73-a28c-f6bff98d8ae2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f5a6774d-bf1e-4e6e-adf2-f38a65f61f36"
        },
        "item": {
          "id": "a1d34d6c-ea50-471b-8cfb-bbabf8d17a58",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6051410b-0d5b-4744-a2ca-e699fd416407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43640240-2760-4e58-970a-26bc42ba7add",
        "cursor": {
          "ref": "49d99ac6-c807-4ad2-9e84-907c3db78682",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1369f203-0346-4fa7-a212-0bed8c3e7473"
        },
        "item": {
          "id": "43640240-2760-4e58-970a-26bc42ba7add",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a41a1f0-845d-471b-a70b-2eed1a715fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1699035-19a7-449f-ae80-925bb9b792e5",
        "cursor": {
          "ref": "82a202bd-546f-45e3-843b-c85ab9c745bd",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2d94eee-8d95-45d2-abdf-02e47fbf4468"
        },
        "item": {
          "id": "b1699035-19a7-449f-ae80-925bb9b792e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea3ca999-c1dc-4b5f-823a-e2571937d27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafb1896-3cb1-47b6-914e-5c942010cac7",
        "cursor": {
          "ref": "074c26f3-332d-4ef3-8062-cf03b95d3fa5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "510e88ef-7d6c-4d90-b974-41589b8ff324"
        },
        "item": {
          "id": "dafb1896-3cb1-47b6-914e-5c942010cac7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "08b91c0a-60e3-4b24-9838-1c0b2153c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbe07ed-db7d-4ffa-afaf-953a725150df",
        "cursor": {
          "ref": "80e61fa3-12e3-444f-b7d8-ebc27e0d25ac",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4bd76e61-cfc1-4a19-91e0-bd644bb1b4eb"
        },
        "item": {
          "id": "3bbe07ed-db7d-4ffa-afaf-953a725150df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "001c428f-28cc-4e47-a305-b7aca0f102db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3b6c1b-4032-4c37-8e80-f0acc407f29a",
        "cursor": {
          "ref": "1aceeec8-52a0-432b-ac1f-05cfdbe9b3ea",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4a01b992-a5c5-4dd9-89a5-7ea19f738eea"
        },
        "item": {
          "id": "fd3b6c1b-4032-4c37-8e80-f0acc407f29a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8f1c00e8-619a-428e-92d0-2391c26ae67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4830f4a6-93ef-4e1b-9278-5c88aaf6168a",
        "cursor": {
          "ref": "63ddd43e-21c6-4753-8564-7d956e321f4e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "57f87244-65d4-4603-9c24-7a77e2577526"
        },
        "item": {
          "id": "4830f4a6-93ef-4e1b-9278-5c88aaf6168a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b2938f5e-f6c1-4372-bdcf-159c5b4d0c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a883732-1335-4035-91eb-2192a5caabf4",
        "cursor": {
          "ref": "4ad77aff-b8fd-49c9-85f1-27362adebf45",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5cffdd49-298d-4c59-9c32-edb38f8c9d15"
        },
        "item": {
          "id": "2a883732-1335-4035-91eb-2192a5caabf4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81201acb-1bc8-4189-80c3-d99ee9210b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051972c9-b7a5-4ab5-a82c-963120490b3b",
        "cursor": {
          "ref": "e754c50b-ccb8-4d55-a8e7-337d02c33bcb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "74e4640a-ad93-4aff-9ae5-538426a3f47d"
        },
        "item": {
          "id": "051972c9-b7a5-4ab5-a82c-963120490b3b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "225cea80-69e1-45ff-b5ae-f5092b7e9f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa818b7c-53e1-4cab-b5d1-025a3001c69f",
        "cursor": {
          "ref": "cf054bde-ef60-4600-aaaa-0d3f87a79c4b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1eabb5e5-bb6c-40aa-a8d7-a2b3b2ad57d6"
        },
        "item": {
          "id": "fa818b7c-53e1-4cab-b5d1-025a3001c69f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c21c0488-9f64-4952-9785-6d40654c35fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ab5f34-3837-4b94-800e-87facd24911e",
        "cursor": {
          "ref": "3d4f4f22-ce09-4008-9e66-667ee9207dde",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "265fb04d-0402-4ec7-a092-e126b9fb32c6"
        },
        "item": {
          "id": "d3ab5f34-3837-4b94-800e-87facd24911e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4804c3ae-cc84-4ade-a4c0-acb98d1eef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863dd5e6-6a9a-4e76-84a9-394ce10fe300",
        "cursor": {
          "ref": "51a3347f-1eab-4986-b77e-004a7bd2a597",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bf3b6ff3-f7a9-4428-b1c8-263b93f1a481"
        },
        "item": {
          "id": "863dd5e6-6a9a-4e76-84a9-394ce10fe300",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc2575aa-5d6d-4be2-bbf2-712ef6439766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eade683d-328d-41c4-aad9-c89bd53d7dc4",
        "cursor": {
          "ref": "0842572d-06a2-4d50-917d-5dd0777368ec",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8edf8626-ac15-46a5-9c50-049646cffaa8"
        },
        "item": {
          "id": "eade683d-328d-41c4-aad9-c89bd53d7dc4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "48a40f99-deb4-4f60-b59d-1030de2f97e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf70dd8-d790-4a0d-8e17-06a2dbfcd59b",
        "cursor": {
          "ref": "26881970-6b7e-4df1-a695-dc146dd4238b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fd33f38-3196-4574-8a20-a4524f50914a"
        },
        "item": {
          "id": "1cf70dd8-d790-4a0d-8e17-06a2dbfcd59b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0a8ed00-0799-485b-813f-7fa54ab4a0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b2a374-947d-4c13-a676-ef600e9a1924",
        "cursor": {
          "ref": "fa456f58-cbab-4fbc-83fa-ef8ac0189bf0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8bbc4cd2-f9e0-429e-b226-f3aef01fe0ca"
        },
        "item": {
          "id": "15b2a374-947d-4c13-a676-ef600e9a1924",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22f3e43a-d04c-4824-84c2-45a313283a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea21a5a-42b1-4fef-bb4f-ac40056667c2",
        "cursor": {
          "ref": "c9a70348-ca42-4d05-8f6a-6dae1824e278",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0e7e7a5e-6cce-43d4-84d7-7028d374881f"
        },
        "item": {
          "id": "bea21a5a-42b1-4fef-bb4f-ac40056667c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b92b2b77-285a-4ff5-9463-d508c1bc43a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9c17a2-0834-4677-a4eb-680b48d54995",
        "cursor": {
          "ref": "6e153fe0-2653-4d3b-9bd1-9ad10ebc7d92",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e3b6a78a-c17c-4ccb-b367-98d7cc1d0673"
        },
        "item": {
          "id": "fd9c17a2-0834-4677-a4eb-680b48d54995",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4c9812dc-2a7d-49fa-979b-6f106d18e958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fef25f-a948-47e4-95fc-ed028489954e",
        "cursor": {
          "ref": "2e0764c3-7d97-4342-ba86-85b3c82d998e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e4a95cc2-7a77-4ec9-86fb-0f3ca08daba0"
        },
        "item": {
          "id": "c8fef25f-a948-47e4-95fc-ed028489954e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b3c7907-0bdf-43f8-9c9f-328af1cca4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb77d11e-ac7d-42b8-a84a-a94dad14bcc8",
        "cursor": {
          "ref": "de7dc2d2-e501-4ad3-89ed-bf5d486691d3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c5b9cdeb-2302-4f10-b9ea-0c8b0abc2ab1"
        },
        "item": {
          "id": "eb77d11e-ac7d-42b8-a84a-a94dad14bcc8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "777d56f0-bb61-42e9-bc0b-e9c7b1c88535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff59ad-10e0-492d-8490-f675e653b5be",
        "cursor": {
          "ref": "ceb2f6f8-5f91-4d9e-b5d3-18fdcd3a81dd",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3956c843-846c-4b44-88d4-9f847767133c"
        },
        "item": {
          "id": "95ff59ad-10e0-492d-8490-f675e653b5be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2580e903-c1b7-4a9e-b24a-44c955b00869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4831dd26-d859-4515-94a7-6b54431287c0",
        "cursor": {
          "ref": "d49d4a1e-8c50-4374-a39d-184ed9f8a307",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "55ab0d85-108b-4ec4-965e-04f2a8c9898d"
        },
        "item": {
          "id": "4831dd26-d859-4515-94a7-6b54431287c0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e85abcb5-3fba-4c21-9e6d-8eb30b400b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805091b5-8f18-480f-8382-b2baede64cea",
        "cursor": {
          "ref": "27f6a718-7a24-4797-91ce-574ecb791661",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5d2ee0d6-6149-414d-9842-8128e7cf2b44"
        },
        "item": {
          "id": "805091b5-8f18-480f-8382-b2baede64cea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "39f3c7f5-be6b-4922-a755-d8fb7cf193a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbed9817-704f-4988-83c3-36535207590a",
        "cursor": {
          "ref": "682a980e-b3ea-4082-af8f-4124ee62ab16",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4e8dd49e-9a25-4067-83d0-5dc0e8525d9f"
        },
        "item": {
          "id": "bbed9817-704f-4988-83c3-36535207590a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ee675490-dadb-48a7-bf73-26281dbb5a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd97820-ebda-46ad-abc0-a7f460945909",
        "cursor": {
          "ref": "ef6bce1c-1b40-4a82-b311-10c6f17711a4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f7384760-5827-4a98-ab3e-05ad003d1d57"
        },
        "item": {
          "id": "bbd97820-ebda-46ad-abc0-a7f460945909",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5fadba97-b14f-4c8d-9442-5653e6dbd789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf34820-e418-43ed-abec-5591c820dc2c",
        "cursor": {
          "ref": "3e33a378-8eca-4beb-8d4b-31a08eb7964b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c145d3bc-ecf5-45ef-8180-68fa9c83099f"
        },
        "item": {
          "id": "1bf34820-e418-43ed-abec-5591c820dc2c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7f497e54-cf4b-4bd9-967c-182dc132610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cf462b-1f7c-4bbd-94c0-1daea11e9fd7",
        "cursor": {
          "ref": "a5a2841a-a629-4f9b-a265-2654bd892ff7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "34bf0bbe-b305-4e35-9c16-67ed001d081d"
        },
        "item": {
          "id": "23cf462b-1f7c-4bbd-94c0-1daea11e9fd7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1a80b715-ba26-40f7-8098-2f19c42cf1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852acb06-793b-4c88-a7ae-28c9600f0fe5",
        "cursor": {
          "ref": "0ef402ef-f2fc-42d9-8d4e-7f442a282af4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8be1e20f-74ea-486e-99e9-cf7d24785343"
        },
        "item": {
          "id": "852acb06-793b-4c88-a7ae-28c9600f0fe5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d55733e7-c2f3-47c9-9538-7cbcf8079625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17de709c-289e-4470-bdd1-b8c7a0c8d94e",
        "cursor": {
          "ref": "04ee06db-d654-4b51-9bf7-69e84be93a3b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a952a60e-4cab-4da6-bd0c-e299a5e35176"
        },
        "item": {
          "id": "17de709c-289e-4470-bdd1-b8c7a0c8d94e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "281571a7-f1f6-4095-b35d-b46f700f1a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4effbadd-9d0a-472e-b82f-644f059c6758",
        "cursor": {
          "ref": "cc516d4b-9543-403d-ac6d-97905fa1d889",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9984e72c-719c-433e-91fe-a4aad35cc770"
        },
        "item": {
          "id": "4effbadd-9d0a-472e-b82f-644f059c6758",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a9369e12-1a2f-49e7-abc1-2a51f0c41778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a60dea9-5338-4178-b734-c1539a03b924",
        "cursor": {
          "ref": "5ec6ec29-e2b2-4831-b5e9-93c201985183",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "338f5308-43a4-47c5-9aad-8a0ad9ca82e3"
        },
        "item": {
          "id": "1a60dea9-5338-4178-b734-c1539a03b924",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "effd3965-e7dc-44dd-acbd-69608ca7a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eafa190-6854-42ce-975d-8b5d9d8451ee",
        "cursor": {
          "ref": "8b2827a7-00be-4ca1-96ec-8af48e8bf25f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ccd57865-a07f-4273-9612-1867c662ad56"
        },
        "item": {
          "id": "1eafa190-6854-42ce-975d-8b5d9d8451ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a055696a-999e-4673-bd70-ce34b2fc93e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99724588-a026-4e9b-a014-9bce81269eeb",
        "cursor": {
          "ref": "70638901-17af-45b7-ba08-0c9d24dc26d0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2c0ac71b-bdb5-4384-9cca-ba35bf569ccb"
        },
        "item": {
          "id": "99724588-a026-4e9b-a014-9bce81269eeb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7900e524-aa7f-48b1-b3b7-e08ed548cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09bc0ae-bdad-4ad3-8d8a-ed503fbf47ad",
        "cursor": {
          "ref": "1a492853-3e1a-4baa-bea9-bb2a404ed7a7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2bf6782d-8bd2-4bb4-811d-d6cab9fd7b1b"
        },
        "item": {
          "id": "f09bc0ae-bdad-4ad3-8d8a-ed503fbf47ad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f80c3a3d-7f87-4f8e-a2ba-93e5c7d94981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1d6988-7cde-491c-a71c-66bc1194990d",
        "cursor": {
          "ref": "34552389-52f1-4334-b5a2-043dc6668e40",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ec61724d-ef4e-4216-b6b7-34edccf44bf4"
        },
        "item": {
          "id": "9e1d6988-7cde-491c-a71c-66bc1194990d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0eaebf17-c415-4613-8b37-9f7272fd4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e2b755-090d-4845-a8dc-8226cc79d183",
        "cursor": {
          "ref": "6690443e-e983-4946-b278-34f21d9da926",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2c114c39-b542-49ae-a6ad-c67ce683dc4f"
        },
        "item": {
          "id": "03e2b755-090d-4845-a8dc-8226cc79d183",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ded96c27-4561-4d8e-8b40-3022442361ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e7319c-cddf-4afe-82a9-2aafc0acb7e0",
        "cursor": {
          "ref": "dec29df3-b2de-4808-be8e-3c3ac9ace9b5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e1b129bf-9cfe-45db-bcba-18e7b8eaa64b"
        },
        "item": {
          "id": "57e7319c-cddf-4afe-82a9-2aafc0acb7e0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "041fdc04-2a5a-41ae-a4c3-10f876815d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455255fa-2a6f-46fe-a2be-05f58cb0546d",
        "cursor": {
          "ref": "4d079336-bc06-4cda-ae3d-04bd6e5cd71a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d98b14fc-63a7-48ea-8862-114d51270fb9"
        },
        "item": {
          "id": "455255fa-2a6f-46fe-a2be-05f58cb0546d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4544c233-37fc-41d9-a4ff-3c22555952f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95ea5d1-bcb9-4fb0-9db0-955c40901e46",
        "cursor": {
          "ref": "72a425ea-d5c3-4c5b-9a1e-0a7e05484664",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ac49cacf-744a-4a5b-a4be-7d1b36282e98"
        },
        "item": {
          "id": "e95ea5d1-bcb9-4fb0-9db0-955c40901e46",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "903bbae0-dfd0-49eb-aa76-ff6411a07032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac67c87-ae3c-451b-9489-98241ffb3a49",
        "cursor": {
          "ref": "6b4e0a82-8032-43ad-bf22-ce95c67df1b0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e6b9d769-1750-4931-97c4-ce105df872ce"
        },
        "item": {
          "id": "8ac67c87-ae3c-451b-9489-98241ffb3a49",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f93c1255-754a-4dd8-95d6-add16af0d8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672092b0-ad7c-4b3f-877f-37648ef93782",
        "cursor": {
          "ref": "338e1671-2d27-4f8a-966a-f5b30f4487ea",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02e06efe-e592-481b-8ef5-78404943456f"
        },
        "item": {
          "id": "672092b0-ad7c-4b3f-877f-37648ef93782",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e210d87-c3b0-486c-9816-9c2f752f56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ce7adf-d97f-4165-9bd7-0d9db97134dc",
        "cursor": {
          "ref": "56656f27-67d4-4703-8711-cdf74b322a52",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aff921f7-36a4-437e-bbc2-fe5eb426b99d"
        },
        "item": {
          "id": "b8ce7adf-d97f-4165-9bd7-0d9db97134dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "57019a61-0939-4872-88e2-786a76e0f9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422064cc-d3b4-46c2-932a-f430166d2e0a",
        "cursor": {
          "ref": "064dedb6-cf46-4347-9aed-aac440b5ab5a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d99acf48-6043-4d42-8bd9-14a8e0c40063"
        },
        "item": {
          "id": "422064cc-d3b4-46c2-932a-f430166d2e0a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ed3eca1b-0b97-4f5a-977e-7ffd94f7c4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e7818a-cf1e-4541-8cda-469053d71cf0",
        "cursor": {
          "ref": "4edd05ba-fb42-447c-9552-2ba32ff44afd",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c8a268d0-158d-46b0-9226-cc3cfedc164d"
        },
        "item": {
          "id": "66e7818a-cf1e-4541-8cda-469053d71cf0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "33efa84f-c135-4a63-a4ce-6d594514440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8789f51-5dd4-447f-9627-d31a06c69cb7",
        "cursor": {
          "ref": "10aab2c1-4cc2-4421-a78e-48afb78c3efb",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "befb83fc-efdc-465d-a2ff-d58d0f9d6583"
        },
        "item": {
          "id": "f8789f51-5dd4-447f-9627-d31a06c69cb7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f62a3f13-3991-4058-85ad-84005e6041be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5f790a-7cf1-4639-b9a3-1dbf7a9007ef",
        "cursor": {
          "ref": "e33e2d94-cc7d-42a1-abfb-e63e9d401e4f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "246dfac9-3a52-467d-bd54-becca485ad3b"
        },
        "item": {
          "id": "db5f790a-7cf1-4639-b9a3-1dbf7a9007ef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fb9272c4-2c8c-4397-9e32-d7670c430a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4bb21-df4c-4919-b43f-bdd4c4a2e2f2",
        "cursor": {
          "ref": "79522e70-ff78-46c2-a64c-7c234824c689",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "70dccd48-8ae2-4fe5-93da-a406b64fb494"
        },
        "item": {
          "id": "2fd4bb21-df4c-4919-b43f-bdd4c4a2e2f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8c7608bd-c958-47bf-895f-56a78b793799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764b5b0b-f82d-4e0c-ba9d-ffc3caa74266",
        "cursor": {
          "ref": "d968f7dc-2ae3-48d3-ad83-24d09b0dfdfe",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "823337e3-7cdf-4487-b8bf-e4c85759758c"
        },
        "item": {
          "id": "764b5b0b-f82d-4e0c-ba9d-ffc3caa74266",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c0e1dedb-2cbf-4d0d-854a-0d8893c6234d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6214fb4f-c745-4466-ac72-219a92752f99",
        "cursor": {
          "ref": "48efecfe-8920-4564-81bd-e062eed337e4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c750358d-985d-479f-921a-05fe280bb716"
        },
        "item": {
          "id": "6214fb4f-c745-4466-ac72-219a92752f99",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "538053fe-bb13-430f-92a0-b57936efd3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49053b40-ed4d-4a2a-871d-e337b8197981",
        "cursor": {
          "ref": "6750a523-35bb-4af1-b754-2ee3211cf7c1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "06108abc-9021-4b81-9224-dc2f2a80d568"
        },
        "item": {
          "id": "49053b40-ed4d-4a2a-871d-e337b8197981",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d9ea4e3-66db-4646-8bc3-e4d3971fbd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f824074b-8a8a-4227-a63f-bd04c58ad454",
        "cursor": {
          "ref": "2d591701-322b-4e4f-bc79-f35431118cb5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3c61ab97-0360-4b96-8bff-680e4dd0d4f3"
        },
        "item": {
          "id": "f824074b-8a8a-4227-a63f-bd04c58ad454",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a9c29563-99d7-42d1-ab13-1e462861b086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9a6aa5-a5fe-488c-af49-6c1d9bf37aa4",
        "cursor": {
          "ref": "81f23c40-9216-4868-abf0-59277d45a5c4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "36af12bb-a7cb-46b6-855e-1e1267c08169"
        },
        "item": {
          "id": "3d9a6aa5-a5fe-488c-af49-6c1d9bf37aa4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6eb60a9b-e3bf-4653-8791-e19553b867db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d8d0f6-5ea4-4209-a695-d9da48e85fdd",
        "cursor": {
          "ref": "c67868e0-740a-43c8-a732-372bb7e97c1b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca5219d9-2f39-49bf-b86c-6d5c9f751c97"
        },
        "item": {
          "id": "b8d8d0f6-5ea4-4209-a695-d9da48e85fdd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8ab00136-9149-4e2c-ad31-258faa7df341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88514e9a-fbec-4e3f-a232-988aa1254af0",
        "cursor": {
          "ref": "b7ab21b9-964c-40ad-bcd9-c435db0537b8",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e8b1bb64-c28b-4e67-a3e8-4c9b1eeb00da"
        },
        "item": {
          "id": "88514e9a-fbec-4e3f-a232-988aa1254af0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fbc68711-f39c-4a0a-8ef9-680548c8f71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22bd9be-6155-4d7e-b971-3be3b12a63dd",
        "cursor": {
          "ref": "4a2c8b57-3a24-42af-923a-7f85da558b97",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aca4192c-0b1f-4fae-acad-4049d17a2081"
        },
        "item": {
          "id": "f22bd9be-6155-4d7e-b971-3be3b12a63dd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "956a01e4-8e7e-4be4-b1e9-4fa96a2ef518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab212f0-0d09-4cbf-acaf-e05186e1cf1b",
        "cursor": {
          "ref": "6fb39372-1d2d-414c-9e58-b7a6a4a67b9d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0b33b3a2-e63d-4eeb-84c3-bef2daa028d1"
        },
        "item": {
          "id": "1ab212f0-0d09-4cbf-acaf-e05186e1cf1b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "93f33400-69a6-43b6-886c-ba06aaad8318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309cfc7d-98fd-4d55-8544-c39e3e6f679d",
        "cursor": {
          "ref": "d1d173b7-962e-40fa-96db-06ffdf71dd0e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3abd66b1-6eff-4f31-af54-3c712bcfeb8b"
        },
        "item": {
          "id": "309cfc7d-98fd-4d55-8544-c39e3e6f679d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5cfee67c-14df-43d6-a2bc-57d5bd8b57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddab0530-6135-4eca-9771-08c1bea105fd",
        "cursor": {
          "ref": "303553cd-2ba8-4378-a5f1-a4eaf6dfb2f8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3b356780-5736-42ab-b59f-08a27ae8fb6f"
        },
        "item": {
          "id": "ddab0530-6135-4eca-9771-08c1bea105fd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c22fbfd5-b4f7-444c-9cb0-6305af79b558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef87a54e-2938-49c7-9765-5ee559d4e058",
        "cursor": {
          "ref": "94b5acb5-067d-4c56-a331-1dc45b93cbf9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c9f3c31c-1deb-4595-9d2a-3a1d6c4527d0"
        },
        "item": {
          "id": "ef87a54e-2938-49c7-9765-5ee559d4e058",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9a005b24-89cf-4536-ac6d-b50603f094ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6d0845-83b5-4563-a06a-201d649bf9c5",
        "cursor": {
          "ref": "4c426d5c-1f7d-46ce-97c0-b2083aab3b44",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fa68ad83-bdb0-42e2-8820-f3b1ed34ac5a"
        },
        "item": {
          "id": "ef6d0845-83b5-4563-a06a-201d649bf9c5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "55944947-bc48-4b70-8dd2-2827c3ddb978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a36ed47-5e6d-4378-b037-b0fc3cc80c44",
        "cursor": {
          "ref": "0a6d2c37-ed6e-44d9-9c76-36dd6d259e00",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "334f7c5e-c773-429d-8d70-e89e2bc8c558"
        },
        "item": {
          "id": "3a36ed47-5e6d-4378-b037-b0fc3cc80c44",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3d21deec-422b-45d6-bb19-320fd29c2b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36e21a-b295-4592-9cc0-827497516036",
        "cursor": {
          "ref": "88d7a1f7-599f-47e4-ad97-977b10866b10",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "72ccb511-32f2-474a-af46-234e53f1fdfa"
        },
        "item": {
          "id": "ed36e21a-b295-4592-9cc0-827497516036",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2063d07-70c5-4552-ba7a-2455adb23a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4223ffa2-c297-46fd-8c8b-609e6ecf4f00",
        "cursor": {
          "ref": "d05eb7d8-e31d-4de3-b5ae-e2011b3d799c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c33d868a-f37f-49b8-8943-e21de3bb7bc3"
        },
        "item": {
          "id": "4223ffa2-c297-46fd-8c8b-609e6ecf4f00",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a2da9e6-53f0-4361-84dc-16ffb2fea9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7833745-a6fc-4ead-a7b3-97939375bc33",
        "cursor": {
          "ref": "41c36f11-fa5e-46ed-994a-5fbb84183b5c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "45d2b1ff-5860-4643-bc45-0d424ccbcb10"
        },
        "item": {
          "id": "c7833745-a6fc-4ead-a7b3-97939375bc33",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f9484c68-54d6-4af5-ba5e-6d10302f3500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c1a59-403a-470e-bcee-b45aada35da6",
        "cursor": {
          "ref": "8e712220-cf6b-480f-bbaa-1ff01a98600f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8ce3982d-be22-4f78-b953-854e1343b474"
        },
        "item": {
          "id": "866c1a59-403a-470e-bcee-b45aada35da6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ff665e4b-0ff0-4e1e-92e5-30256955c78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc47ab2-6919-41ff-808c-aa7a2b25423b",
        "cursor": {
          "ref": "9215ac9d-a1d4-45b3-b8ca-7701298efa02",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d36b5166-3fba-44f8-9dcb-f108973edfee"
        },
        "item": {
          "id": "0dc47ab2-6919-41ff-808c-aa7a2b25423b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3adcff48-91a1-4505-a5b0-449091d0bac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04dc615-f789-482d-83a9-114234d54215",
        "cursor": {
          "ref": "f302ae95-e16f-4ea8-b06e-43d6ce3893e6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "245bbaf7-db56-438b-be2e-4a04aa1444ab"
        },
        "item": {
          "id": "c04dc615-f789-482d-83a9-114234d54215",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "45f7fff2-86f9-49e2-aa68-c843afd82b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a87e008-80f1-48bb-9331-2f78e88ec207",
        "cursor": {
          "ref": "fd58c0ba-03d6-42f2-9018-872b2e58ddc9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e4c07157-c791-45ba-a9be-20308b14dfbf"
        },
        "item": {
          "id": "9a87e008-80f1-48bb-9331-2f78e88ec207",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a0fe2134-2d7a-4ce4-96cd-b8ca2af3b66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2019904c-c694-4589-bf35-0342ac678ecf",
        "cursor": {
          "ref": "dd0e184a-8474-4fc8-8b81-94a3c92da04c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cdcd3711-dca7-4adf-bd0a-8ba8793cdbaf"
        },
        "item": {
          "id": "2019904c-c694-4589-bf35-0342ac678ecf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "96ca94ac-8727-43c5-a18c-315559958abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0304e99b-3256-4310-8739-2d732053a089",
        "cursor": {
          "ref": "1409da4c-78df-46cd-85fb-ebf60af419fa",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a9627a2-383a-482e-a014-ade967795f05"
        },
        "item": {
          "id": "0304e99b-3256-4310-8739-2d732053a089",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1a9de7c9-a9ab-46a9-b61b-aaf455f6dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465a9989-2335-4118-8c91-75854e223b19",
        "cursor": {
          "ref": "5c819158-63fc-44a1-9c97-829e44381e9a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9da0893c-1507-41a0-8798-4873325fc0e9"
        },
        "item": {
          "id": "465a9989-2335-4118-8c91-75854e223b19",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c800f8d4-d3a2-4682-b3aa-86a34a050b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59546bea-2420-467d-a412-7777b87b6d1d",
        "cursor": {
          "ref": "b1ecae84-a68c-413d-a5c3-b5e44d86ef53",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7d3532b7-0b37-4b2e-8aa1-720706a85ee5"
        },
        "item": {
          "id": "59546bea-2420-467d-a412-7777b87b6d1d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "777be8a2-d8b4-4b35-be29-02b268a8fe2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58183a1-fb7d-4677-bd14-b09b1dedb7b9",
        "cursor": {
          "ref": "a71077f4-d92e-42a9-ba38-417ddc35ae65",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "57f8db28-e202-4f25-8250-792b8a478868"
        },
        "item": {
          "id": "c58183a1-fb7d-4677-bd14-b09b1dedb7b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be0abebe-f1b7-4a73-8ec2-92c8e375b81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b741cc45-1b84-4e00-8610-ba522b41939b",
        "cursor": {
          "ref": "df4c248e-b56b-455c-819d-1eb27f8fceae",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1a0016e3-b43f-47a8-811a-1dd9bcc60541"
        },
        "item": {
          "id": "b741cc45-1b84-4e00-8610-ba522b41939b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "624dd988-2685-4b8c-be75-14261eae96f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f4575-16cc-49e7-9356-e2111bef2ae9",
        "cursor": {
          "ref": "b0435850-00fe-4662-8f8e-60ac176b6e36",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a71d72ca-d5ca-4465-880d-be7fec82c000"
        },
        "item": {
          "id": "280f4575-16cc-49e7-9356-e2111bef2ae9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3d0e9ec0-c76b-4470-9eda-40d5b24a38f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9f9d00-011f-4397-bc19-48e7f42fe8a9",
        "cursor": {
          "ref": "e3d8027e-204c-4629-91d4-d4abad42d42b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5df5bb00-ba4e-4cb5-98d5-c169ec803342"
        },
        "item": {
          "id": "3d9f9d00-011f-4397-bc19-48e7f42fe8a9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d66db703-734f-4310-a35f-e18dc2542121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d90c7-a04d-47c8-807f-c581805a4506",
        "cursor": {
          "ref": "4fe48414-a836-4b1d-903f-dfcd191a7164",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "832eef2d-6d6a-4c60-9b85-d04dfa10e98d"
        },
        "item": {
          "id": "b26d90c7-a04d-47c8-807f-c581805a4506",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f9175e1-7620-4f0a-bd01-56c072d5f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c348474-7f4b-4778-bc5f-c284a31e0f50",
        "cursor": {
          "ref": "f0954cc7-e224-4447-b961-1560333707ab",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d949560-051d-4bfd-b1e7-b0ba48a47116"
        },
        "item": {
          "id": "7c348474-7f4b-4778-bc5f-c284a31e0f50",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3b27158-91e0-4880-b468-c07d907d1071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b25307d-5776-4d7b-925b-ea979feed83c",
        "cursor": {
          "ref": "ba851857-5508-45e1-8673-374cf66e673b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f56f3d8a-d2fb-438c-8ae0-fb4af4db806c"
        },
        "item": {
          "id": "4b25307d-5776-4d7b-925b-ea979feed83c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e46b8fc4-7375-47ea-96c9-a553afa30f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f280b07-234d-423f-bbe9-1e42363bdd79",
        "cursor": {
          "ref": "48b39951-8e72-4a57-ae52-44837e2b4374",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8f96d2c7-c214-4026-8e1a-afaf91c11364"
        },
        "item": {
          "id": "2f280b07-234d-423f-bbe9-1e42363bdd79",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0e1aad7a-a63d-4af2-8139-8a524a1f4222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692b2eef-d77b-4605-8120-bb02130c43c9",
        "cursor": {
          "ref": "6ac08070-3bdd-4314-a9da-ec51b4a19a88",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f432aab5-6b29-4640-bb92-b9c9057288dc"
        },
        "item": {
          "id": "692b2eef-d77b-4605-8120-bb02130c43c9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e92faa64-3ad5-4a4e-9ff3-67c091254e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1bedc8-f951-4cc6-b4e3-a6409eebeae1",
        "cursor": {
          "ref": "cf25bf58-04dc-4a4d-80fd-ceffa659c72f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e016cd42-6e21-4838-bba8-2a3b7018549d"
        },
        "item": {
          "id": "7e1bedc8-f951-4cc6-b4e3-a6409eebeae1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bbf9ad7f-edba-4200-aae9-f062e7b57a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12394bc8-78af-4482-9d67-3ff70327dd77",
        "cursor": {
          "ref": "bdadcab9-c445-484b-99d6-37100ff116e1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "163285ce-dbcf-4d39-91ae-687b1dc1b5e5"
        },
        "item": {
          "id": "12394bc8-78af-4482-9d67-3ff70327dd77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "15d062ea-bfa7-461d-b04f-6cf084692ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0ed58d-1c36-47ea-8981-64d4f7b38a12",
        "cursor": {
          "ref": "7b7c3430-5f91-47b4-bd84-e4a12cb0ec58",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6b7c5c53-4488-4b1a-8a8d-3afb7d945dd5"
        },
        "item": {
          "id": "3a0ed58d-1c36-47ea-8981-64d4f7b38a12",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86981591-481a-4fc6-b8db-585c1138a1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0baf346-6f7a-4c9a-a9c8-cfb2417e266a",
        "cursor": {
          "ref": "fe0096c4-aea3-4cf2-b31d-018f3df4e311",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6984a125-0e3d-4763-8d0c-bb4dbd367959"
        },
        "item": {
          "id": "c0baf346-6f7a-4c9a-a9c8-cfb2417e266a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6d6400a1-674c-44fb-8bf0-e1abaf8e337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5713562d-8651-48cb-b0fc-a7b54a0c856e",
        "cursor": {
          "ref": "0bcd6f33-c171-444c-ad87-9d489d7303f7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7ed3a73e-c79a-4d8f-b62b-2e64f8283da7"
        },
        "item": {
          "id": "5713562d-8651-48cb-b0fc-a7b54a0c856e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d75ae17e-8dac-404b-b374-9b65de1f3e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141b1004-3a27-4a5c-83ad-3db14449ff16",
        "cursor": {
          "ref": "47174c37-713b-4c87-958b-8a1dd09b0279",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c069a961-dc1d-426b-b510-924714def866"
        },
        "item": {
          "id": "141b1004-3a27-4a5c-83ad-3db14449ff16",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05e1a46a-3bcb-476b-885f-eefe3b10dbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce72f6b8-29aa-45a5-9c87-27155ca02c7d",
        "cursor": {
          "ref": "6a216c87-f9a3-4659-9e43-61730b4ea934",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bb66a7c5-caef-466e-ae87-f9e4fd2c0f8b"
        },
        "item": {
          "id": "ce72f6b8-29aa-45a5-9c87-27155ca02c7d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1bb307fb-1bd2-41fe-8e30-ee1aafc42082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3067d17c-9550-46af-b381-8042478208c4",
        "cursor": {
          "ref": "f4621fae-2e1a-4d60-8442-d416f9b33e5b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f59853ea-9bdc-4cbd-8948-76de4b031c86"
        },
        "item": {
          "id": "3067d17c-9550-46af-b381-8042478208c4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d65545e8-a1da-4950-8a0f-2087214933a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df7ad0d-7e78-4bde-b1c9-3f635fa0c3a3",
        "cursor": {
          "ref": "6147b28e-21b4-4687-a8c7-f4f07f2576e1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d09a77dc-06d6-4179-9ba1-67ad3fc34ee0"
        },
        "item": {
          "id": "2df7ad0d-7e78-4bde-b1c9-3f635fa0c3a3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e51e4f9a-f313-4907-9b4a-6ae09ce3ae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f711582-be8b-4e6e-8003-c3f12267104b",
        "cursor": {
          "ref": "d21f6d51-6e9f-46d0-aec9-d14f4399cf58",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2e3a9154-eca3-48b4-9dfc-75bf94cf486b"
        },
        "item": {
          "id": "1f711582-be8b-4e6e-8003-c3f12267104b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "24492c74-f9b0-45b6-9ad7-63f5e334c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3e5c0c-fc32-47d0-9558-dc60247a23e8",
        "cursor": {
          "ref": "5702dbfb-3592-47ff-ab81-10e5ebfee846",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5f06527c-23b8-47bc-87ed-39e79febbea1"
        },
        "item": {
          "id": "fd3e5c0c-fc32-47d0-9558-dc60247a23e8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13b19853-2c3c-426f-a163-7c1a1504006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee2c6a1-2cd8-423b-b26a-b8f4c465dd7f",
        "cursor": {
          "ref": "9f7389b5-82c6-4ca7-b5e7-276157c69a90",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4a883418-fd30-487e-b4aa-d1b2c8bdec1a"
        },
        "item": {
          "id": "2ee2c6a1-2cd8-423b-b26a-b8f4c465dd7f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "73671a0f-2c3e-4753-a887-2d113c0fade6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819fdbcf-8007-467f-8d57-7deaf2bffc80",
        "cursor": {
          "ref": "58585d2d-f7bc-4577-b7c3-c2e99fcef60d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "56308702-136f-41e2-a56c-8d9464cb2143"
        },
        "item": {
          "id": "819fdbcf-8007-467f-8d57-7deaf2bffc80",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a62dc26-e24d-4e30-a9ca-9f724781d0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bdd7bc-8167-4c48-9fbd-9811a5c4bf45",
        "cursor": {
          "ref": "b8a985a6-a75a-4f3c-87e7-502a8a7bf7dc",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e10bfabf-a65c-4cc3-be4c-8906811bc9b4"
        },
        "item": {
          "id": "06bdd7bc-8167-4c48-9fbd-9811a5c4bf45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "414239de-d8dc-49d7-b727-ef3406baee6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fb9037-b644-4677-a453-b3588ab90ea2",
        "cursor": {
          "ref": "6e39dc90-6735-4ab8-91b5-18c14aebe2b0",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6cf5519f-53ab-4343-b4c4-bd9ef37818e9"
        },
        "item": {
          "id": "05fb9037-b644-4677-a453-b3588ab90ea2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6e3e6104-79be-4d64-a753-58dab932739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3da3b3b-ba87-415e-b7f9-bea376843634",
        "cursor": {
          "ref": "e3ce0b7e-dbff-4519-b219-7bef4c6007b5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba5db9ac-61f7-44c0-833a-d9b164e8e25d"
        },
        "item": {
          "id": "e3da3b3b-ba87-415e-b7f9-bea376843634",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "913b953b-53f6-42eb-bc37-945511c27e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649f0704-9d59-458b-b1ea-6c5db537dcf1",
        "cursor": {
          "ref": "bbb33c6e-1325-465c-bd2f-4a7290154fcb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d3e90914-f244-4b35-a1cb-ba1ea5713d30"
        },
        "item": {
          "id": "649f0704-9d59-458b-b1ea-6c5db537dcf1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "777c008c-22c9-4045-ad1c-d4a0e35b8c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9654118-8700-477e-a0b7-687bd0b1755c",
        "cursor": {
          "ref": "a50ccf3a-8e4f-45ce-a58b-36e7f64ad246",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d01ad40-0a7c-4a1f-be14-211015265fa3"
        },
        "item": {
          "id": "e9654118-8700-477e-a0b7-687bd0b1755c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "93cbfcc8-c3a6-43b6-b60c-532718e00263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbf786f-6493-4fbb-81d8-26c7bd67bfce",
        "cursor": {
          "ref": "c9663d60-ea43-4f3c-814c-a93fd9825a16",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "744c2f42-2d39-4846-8ed7-9f73ff5f9168"
        },
        "item": {
          "id": "5fbf786f-6493-4fbb-81d8-26c7bd67bfce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ef6da35a-c89d-40eb-831e-25a7132d1b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3976488a-b850-402c-866c-6f00698dedac",
        "cursor": {
          "ref": "c7323443-8014-4730-ae65-8a777279689a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "57898f05-4e14-4c1c-9865-be8d8a57345d"
        },
        "item": {
          "id": "3976488a-b850-402c-866c-6f00698dedac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a10c70dc-d852-4391-a08c-a585787ba95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83d3c6-b37f-4837-ad7a-d358875325c4",
        "cursor": {
          "ref": "dd9871af-5cd3-41ec-bd8c-30fc12fff820",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2c095ccb-5d0d-48bd-acb2-1a7f0eb143d1"
        },
        "item": {
          "id": "2f83d3c6-b37f-4837-ad7a-d358875325c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "40e38c48-1b04-4323-a9fe-0406c2770e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0031f579-e741-4cd7-bfe2-d1caefcd2ab1",
        "cursor": {
          "ref": "efff7b4c-44a8-4bc3-a8cc-498ce6823297",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dfcfbf01-89e8-42bf-bb9b-edae31daac9f"
        },
        "item": {
          "id": "0031f579-e741-4cd7-bfe2-d1caefcd2ab1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "834efe8e-67c9-4dff-88b9-a82724f0f703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808e6720-533e-4284-a527-b14b18a03ab9",
        "cursor": {
          "ref": "4f3f97e7-a09d-446b-aa91-9b4f5c3459b3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d719c10c-b23c-47e3-aae5-c0f7622d1631"
        },
        "item": {
          "id": "808e6720-533e-4284-a527-b14b18a03ab9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ca1df816-2591-48b5-8a48-76b1cb5d51be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e291718-e506-4f7f-a251-687d9268bf28",
        "cursor": {
          "ref": "91287c4e-de8d-4430-b5a1-0e6d61aba343",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "be8bc98d-6815-4c62-bb81-b4f229f97bec"
        },
        "item": {
          "id": "6e291718-e506-4f7f-a251-687d9268bf28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8fb9cab-ecda-4f44-8487-0529d813b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a60c81-107d-4d41-ad8b-6e40c60009e4",
        "cursor": {
          "ref": "c53295d9-a623-4e90-8c1c-8c6249095f6f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "292c3b13-0b1d-4096-8dc9-83218f6fd028"
        },
        "item": {
          "id": "52a60c81-107d-4d41-ad8b-6e40c60009e4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f3b4f14f-6735-408c-990c-53ac2af3efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e977d7-ddc8-43ad-a323-da1d1203d209",
        "cursor": {
          "ref": "d2753e30-2ef7-4b82-ada2-72c71fa4808d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "751e32ca-9943-44bd-8953-1252cf843067"
        },
        "item": {
          "id": "e6e977d7-ddc8-43ad-a323-da1d1203d209",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d406e006-74e4-4126-9112-d8b68a806c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3240f6-c590-4432-8ad9-44afeb84682c",
        "cursor": {
          "ref": "81f310e4-17e3-486e-ba7c-071b63549333",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "84166303-0994-4828-b4a6-616aeb55b5a9"
        },
        "item": {
          "id": "6d3240f6-c590-4432-8ad9-44afeb84682c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1b88f01-9406-48ad-8327-bc396d41f6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc3e00a-b254-4dc9-8c07-5b5d2b86e165",
        "cursor": {
          "ref": "13d422da-8e84-4f23-9e7b-360184556fb1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a517b834-068b-4b12-b511-f51369923d96"
        },
        "item": {
          "id": "1cc3e00a-b254-4dc9-8c07-5b5d2b86e165",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "13500e52-a84f-4286-9b02-28f9e7a0cddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d00ce-4f78-4410-bcc0-8b61b593d141",
        "cursor": {
          "ref": "40b75510-b3ab-44f0-916c-1a3188a9de5f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9bd81755-5bd3-4d3c-8077-95eae556842a"
        },
        "item": {
          "id": "768d00ce-4f78-4410-bcc0-8b61b593d141",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ab5213d-e78a-44b2-904f-823f9fe31077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f332eb-99c9-451c-a5e8-fd3d1b1e4933",
        "cursor": {
          "ref": "a8817bec-8e9f-4b07-a2d1-cb8bcad82017",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eb7a7386-cfde-476c-9f64-a5a1d6384f34"
        },
        "item": {
          "id": "a1f332eb-99c9-451c-a5e8-fd3d1b1e4933",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aa5b49d5-df38-4fc1-9857-d022a5e7fa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b42efb-e6aa-4392-9625-cf3f38f09a1a",
        "cursor": {
          "ref": "49caf103-a890-4f7f-83b7-4f975dc27f6b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4a772cf2-1340-479f-a15b-54cdad52919c"
        },
        "item": {
          "id": "27b42efb-e6aa-4392-9625-cf3f38f09a1a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7506d401-3302-41fb-9271-0213c5c4c416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e975a43-8306-4c3d-9ee9-0c750dcc0ff5",
        "cursor": {
          "ref": "8f0d98a2-30bf-4d04-ba18-6d4f2b4ec381",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d7efb0cf-a5f3-43f1-b651-70e00da669cd"
        },
        "item": {
          "id": "2e975a43-8306-4c3d-9ee9-0c750dcc0ff5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "368bff92-4d04-4fa0-97d3-f0ba03bc47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a272cb-895f-4ec5-a5c2-3a27de29c058",
        "cursor": {
          "ref": "7be320e3-6b3d-49a0-b0a2-7392b3b4c429",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e3890f4e-3c36-46a4-97ad-1d40db6d239e"
        },
        "item": {
          "id": "13a272cb-895f-4ec5-a5c2-3a27de29c058",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8ff0bc38-c310-43d8-8bf0-7d918763d96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb9264-601a-4f6c-8e3d-78f5323602de",
        "cursor": {
          "ref": "926e05ff-a2da-4c3d-8d95-24f69a96f8c9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4dbc6285-a2e0-4ffa-bcd3-7da59f13bbfe"
        },
        "item": {
          "id": "1bfb9264-601a-4f6c-8e3d-78f5323602de",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1a81ebe8-13c7-4e4d-912e-ef81083ef08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132364f1-b781-4142-8c13-3ecf7b821885",
        "cursor": {
          "ref": "168cb2ce-b43e-46d1-8e62-827969e1e4b8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0e81c669-9e5e-4052-ad01-efed22bedb68"
        },
        "item": {
          "id": "132364f1-b781-4142-8c13-3ecf7b821885",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57bb887b-4e1b-49a2-ae46-4973ff8ac469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b26b21-5186-4993-872b-cba02e042e34",
        "cursor": {
          "ref": "48c30751-5ce4-4723-b10c-4028f4a0201d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e4eeb47a-9a44-4af1-b997-2448d4e820fe"
        },
        "item": {
          "id": "11b26b21-5186-4993-872b-cba02e042e34",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4c39b4f8-e72a-447a-b253-240a6735fdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adbdb9c-daf5-4e5b-9b33-a09b54031f02",
        "cursor": {
          "ref": "74e7e6d7-d4a4-4809-8dda-d5af30e96254",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e4b3ad8b-18bd-4492-a889-483616943fde"
        },
        "item": {
          "id": "0adbdb9c-daf5-4e5b-9b33-a09b54031f02",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "52e1b3ff-2e72-4cbe-b059-09892b695bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c56c3e-6121-43cd-ba00-e40fb3be9994",
        "cursor": {
          "ref": "396fbd4c-c467-4e9f-81f6-2806274e888e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4b30c210-982f-4638-93a2-0862c8437a51"
        },
        "item": {
          "id": "d9c56c3e-6121-43cd-ba00-e40fb3be9994",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "009be83c-5ad1-4bf9-a476-bcbf9ced8d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1158c04e-34c7-4153-89d8-85358b8ee232",
        "cursor": {
          "ref": "83433bc7-f84e-4b91-8118-54fb92b2f361",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3a6467bc-a4f2-4a45-b218-4aa5a420f3a2"
        },
        "item": {
          "id": "1158c04e-34c7-4153-89d8-85358b8ee232",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cfee5d55-1ba7-4f26-9c4f-66097f51f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbccc1a7-e7e1-49ad-a507-088cc8a4ac27",
        "cursor": {
          "ref": "73657ddb-c5c0-4d01-a6b5-db8fa44773f7",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8220edb0-7a21-48e2-ac98-a4400a5f3057"
        },
        "item": {
          "id": "bbccc1a7-e7e1-49ad-a507-088cc8a4ac27",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c0821aaf-baf8-4a65-a7ca-f8c54fb6cf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2bcfff-e99a-4ff3-852a-c9d22be52562",
        "cursor": {
          "ref": "c22a7b90-9c08-459a-ab57-a11cb3f88416",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5c09eb36-a23f-4df4-9319-214a98c032cb"
        },
        "item": {
          "id": "8d2bcfff-e99a-4ff3-852a-c9d22be52562",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3605eced-868d-4bff-b890-1e49862f073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7620bbee-2fd0-4b56-b70a-a475ca746014",
        "cursor": {
          "ref": "59bffbe9-fb67-4afb-8ec4-c84d7e1b3360",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "92cca541-a445-4980-90aa-95a7aee05d35"
        },
        "item": {
          "id": "7620bbee-2fd0-4b56-b70a-a475ca746014",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9fc28ddf-cb9e-45fe-85c5-d06d4c27148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f85aa02-388a-4e6e-b3f4-8c48ab7d0a9e",
        "cursor": {
          "ref": "ac7c9a82-355b-4037-b605-642aaa6a3eb7",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8f99989c-8f2d-4153-a679-487425a8cb58"
        },
        "item": {
          "id": "4f85aa02-388a-4e6e-b3f4-8c48ab7d0a9e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1840c4cf-ac15-4714-ad00-50b02f7e9584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46cfeb6-1e53-4630-9515-16906464d9be",
        "cursor": {
          "ref": "2aaeb506-be1f-4a48-9324-3ea38cf1f9c3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9bdbad1e-2c4a-48b5-a08f-825637d4190e"
        },
        "item": {
          "id": "c46cfeb6-1e53-4630-9515-16906464d9be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b31b4e1a-8fce-4ac3-aaf8-2496a4d2e8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a169d2-6b39-4c9c-ae0a-adf90f39550d",
        "cursor": {
          "ref": "090818fa-593f-47db-95e2-e2a5fc6a9a3f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "02ba85b2-31e8-4843-8dc5-b50c6a0b9a30"
        },
        "item": {
          "id": "44a169d2-6b39-4c9c-ae0a-adf90f39550d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b53e16fa-a7e5-47a5-809e-bbffd25d6adb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8dd633-9cdb-4a01-aa66-e9ece28114a5",
        "cursor": {
          "ref": "f408179b-c5df-4923-a3b0-e7087cbdafde",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6233a820-8b4b-4559-86f9-3288afaac5aa"
        },
        "item": {
          "id": "5f8dd633-9cdb-4a01-aa66-e9ece28114a5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5584b319-aee2-4f77-98f6-cf9386037b7c",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afbdfb5-7238-4363-8ed6-0c49f8d460c8",
        "cursor": {
          "ref": "a54a9763-7159-4706-a067-7cd6d77aa9c3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "762fa17e-e700-454b-b8d2-6b5bacd6b709"
        },
        "item": {
          "id": "1afbdfb5-7238-4363-8ed6-0c49f8d460c8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "999367b9-a6f1-45c1-8015-be03c5e1c1b4",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847031b-4a2f-4682-abda-783ea3037f8a",
        "cursor": {
          "ref": "27571d16-e939-487c-9002-104cab474484",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "451dbb53-b875-41c1-9c20-7b845fac053b"
        },
        "item": {
          "id": "c847031b-4a2f-4682-abda-783ea3037f8a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "aaa7d714-1afb-4ffd-9677-de85979b1726",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a938b-56c8-492e-94be-7408292cc6b1",
        "cursor": {
          "ref": "0bd5146f-c274-4564-bff2-4ba483eb9629",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7c47dbd8-e854-46fc-8286-153a350baede"
        },
        "item": {
          "id": "d41a938b-56c8-492e-94be-7408292cc6b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff662b53-38f8-40cb-bf2a-0418aed49f75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a938b-56c8-492e-94be-7408292cc6b1",
        "cursor": {
          "ref": "0bd5146f-c274-4564-bff2-4ba483eb9629",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7c47dbd8-e854-46fc-8286-153a350baede"
        },
        "item": {
          "id": "d41a938b-56c8-492e-94be-7408292cc6b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff662b53-38f8-40cb-bf2a-0418aed49f75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683025db-77c3-4135-82e7-2e29f04d6e5e",
        "cursor": {
          "ref": "cc2acf19-7024-4242-9d33-40f7eb5b6082",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "30d82f72-ac6f-47a5-818b-af1d92267e32"
        },
        "item": {
          "id": "683025db-77c3-4135-82e7-2e29f04d6e5e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a00c07b1-a64e-476d-b5ad-ee2db96d6093",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9157f15-c652-4368-90f6-bb7323d0f9e2",
        "cursor": {
          "ref": "b5eb1b1a-b486-4090-b0c3-0ebdae118eb2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ec80bc39-2a77-4b3f-929d-07bca58ce068"
        },
        "item": {
          "id": "a9157f15-c652-4368-90f6-bb7323d0f9e2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c5bf17d0-e0c9-4b48-bd64-a1a24a1cf6df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}