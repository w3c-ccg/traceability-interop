{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5e936603-f6ee-47cb-b23f-8815c7736ee1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1ba262ae-1cbe-4c7c-afa1-03b80e93df0f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e15ef0e-fa80-421e-8aac-6af918c26297",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20a2c556-d718-453a-8447-4ea21f63513f"
                }
              }
            ]
          },
          {
            "id": "6878ac68-e9d0-4c89-8b40-d7986bfab73f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01f6e781-136c-4d72-aede-40edd1fd5668",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cfc5319-284a-407b-adf4-68533ff1fdf9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d9dfe4db-87d3-4931-a93d-e465eedd7119",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8ee5c316-aa29-4f2e-94e5-33bb5aa5cc40",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f104e87-2ef0-4d01-9d62-4498568722fd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "414b6042-dd40-403a-a07b-5bb216350b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "395de35e-ec0f-42a1-9514-d738abc7c400"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b7fbf2b-7bb7-48b8-ad31-d0591ad55ae2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91d83a92-864a-4f48-81ae-7dc7f17b8ad1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "781cfb97-b9e6-4649-9883-2ef4fc97ec3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00e38945-f4f9-401e-8263-91637b1a07fd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76fec490-2576-4439-84ce-2fb3f75c8db4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ef9c8d5-3975-4693-b9e7-dc5eee6b5767"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2bc8121-52d5-4500-9b35-539c7e5ebbc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa8f7dd1-2bad-4ad9-b184-e6535b5af5e6"
            }
          }
        ]
      },
      {
        "id": "e4f7e004-a073-4fbb-add8-45a17ea6fe20",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "581b4780-4b8c-4b12-b354-594ed247386b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f1cfb60-1e70-4d65-b921-9f7d2e55941c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a80f933c-7155-4eb1-871e-130fce6c519f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f76735-0ad9-4335-8f4b-3f590f875977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5745d800-2881-417d-981f-6eb382e118e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4a5687-9b0a-456a-bd73-c239f6b8375b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4186229c-d958-457e-9a6b-8195729a8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09eb2940-4b4a-451d-835d-c42f1deb4b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef802510-150c-4638-8735-68a83b7a7328",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07df2912-0c8e-4eba-ab39-a4745cdb2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f766f5f-1c63-4d0a-a781-58ad0097e77d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e306fd5-1df7-4fc1-85b2-19547db57366",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcb4b5cd-5b3b-4c0d-a869-c5fd3c488347",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8bc1a-551d-4f05-aeba-2e52a66dcc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "796dac10-399c-4a33-aa11-82cb20cd1f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c25527-fdfc-4360-b6cd-77a3aafbade2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ae45f3-73f5-4709-be77-d8834117e759"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44e8fe00-c9ab-463c-b91b-4b39e6087d05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2093de66-6ffa-49fc-8fa2-0d480eab61d8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9ead1e1-aec7-4e2f-9370-b2bec55db5c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe088f37-50c2-477c-b9f9-ff0bf0268370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa832460-be26-4cd1-b229-390cc35548f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d42a603c-0227-42d9-8ca7-f5a8b87bdac8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17b59b98-64e1-44ad-9be5-eb8b1b7df14d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d50fc2c0-9135-41f2-a001-2bf6ce73b50b"
            }
          }
        ]
      },
      {
        "id": "7bb90421-94a1-4690-99ac-1bb99054c030",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "15a8e6b8-47b7-412c-8e08-cfdf2b6000b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69a482ad-ca82-44cd-97aa-307840d3183d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "92942a8d-aa98-4218-8122-9c199fd9e8d3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a588475e-acbd-4d50-a65c-d94cad1210ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc38ab9-cd1c-489e-971c-18baee6ba1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb26b7-d381-42de-92ed-6a5fb6d1dfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35dd6e0e-b182-46e9-9813-b420c0e7f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec82a71-ba28-4527-a7e2-1c6678d26895",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e855ba17-da17-476f-bd82-310303ff29a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a4082c-9320-45ea-bae8-79f27039a29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d7a5c2-c75b-448b-9ae0-a7206b11eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9543a5-b6b9-4315-9dc9-6358f3ee1c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024e94ac-a46c-48b5-b5df-7fc018fd362a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bc07c7-7cb8-4ed0-9029-48fc604570ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd012418-6a7e-47de-b708-aa0adb0b123a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663a3d4-7c8c-4f06-9604-04a978f28129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbed74f5-f5de-4549-8fd8-e98337052e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3543e674-aaf3-4d9d-9ea6-5c4de97c3f4c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3606d7a2-17ed-45d2-9ee8-820fa8ca5f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742fd497-3dea-4989-8921-41cfd69c217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328f1f21-9218-435c-82e3-134687541d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33c40358-0415-4fc8-ad06-2e8e9d62def2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df88f27-2da2-45ac-a4e3-d4b7ffe3a854",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d616fda0-5f64-40fe-b316-97248df03a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d28e9c9-2fd4-4f68-8432-68801720e002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04699890-4b0f-44f8-9823-9b2dff7c3478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa90a97c-e6b1-4cd3-a517-e60581cf1e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662ec899-34e3-4d42-b155-b6c5e75ed4a9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c8cf86-b55e-437a-b6a5-904bddd82689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e558a4f9-676d-4314-b82d-7c20a834b3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005dc987-616a-401f-93d9-720297c0401f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6148a37-00c8-4b85-b785-3ba265a7ddba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4757f3d7-0a79-472a-9219-f98a9e6878b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d8e182-40f9-4ddc-b059-a81c26aca6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396284d6-219f-4909-82cd-bad7113a25d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b1b319-2bc7-4b12-8cdb-8079a8ef08d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4be02ce-98b0-4347-9e18-fd82bd95b9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60140c81-7c69-4346-82c2-e045abdf1f30",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efed1c3d-d164-446b-8601-595cb423ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ac1539-ff44-4583-a9fd-4319b22e6f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eea3cbd-971f-48a8-bc52-fa968c35ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43074f61-632a-4291-a0f5-c6919887c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47618a6-994c-4951-b3e5-a29182287bd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76850189-2c37-4e00-835c-68335559a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace2ff2c-16c3-4e53-aed9-13e9bf08b3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b116b0-46d3-415a-bf55-308dc57c774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a5184d-2a7a-4b91-8741-864270eacccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653d9763-eda3-4e0b-bf29-0bee87ada68b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc82063-62c7-4917-b230-72380176fc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ef2ae4-27bc-4836-bb73-3994e6e20492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b56e5-6870-41d2-b422-19f4bc9121cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da0e3da2-228d-4438-83c2-8d0be5119216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9c415c-6d2e-4ece-948c-f5ec1e9e5463",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e9167a-5dba-4ace-a1f2-cf53a0a052a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b739d66-e02d-4c18-a122-31e348ad49d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c99b5a8-b310-482e-9b12-9bf554caa3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79d7b237-2b6d-4cd8-85da-fec81bab1e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe314654-68d5-4828-95f3-b7ec64e96589",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b9cb2b-4581-4246-8632-6a0747e8b322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da30f392-97ce-40d0-aa60-b21733eb10d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5650541b-f3a7-44b5-a1a8-bd5ffa0d6343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4961df1d-8e52-4b75-802f-d2afc6504280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142e3b9b-8305-42de-b8e0-13eba2dbda1c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dec193e-168e-4fe6-bfb8-9cc8ddc61025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e53b57-fbda-4810-9343-a4b3ac1c949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edc4fc0-aefa-43c5-924f-61e7f18d7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "416e02b3-5448-4229-b818-f513b3dbf2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288aec4b-5dbd-4b8c-bbe8-ddac7da3df81",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2518cd-a56d-416a-9628-ab2a4a1f64cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86cc47-e69a-40ce-b321-20944986ae58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02245942-73df-4b3c-b45b-2e82796cddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c633fee4-c715-41e7-8eaa-50e081417f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac9485-84a4-40cb-8a9b-ffdaca02846b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f3c33a-dfeb-4841-afb8-06b92830fdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd12ec87-3d24-444e-839d-911035a25b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d79c204-dd48-4203-b494-177d36716d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44ace31f-1fc2-424b-8f2e-cf052d152255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663dc12-48ee-4e5b-b8a0-0f685ee0c5d5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01940b2a-f211-4547-a774-9578a89a308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99033b8-6557-4989-ad2b-5d2770200067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bd7c62-4743-454b-929b-58c664e1e97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "428f52a7-ff69-471b-b875-8b717f18411c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a171a9-c2b3-4043-889a-db4ffdd57545",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b2d66-2f89-49a1-a897-b02b351cd115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f77272-4e7d-42ec-873d-568e9ec71868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d85966-e1a0-4030-bb74-fea65ce17c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4090fb83-cb1f-4e5d-817d-41095a8c074b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf97b5-231a-4f9b-ad2c-a6bae76db834",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b980b2-5277-44e8-9b56-fa0c761c18e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3857e8c-468e-4a9e-ba29-f54080e97a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb8cc2b-4816-4c2c-a550-4c52bb69bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5252a548-9ff4-4a18-a477-3aff59149420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a4b12d-4616-4e64-8210-5f74eb9358aa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3312dfed-1a06-46c4-af30-96837637bc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae93a757-92dc-4655-a73c-c1cb174a7a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311747f7-92a5-4b2d-aa8b-2bbd1888c358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e520c7-9595-43c7-bd8f-e342e38b5cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f91c4ed-47f2-46d7-ba7b-9a2a6acb9d62",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4783ecb9-acd8-40e9-a27c-a729079d3d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a61850-5b4a-4c9d-bb31-b1f2c2c72416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab5b709-0bf0-4ed1-b8cc-67c164b96030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d47c12-bd29-41c5-ada7-9116920dabcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79b2f83-faa3-451c-ac59-62885558084f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0de24-9a7d-45f3-89c3-4727555bec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850a84a6-4d30-480e-b598-757853b63563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb83501a-9116-47fa-8733-c191f41e6b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "493b7218-df45-4df5-a978-4ac2e77f5118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2473261a-1529-43af-b7f0-5359b8679ddc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8dd812-a510-4278-8fda-da0e09e62bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cdd578-a879-4383-90bf-3886f5b6a78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620235ef-1d05-4371-9b1f-adc30cb6d11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43fba9b4-a83b-4547-aca8-df583a701b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a961e87-f8bb-4546-bc69-560b7d15d6eb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe707c86-ecd6-42b8-8093-f78f4362c511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3ef7d9-8641-4739-a08c-99631a456abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acd1980-8b29-4d89-afd9-714b2903cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4102393-8005-483d-8d48-bd564a4dd438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64281c63-3e61-4b9b-bcd3-743e8b3a9bcd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059512fc-f912-4385-af3e-f13c3b696013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49f913f-55dc-4c95-83ce-79cade6367ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412b326-bf43-4b8a-bae4-903131fa290c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7f1219-13b0-40d5-9a8b-f94f3872880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ee07c4-fb7a-4d49-9ff0-5545b63c49d8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de34022-0cd8-41dd-840e-b73c8f58cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f572d-cfe9-4c1e-89f5-d6e1fb6af1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5b7e12-d126-45c7-b4f6-90ffbd7fd0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d6d287-10ce-42c2-bbba-c27b88f615cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ec4422-86a5-4967-8ec8-7bf30654e820",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fdfc6c-b848-4142-9ae3-8bbdfb4b31fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c98aea8-7d88-4fcc-abeb-005d2d1a837c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead95cd5-fd92-448b-8bc7-e136da10fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6efe30-11c4-452e-a081-f6651188a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82252a59-7b13-4964-9d50-0ddd4b7fe543",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7a147-593c-4dbd-b0a3-1951450235ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da0bf10-3384-46df-834b-d60607167d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cc5e9b-af05-40bc-bfd9-fbddd663d504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b5d064-d2c1-41cc-81b2-c556954edc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6153b6f-5f9c-41f7-b78f-5ad61ce56522",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf9a61-a6fb-4a4d-842a-98835cd4a15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c2a0b5-f58a-4bef-b2c0-73b7b80325cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b038c-0fef-4e06-b919-f159ba9fe39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d8685e-14bc-4296-b0c8-bc4ebf5a831b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8e6fa5-f0c7-4c0e-8467-e2c5e9fd378b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d939730e-4650-46fc-ac7f-56a1cbb9593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514f9fe4-1b62-4ac3-beb6-de58d487fb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00b3eba-6617-4ded-9f7a-9ad415d4fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3ac049-2d63-4c04-9b08-c10d589f717d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d912cba-4776-4d29-94e2-ae628a71aa98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48f6f59-b41a-4330-aebf-f901590a9401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2fdf4b-e777-40d8-8e51-c1531f049f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c107a6-ad2e-405d-9737-671791e23dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7cc119-6b61-43a6-bfac-dfad8e2f938f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab77350-17fe-463f-9c96-20b28b26b61a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc8236d-3249-4bf8-8331-de324cc96660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d43903-5d76-43d5-bd86-4147065faaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e5739e-c449-4051-ade7-b1a9ef2264a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca3cd9-cd91-4ccc-abc0-04da998df37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4b9fa6-0149-47d3-b43b-958392a5e1bd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c6d8d-3b52-4bcb-af32-7615a4e49cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6a0a9b-ae6b-4db4-8ee1-6ff0e32b4ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0418f-2ea0-405a-b516-d8b73ba0dbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f243c99-2288-41c9-9742-b017ec007849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac1be04-4edb-4976-bdc3-a0856e1dca9a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be96bd6-de41-43fc-916c-237372921b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a546fc-9bd8-4cd8-9ffe-40888d1791c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df805f7e-bec5-44a0-b012-6118eece4d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e57722e3-52df-45cf-9f21-9d9085e88eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4dd510-6a3a-4fba-8a28-878d9e7c94dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b902b09-05a7-4b5b-befd-7555eb9a8a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dc7e96-c887-484b-8a82-09d1544a221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64983ae2-0266-465c-adb6-9307da9d11ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2030c6bd-782f-4c1d-ac38-bfc3ff56ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc57b629-5e7c-491d-9333-1031ace0ec87",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18d0f4a-1be3-4d29-ae5d-ac680ab90079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f079bda-ea70-449d-b5cb-820bbcf0f092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3018b1-0524-43c9-ba14-a519873f84fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c067e118-e584-4331-ba7e-e4634a298b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d85c9-f4f8-4a7b-9cd7-7c203e5a9a27",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4586a467-3bee-4019-a347-c46567a290d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aab7887-83aa-4ce8-976a-701da7a7ea21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e5e80-65a2-401a-8b20-fd72e9abc639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d86f1818-d24d-42cf-b438-7af090aa4f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c6a35-4340-4cbb-b434-83a1aa8a632b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9372234-6776-4a2a-af35-91294dc91adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e158fee1-2b54-46b6-bd77-84401ce17a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c96cb9-5564-4879-b351-72d7736e528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9dcd7c-5fae-4950-8077-6d3fe7a20359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7542e1e-e376-4215-b311-d4c8745b6649",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d24e61b-4f76-4e8f-9dce-658c6b815eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea72fb8e-12ab-4e4b-9a1e-92e7df918362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a47a1d-658a-4c76-bd7e-873522e56674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bad5546c-2c56-418b-a500-f117f5df4844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941ff94c-f7bf-46c8-8b16-7ed5086ac37c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae81328-93f3-4021-95f7-f2266158b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca85f74-dcb2-4891-9cc8-bd74cf9f4842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a70f6e2-d7a0-4bef-81d6-e7d708952f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c1113a-3e89-40f6-b481-49965c087fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b14e48-32a1-4cf2-b90a-67069a42e6c2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be01d5-5556-4d3d-9a18-7f7103fc3010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e35a4f-012e-46fc-9267-bca6022356e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba3230-39aa-450b-9fc4-7d3d28c8afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af097c44-3548-4fe3-b45c-1014d515762e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8c8dc2-af5c-4bfc-832f-a402083eade1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2169bc8-1b82-4e48-837a-622e2a88cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b513ea54-516b-49df-ae58-bdca9a0a70e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b96743-7f5f-422c-bda1-99c404ade569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc63bc9f-361a-433c-84ea-5eda96d43753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff8e79f-d2ae-44fb-8241-f5a0ee73fc7b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec00e9c-e874-4af6-9cb7-59635905a150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf51a70-3ab2-4679-84e7-0a393acbad66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a33ec3-8e6e-46c4-9021-4b790d7e7136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "57fdd1b6-9f9d-48fc-be16-627a3900b259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83164a1b-256c-4c02-8fba-57a803fd74f0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853ccd8-d67e-4f2d-9a17-e94260996d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f5afa9-e769-44ce-b759-818463038769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40c9a0-ff29-4265-a679-a443950a81fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7110fc-641d-4741-80c1-babdcbe33709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a3f262-8034-4cb8-82c8-2bb95feaf0f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06fab92-ad52-48e7-9f98-9ac4ab6cdccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e6c0fd-aad4-4452-a152-70fce6bbd62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20779246-ec87-43a7-a3e0-0e53726e27ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3f1048-5e73-48f4-b93e-4e5c1e377dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e66b1d-7683-456f-9ca6-f002291942ba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1225fcbe-8c79-4dca-94f0-25d3637a09e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768ed965-1f15-4a35-98f1-d8a128238e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca0a5a-c8e6-4c27-8520-8a0f4da8becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "597605fe-6268-4ba4-94a3-78a8144000b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a06b7-7e22-439b-9d39-863aa853acc7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc308eb9-e3ff-4fc1-b816-a00de153ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ed848b-bd08-4cfb-b602-5ea8b2f788ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73c4888-ca55-446a-afa3-3d472d23af8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d023dab5-4544-47d4-aee8-69df7860682f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f657e87-d61c-485a-96b9-6850d4240461",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07d38c7-a7fd-40c1-bb1d-bde21c73e1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c85de3-c0d0-4be3-8a23-8ed793b8fd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0120a918-f091-4b39-9466-ba2b412fa154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af208c0b-cbbd-47ab-8620-c0103800a0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c44e7-bf83-4a2f-83e2-3c763d12a912",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58069756-043c-4697-bd9f-f5224fd05b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac474af7-b6f7-4def-971e-6d4694ff5e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3276b40c-5145-48e1-81e9-6a234bc0ac9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1876fe66-01c2-49cd-a179-4770d1c74204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab78b5aa-19bb-4d0e-8b08-1be9a18d74de",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e041163-e14f-44d0-8af8-8195a179e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548e6a53-65e7-4cb4-87cc-430f1a05ce85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2989ea6f-9984-43e5-accb-f3ac88295c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "626d1a55-4b28-4cdb-b4fb-ef73a0f1450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e91036-c953-41b5-abbd-8bb955e3921d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c1d1b-1c48-48f6-9393-0f3664e41601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1628d8-1e40-47b6-ac61-7494af2ab6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8152dd9c-c784-432a-b2bf-3d892e4abfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88bfeb0d-70f8-45e4-9827-d9544b091cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50544fa-f703-4576-8c84-18a326e05007",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86370e0b-8140-40c6-8969-7d4a41fca04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb5b6de-1bb8-41f4-b083-cbb7181a4ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210411b3-422c-4d72-8d46-1694f9ddb852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "56737c65-6344-40d8-a2d0-eea9c910dd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4da440e-dc66-424a-840f-fd15acc2c07b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c9cdf8-1b19-4f23-a170-4db690bd72d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91294925-5389-4c9c-a458-be2dcd5ad759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d805c5fb-5a07-426e-9b6c-b9ec8473386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a452d2fa-8d35-483b-a166-4c96e83a2df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe40e1b7-46c5-4dcf-ae88-ce4aa4a90436",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae98cd9-f3e0-4eda-8178-0d13ef0f1c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e41b0d7-c79c-4550-9c25-0e583dea7df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2291fc39-b1ee-40a5-9905-93ca2d5cb31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf1f9c8-fe60-4aa5-9cd4-d427d1b5a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f083c4-1211-45ef-a0bf-1bbc96204f22",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c141237-42ee-49ea-a0ad-7441ceb2a55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498616d6-685e-4b83-aa64-05093f93e460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30d69bb-d857-4f1a-908d-5bd2a6ea7d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaf6caf-f0a9-46c0-88c9-d670175f5887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0137d79c-607b-419b-9594-f8a5251edb09",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca834fde-3a4d-492c-afea-c5b629027292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b6154f-abc0-4454-81f1-db350a50f56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f9c2a8-b045-4b5a-80ef-a10b397a6d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f38d761-92c4-48fe-9e9f-437eb7775bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac1ba67-75e9-4d01-9820-f4ebe5bcdb25",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479363fb-6e7e-4de7-8053-5a1f34a83bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c4b0c8-57e6-4981-baf6-47dffd892297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca47cc5-f327-4679-8515-33b855354475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2df0e1bd-5f6b-4e25-8954-517dffcd5147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813c3900-b1d9-4703-9ee4-42728a605247",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf229c8-6287-4a72-a698-669064f42952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f86aac-5cef-4647-ad13-f7a8964e69f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02fd49-eabd-4550-838d-488144c9ba1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd05aa9-4efd-4ab5-8591-94ec2b8803fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6351ceb9-180e-498b-b4ee-25cd332ae284",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3284255-7825-4d4c-a582-693284a8b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5359329-a933-49d2-b6e6-be26ff3117e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2eaf59-64ab-498d-9d4d-f93c1fac8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2896f621-d836-485f-8004-ac1e38965955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b7942-cb25-4a40-ab7d-c902781ca6f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f97157e-fbd3-4302-9aaf-6597b68e9fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1ca874-d481-44a9-8f08-9aecdbfff102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f89b0c7-81c9-45cc-b9be-f28aad0ed581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a262974-4186-48c0-9ca9-544c53814511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d37dd6-eb60-473c-8ae6-feb573f42d8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3ec13-543c-425c-b967-601fccd3f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445870c6-1b78-47b3-8aee-a130dcc9a01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b95ba2-7fa4-4310-890a-06acc555c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dff6a1a-3503-4727-a53f-f51477a1425a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4342f159-3ade-4309-b59d-2bfb6d501ed6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc0528e-de01-4a89-b2a2-807336ff68a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4513d1-466f-4994-a66b-004618787a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cf3581-109c-4e4f-96ad-30bd2b9ef0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3548180-5ed6-4d7e-acdc-02cf9a421bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a618e26-d51c-4815-83cb-58d9fde474f1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29445bb5-6cbf-4171-af3b-a48a64ee95e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6698b2e-f6f0-46ff-905c-77fb7a037646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9a0da6-7494-4ca1-86d9-4aa856508e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "12fdad12-84e2-4923-999c-3bc4c500d9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba60f3a-7c59-49e2-88c4-1541dac3338f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb629f21-8f1a-4ab3-8d2f-cc2da118dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd13261-c956-4fba-b4ec-9d0af8faafef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e41eca-ce72-4b80-9d05-4631a1e9177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "621464bb-fd16-4e81-aa33-819366d71255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5dd580-6c72-4ff0-b21f-9f817a76c4e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27244b2-bc2d-4970-b33a-1f6aa0868485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbfeb33-c4c8-437c-bed4-a36ea73e8d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2fe151-6350-492e-a5e5-97552a0cdcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53adada-8019-426d-a9f8-12b94c19a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c5995b-51be-4eb8-a669-7e5a64ef084e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050eed74-beae-40dd-915c-e02bdf372192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8063fe0-65ef-4ea0-a154-d68597366e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047fdc56-8f0e-473d-af70-18a2184567d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7098f5a-a201-493a-ad57-e9590e48f09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb30110-2f01-4a97-b208-592e97a94707",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3db79a-a3f4-4f27-b42c-1c640e33db9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c58174e-699b-4a7b-aeef-bb17a7522149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bb88ec-c5a2-4106-afb3-b017161c037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de84034-deaf-41a3-b269-d765d3648296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb82ea5-f60c-4d1c-9f52-aa89336ffa30",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b953087c-3197-4acf-8aaf-eb1e4b894d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1eccba-b5af-4fc5-9399-f875b632c070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbee47-5b4a-4637-99b2-39af41727974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01dd97b8-c2d7-4c68-9c5e-c4ba3b3b8b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c47e00a-f260-44e2-8bdb-85933c5cd135",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c8c987-3c84-41e2-a73b-02e2ab74997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961418c4-3775-4a41-bd28-f892aafefcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11380d8a-c9d6-4418-97b1-c9710f9a9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7910c000-34e1-464e-9be9-6ebc5a4ebf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d575271-ab85-43d5-8a03-206a3012b6e5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd8b9ca-6864-4b08-a88f-c250f35871dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410b93b5-8156-491e-bb9e-7592f4ce6113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6471aa2c-23cc-41c6-9a14-fdc8c57f8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1e00fb-6b6d-4755-ab5c-d19a139bc364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77542827-d38e-4e0d-8920-dd05276c6f13",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9965869a-a955-42cc-905c-f8da0bfa3b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46454ad-817f-487f-b036-a90fa1a3b8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9da6507-b1e4-4531-a16d-d21a5638e8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6f2b44-fe3a-4f86-8175-d037eb13484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efd7b1f-3e82-4537-8a80-96aac39f7bd2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eead2bed-b20a-4cee-8cc5-6bff46c26f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c271f240-4164-44e7-a07e-18b87e4241c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f317ec8f-3077-4ad9-ae43-9952678ad19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93115fb8-238f-4471-bf2c-a3aa7ec0edd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c5123-240a-4add-bbca-390238f808fa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6067f7b2-d64f-441f-a9f8-9de54beae909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a58ae3d-3181-41ca-8a47-75d8160f5d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f8bb90-d538-4477-a2f1-963393334c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1613fb5-b1fa-4f7c-9fc0-0ab3beec883d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b306125-b55e-4175-9909-fea4804db137",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f9e88-3784-428b-8bbc-d57136bbc05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6bee26-b1f9-46f4-9ef5-4c00ddc3c354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad46df1-859c-4504-91b9-d5c4e222d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "430c64bf-f20b-4fb8-8d46-84bbf5de0326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7b79c6-e2f7-4241-b4f8-2542c0ec1406",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf0969-2672-4a01-8692-798374d8c2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657bbf29-54cb-4477-be33-e3f459a95786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3508167e-10fd-4e5f-a664-f38186526bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5469f2a6-2a21-457b-a703-ee43e4989e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9cf129-9530-4167-805f-4af1e6fd4075",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d0272f-ffe5-4f66-9b66-371f90c5f09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541eee57-6f66-4065-bf1e-ec9617b870f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8461afea-daa3-4232-afc6-10d659e6434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc082e6-ae89-4f2c-964e-129624b0798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8566bc-d0ed-4a30-bbf7-1ad40cbc4acb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeab0f4-0fcb-4959-9179-0f8a83fbd54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5258bb45-1320-4eb5-8ca4-13ec987df2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f1b3d-c1bd-4e92-b1d1-b9098c008764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9338355d-36a8-43e7-ab39-cbff52fdc3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81d8e6-9b25-4dd3-8ae7-cea6476ed535",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e730d-0daf-4623-a74d-b00ede432158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b0e4cd-ca56-425c-85d5-fb2a4f406801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce60e2f8-49ab-46cd-834d-842e2d94e162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96e4eb2-a03d-451d-9f23-a191091c2d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8185372f-8715-4a2d-8f55-edfd0769b3b0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e4855-c7dd-4802-9dfc-ce03f1b342b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9017956-694b-484f-9df6-ee97ccfc3e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31499036-0572-4664-a551-8923b8d745f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "380cbd03-3861-48c5-9a39-3157f9c692de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b161331-440c-455d-8500-4e10880e7b15",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc5086a-94d3-4bb0-a9a0-027a9fdb30b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af06e13-0401-4f67-b44f-5a48b5c434cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8060a358-9001-4878-b5f8-e9b1938d414b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f239ff5a-f41f-4d7a-98df-54e4fe2d823f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ec453-a6c5-49f5-9d12-a1c483fc1952",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c51aca-5981-47b9-8317-96657217cf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07a8c12-3f59-47c1-b797-883e88aee7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a8d10-f5c8-453a-b498-47bf398900ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5162cc53-cb8a-4945-b9b6-4460dc2a74d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc1171-3ecb-4ab0-b481-2c8443862df6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d4cc3-9bf9-4562-b05e-7b70a33cd3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8cb48b-26ed-4f7a-be6a-cd0a659f8cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c37196-08c0-47ea-b950-8b826bf46cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7985d070-e8c3-4a59-839a-40ebe2cb9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb3901e-d2d7-4296-a8e8-17d16033be73",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1ab461-c7d6-4d61-9ef8-9184dee1a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d4a2be-61dd-4cca-b862-26ce23a96f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a1db57-4582-457b-9f6d-52cbec0f3f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ccfc89-982d-4ebe-bb37-f64aa36bfbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec022e-2696-4a8c-9e63-9e4658f23e3a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe78a4-ef26-4e19-ae2b-faadbf65fc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c87d3d8-6d52-49a8-99f3-ced031d32681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d476d74-a668-4cd7-b0dc-ea3aae8475ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd1be7c-4949-4787-bf34-405ba6624426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5526b359-7733-4269-b760-32eca3dc3656",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a97be8e-5b75-4220-8a5d-b8126a230d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5a1f48-4c7e-4a68-9d26-9854480076eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68341a73-b0b6-472c-9094-c327cb43bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a01675-d925-49c9-8989-0b463088ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197158b9-fa82-42e6-8daa-65bae81dd441",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2cec60-eea1-4b30-ba2b-68c9eefe979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344af492-01e7-4102-abe8-f47999170bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e50ee33-a335-44df-8e19-f8d471c18a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7fa511-ab5e-486f-a07d-ca32633d8967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9827db24-4edf-4913-ab7c-39f22c7fc27e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3024bd2-5b1f-4cf4-b420-2cd9b5d025d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685da516-4538-4d66-acd1-525d33d55a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a592865f-5f12-49bc-b466-457a660281fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fac0082-a325-4443-91b0-4893bedd685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d77691-bdc7-4628-9398-52df65dda9b3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510cb057-fca2-41eb-8c07-95957f66c9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31071d11-f10d-467b-a986-d64809b1e59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a9f9f-534c-4d80-bc67-1bd466809d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3168f687-af72-4a00-9d09-b57a988cc8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b182ab8d-6d9f-4ab3-a2e2-d26e5724fd3b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f1b536-4976-4161-a44b-3817c5289ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0474417-6e37-4a96-815f-bc45c0c856c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952abc22-59e5-465a-a868-c476e8102062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "607b086a-9563-4ea7-b11c-0cf96eacdd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7ee355-1e23-4e29-9bfe-59c64e284b1a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf1af6f-33dc-4803-a434-abc209092f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ae2a90-7c32-4e03-b0ed-fc61db8f0b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ef03e1-218e-4587-94f6-4103b5976ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20da4267-66b8-4ece-ba55-faf55ee4ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1709605-e9f7-4aba-bbcd-b629ca4469ae",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a0b617-5b38-4674-b0a3-2ef3e9420b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b367b74-7bc3-45b1-beff-3ca77c75bd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7862b3-8ea1-4f97-ad89-7e52412c280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38067ed6-a12f-492e-8467-b717613e41ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0fcf0-fe03-4d9b-aa28-d2fb6b56ab9a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedd863e-c456-4ea1-89b1-76bf5e1523d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccbb1bf-c280-452f-8c6c-3b186cf02d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9a9c3c-4f08-4217-82cb-2fca44ed25fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8953a42-f853-42c4-a418-bbca13bcddcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5be6ca-3cd5-4aa2-bb97-2399c31cd326",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77314340-e626-4521-8d6f-21f5f15b6c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "27fb0204-3f0a-42dc-9004-427040d5495b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcffefb-837d-4a56-8fe5-505d9bc37361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26261f72-0101-4414-8dae-77e8c8da9be1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "271e8a9f-3c64-4b93-83d0-727b7004dd50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd3be098-ac13-4193-85f2-86bfbcb2f931",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ec757c-168d-48e5-b8be-e4eaac6b8b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecbcc60a-87ce-4d23-b88d-4944c8cc08aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2aa154-e7f4-4698-9613-c784ebaedd68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef25b553-d332-4060-9f49-1c13558ff5c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dffa913-5f94-4dda-848e-93499b7df115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4d10b9-3b15-4968-bda9-2e047d10db6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb978d84-104f-4b8c-8bad-e0fda4ab7021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d204b886-556d-453a-943d-e035a689d253"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d93d8b87-ca9c-4230-85c4-69929ed601c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8dec948-daba-48bb-98df-8ba8155049dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd9be424-fe15-4019-b6d5-c2a89ef58649",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88d4dd4d-6298-4c74-80e3-fef9bdbcb2db"
                }
              }
            ]
          },
          {
            "id": "de88449e-1185-4a5f-b962-70868a1eb2ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4fa3675-3bc2-48b4-954a-e98f8e3341a0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e7c4367-da40-4d3d-ab93-24fb3901c276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e87532d-5855-4880-b8a5-63fbc852330a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "661cde08-414c-43c6-855b-c488dc607c17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ebbe4e2f-e0b2-4cd5-a1a3-e61f53d707f3"
                    }
                  }
                ]
              },
              {
                "id": "a43de45c-2648-4d25-8f55-6ab6b9ce4aa1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f18aa982-4a06-4ddc-83df-e3eb2a282b2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7a24c3c-2831-4046-8395-569873e7f93d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f1d7a9e-f73e-4597-8a6c-5409560e77f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36322366-f978-4093-8b79-b1a913d1f20d"
                    }
                  }
                ]
              },
              {
                "id": "994acd96-18a7-4c0b-8dee-ecf813951420",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33881977-25ca-4e5d-ac15-ea6b33a49dd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea27bc8b-8b1b-46d1-a498-14d9faf077e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037ab6e4-d36b-4960-82f4-ef3d374fa82a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a88fb857-49ce-43b7-95f6-207398ad01ee"
                    }
                  }
                ]
              },
              {
                "id": "1635d4b1-6bad-43e1-8767-2db5cf4d776c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58b83622-1ffb-4ce8-82d2-3c1958640601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0957d19e-d406-4349-8ed3-7da9f3500516"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b25f214-e533-4282-a243-211f3925c8ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0a653bca-b880-4910-92cd-6e851dc28368"
                    }
                  }
                ]
              },
              {
                "id": "ca8dc558-20c2-4858-815d-fa2207fb690f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10b78b1d-c88a-48b0-a21d-1d8136a209ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72b0918d-af7d-42fe-aa61-f7264e4cfe1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff600233-a819-4671-91ab-874165e14911",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "67824518-2e5b-48f5-8587-59daf5f5dfc9"
                    }
                  }
                ]
              },
              {
                "id": "657f408e-f50b-416d-a1a5-c6d9b0f78a82",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36bcd419-a346-4eab-ac13-7dcc779439fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a60f357-bd47-42cf-b24d-ce66e1447dac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab199581-fc7c-40ce-be5c-881901acd0f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "409cb5ff-75af-4617-b6be-caeb24ba87f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86860b19-4c98-4cdb-870b-44114140913b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c45524c2-e3c0-4c31-8a89-b510177f81db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "634d0ca4-478c-4084-a8a4-5cafe5642df6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8467808d-5783-4c35-a4bd-960d386f37f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fea6c4d7-c0a4-4360-91dc-ad25ce256e1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b24db09a-d5c8-4474-aeec-306648b78fd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbb98dd9-746c-4039-8834-c8d7b22e0abf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0156538-8a68-45f6-a6cc-e5da9e9be02e"
            }
          }
        ]
      },
      {
        "id": "80b028f9-8885-4327-8730-dc89cd54e2ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8fa8995a-3930-4c93-acb7-a35b3e0fe191",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8a448db-8519-42f7-ab0d-1eae11d28aca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2aa9e07-0099-490c-8c78-0569899fda44",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd012dc1-25fa-401c-afc1-5e34df023333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0ef7a5-90b8-4e49-b9ba-ecd460f953b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3965247-49b6-474a-baeb-d4291715ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa126aa-a3b9-4683-b53f-eed574078275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b18744-47e9-4988-b57a-077bb7cc47f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286c71ce-f7a2-4979-8514-7a0cde784cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f751ca2-d278-40f6-9171-2e4183eefdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e017a545-17f2-4ac7-9167-7ffced9898cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2114ff-1813-40c6-a4b9-4044f3026208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cb7d87-aea3-47fc-b036-b6ff54755424",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34acc14f-e0a6-44be-8c50-9b4308e28715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218d6f82-11ab-436f-8ffe-ea77ed983675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e34c17-68f7-4e1e-b5db-7dd6fcc94378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b2a43e-057e-4226-a6f3-dc21b6aca2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc84ae60-44d7-403b-b216-e3215e7fd1a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78c148e-42a4-42bc-a358-0fc447c306e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9886c109-1278-4aab-9977-6eed744130e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887503cd-45ef-4f29-b84c-7e80aff02390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcd3fd3-d504-477f-b19f-081297d66b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee45fbcb-f49d-4f5a-9463-6bd9ac87c96d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96766780-4666-4edf-b3d5-9d4e8b841cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892b5431-e5e3-4f54-b15a-06c6ffb52eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1075c92a-40fd-4818-abe0-57c4be1348a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdc1cd4-6b3d-4fb5-8620-af0f9d9472e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3df9262-e9f5-45ea-a726-44f71e93461c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d9213d-4f95-4627-9b5f-b0161c9f8e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48def1c-eb7b-4a7d-9641-30c3ef8dd884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4191986d-4e09-4ef0-97d2-33470ecd4f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd17de7-f59e-4d02-bdb0-fe2431334a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702bf66b-f423-40a4-89bb-509d48675643",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb08b3-f99e-428a-a049-fac5b040c328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359885b0-e46a-4c74-9d39-3b7627dae4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed893f-4349-4e9c-801a-0d211263eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc11026-f020-49b5-b00b-22e98c60c763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4f4b8e-6c7d-4226-a050-e1541438b74a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60821d1e-506c-490f-8d28-9228d6168ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c1a35-58f8-4473-98fe-e509e54a1ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83402ba4-38b2-497f-81e9-eafb0c754f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37124a2-0412-40fd-870e-144a59ea158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8270786a-5cfd-4e57-bce5-98a1acd49d28",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213134af-68cb-40b0-9b70-229ec2e83f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8deb16f-7d25-40db-a46d-bf7b6349e1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25c6e38-5552-44e7-8a70-39969a3bd406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae9a57f-b865-4526-bbd7-f5628aab629d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a76ac-0bd5-49ac-b415-de9616a79ebe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db674ca6-79d3-4e07-b718-76be603d958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf29a3e-ada2-4ea5-92a1-3e1602208702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300ff247-1d4e-4507-8549-924f23caa5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf2335b-9b45-443f-8a3c-cb5ebd254169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f62a1b-dbf7-4e73-827c-2c2f4a818bbe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c7d3b0-78e5-4954-8c0b-4a90a8ddb7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b7bfcd-09f6-4653-b3bf-2b0100cbf9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84e8ba-658b-4d09-9af7-0092a0f9a10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8da9187a-b747-486f-8515-7358cf571e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7eef4f-eeb7-40f6-aae8-261f46317233",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b03cd2-a92c-4e47-ab54-44f8babac51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82597aa2-7fa3-42be-a8b8-b955bc086305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3698c39-7cf5-43fe-8426-a3103c0e8b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bf169f-6123-465e-920f-71663b72a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7807e48-005a-4e81-8549-6a91222d28f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e716f7d3-b673-4c43-8ae2-224d54dd6ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1436ce-5eb3-44ba-94c2-0a0653c07e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a150187-f9e4-4a1a-8775-c8a6b95c3860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "046d8af2-f2c7-4590-896d-664d2c76dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a0ddec-01a2-46a2-a7bc-02cd6213fc57",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793e3fa0-5012-4965-8dd7-8a1bf2d4a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d23ce82-e9dc-4898-a7af-dca11d02279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475fae21-de85-409e-b531-3f5d829cadc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed94bac-f65c-461e-aaff-79a33bf1d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752c2f37-b853-4233-9825-842fb1dde036",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b864bb-b71f-4ee2-b6cf-0b2ea00ca3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19186006-ff01-472e-ab1f-51830d19bba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71229f37-1131-4f74-a787-e447bb1009c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d57ba2-69c3-4d54-9460-8192fcc55fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc3690-bff3-4c1f-9064-643307f44102",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f00b33d-7c51-4148-9244-854b8e5d7d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b8150d-9305-44f4-ac66-8d7698b18b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b9f1f6-8f0e-41d7-ad4f-8bc0a7b58af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "752c9ef7-2207-498d-b70f-f2bf9e67045b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e285f9eb-3fa1-41ee-8deb-c3e89d81bc73",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b3fb90-d895-471e-94b0-d198aa7e3300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e93aa0e-b600-4cc9-80c3-385f14fcf172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9750f6c4-5431-42af-a47c-09ada491ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4b0204-cf1e-4bc4-85ef-55e93301505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa2783a-4211-4b54-a6d5-2c6058442c00",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe2e7ce-7067-4c7c-8d13-651266989ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8842b89e-af67-455c-8808-01ef996d72ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d40e06-14cd-4e2b-9d52-47f2e637a8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f75d444-fa76-4940-a776-d881b63874f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aebee5-3797-4303-aedf-d360c3b489c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38a2684-2116-4941-9883-64fee2ec9794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb89d04f-3d95-4703-a61e-9cc50224ee1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b8e56-e703-4e94-b3a3-3f9f19747ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d304b644-1fd5-43f3-a279-1d879eb73325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b904ac7-3dc1-4418-afbc-b7ebbf5971fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f17891-b06c-4921-ae87-9e40360329a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e3ad66-3503-44af-ad0a-c65ab25de0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b07261c-f873-4117-aa74-2644ce4a912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d1e3fa-16db-456e-a7cc-4c4700dd318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc8b898-507a-47ef-8107-0685c83bc877",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856f2653-ae3e-4250-8fa8-5392f1de7cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7074eef9-ea35-4990-bf4b-d769ac599f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5b2f38-ccb0-4ae4-a978-e7a784f2091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ce96c8-19b2-4744-8c94-34febc636d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf79195-1208-4818-bfed-44591216dba7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdc2106-a93e-4e94-81b6-45aa4086fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fed4d1-c973-4198-84fb-9977878f6d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e362c-b7db-485e-b8bd-46d080131bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8de2dd2-1160-4f1e-8bc8-bb9c5a2d8ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a040898-7035-4be5-acda-cc14f593b9d1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48442a7-d4e2-4c4a-aef4-cbbd4fd9d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2712a940-23aa-41a9-b9e8-f1e3e4780f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a222e6af-c85a-4957-928e-3b1cdffd2977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f477c80-96dd-4e25-930b-81f98a1190df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18018e34-0061-4fd3-946c-1f8b58b0940c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28bc8d-cefc-40b8-aa46-b1a3f500aba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c2312c-f062-486c-9701-f813201384ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb7dbe8-975c-4e56-b9f1-367ec600cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2f7d2c-efc2-400e-80ef-8ff5af7b3f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d177930d-ee5a-4406-b40c-18f6033dd976",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b813b53-e27a-4b35-881f-8ea7aa3f9e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a518c10b-0490-489f-a090-c0e66cf61965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7e7353-fbb0-42b7-b819-0c8b54fb4b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "852ebec8-5a59-41ab-87ba-18faa9784226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d0b08-194e-4333-9556-86eeb0172453",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa243db-7e94-472b-bf43-f4043539fc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689569c7-2462-4244-9375-59d44d47516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0ecb8f-103f-45fb-9398-4c0f3b179ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5f2c43-58b9-46b4-b824-ea3906026e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456e12c8-9901-4d7d-b914-d11e462c3a9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a4689d-e9c7-4a41-be92-0b246a909f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0857aba1-686c-481d-9548-6e57d759cae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91594e57-546c-455e-828b-1fcf3efad1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43abff2c-0bcf-48f1-9a4d-912192e3336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ceb024-f141-4cd6-9052-d952ca0d970c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9bc005-a8ff-4714-accd-15b86debc6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48906bc-5646-4571-a658-ffaa3545d6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3eee69-5fcf-429c-9597-af9569b258a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebef1a96-aa98-432f-a147-1b307a717f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b1deca-d087-4f81-853f-51f4821ca6f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c9069-1e10-4e8a-a35a-f20f5461f751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe12420-2be1-4b6a-b1db-18684c9c855b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391527f2-f003-4528-9f56-cdb9080b37cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db064ce-df4e-4d3b-8f1f-9e285c682abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b07e7-42cf-4ea4-ba40-bc597cb01fa3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ed58d8-b106-4969-8f7b-b5792aa7210c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c7c041-0768-496d-a9ea-bcd972575b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a047c0be-b17a-42d8-82dc-be5a3527fad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "439acd75-5bce-4af1-9c31-557bf7f6c241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a195b1-a5f0-43f8-a915-839d40d8fbaf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2ffe16-501f-4f0a-b39c-43cede5958ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd19bc6-baac-42df-8266-c43f937bbe61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402a7bb8-352c-4f20-9169-14ce41892c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8479b742-b508-4505-860f-29742619054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c669280-ae98-4534-8ab2-a9cf15a71877",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a579db-e12c-4d3e-9f3e-ad417da5d535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c37233a-e3e7-4328-8e63-ee7d381815a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45edaf25-cc95-4ed5-95ce-e75f4127d23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22845f99-9052-435f-95d2-ff6732af43c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f68660e5-2783-4fb4-b115-7ec1f393ac12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44c6cf1f-d8ff-46dd-8898-1a9b0dea05f1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44be93b-6e9c-481b-9c03-3cc2af69bd15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "21e5cadd-eadf-402a-b870-d8f8e7b87d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97db970-e33c-4d1c-b356-ed713717b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7119fb09-c9e3-4424-9000-e7b211c86ead"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65159567-537e-4201-8184-47360b1acdcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbce75f5-38b7-41c0-8886-442caeb91f39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0385106-b61c-47a2-a759-62d7f4cbd390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d32ee8c3-bae6-4ea3-977f-5390f809a2f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28129cbd-03db-4f7d-b20f-47d2fbb6870b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fe80c43-c1ae-42ea-b74d-30f3cd1e8656"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2514d6d-cf2e-46c9-b15b-e72007bf48a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa7c3191-e7b0-4ce9-a526-15819f4e73ad"
            }
          }
        ]
      },
      {
        "id": "91407df5-3dd6-4d8c-94c9-a6bf4947a44a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "368cd0f1-36b6-46bb-a524-bcfe6910c8f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "741b7748-fe79-4433-8396-32416050b149",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1d5aa46-8c14-4954-94b4-4f59768fe02d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776efa7-6492-4afe-a8fc-af2db95e3cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e7e4f2-4d68-40e5-bc0c-5f7e2d34fe80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d15802d-d5dd-48e4-85da-ab52f425d97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca354f4-9b9a-4614-9380-8e14d33e3c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39710ea-7c7e-45a0-bf5c-c1976e96fa54",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070fb223-630c-4ea2-bb8d-e5fd6bd50ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e7f6ec-ed53-4251-a1b4-76a69fb30212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5623a26a-a360-4838-ae13-6c5c1a1ea030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c6a739-33a0-43bc-90c1-dff755810436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4df456-e20c-4044-91b7-de6c2caff8d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd46f831-befe-4b2c-b42f-d725a243616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b328d0-8dd7-4faa-bf12-734a16c5e442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff6966b-4ba2-4ff6-8d03-2b589252cd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a45ff3-cb69-4312-bd1f-31a8d5121087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb82809-a625-4ac5-9e52-43f010fe3cff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3491551-ce0a-4532-b013-9d409efc81a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a631605b-6fcf-4126-b482-885197826364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9899cd-4768-4d33-a757-c80049b8eafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fb7aba-e6a3-4674-911f-57a244ad70e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7525bada-f74b-4b1e-ad2f-5f8050d73dcd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131f764-6e66-494c-9c35-e8912dbbd2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f6c53b-dcd6-4d95-9eef-c4fdd846d362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f012efec-bb23-43c5-b1a6-3337e7978321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ebb1fa-23d9-4b4e-b46e-a44e90c1caf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dba4b8-6117-43ac-a7a8-b67dcde69df8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1237bf5e-9cd5-41d8-97fc-f41072d44d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf42ca58-357b-4d15-a59d-846a24b53f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ff9b03-5194-44d9-9741-bedd8233fe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f5535a-09ce-4f9d-9247-1e8a69a5acbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc4c54d-de23-476c-a0cd-38564dc6c005",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9846e1b-9b5c-47de-8d32-c1864676a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d81d56f-a5f8-45cc-b89d-39617db76b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd6c8e5-2591-4b47-b080-f658694a87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9a98d2-3117-402f-8bca-81558a2d79db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3f3d2e-189f-40f0-8786-ef2feeb31b78",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafeea04-ac80-4098-87d5-cd34d4e28ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84c0fcb-6d56-4f05-ad88-c0068e44d3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69843c7-0183-4898-acc2-49c6c618bc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e10def5-3d5b-4e69-8f24-e3713661c3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84774a15-33da-4343-8156-cfca0f6c7ee7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2274060-bd67-4a1c-9edf-c279b1a2abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41bd837-d360-4ccd-b6a1-1c5d8f2d1962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f19924c-84ff-414d-9d9d-8fff5eac0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a3ffbd-0d03-4f1b-820d-80d5310cad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871de43f-5ea2-4c83-822b-a53145311ebd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c3b71f-d60f-4bf6-9c84-438d24f27e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d659738-507c-4982-9193-2492f6da7bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278bf9a-f20f-49c8-8ecd-37b43f6876dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6932a1db-b8c0-41ff-b168-2ef7e6e257c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e91ad4d-ad35-4330-bb40-55d6737771a2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4405418c-f6a0-4275-9d35-8f1addaec2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c42e271-a96c-40a6-954d-bf78f5531cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073439e7-e0a5-44da-b00e-e473d22aa425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81c72b97-dd12-4834-aeeb-3a4c47c02bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6455b534-3e5c-4323-afe6-b135623f84ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d595ae-a8c5-4a43-a1dd-137ab0c13205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b0485f-9e2c-455c-92ab-c9e21ed62f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6673f3b4-4893-4985-bd8d-af7dc25d87e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17717416-aa41-4031-9fc5-46f24f00b0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65763f5d-05c6-4da1-b3dd-91d4f0f9d314",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8fc42d-2382-4d83-9a31-90824f68a462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdf7235-b2d6-490d-a8ea-bd9bd4efce59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e675e495-6e30-445c-af2f-35632957adf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b375d913-085a-4e5d-84e0-6ccfd884f2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13be2fe4-8435-4b9e-b2ad-ef6bb79102f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88f6e8-3bbf-44bd-aaf1-24e9727fa293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663ea67c-8dda-48ab-bcf3-c012985e1957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb0d299-c280-436c-83c1-1def8876015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab936b68-b79a-49ba-aad5-0f7c3ab46a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c14cab-5b76-4a11-afad-1063cbd22010",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b67a2-3978-47da-a59b-7f5401e5bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b675746e-f69e-4826-8c80-57b6ebc78414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba9b4a0-53ee-47a9-b724-4fe96b8aa898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ed9c13-418a-442a-80d8-1e80159ca980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fad0ee-6b38-48de-8eee-ff8b88fe737a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172b5dba-00cc-4bb6-9a4e-9db63020161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d49eac-2ea2-498d-aece-4520d641dad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56579a83-8130-4a9c-80db-aedae0dde7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dc0f53-722c-4802-bfb6-054a99bc90b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81558c4-ed0f-405c-b60d-d7dce2efc2f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca88966-c1e7-4e18-a15a-fbb1057df361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d97324-53a0-4530-a81e-aa21bee27949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f7b8cf-58ce-4825-82cd-163dd42b836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "022ba237-ad58-4fbb-8662-5277754fd837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d130a4-ff7e-4162-8396-1bf2618577ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61165116-e5e8-4ed7-b20f-0577ff042793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ebb6c9-c407-4715-9f9c-61c518f868ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421f8a5e-eb60-4a37-b140-4335ff4dd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f087f5f-06c5-49b4-8a79-72019b3fef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8347fa1-ff91-4f34-9701-576dc1108ee4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edd436d-7e7c-4eb3-8cdb-2c16695a9ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd4072c-1bd0-4dd3-a53f-a1ed5d056b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b3667b-c3b1-446c-be57-e00d2e2d6849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4318f0-917e-4523-987d-b86076adbd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa1f648-e224-43af-8cdf-683625889179",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ce863e-c998-441b-bcda-0216ba66fab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bdaf4e-ed1b-480f-b9aa-c8b75310ad3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a84b8c6-4e97-4a24-ae10-955e42086128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "093fa1e0-1e9a-405c-b21d-12280d42fac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3987a7-fd66-43bb-a429-bbf42159a3f5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5105e9-f3ac-4e56-a34a-38c32135a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6431176c-b3d3-4f3f-b606-b76f4c94221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5885580-8d9f-434c-812c-7068ce2ad748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51813954-983a-403a-a3ea-c7c8e7e348a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708b227b-6753-43a1-9e54-aaeb47b5e3c9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320ee420-cde8-44f0-a70a-2355c313ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3431d356-04f5-45dd-9ed7-b0c65ede7f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa33c8a2-8f7f-4502-9d5b-f4f877770d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf777e4e-be55-4845-9002-f504c0d10f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa76722c-072a-4471-b811-9d3be53382f3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf68b4fb-6be5-454f-8b7d-9639e8c57f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f503ebf-341e-43ae-ba34-b9cf913a04e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1028ace-d14e-4398-abbc-e4ed348171d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb618b9-3205-4ad8-979b-3c290d64b622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f31cfd4-94c3-482e-9b83-b227a43b5d5e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c219fdd-881e-4ba8-9043-94e8dacfd1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afdaae3-1d78-4e9b-965e-f03f2977aa16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5218deed-cdd9-4363-8fbc-ccae072300b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e249e3-2845-46c1-8fda-313b097bdf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9050436f-e1ab-4c3e-91eb-68d8fc45d150",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f459c2-37d5-4dcd-b1ee-d03f3f5645c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bf5646-c311-455d-8b2f-cb831382fc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de268b6f-85dc-4697-bc74-8d84e4177d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ae1286-f9d1-4fb9-8a37-a03b1703f81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a404fe3e-f0e9-4a6e-a849-aa3d7fabb046",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a780be-cdd5-4c8b-ac4b-f43475f125b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1bf554-ebd8-442b-beb0-0a5836901cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff633d-5177-4980-a878-03a63d915bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8985a11-6d10-4374-85ee-741709ef2a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca68479-a40e-452a-99b7-5219ceade096",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e468bc6e-0e84-4a94-a2ac-c9c137a0e807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e86dbda-1613-4b31-88ae-64f991223b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1cf259-c2cc-45e3-96e9-03724ab87272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f521d88-bdb6-4f54-b690-3fea51822f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bd81ac-8a4f-4509-8d85-6820ca38f54a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03efae5c-b0d4-445d-a9e4-dbbb412d7da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ac97d7-502a-464a-b9e5-136b254a10be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462eb785-7d9e-40fd-a5a3-fe5ef62948c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbf7317-90f6-46fd-808a-60cdb434a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9b0d90-2ff6-4bf3-9780-b073f101e90c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa7ef6-6954-443c-b176-fcb0b0a0698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b507408-c6d5-4db8-8d58-79ce93815de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef9831b-5117-4c41-b1f4-0b40e90ff303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf055d5-4016-4ae9-8404-747c2c63efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c7648-ae57-49a5-b6e7-781002029169",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8e43f1-bf91-46f3-9b45-00746a1f8d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c89277-7439-44c8-9c2c-bdf9c95c43a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d04aa38-f94d-44b4-8194-87eab647d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e38495-b173-43da-8172-dae2b5f28be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e129499-9405-4cbd-8fd6-bbe52a9e41dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cd180d-b764-4d43-8f70-32fefd1b6a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edcf252-fbf8-43fe-9b39-990f6311ce07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cc2d11-24e2-44ba-9e09-a95bee149293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fda514b-a962-4213-8aa2-f4b63384af62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cf894d-824c-4c00-92fb-f7579b9207d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb61c3f-565a-48de-b24f-ed8022a3e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d43985f-31e7-48a1-900e-6de1672a4561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7534190d-e736-4b2a-bcd5-ad17a19df6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0038f278-a1cb-484c-951c-3a75a11ca6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c69516d-0131-4940-9e3d-d3853a6e7e42",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cfb619-8487-40bf-b641-c5c4943d955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856e8920-cf92-44b9-a741-91e04ace50df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221a7803-4324-4546-a2e9-ac7989c06764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa408c9b-31ea-4c87-9452-33b7d74264e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4236bbc-7759-4efc-bce0-666586a9197b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49620a0-e327-424b-9a33-3fe0f6c30b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dca4b9-eb3f-43fd-9bb2-40c11d952878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911975fe-522f-4760-964c-3210f919b25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "163bdbb8-3476-4dad-9954-c27dbaa45837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e1d25-1769-4956-ac71-09cb22fba4b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efdedb5-0025-4f8f-8543-645424486363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc20e921-c5f0-4ff8-9124-1664bf2dda3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b4abd7-7149-425e-9e37-e7255c3e70a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb860d2-7dfe-46c6-84d4-caf101ca38e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e33973-e5e9-49c3-b05b-5edcd9f16c0c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb898a-8176-4e43-ab40-71fe591d45eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd071f7-3529-49a1-8fdb-3befc2805d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a93ad2d-6118-45a8-8235-875f37aedf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5d4e65-26e2-417c-a6f8-e1f644797989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48942d7d-1ae9-478d-9669-f4b8f660045a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e8f48e-5e90-49f0-bf7f-745f3c4b84a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff48fd21-165c-499a-b715-0de152f7bd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e7adc4-1f0f-4805-bfbf-f5de6685b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8ad7a9-94a6-4e94-903b-20c06055185b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ac1de77-e62d-4d3f-a078-a77995a60fbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76e602e4-54c7-4483-b53f-ff8852045bb8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9bfe1c-83a5-41e1-b495-d431bd3c3476",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3e36df1d-c86b-4c24-9c5b-aa749b3051c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14beaa2b-0401-40a6-83c8-9f1b6d059a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed06aa2c-d6b6-4a6a-8903-ef9a0aae5409"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7beae053-a21f-4e41-b745-9190ced3cb38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29045c69-8f0a-4cb8-af70-829795830e8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "970fd5ff-c883-42d4-a48e-722d78ffd702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "505231cc-484f-4b2b-9f89-fa4d1b6536b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cd44883-6368-4c25-9509-89759dc1acb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "368efba6-65a3-4a26-9118-a5e27ec4461f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd025242-941a-4270-9c53-c21314e0e06f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f14044d-a21d-49cb-972d-1d8d71f07722"
            }
          }
        ]
      },
      {
        "id": "8cef2b6e-ef58-4efa-9a76-4fb9cf6d013a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4751fc2e-57cd-4d55-8afa-6583ba8e41bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca96486d-60d2-4c5e-8325-fb91eb50bc32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4af1423e-c1f4-4d8e-94e4-dbeecfd276a6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f007be20-6b3c-47e0-abd6-e907be5a2f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d313af-d1b1-4239-a1af-f04dd5358b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d42dbc-dd91-4a73-9732-42881c96f5c8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1afd50-3eb9-47a2-b4e2-5af270989209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd595884-769e-45a9-9c81-bdc4440abfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d12f6-9176-4c4a-b4bd-cfd10c36afb2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70378aed-3607-4b27-a295-043b27268ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3663a3-e129-456c-843e-e72c4ff09a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c192e01-e234-4fbb-b3ab-57f257c93738",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630897d1-ad25-4112-8b28-096d6dca0a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25896664-055f-40ae-a4c4-bb54b4335b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c982b-03c9-4918-ac5c-a7f9ebdc13e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4142614d-1878-43b8-9e51-302a406f0444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9224646c-7ce2-4f1a-ae9b-c11fa89fa0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646ec842-72a2-42ff-a7a2-598344b60fab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a895a1-6452-42c5-86c6-937183781009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5747a3a7-e35e-4dea-bb4f-f86f1d72902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1943439e-6b62-4bf4-ae4c-9b69ebcc1f7f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab5f57-496a-46d6-9277-d67679270c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96317183-fa7b-4f3a-a694-7cf9bf618884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b916f6a-a822-42b8-9ac3-b0775ceb2b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96df2bf2-db3c-447f-97ce-a5e75cd10bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a45419c-1feb-45fe-ae74-b1535c1bfca0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d720ff89-2056-4c8e-9d4e-03afd9592a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541ac99b-9a88-4447-8a11-e8b10773374f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612b7c96-a32a-4ff8-b691-5cadcfdda436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c246aa6-c167-40f0-82f6-8139db4e6131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c0aa3-8beb-476b-844a-2766085c35dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf173a-f30f-48b9-8010-6f0e7b9fb69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178dc0f3-a242-4f16-ad48-77d02b656aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d89006-200b-406e-86e7-54628c61842e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580bf875-d0cf-409d-a68a-e1366f2dbe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45307f6-a60e-4c69-918d-3cb29da8fe02",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4973257-0675-4acb-9ebf-8053993bfe45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0772be-4331-4284-abc7-8247a924e1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd5a330-31cd-47a1-a6e9-cca3ce2692e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5496cb51-29ec-4e74-a496-33f76ffc209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff64bf-ac1b-4678-b5cc-643f8e184341",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c99dde-048f-45ed-9177-83bec3351248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3276cdf-c9dc-4df1-adf6-abe914de4d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5e6cc6-9994-411b-9996-d93ce07f185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b637a594-d603-41b9-a875-f6b3d60df069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bbb988-9466-4aed-bd4f-c68e6b936280",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a4175e-17d6-4747-b391-5ed83a578334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdef27d0-651c-4620-a501-577fc7a881fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923e861a-fb25-4d50-a404-fa007bef3e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925668b9-5527-4b45-bc44-38cba4cda612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7e01c9-cb8d-41ab-86ee-5a99fa0862ec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7270c08d-679f-4f00-b593-2c9d98231e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3640b7d-93d5-4ee1-8f34-7c4322b05fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d3a64f-2405-40b2-b02b-a2d16d416d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44ea9bc-a18c-4254-9913-ca83c0602881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5f2a9d-d262-4390-a110-c09a8e3bbe38",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8618ce58-9e1a-4862-9d8e-00005c1a9b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb7b22c-8c56-4353-95d3-1037b0568750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a101ded-249f-46e8-bcf4-98a3abd6f9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43857708-b3d4-4152-acda-46ac3b427edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cd3136-8dbd-4e1e-b836-ae7b38ec71e6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb3ef47-0128-47c6-be68-d6398fcaf625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b63df96-7557-46dd-95ff-48aade69e279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08eeb80-3fd0-4c86-90f7-2fe5240508bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c5b76a-3237-4eaf-94e8-7b1bb760c00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4281d24-e471-444b-ba0b-fc47e7a9272d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5bc3a4-5376-4a0e-b016-a47bd5d8281e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c05417-dc2f-4518-b921-846a23135b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d45417-2ee7-4b62-a154-5d97463a412f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcba9848-7464-461b-85aa-e099f19b9eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35f349e-3b4f-4280-bf0f-45ee0fe4a940",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05002e43-7d2b-40f1-9f0d-6705c6636de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a38e40c-567f-4f6d-8770-b1aa33fb3d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec040d8-fa71-48af-b345-31ecca90362c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b049f292-6136-4290-b28a-412778bdd93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e032bc1-6925-4c19-90a2-205d4faf9895",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d371c4-50be-4bef-b428-2da22ede5cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df2cea5-0b3e-4537-a29a-6b718bc56cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9de8f53-03b0-4670-ba49-77057a85f5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a24ca19-1cbf-4bbd-9475-1df083eeaf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dac6dc-2522-402c-aabc-0cb8a0d2f2bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2266b1b-acff-40da-a6ee-8f46def86c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453468c7-136f-414c-a68b-8455dd48686b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b55c21-9805-446d-b62a-32434481f8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c174c7b4-38f1-4fcb-803e-f89a3441a7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60342b1-9c48-470d-b09f-e01606099c4c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b8f16b-1a2d-425e-850d-e3fa18c201a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dda134f-9582-4da6-b8b4-664aaec11184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a41198-3dcd-44c9-8eaa-f54577086a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5d285c-e4ef-4742-a943-1a4d818723db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4effc3e3-b7cb-40d5-9ba9-0d4dffe5f3a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac4c052-cae2-4fe4-b3f5-1fcb000dbcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20edbba-ebce-4a5c-b520-4a79867565b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924eba58-99cf-4e70-ba7d-a32110cb33dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4e1853-34cf-46df-a81f-38185ea6600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b1ce0c-7fa4-4dea-89a8-8f5d82f4c3e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a25f03-fed1-4d22-9959-0e0b2a618578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74da6ddb-b408-494d-8b88-9168f2ae8983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a068b8b-6d50-48d8-87a6-217bbe584650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a26c49-e11e-4daa-8422-771262729107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b03874-28f2-402c-8da4-cf50bc8fa603",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e518719-285f-43a3-b0ac-d8123e1fe784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9168a4ec-540a-4265-a09c-7c12870457d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac712b26-c444-487e-87a0-cbc5c95e35db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a4b43c-8256-42df-992e-f1d0f6c64747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b744ec2f-02af-40a9-81fa-0aa5c805d3fb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b8d512-cb3f-45fd-84d6-8d56b89c6e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b643661-e818-4c8c-8cae-f2ecd742716a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbccb784-ed8e-4708-a39f-c62548732409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f916da6f-de92-40d1-aefb-4c8e38661eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf96d8e-8cf1-4504-ac3d-5cb8e9ca7ee5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06494d4e-9c47-41e4-a860-c50aa934c158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88d5ba6-a30c-43f6-9174-8bfb795ad9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51d2e6d-6bda-489a-a074-f57cfc5f1f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07479ed-d1ab-437b-85e2-2740ccda25a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252bad4-161f-4052-bc80-429852cf400d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61948d30-3559-4a25-b134-09ebfd2c1802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b7bfe1-5ab6-4c43-96c9-f8020cbbfa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f15556b-e7d9-4763-b77d-4dad396e6da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57345e3-bcf3-4e07-89fe-5dff32cf6e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77021feb-1a09-440b-85e6-a9ab4d177255",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3525aae0-ca34-45a5-a727-6d45586dd133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8269d2f6-e8af-438d-bd90-2a0329a2a1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f4177d-a023-4e05-8029-f4498f4e0a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7891398-1a23-4b6a-a53c-497232cb5b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e633237-ac51-4aed-a120-bc3a7e9b17ca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ab6296-3636-4315-ac5d-c1f1a13c222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb3fff3-5d1c-413c-91ee-3fa8ff1be6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca1dfea-4685-4448-8871-e2dd923ded2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f5fe82-adab-4de1-9922-e9a0259ebd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcca79c-a10d-4ecc-ab2e-8d2531220e33",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ec84e4-e94c-4bb6-bdd6-f4feac9b8572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2022158-ef6d-4011-81e2-b913a19024a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67de3fc7-849d-4dcb-8a4a-e7e2e29a5969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cede9edd-2c77-4c69-ada8-457060d0d6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f17a97b-2855-41b2-bab9-a93daf7431db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9708fbf-00e5-4c26-b422-4b2c1240ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e65322-68f4-4fb8-b33a-4b6719f4beac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0abf465-2846-43e8-8fe5-1c26c62a8589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db0f0d4-21f1-4bcc-b4d4-6b1dddb79f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ccc50-88a5-4f6c-97be-493de60ab27b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd06ab91-7ed5-4dfb-928c-b26e90bd3868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b3a3d7-d194-4a0e-bd42-17cb900cdcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca35b2e7-95a2-446c-8319-d0460d6c757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588a7b96-f917-4ce8-a86c-56581c043c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e5cfab-b1cb-4347-940f-c283d5c6283a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1fdc5e-96f9-43c5-b40c-ad7b0aff6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb594ac-3729-4ec8-b1e6-99dece1dc8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8582a-c502-4d6c-8ebb-c71c1b2afc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8dae89-050d-4136-9124-fe7724cc1ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f79d5fd-49b4-491b-b93e-a9738c98c2ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5360ba8-d417-4a85-9d3e-038f73e893a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab40c37-1d3f-4288-aa9e-ffacebaee52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c886deb-7e50-4f2a-9b97-56997725a49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710343b5-8cc5-487d-ad59-508b9d4b7539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c48c3b8-4d46-4d22-b297-549c4aaa04d3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4f1783-0017-49d2-a0b5-3df024ea1e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c669d63-8038-4cb8-8cdd-6a2897c6b33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aef8b07-3b3b-4061-970b-e70cd069fa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67ef580-9235-472f-8b8b-357180e4347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6bf3b6-0b31-4d3a-8c02-5c83b1d0acfd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcb1ad2-d197-4fc0-a759-8b9686d6ed87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07d6daf-31da-4f97-8266-d1075bf94fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd6b94-cc9a-4523-a40d-d5fdc6bde7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7a03dc-bebd-4206-b10f-5567fa9efbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b50eef-3d30-44cc-9060-29fd692b9143",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2e0079-23cc-440b-aa77-196207ccab3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe9fcf8-d41f-484e-b7af-9b81cad4db75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d487c-4cb0-4399-9807-431087952ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b4b73b-dcfd-41ba-98ca-ca421dd9676d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8931ac5c-b5a7-402c-b0a9-290033126849",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48036d6-50af-4461-ad4e-50fcb63f721f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3420f864-b359-41a1-89f4-4e812ea579a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8c507c-bc04-40ee-a7f0-df6ced7a1757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71300919-ee69-4ffb-a492-337e19ce3045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ed6810-9d53-4d4c-a8ba-4c6ca9f5cdc6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63d4bb8-5561-477e-ac09-96cc05b9724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3e6d06-1d27-4b3b-a91c-e35e14bbdfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed99e6d-c5e0-4879-b76d-05477d6ddb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b28c0a4-8056-4e38-8de7-f105d6ed80d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148fcfc-85d0-4e64-99f6-3d3fcbb80fec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c71218-9858-406a-970e-68b7da9e8261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910c7363-f785-44b4-a4ef-f9d10f31d7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f9c16-47ed-46c6-a042-7cb1d00bed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537b7b05-25f8-4ab3-92e3-772e5e7a9f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2143b556-26ad-4f84-a6fa-b3d7eb212971",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f45b897-acbc-473d-82d0-d4a9eda22bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcc38f9-4b29-46da-958e-9e2ee1f78c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ad0101-6bc4-4344-ba21-9ff2c470f5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b2719b-f955-4978-ae16-10758f2cbbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577d0844-c1cb-40fa-ae90-da53dc275aaf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907d0d1c-08e0-4fed-92e1-36fbf8b0243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ec864b-b173-4258-9310-b2dfec131329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b58318-31bb-472b-a64d-0d2134e6246d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e7a253-b672-426c-b268-d4d542ac2a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9447c-959d-4ef5-a800-fc9234560386",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c0a79-1420-4484-8475-c001d4f6ede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bba679-b231-4bc9-bd5b-71b931857dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7914faf7-3a9a-445c-a387-8df22e296ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b221b6f-43c0-4a42-afdd-b502f428eabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a57e74d-12a1-440f-a3d0-3e6760549382",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d926d078-6275-485c-9d5f-7ded3de1faf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1508b975-9692-469e-b034-425292e5d1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d713e-7e40-46d2-b7f7-3a98e49655b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88189ea2-4f53-42b9-9c3c-5b0c089bf9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d87bc3e-b6c1-4635-a3da-822864ddc641",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c70324d-4eca-42e0-a282-60fa00a9d504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d882108-25e6-4116-bf2d-54439e453284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17a23ea-ad18-47a9-966f-64f2bf1d4ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5935bb-21b7-4717-8c13-b491880a2fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c9bd14-3a11-415d-a658-76197327821f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcc0e14-77cd-4f07-840f-5e6fb0161f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec81ac44-676e-4aa5-a741-9b93ebc8c0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8ab162-292e-4b34-9994-512af7abd75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccaad619-79e8-4edf-bf27-47414f6aaca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c79e475-26ec-4d05-81db-4a450a149033",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75f3b4-98aa-40b2-9ba6-6aabed8fec8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ce96bc-d79d-47a7-91b0-5d718dfe87ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9092d8-0fdf-4e58-990a-748576feb9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2919a21d-9bcc-4b2c-ad31-9dec3f63df53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf35d217-d749-4c9a-9719-fd6447cee468",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e3b25-98b6-425b-9416-5b80a6e5b75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1626303-125d-4e35-87d8-a7396e9026f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c59a35-b411-4693-ac55-4a6dbc00caff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7872f25b-c3c6-4517-8abf-0237fa69a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40270d34-a359-45e6-bfad-a407ac1bd64d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2194da8f-9b07-4127-b910-b72a8f553bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19219c20-e720-4b58-a281-8977bee0f838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3d064b-647a-4227-894f-2c186e930ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66547bd-b370-41f3-9be1-470bea401868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4250e1da-2a8e-45b7-bbdb-c54c6dd7ad29",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d53254-7516-45f5-9e84-56408515fd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314101c3-548d-4118-b242-625fd76d6c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190a2370-7985-4a96-abea-05f21907f11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea11e9e7-e46b-496a-a399-33ffad302a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd1ed0a-c1ab-4f3e-9cf8-0e6bd1c39858",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68f4b25-5809-4a80-8def-79ca8ce3dcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c8b866-e405-470f-871d-a90fee6ba4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41196fd-e2d8-4498-9ba4-4465ab0f7bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f660df-dcf1-4250-bcc4-d1130c9c054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c88b53-b37f-4a25-840f-c2f5b85eaf8f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b43d5cf-2092-4094-92b0-dd1c57515e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3edf0d-af73-4bc1-a8f7-442a9857cffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5848d1-11fc-4219-ad06-9e3b80f73ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0771a978-b588-4f38-8d11-a2d49f62cba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b004bb63-e7ea-4d73-ab7b-5be07cf1feb9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0a78cb-89d5-4dd1-893d-2b05e6c814bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6acf5b-3996-41ea-85b4-90ad22baa7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12479c58-e501-4075-a648-a5439306c405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d4e0ee-c6a2-4eca-94f2-29a9cdbd31ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f43c5ad-1bc2-4956-9d27-283d087fae43",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b52b59-9d46-4d80-8ca3-f6e05b0b8000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef469f15-414b-4540-8d3e-5ae28c9b5ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da0001-f70a-46e3-bdc8-5f9bfb0d22be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ca1cb2-7cbb-417f-b6c7-65f77776bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743b2f26-4fa7-425c-8487-69f30ba639b5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a548ee91-1745-4b36-990b-3dad8e6d7479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa05bf3-c838-4cbb-a55f-7d1b1db18e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207d5c9c-2720-4cce-9a39-04e312b54be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e60044b-7296-4394-9b87-18be92b5dea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbbca02-2124-47dc-9a95-cc744680ffd7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82930fba-4f6f-4c61-bf58-22df0286d7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8748be1-835f-4384-a529-a0dc2f8e9ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5adaf8-9186-415b-af80-f919b837fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22738e6b-ad1e-4d26-9b9d-5c0763ecd037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1345c37e-47e3-45ef-98c1-16f1d914be3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae46474d-b743-4678-8c99-e2256884e08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cd9239-7193-4ff8-8c8f-c993d7a05104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3241cec-fdfa-4ee9-bd23-165e90aaa839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83da1a11-00e3-43fa-9cae-e92e9cfa95a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5594c-c817-4694-9036-61f5b8779e6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe30f60-d04b-448e-afd1-13c8188a0957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8910aa2-75d6-4e12-8d6e-58b97e91c319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea373d1-4aec-4b9c-8e21-f8f63d39aae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80148be2-ba73-4b26-af8f-9fa1b336f5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c8f569-1a92-4157-bda3-eed8bb4706c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578bbdb7-9c93-4183-9a6b-9e7d6c1dfd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897bcc64-a94b-4f28-8092-eeb9aefc265f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f72d805-19ec-45a3-8c30-14a7b93672b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb76692-fa69-4048-8449-a42d84fce80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff203c6-2a32-4e46-99a3-03bb16f0e06c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795ab261-c70a-43b8-ad66-e1177a8a1df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c1c907-1869-4ed9-bff4-47fa1e5a4262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25801161-8d1d-4332-8b07-7c33c688987a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84560762-4a59-4af8-9834-8126fbd996d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db79de6b-11dd-42e1-b44e-8cfc6bb0c6c5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5602ecd5-9d05-4dc4-83ed-72c8f07fed27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b408c733-0a67-426f-9585-155fb2a6e18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c3d384-794a-48f0-ac62-a8589d5215b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704cd226-729b-49f5-8b0c-5e95976866e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8031a030-6f26-497e-9433-8e8f7cf23af0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae190507-2942-4c5b-a8f6-31c3e63820a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d648dc-6e23-48a9-8789-062f369c9ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca2a536-2c87-4fe4-b61d-6673c949dd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d993b49-dce8-45a1-9c56-8e8e9ba0a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4cab62-c162-4c81-9929-806d21d3cb9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee669805-75fc-4140-9b94-0293f3fdf49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befcd8bb-9c44-4d65-816c-1c200fec65d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f84926-2dd7-45b3-8402-54fb395e367d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23355ee0-06b3-40c5-8eb4-dabe8ee03b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf61b8-a1a2-4d6d-a871-3e153fd49185",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746edb06-6b3b-4539-b444-15b578884b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1d13c0-b59d-4d20-a2f9-b993acffd27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49558faa-5ed5-4f22-a4be-a8e9c20708e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b790c4-7ddf-4b74-b59e-e5d11ef7ca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96468a-5aed-4c5d-a763-60730404b701",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec5d644-0d82-4636-90fb-f1c781ea685b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5725b940-f159-4f5c-a0da-5123975b8a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7e66e-0258-4313-bd72-2919111eb9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f75e113-e552-4d9a-8157-6f87fe280a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29756a42-ec70-4587-8875-a3a57d6fa445",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30375c8c-4bda-4e2d-978d-2007ddddc5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652932a4-6fba-4442-82c9-137cc833cca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5299e73-0abf-4485-919a-5a15ac869637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d186db4-33ff-455c-9985-21486e4b4037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48692965-8c88-4c76-998c-a14e0551fb53",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30fea73-8fd3-4a69-bd0b-757789e41aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "359e32e8-8286-48a5-98bf-5049ea72674e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b82b7-f8ec-43f7-99b5-600e5108d98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205d42b3-aaf2-4e5f-b09d-d5c9be429802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745c5d81-859d-4072-b6fe-6ccb84474b8e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ffcf86-53d5-45ea-aa4b-41f43e7320b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a9ba77-b2ee-475e-a025-25ccc9a512fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1104fd6d-74b6-4393-b608-196d3e7c44f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1d2fef-3bfe-4f5f-80e7-5653f016810c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffd263b-d5a7-4252-b15d-abea1d3c1e5e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fb47e0-b29c-4e95-a322-c937f4a6f940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb3d883-2ab2-4d64-bc3e-9e12cebc6b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05331e7-6274-4f13-98bc-75657c2955ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300b8d89-1667-414c-8e1f-77e873df748c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75595b0e-a366-41b9-b266-e44b950df4fc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33af7a7-9015-4e55-951c-3788356925a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90bf7f8-7fae-4d02-89b0-caddb3db7748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0799695e-d9eb-49fb-9d64-4d0ffb4b8164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69b9a49-4177-4bb3-8314-826efe80c2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0f1235-3abb-4764-b0da-321ca9ea5044",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca06475-2e18-400a-9130-b410b36209a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed383c6-4be2-4087-8b5a-dc6f595d6d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f080d0-2ee4-4af5-b444-3dae73c5cfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3174b031-61f9-4274-82a9-0c0bf253b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73365b81-018f-4a29-8189-320e9d3e149d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b955aee4-bd04-44ff-a346-d2c9c4981342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0990dc-1152-427e-9b9b-6dbd2589936e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cc613d-3066-4699-ae84-8671681e4297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa9f874-a5b4-4aca-b2ef-7cc7c1f03f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b874fb-2908-4a49-a996-ef404443b140",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c5a300-3e43-4e1c-881e-b0669800b38a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b02cd40-8338-4d82-b02c-53cf1f538e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a002fb-f1a5-46bf-ba0b-7b178ce53f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04d45f8-909b-4e9c-839d-f8a8dca48509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfef7877-98ee-483e-a73d-47f420e10f50",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a234827f-cd80-46a6-8e92-3290af4fa8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148abce1-8316-428d-ac3d-4460c53cd771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff0412d-ca5d-4e71-b548-c2d0d68dd08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a92ac7d-2fcc-4365-99fe-fc55ce6b815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f305d523-2bfc-4e8e-8c3d-245212ab27dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7880f2c-3efb-44ca-bd3c-e672c75dd192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d1e4ec-e5c6-4da0-9e71-d304fd57d27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f0eacd-a27f-4e9a-a904-e842e111fdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10496a1a-e968-470e-8c9e-20f2945c8b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ed616-645a-41de-97e5-65a542338300",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33014bc-bd04-4505-a4a6-aa15b7b7ec09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9f00f6-60c0-49ef-847a-a78a526f6d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827528fe-4fa7-4643-a975-084653b440c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def16bcc-3da4-472c-b9d4-9217b04064ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1d80af-a2c9-4b2c-8133-61f8e1266fe2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b1bb27-255b-4993-b032-976418233445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f078fd-ed69-458e-b79e-cca19774e0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba42b0cd-cde8-49a1-8181-eaef0b7b111b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be70ab7a-3779-4a50-b3a0-f8f152dd9e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854c4528-dbb9-4e18-9882-4cdb64c94270",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d1faa7-5cce-48f9-82f0-3e2fdedcd345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07be240f-b647-47dd-8ac7-a1914c1a8338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227b9106-b379-450d-91db-061328be45db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd708de8-3735-4eff-8c3a-dd00702136fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6acae-907b-4e5c-a321-99ce17785ca9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc892da2-5784-4c91-bcab-955f80165f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd95ff17-7f20-4724-9271-5e75cf3e9d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc5a971-2bb9-4d7d-b881-fb5cb091d5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd3d691-7a8b-4efe-ba0a-5e08867550b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0881986a-5776-44f3-ada2-06824c67cb23",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905b2f7-57b0-4a74-b8bd-fa7ec5c361ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5af42e-1920-4262-bbfc-99a1620fad15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d02f700-4d84-4c80-b114-9f6bbd3661fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d522aceb-91d0-4fd8-926c-4ed30cf74b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32655720-6431-4874-8e9c-21c9393f5ad2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b33d1ff-8a04-4cc4-ab50-de6a09977cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c526620-39ec-4025-adfe-506ce1114341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e4e8ed-431c-467c-8ffc-f869f5d7e41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ab9c6e-ca8b-4460-ac42-a3947256a37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a614ba15-1a28-4f25-b4c9-cd942b91c414",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8dc734-ebce-4e44-a576-e19f482f8098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee0fd17-409e-402d-af88-1af90ea55469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e150d9c0-4668-40ca-b85e-28c811e6ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276342c9-4a8e-4a3e-87e2-d6b819c5ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b0f93-d697-46e9-b2b7-3abbc13e9995",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7661a5-b0e6-4367-bdaf-9c7fa99909b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b37a7f4-f1e9-436e-aea7-6709a3c86f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bbcdf0-3e1c-4e99-9c65-18e21a1d53a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652c6a9c-e6d7-47bd-9821-a03bb853b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd3a301-3684-46c4-8e7b-9e01d038fa1f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a1887c-645b-4bfe-8730-f0bf457fc0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b4bcb1-79fc-4ca4-ad2c-7f14e7533130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25426e-84d2-4645-8f2d-4ce6a9f2a772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c52de94-8425-4564-9e39-1d9c3c7979ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0741bcf5-cfa0-4175-83a4-62fb0912f838",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade55e0e-497e-43d1-8227-616c1d311ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5b8ffe-4f71-4c99-ad19-86f5b3b85bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f0baa-9be5-403e-a9b4-faa21b7008b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e70434-1330-4402-9b7e-1d76ae6a7640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9020018-3dbf-4c95-bc2d-bf87241cedcc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe7d683-2597-4a20-9c30-24b6cef8cd77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f18ff1b-162f-4393-9f9d-79b78387ef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e54383f-26da-4d7c-8ff7-ad0a1da05fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b0e0b7-6582-4434-ba5a-37f2feb25a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d74a01-6a58-4e75-a04e-40e1375cc0f8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e015a89-73f0-4c9f-b7a5-b8f79dde667e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac271ea4-4dae-4c89-a008-6815376dd80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f6a9fc-4883-48d0-87df-5ac9a811918e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02e1c58-451d-4010-b7c6-bd948d5c4d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155bfc89-1a72-477d-963a-e610ca9b6f46",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f7d67a-29da-4f50-971d-d43cfe257b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798070f0-d0f7-482f-9ba7-584dd5eeebe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b8ebbd-5088-4bca-884b-2bc9229b5143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf2c0f3-38e0-48f1-b2f5-5e75081c22a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56df2bd4-010e-4104-8315-26fbec1faf8d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1f60cf-925e-4941-b283-df3468e180ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5657c007-867c-43df-9e18-1fe4456a7ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d389cb6-c96d-4fa4-b5c5-7517530c19cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602bbfd7-0702-4a94-88d9-a1894e57228d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c7537-0124-41ab-8f5f-b749f4f73d59",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7bd481-5f5d-4d0c-bb96-29bd1d9c3055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52da192f-6563-4627-909c-d1ca817d4445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e95f5b-7c42-4b99-9f0f-b1e7f6a1b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e4e194-41cc-4af3-b4d6-281a59f2a80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd52293-765d-4264-aaae-09addaf97008",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13157771-059e-4e9f-82f2-7d67f41b1db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b2af9f-ebe8-41fb-841e-6be4ae7dba0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b5614b-6788-44e9-b94a-9f1eabc36e4b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9f3bca-910a-4a49-aee9-2f8f5fc6969b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0507a0ec-3e73-4a23-a6e8-7fb5ecacd067",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced869e3-7557-4e41-a5ea-cda493cc5c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a2883f-27a3-400b-92cf-f24867029c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95016f46-52ef-456f-a1a6-240c2a12faf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc5b297-7ac7-4729-ad50-87f2f7807e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4dc23a-ba8f-4528-bc32-e4bccf7bdb0d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7208b21-b751-45bc-b54c-8746852e58d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c15920-6951-47d2-ba75-6a17b954c9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e30690c-f920-4b79-8ce4-e9d2067f4fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e82def9-33e6-4243-9d1b-a6ebee3dce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87d7116-11d8-40b1-8279-aa58450b2bbc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f02a0-8add-4890-8f1e-98f65f94e37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e41dda4a-c55b-4b49-9d0f-7274c0fddfa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ff6224-19b5-43eb-b3ac-eb8b56e6530a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7884ca1a-6de0-4aeb-9608-edf1f49ef899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b40fc0-3d1a-4510-8879-a9d92df59276",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86bce64-71cd-4a49-8761-f9a62f9dc8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d22c86-d257-4aa4-a179-a15f76618391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d074786-6cb1-44fd-a199-882f125f3463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac4897d-5f9c-4229-8bec-276ecfc256e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdb478-e1d0-4ce8-8b0f-96b817172f63",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f983c3-7519-4db5-a909-eedc316a9d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1a9a1e-c9aa-4a08-98cb-1eef6132d426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ffec77-6ccd-4e24-a5b9-867bd5ff1406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc22614-6e10-47c5-8a6f-47ee8658f973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d29aae-7021-412f-8ca8-d8169687d52d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722b0e20-b3c5-4f72-8130-b4f90f5d1e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70507f11-b74f-4ba4-b40b-45c2b9c6e88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb852a0e-62d3-4d50-b9e7-87089ee550dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5059585-e660-49fb-9cf4-04922ff0e1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8b2a5-1c37-4dfe-92cd-993a8ca108d9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebed3b0-2a21-4b6c-8d7a-ac36ced7e07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232946b4-7f73-4ee6-961e-3cdfeea58a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3645c0d6-2daf-4769-be4c-54ca51becc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a92e548-993c-426f-96af-26578d94aba0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "013ff2c3-8a52-4113-9cea-f7b4692320e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86c11c28-8e21-45ca-9643-6a1ecab0e52b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b05e2d55-5cbd-424b-8e9d-fb8eb8fe9ba3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cf62794-80ce-4863-80b3-de54cfda6f2d"
                    }
                  }
                ]
              },
              {
                "id": "e10c720b-e3b5-4a4f-9930-0feaba38f6b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe141317-585a-4303-8cdc-d6dab6085f16",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d302df-becd-4cdb-ad24-9097c9177eef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1cf30922-5a85-4aa7-b6e4-cf707c027b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad9576a-e535-4d91-b2a4-8d2ee073e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0596f2d-abe6-40b0-8c7c-bbf0a7b96271"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37728f88-2a76-4cfe-a982-f6a1cf4d4426",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af76097-e88f-4e9a-a932-63843ea3eaaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "143400a7-3c5f-4fcc-b77c-dedbc6bf9759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ebc7434-8cf5-4bd9-8adf-6bd4377997b4"
                    }
                  }
                ]
              },
              {
                "id": "7037fc02-7928-4d07-85d1-e075d73230a3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4c125702-0fa7-4422-bf49-e85213a83a10",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0626f58b-b47f-4e07-ae32-fd0f01ea93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "98fde2f9-1ae9-45f6-9401-900d4ea81566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f903e-bd92-4cd7-a255-804cff78a66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c9717b-ed74-4517-8121-8e81d6cf4862"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c62ce2b4-567c-467c-a6f6-39348b1e2085",
            "name": "Positive Testing",
            "item": [
              {
                "id": "666832fb-7c1c-47a2-8f96-3392c53b10a8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f952f00a-8d6b-4434-b3a4-5fbcaba3b713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f43b818-2fa4-4c15-864b-c92b6c890de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6301322d-02df-4fa4-92c9-c6d503f1f5f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4b20c0d-09bc-4f00-8555-c28f23c4c5c7"
                    }
                  }
                ]
              },
              {
                "id": "07c9111b-d95e-4837-9400-e2b8430bb87a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ecc08fe-186c-447c-b6b8-33afc8527531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e11c9803-54ff-497c-9d9a-41e895df3c4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "853b3d84-3743-4a86-ab9d-b93ab9c34a07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8676a06-19ef-4e96-bb02-94c4955d31cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "890aa366-9c4f-4d95-8464-7dcb465f846a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1268b13d-4cae-4c85-bc2e-4e8cb8b26477"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa0b7080-fc53-4c7f-baea-d6d8ef46d65a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2169a785-440d-4010-aa0e-5c741e7a8490"
            }
          }
        ]
      },
      {
        "id": "d0397507-9624-4c5f-8b49-d23480eeffb1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67330a02-6cdb-437e-ab1f-c86328410883",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3f396ff-2e70-4ee7-89dc-d8ca88818a7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "668a0226-9201-4aa3-ac14-13d2485e5ab9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e667cf8-8ff5-4304-8f5c-271acdb3cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9f0b4d1e-92fe-49ab-af2a-90e638c16423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c05b1aa-727c-428c-8d62-52e20109381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90ed8266-9a9e-49cd-93af-94526b06c5fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aabcb20b-ea26-43b9-9bb0-ed4fc36123ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdb763a1-83bc-46d4-b5cc-eb72ed55476f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ec33165-6646-4cce-8f33-33fa166d91c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02bb3cb7-f33f-4f8c-bc71-3fcf31f071b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "027f0ac5-c418-4afc-9ab4-764877e4609b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a4d9859-7938-47ef-9e03-ac98e43fa165"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "867a0682-ac6d-4be3-9b04-708ead64dc6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "881bd37a-f97f-45cb-9905-5f4f92f8548e"
            }
          }
        ]
      },
      {
        "id": "6da710da-72d4-415f-b736-3f1d9302593c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0a348daa-898d-4eda-993b-4ba75aa03f9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efdaa466-4682-49b8-993d-36fd671e072d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0189699-f474-45de-aa3f-68ae5e4e03a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9437c09f-9645-4b29-bdb0-056ff88c5f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28bd8e74-d4d7-4dac-b073-8cf37396fbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34f96af-8cda-4e94-a7ce-839fb124e675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3bc6781-0f74-43cb-9852-0bd72bb3baa0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5301647-e68c-4ce7-9c30-df0e329b25ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e8f2188-97cf-44d3-b999-52a50e3c475a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb15618a-29a0-467d-8f4e-6731af4fc2c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1ca810c-40ac-4eaf-a69d-1d42c1d38f8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85a5449e-c457-4e7b-9cd2-4b3ab049db2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97b597b6-9320-48bf-91c0-16478a0400c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "992ebfb4-4e29-453e-b23f-2fd5fdbc9bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99c3f98-1c4e-4007-b7cd-f1412c7d2acd"
            }
          }
        ]
      },
      {
        "id": "3afdd76a-a638-4050-bf04-8688e0a26483",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "89d41094-b62b-4e18-ab28-d5434a7c765d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4136036c-e6e5-4562-9a61-126acacd2609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70433f21-7cdf-4c4c-b89c-9943c80dbfc0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a717773-4cd6-469a-9013-2568be243270",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e510d8d-59c5-4e27-9097-3422cffb3f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e923d94-e0a8-41d8-a3ba-4aa0afdab5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5df83b5-aeba-4725-ad09-451b74e391c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ef16ae0-d720-4728-a43f-9985d9345a79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea5437a-660d-4122-86fa-b6486ca51f61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "134eca93-ee3d-421a-ad54-11e17c0388b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e1e1ecf-43f4-4586-b155-85566a616563"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eefe1d47-a154-4bf7-824b-cdc38bcac57c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c648635-529a-4041-ba0e-684e49b77a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f70a1b6-4b3e-4993-8f5e-732bf2fd6493",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42ee7289-63fc-4fb9-a317-30c057839f65"
            }
          }
        ]
      },
      {
        "id": "0f258bf5-069f-4416-a45e-36c89e867441",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8da88b61-9f51-4a8e-9352-d5fb5f3b14cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "930d0dbc-c982-48e4-ab39-8bc9c6deeddb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c0f8f88e-8aea-4dcc-9510-8f99ec4321e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a82aeee4-0bff-486d-8a9b-a2b0682b87ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74a35fe8-8d48-4672-bec9-82f98fc5e38e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.806338028169014,
      "responseMin": 6,
      "responseMax": 290,
      "responseSd": 26.6205964811553,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696897999222,
      "completed": 1696898014534
    },
    "executions": [
      {
        "id": "1ba262ae-1cbe-4c7c-afa1-03b80e93df0f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8fcec32f-9a03-4d46-9951-d21ba84cbceb",
          "httpRequestId": "cfaef90b-8451-40d8-a732-095d0ee65958"
        },
        "item": {
          "id": "1ba262ae-1cbe-4c7c-afa1-03b80e93df0f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bb4b7132-98c9-4460-8a6a-d7f5be792bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "6878ac68-e9d0-4c89-8b40-d7986bfab73f",
        "cursor": {
          "ref": "8d69416b-b4bd-45c0-ae94-0d6c01469aa5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f3bdbb5-6c7c-4ba5-8527-759020eab8a7"
        },
        "item": {
          "id": "6878ac68-e9d0-4c89-8b40-d7986bfab73f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5d47c5b1-e9a2-4912-8248-07a8d5d2c8ae",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1f104e87-2ef0-4d01-9d62-4498568722fd",
        "cursor": {
          "ref": "e0c9734e-8f63-4277-a626-212623383414",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b0633469-ec87-481c-b1d6-d6f45f2f6301"
        },
        "item": {
          "id": "1f104e87-2ef0-4d01-9d62-4498568722fd",
          "name": "did_json"
        },
        "response": {
          "id": "0a3a7fd9-431e-49cb-ab7a-35479edf495c",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f933c-7155-4eb1-871e-130fce6c519f",
        "cursor": {
          "ref": "5e17d6df-d8a6-4ea2-bae0-3ff9271e9cfa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b5a37da-6603-4a3f-a237-f1db7727d4b7"
        },
        "item": {
          "id": "a80f933c-7155-4eb1-871e-130fce6c519f",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbc152fc-c0f5-4854-8308-5e4b65ec6efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f933c-7155-4eb1-871e-130fce6c519f",
        "cursor": {
          "ref": "5e17d6df-d8a6-4ea2-bae0-3ff9271e9cfa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b5a37da-6603-4a3f-a237-f1db7727d4b7"
        },
        "item": {
          "id": "a80f933c-7155-4eb1-871e-130fce6c519f",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbc152fc-c0f5-4854-8308-5e4b65ec6efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4a5687-9b0a-456a-bd73-c239f6b8375b",
        "cursor": {
          "ref": "f0c61d9f-a4cc-4014-b254-c3e106ac434f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc5dd6e5-8e37-4478-a8ef-0ce0eea14c8e"
        },
        "item": {
          "id": "bf4a5687-9b0a-456a-bd73-c239f6b8375b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c9961ba8-f632-464d-928e-dba70236da7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef802510-150c-4638-8735-68a83b7a7328",
        "cursor": {
          "ref": "e26054f4-0fd4-4d01-aa36-e692cf8ccba2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9cb788f-76d3-4605-860a-b8832e4784b7"
        },
        "item": {
          "id": "ef802510-150c-4638-8735-68a83b7a7328",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c12a6ef0-37ab-4a9c-b4ef-fe0d5ba5fddd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb4b5cd-5b3b-4c0d-a869-c5fd3c488347",
        "cursor": {
          "ref": "dae801e9-f40d-46c7-b1a3-6d7b367cc212",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d05b6291-0984-492b-ae6d-a28bc786b434"
        },
        "item": {
          "id": "bcb4b5cd-5b3b-4c0d-a869-c5fd3c488347",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1d85da15-2503-4d85-a454-7c9cde8e87d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093de66-6ffa-49fc-8fa2-0d480eab61d8",
        "cursor": {
          "ref": "8a367fe0-f62d-417e-b021-5b6c645d583f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f25be739-22d7-471d-a0bf-c177b8b1ff5c"
        },
        "item": {
          "id": "2093de66-6ffa-49fc-8fa2-0d480eab61d8",
          "name": "identifiers"
        },
        "response": {
          "id": "b4b51288-0570-416e-89d2-cc2d2af90d22",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92942a8d-aa98-4218-8122-9c199fd9e8d3",
        "cursor": {
          "ref": "191f4b52-e6b0-4cc6-bb44-c634eba046d5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0bec46f1-d487-4c38-88c5-840d375add8c"
        },
        "item": {
          "id": "92942a8d-aa98-4218-8122-9c199fd9e8d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1b1e13e-8e1f-4249-9465-84688fe06807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec82a71-ba28-4527-a7e2-1c6678d26895",
        "cursor": {
          "ref": "7dd6c853-8220-4863-9de0-b52035eb2683",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b4c7cba9-ef36-4935-ae71-962bb67b6d92"
        },
        "item": {
          "id": "fec82a71-ba28-4527-a7e2-1c6678d26895",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6fe62837-4605-4ee2-81f5-5814e41f9af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024e94ac-a46c-48b5-b5df-7fc018fd362a",
        "cursor": {
          "ref": "4fdae471-de42-4ddb-b0f2-f6ad9add2b79",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "37dddfbb-ac0f-43e0-8fc5-dc328915622c"
        },
        "item": {
          "id": "024e94ac-a46c-48b5-b5df-7fc018fd362a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "977f3e3a-540f-4dba-833f-cfea393123ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3543e674-aaf3-4d9d-9ea6-5c4de97c3f4c",
        "cursor": {
          "ref": "6083f5dc-c173-4ac4-ba89-aacf757d953e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8a32a1cf-a249-449d-8df5-35c49ee07726"
        },
        "item": {
          "id": "3543e674-aaf3-4d9d-9ea6-5c4de97c3f4c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "713f1baf-c8f5-4b4b-badb-8e8e853bb259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df88f27-2da2-45ac-a4e3-d4b7ffe3a854",
        "cursor": {
          "ref": "f53d22fa-0393-471b-8c9b-245f7c4eb745",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5c01500c-1bd6-4c96-9b40-8a837305e150"
        },
        "item": {
          "id": "0df88f27-2da2-45ac-a4e3-d4b7ffe3a854",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d190705c-f837-46f2-92aa-acf54e8023fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662ec899-34e3-4d42-b155-b6c5e75ed4a9",
        "cursor": {
          "ref": "6ff61ec8-6931-43e2-b273-9a828ad80f5d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c5e8cb8f-ac95-40e3-91be-bf349a723392"
        },
        "item": {
          "id": "662ec899-34e3-4d42-b155-b6c5e75ed4a9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "26e1ae0d-dff8-4606-973d-91accba90ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4757f3d7-0a79-472a-9219-f98a9e6878b1",
        "cursor": {
          "ref": "df6eea19-9072-4a89-b3ff-0eb7f04ac693",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5dd510ef-8ffb-4ad8-b447-9effa837268f"
        },
        "item": {
          "id": "4757f3d7-0a79-472a-9219-f98a9e6878b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db7f526e-1408-4342-935e-51c2f85e360e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60140c81-7c69-4346-82c2-e045abdf1f30",
        "cursor": {
          "ref": "562e8407-6490-405f-b6e8-2d9b5156e443",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7558efd1-e812-4c3b-8b46-95a52d17141c"
        },
        "item": {
          "id": "60140c81-7c69-4346-82c2-e045abdf1f30",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56378cf1-45e9-4398-a32e-b5eea220cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47618a6-994c-4951-b3e5-a29182287bd6",
        "cursor": {
          "ref": "8c6f8d5f-4f18-4d88-8d91-c39d9ad39261",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8a2ce8ad-d285-4813-bd70-49cfc1d68ca2"
        },
        "item": {
          "id": "c47618a6-994c-4951-b3e5-a29182287bd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ecf60ee7-863b-4131-a29a-5d35da3fb6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653d9763-eda3-4e0b-bf29-0bee87ada68b",
        "cursor": {
          "ref": "403f5d04-6187-4d0b-8fbd-e3af8f4444f5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "27b748a1-9860-4fea-8878-4f1ef0a55c50"
        },
        "item": {
          "id": "653d9763-eda3-4e0b-bf29-0bee87ada68b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8465ba16-5df9-4493-99b9-130090fd6c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9c415c-6d2e-4ece-948c-f5ec1e9e5463",
        "cursor": {
          "ref": "885c6a20-7a9e-4864-a907-f2b29d102844",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d3c75d2-ccd0-4cd6-820d-e3f256114ac8"
        },
        "item": {
          "id": "7a9c415c-6d2e-4ece-948c-f5ec1e9e5463",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e9f9697e-d6e3-4b38-8eb1-c7c6e467ea20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe314654-68d5-4828-95f3-b7ec64e96589",
        "cursor": {
          "ref": "c60eb7a9-c668-4d26-8bee-7bc8103341ff",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dc039d03-ccf8-4e54-a7e8-a0d288da8214"
        },
        "item": {
          "id": "fe314654-68d5-4828-95f3-b7ec64e96589",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "248bffbd-9c31-4684-95d6-1d8ef90dfb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e3b9b-8305-42de-b8e0-13eba2dbda1c",
        "cursor": {
          "ref": "06ee93a6-df1b-49cc-9dbb-6e49ed06900e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3a4a7402-cb82-4d17-9d3c-557cb6cfeeef"
        },
        "item": {
          "id": "142e3b9b-8305-42de-b8e0-13eba2dbda1c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "085d54f6-6f87-4590-ab77-ac0468b3b700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288aec4b-5dbd-4b8c-bbe8-ddac7da3df81",
        "cursor": {
          "ref": "08788e8b-007e-4075-a9cb-39598fb1865c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ff6c5780-fd47-46ff-842c-2f2e1699c686"
        },
        "item": {
          "id": "288aec4b-5dbd-4b8c-bbe8-ddac7da3df81",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b551dfd-018b-41e3-9639-a15ee68e77cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac9485-84a4-40cb-8a9b-ffdaca02846b",
        "cursor": {
          "ref": "cc6eafc9-c6c6-4cbb-872a-7ac2abfda14a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0825d1d2-89ba-4cba-a203-b4331dcd6411"
        },
        "item": {
          "id": "4cac9485-84a4-40cb-8a9b-ffdaca02846b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ba60161f-d6d6-4af5-9981-81d127acbb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663dc12-48ee-4e5b-b8a0-0f685ee0c5d5",
        "cursor": {
          "ref": "b2136d94-23d5-4b88-97d6-890c169500c3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1f00f1a1-94a7-4021-bffe-779722f821ff"
        },
        "item": {
          "id": "1663dc12-48ee-4e5b-b8a0-0f685ee0c5d5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2ea12dc1-458b-4e79-8763-653a85fa4bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a171a9-c2b3-4043-889a-db4ffdd57545",
        "cursor": {
          "ref": "9516c56f-d762-41ba-8332-419bce8b812c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "93d67fc7-0359-4a26-8849-0c797815b97b"
        },
        "item": {
          "id": "a4a171a9-c2b3-4043-889a-db4ffdd57545",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6489d739-ad8c-40ce-bcc2-f5b63ca21b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf97b5-231a-4f9b-ad2c-a6bae76db834",
        "cursor": {
          "ref": "81198ee9-96bd-4e70-9bfe-717827f5279d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "64ebab37-09e6-42eb-8e62-2f4883d4b4c0"
        },
        "item": {
          "id": "cbaf97b5-231a-4f9b-ad2c-a6bae76db834",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "43649e64-25af-47f7-8bd9-67c5fa75fcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a4b12d-4616-4e64-8210-5f74eb9358aa",
        "cursor": {
          "ref": "2b5954c8-d925-421e-8303-581a4b9c7042",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "28fae20a-18f8-4c13-8d82-6ecc9457ecf3"
        },
        "item": {
          "id": "d3a4b12d-4616-4e64-8210-5f74eb9358aa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c59db945-d7d1-457b-984e-457a6a1f04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f91c4ed-47f2-46d7-ba7b-9a2a6acb9d62",
        "cursor": {
          "ref": "96d44d3d-a59c-446b-bfd5-a90fcdbe0e0c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "50395b36-a5cd-4b0b-8bf5-d215b5f56ea5"
        },
        "item": {
          "id": "9f91c4ed-47f2-46d7-ba7b-9a2a6acb9d62",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5246b8a6-6465-45a8-9e7c-b4e564da860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79b2f83-faa3-451c-ac59-62885558084f",
        "cursor": {
          "ref": "96ed6717-5c39-420b-a92d-aca06f4b8799",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b23ded86-6e70-4ef0-963c-f3c9a65d2b48"
        },
        "item": {
          "id": "a79b2f83-faa3-451c-ac59-62885558084f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d8fef0b0-bb0f-422d-86dd-479cb7996bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2473261a-1529-43af-b7f0-5359b8679ddc",
        "cursor": {
          "ref": "88e16466-3e68-49e0-b825-fece5c462b76",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "db98a83e-1686-4de4-a003-df927401d159"
        },
        "item": {
          "id": "2473261a-1529-43af-b7f0-5359b8679ddc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f1f24702-271b-46c7-bb38-bed769bcdef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a961e87-f8bb-4546-bc69-560b7d15d6eb",
        "cursor": {
          "ref": "f00e50c5-212d-4a4e-8f12-792cd9634203",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58385b8b-a7e6-41fe-bb03-16ba94b5bc8d"
        },
        "item": {
          "id": "9a961e87-f8bb-4546-bc69-560b7d15d6eb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c8fa6244-722b-4ba7-9df0-893a9ddb2d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64281c63-3e61-4b9b-bcd3-743e8b3a9bcd",
        "cursor": {
          "ref": "1a224c86-de94-432b-8983-dc59ebd95f1f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "526d7dab-6d21-4c0f-a0e5-9206c2387201"
        },
        "item": {
          "id": "64281c63-3e61-4b9b-bcd3-743e8b3a9bcd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ee5f4ed-0290-4847-8982-cfdd188b2e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ee07c4-fb7a-4d49-9ff0-5545b63c49d8",
        "cursor": {
          "ref": "ec78a053-8e70-498a-8657-15bca1135228",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4642463a-5269-466e-a7f9-92ec8f4afe4c"
        },
        "item": {
          "id": "c9ee07c4-fb7a-4d49-9ff0-5545b63c49d8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3ea9d35b-e640-46e5-a5dc-5fe738543ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ec4422-86a5-4967-8ec8-7bf30654e820",
        "cursor": {
          "ref": "b604316c-5ba5-407c-b793-d69fca3dc3c2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b84d2ad-2315-49ff-9359-ce77d1ff72d9"
        },
        "item": {
          "id": "04ec4422-86a5-4967-8ec8-7bf30654e820",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "950ffbe2-bfba-4ca5-ac96-3b143852c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82252a59-7b13-4964-9d50-0ddd4b7fe543",
        "cursor": {
          "ref": "f0f9d259-cbe8-4728-be62-bdce0c1a5f8d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f09900b6-070b-4370-be4d-6201e9fb16a5"
        },
        "item": {
          "id": "82252a59-7b13-4964-9d50-0ddd4b7fe543",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d9260f83-20c6-4893-826b-dc4f40737fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6153b6f-5f9c-41f7-b78f-5ad61ce56522",
        "cursor": {
          "ref": "872765e4-14df-42ce-823f-4c9db9e550b2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d47db591-c616-43c3-8856-cc2e686b4dab"
        },
        "item": {
          "id": "a6153b6f-5f9c-41f7-b78f-5ad61ce56522",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a678b066-1d01-4704-89d8-f1c1ffccfa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8e6fa5-f0c7-4c0e-8467-e2c5e9fd378b",
        "cursor": {
          "ref": "64401ca8-b294-458a-a2cc-bddb87fd8a53",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4861582c-e978-4499-a6bc-a8121b9b5c43"
        },
        "item": {
          "id": "cb8e6fa5-f0c7-4c0e-8467-e2c5e9fd378b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3cac268e-5753-47e0-ba09-3d1f38588115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d912cba-4776-4d29-94e2-ae628a71aa98",
        "cursor": {
          "ref": "8b0a5a6e-a59f-41af-90fb-0c28ff79919d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d4a1e45e-7b17-4b64-bc58-46aa957e0f21"
        },
        "item": {
          "id": "0d912cba-4776-4d29-94e2-ae628a71aa98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ec87ea9a-5d82-4782-b146-334e07caf294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab77350-17fe-463f-9c96-20b28b26b61a",
        "cursor": {
          "ref": "1886de82-3f3b-42d1-bd0c-d434f2e40916",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "417b0a39-66c9-46de-9385-d4796adda1d3"
        },
        "item": {
          "id": "9ab77350-17fe-463f-9c96-20b28b26b61a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "611cf9d9-27fd-4a53-a2df-eed0c2353580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4b9fa6-0149-47d3-b43b-958392a5e1bd",
        "cursor": {
          "ref": "91bc0d68-463a-41b1-8402-14059672afa0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "798896f7-b1ce-4842-a978-f7586c49f7a4"
        },
        "item": {
          "id": "fe4b9fa6-0149-47d3-b43b-958392a5e1bd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "928e2a0a-0fce-45a4-91ea-12696655e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac1be04-4edb-4976-bdc3-a0856e1dca9a",
        "cursor": {
          "ref": "6dd728e5-406a-4b39-a168-98d5d5aef40c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2015b32a-88e1-4b3e-b9f6-44a671b74c43"
        },
        "item": {
          "id": "0ac1be04-4edb-4976-bdc3-a0856e1dca9a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4eca619-4b21-4df3-b6a4-3cb9b157046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4dd510-6a3a-4fba-8a28-878d9e7c94dc",
        "cursor": {
          "ref": "6cedd018-c141-4619-bb48-dc1436f77704",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c2684e8a-e553-4464-8b18-1eb9f4a07fe5"
        },
        "item": {
          "id": "af4dd510-6a3a-4fba-8a28-878d9e7c94dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0e32eb51-0496-43e6-9092-c52a1a660f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc57b629-5e7c-491d-9333-1031ace0ec87",
        "cursor": {
          "ref": "0dd827cd-c36b-4c58-b00c-24b759d24fc1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a8213124-7c39-4187-a31d-f8a2798fdb78"
        },
        "item": {
          "id": "fc57b629-5e7c-491d-9333-1031ace0ec87",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "97926ffa-5cff-427b-8d10-d19866b048ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d85c9-f4f8-4a7b-9cd7-7c203e5a9a27",
        "cursor": {
          "ref": "d507f4c6-bea4-416c-a119-29c671dc61bd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8f0a76b3-020b-45af-9517-c2632c4f26d6"
        },
        "item": {
          "id": "175d85c9-f4f8-4a7b-9cd7-7c203e5a9a27",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf59c3b2-9371-48b7-82df-6abff16f866f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c6a35-4340-4cbb-b434-83a1aa8a632b",
        "cursor": {
          "ref": "9514c69e-9fc8-42fb-b6d6-6cb570551f4c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2bfa2b30-ad40-4a79-be29-119372d3f03d"
        },
        "item": {
          "id": "a18c6a35-4340-4cbb-b434-83a1aa8a632b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "abb28424-29c5-4fde-8de2-85407c0fd7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7542e1e-e376-4215-b311-d4c8745b6649",
        "cursor": {
          "ref": "55023fdc-8cd4-4f58-b48e-bf4485118a3e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "32b1f8e9-a6f0-4c58-8804-cc3e54a87c95"
        },
        "item": {
          "id": "b7542e1e-e376-4215-b311-d4c8745b6649",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f21dad3f-6d49-4bcb-a8d8-fb4943ffff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941ff94c-f7bf-46c8-8b16-7ed5086ac37c",
        "cursor": {
          "ref": "64d9dc28-a323-40ce-9413-0726385a2a00",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7b0adc7a-ac1a-47f8-942a-3dde6ad1a030"
        },
        "item": {
          "id": "941ff94c-f7bf-46c8-8b16-7ed5086ac37c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cbcf23b1-5b88-4aa6-ae31-3258df8bc5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b14e48-32a1-4cf2-b90a-67069a42e6c2",
        "cursor": {
          "ref": "01890749-2803-4a8c-8c21-7896f52e25e1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "46bb3fed-24ee-41a4-bdb7-dd3450fc456f"
        },
        "item": {
          "id": "24b14e48-32a1-4cf2-b90a-67069a42e6c2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "af8e1c36-6f72-44f7-a43f-eb345d967646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8c8dc2-af5c-4bfc-832f-a402083eade1",
        "cursor": {
          "ref": "ee37baf2-92ac-496a-aa44-4367c624c3a8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4399b01d-cb3e-4bf0-bf89-6385039b7704"
        },
        "item": {
          "id": "8e8c8dc2-af5c-4bfc-832f-a402083eade1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d7bfb1e8-acb4-4919-a66a-de0f50dae5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff8e79f-d2ae-44fb-8241-f5a0ee73fc7b",
        "cursor": {
          "ref": "920a8283-28d5-46d8-b340-453437ad1684",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f121c2d0-a66d-485a-9a3d-a2f1792c3985"
        },
        "item": {
          "id": "9ff8e79f-d2ae-44fb-8241-f5a0ee73fc7b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73ed5ad8-1cbe-4af5-a7cf-dc17e9e5952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83164a1b-256c-4c02-8fba-57a803fd74f0",
        "cursor": {
          "ref": "7afc0d6f-06b3-47fa-a966-9ec2d276737d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95630119-3ad2-4d62-b6a4-cbdf734d5d0b"
        },
        "item": {
          "id": "83164a1b-256c-4c02-8fba-57a803fd74f0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "450396f5-fcf1-472e-a7af-186a61a32eae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a3f262-8034-4cb8-82c8-2bb95feaf0f1",
        "cursor": {
          "ref": "5cb41a49-a3d9-4b00-b57d-a3ae92bdc36e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06242281-12a1-4ea0-a5b0-8909a6a02d9b"
        },
        "item": {
          "id": "60a3f262-8034-4cb8-82c8-2bb95feaf0f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "069def07-2548-430b-8aa6-728aa9b9347b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e66b1d-7683-456f-9ca6-f002291942ba",
        "cursor": {
          "ref": "614fb3aa-cf08-4e28-bf84-02858b973808",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "964f1371-a876-43d8-bf49-978707068f70"
        },
        "item": {
          "id": "63e66b1d-7683-456f-9ca6-f002291942ba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae8b4d3c-5521-4d72-90e5-ff7272a20447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a06b7-7e22-439b-9d39-863aa853acc7",
        "cursor": {
          "ref": "5ef406d8-3c44-4abc-92a8-a8e0fe04c547",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "beed06e0-bfef-4f89-a43e-2411ad25088b"
        },
        "item": {
          "id": "f73a06b7-7e22-439b-9d39-863aa853acc7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "624ce2e9-cdba-467b-b701-51e9740f6e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f657e87-d61c-485a-96b9-6850d4240461",
        "cursor": {
          "ref": "d41f2da0-6fce-4563-a05b-756b8b4ac1a6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ae128fd7-c909-4d32-b75b-752bf21118c9"
        },
        "item": {
          "id": "7f657e87-d61c-485a-96b9-6850d4240461",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a83584e9-d289-47c5-a253-35b4c816efe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c44e7-bf83-4a2f-83e2-3c763d12a912",
        "cursor": {
          "ref": "d552b3b5-98e2-4744-9fe3-d2b05b944ba9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0cebda1b-53e1-4694-8077-b16245cacc2b"
        },
        "item": {
          "id": "866c44e7-bf83-4a2f-83e2-3c763d12a912",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "69226bd2-2098-429a-bf49-fe01ea8740e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab78b5aa-19bb-4d0e-8b08-1be9a18d74de",
        "cursor": {
          "ref": "e0843ad6-16a5-4a30-b082-9dfc1d23df86",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "78346843-30c5-4f0e-8730-168337cc5ba3"
        },
        "item": {
          "id": "ab78b5aa-19bb-4d0e-8b08-1be9a18d74de",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "036a4eb2-fac0-4de0-84e6-128660b75747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e91036-c953-41b5-abbd-8bb955e3921d",
        "cursor": {
          "ref": "5ad85aea-0274-4b7f-b490-692fd851bdee",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec942649-392b-4e6a-b7fc-d137f7480271"
        },
        "item": {
          "id": "b6e91036-c953-41b5-abbd-8bb955e3921d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6082680a-1689-4012-a48c-6083a70c61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50544fa-f703-4576-8c84-18a326e05007",
        "cursor": {
          "ref": "6ede3537-ff4e-4975-aa41-6a2f09229bf5",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a12c709c-d604-4ca0-8942-994e8e4d38f4"
        },
        "item": {
          "id": "f50544fa-f703-4576-8c84-18a326e05007",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c64fb876-4330-4323-861e-ef51067e44d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4da440e-dc66-424a-840f-fd15acc2c07b",
        "cursor": {
          "ref": "3d2ca09b-b91d-4fb0-879b-25ba977907de",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c8dd8a88-acd9-47c9-a73e-73a151ca12cc"
        },
        "item": {
          "id": "d4da440e-dc66-424a-840f-fd15acc2c07b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "efea3a5a-2e2a-48e7-994a-e076d3e0223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe40e1b7-46c5-4dcf-ae88-ce4aa4a90436",
        "cursor": {
          "ref": "264db445-74d5-4ac6-9adb-19350b0d76db",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a07f35e7-382b-4d7e-bd4d-2611b80de755"
        },
        "item": {
          "id": "fe40e1b7-46c5-4dcf-ae88-ce4aa4a90436",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "448cd540-e0ec-448c-8b3d-c9071f7a1b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f083c4-1211-45ef-a0bf-1bbc96204f22",
        "cursor": {
          "ref": "c04346b4-e5fd-4ac8-b474-aed3efe428ec",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "200482a2-57b7-4929-8767-52eb80234178"
        },
        "item": {
          "id": "f2f083c4-1211-45ef-a0bf-1bbc96204f22",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c3e51a38-01be-4e9a-923f-8b089f3e4506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0137d79c-607b-419b-9594-f8a5251edb09",
        "cursor": {
          "ref": "26ca2134-c1c0-452a-a76e-9cebd948633f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be1ffcd2-9a65-49ed-9a56-2edd56a715b8"
        },
        "item": {
          "id": "0137d79c-607b-419b-9594-f8a5251edb09",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "716dc7ad-9dcf-4867-af7f-9c37892493f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac1ba67-75e9-4d01-9820-f4ebe5bcdb25",
        "cursor": {
          "ref": "a7bd8d5d-a590-4431-8074-66e92ea5aec1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dfe35088-a760-46fa-9d91-03702e6d1cac"
        },
        "item": {
          "id": "cac1ba67-75e9-4d01-9820-f4ebe5bcdb25",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ddae3c7c-9092-4607-8a6f-9fb4320aef6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813c3900-b1d9-4703-9ee4-42728a605247",
        "cursor": {
          "ref": "40f8b8d8-6885-4259-afc8-6b789de924df",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba02cc6f-1334-4225-b07b-239605d23015"
        },
        "item": {
          "id": "813c3900-b1d9-4703-9ee4-42728a605247",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "245dcbc8-4fed-4a41-9797-7daba236091d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6351ceb9-180e-498b-b4ee-25cd332ae284",
        "cursor": {
          "ref": "b525a806-8241-4e30-9f5c-4fa897a2e125",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39cb0438-d83c-4f9a-85d7-03d3602fc474"
        },
        "item": {
          "id": "6351ceb9-180e-498b-b4ee-25cd332ae284",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aaed7e99-6100-4fc1-958b-da32079f8118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b7942-cb25-4a40-ab7d-c902781ca6f0",
        "cursor": {
          "ref": "eba11536-73be-4d3a-9d33-5d376035611a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1d93b91d-f010-45db-b37c-3853cdbeea4f"
        },
        "item": {
          "id": "be4b7942-cb25-4a40-ab7d-c902781ca6f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1c30346d-76b4-4ee5-897b-095a4727c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d37dd6-eb60-473c-8ae6-feb573f42d8f",
        "cursor": {
          "ref": "85ecfff7-37f6-496f-a1ca-ce1fb771b3ac",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b503d57d-951d-4031-9f49-777853539bd1"
        },
        "item": {
          "id": "42d37dd6-eb60-473c-8ae6-feb573f42d8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "535b6575-814d-45af-a1b8-80c6c394c916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4342f159-3ade-4309-b59d-2bfb6d501ed6",
        "cursor": {
          "ref": "b2abc1ed-ce54-464d-a36c-f40656fbf2d9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4ad5056a-b5eb-4863-a812-a09af798a583"
        },
        "item": {
          "id": "4342f159-3ade-4309-b59d-2bfb6d501ed6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "df2d67ea-e855-4900-864e-ed379b79d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a618e26-d51c-4815-83cb-58d9fde474f1",
        "cursor": {
          "ref": "ec9c8e60-6e3f-4a20-b9df-190e4e95e696",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9c173b6d-788b-438e-b23c-77fb0f123afb"
        },
        "item": {
          "id": "4a618e26-d51c-4815-83cb-58d9fde474f1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bf86e481-4fda-462e-a8b6-34b21d7b0c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba60f3a-7c59-49e2-88c4-1541dac3338f",
        "cursor": {
          "ref": "07077799-3196-4a30-9480-703765dc5b2c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "eb2c407e-8fb7-4ca3-99a6-bf764c91cb0c"
        },
        "item": {
          "id": "4ba60f3a-7c59-49e2-88c4-1541dac3338f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "76430c91-740b-4942-9065-e24d5726fd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5dd580-6c72-4ff0-b21f-9f817a76c4e9",
        "cursor": {
          "ref": "017de6aa-c3c6-4299-958c-0a17d054547e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1873d50-eb90-41fb-8446-da4f6684f591"
        },
        "item": {
          "id": "ca5dd580-6c72-4ff0-b21f-9f817a76c4e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c7fc86a-5e0b-4fa9-9b00-89af850467df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c5995b-51be-4eb8-a669-7e5a64ef084e",
        "cursor": {
          "ref": "d24015ba-5fe6-4835-bfc3-dad7d3b3ce99",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "37650c5c-5990-47af-bf88-44353f584a88"
        },
        "item": {
          "id": "53c5995b-51be-4eb8-a669-7e5a64ef084e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ab9f60dd-936e-4df9-be2c-7cb3eb6e38ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb30110-2f01-4a97-b208-592e97a94707",
        "cursor": {
          "ref": "0992e2a7-e54f-4960-b8c7-b026e25ab9ba",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93a76877-70ac-4ad4-9419-c74827982821"
        },
        "item": {
          "id": "4bb30110-2f01-4a97-b208-592e97a94707",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "32a336bd-da7d-4619-ac88-9fd55523cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb82ea5-f60c-4d1c-9f52-aa89336ffa30",
        "cursor": {
          "ref": "72199e53-f313-4dc3-b154-052a568dd2b9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "48d7947d-1e42-4c38-9ee8-e79947fc00bd"
        },
        "item": {
          "id": "aeb82ea5-f60c-4d1c-9f52-aa89336ffa30",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7283a055-4969-4b5b-b916-89c48d92871b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c47e00a-f260-44e2-8bdb-85933c5cd135",
        "cursor": {
          "ref": "fe61f568-266e-4adb-91f4-9600ad3f09b3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3145d0c8-068a-47ee-b94e-dabdea77f398"
        },
        "item": {
          "id": "8c47e00a-f260-44e2-8bdb-85933c5cd135",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "87231d42-dbcf-40d4-8e9d-ec392a09881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d575271-ab85-43d5-8a03-206a3012b6e5",
        "cursor": {
          "ref": "ee7fa3a4-558c-4a65-97ab-1d264e1b1159",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20487a20-b3bf-404c-91e8-933ea48b6365"
        },
        "item": {
          "id": "9d575271-ab85-43d5-8a03-206a3012b6e5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5db4d713-8eaf-4aef-90be-d158fd7a1289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77542827-d38e-4e0d-8920-dd05276c6f13",
        "cursor": {
          "ref": "b1a2488d-732a-4482-b8b3-ecf5162ae25f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b105a0e4-c723-4990-bbb8-8ae4f3cdd921"
        },
        "item": {
          "id": "77542827-d38e-4e0d-8920-dd05276c6f13",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0bfd8367-4a10-4fea-82dd-146a2642794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efd7b1f-3e82-4537-8a80-96aac39f7bd2",
        "cursor": {
          "ref": "f23b74a2-e135-4360-bd39-d8abe305b3ec",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3ab9f566-b97c-473a-a706-ae9fcc5c82ba"
        },
        "item": {
          "id": "8efd7b1f-3e82-4537-8a80-96aac39f7bd2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3b488536-884f-47b1-8dae-ab286adeb0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c5123-240a-4add-bbca-390238f808fa",
        "cursor": {
          "ref": "c6e6a6aa-ea2f-4e97-bbd5-a5e0561b914d",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abf52f9f-5d52-49f6-9410-1cf34553cfea"
        },
        "item": {
          "id": "d16c5123-240a-4add-bbca-390238f808fa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6618eb0-d4ef-491f-b459-07e41d3c07c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b306125-b55e-4175-9909-fea4804db137",
        "cursor": {
          "ref": "329384c0-4127-4e92-8e12-b85941b510a4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a64f87c1-5c9c-438e-8517-e500aa5b29e6"
        },
        "item": {
          "id": "4b306125-b55e-4175-9909-fea4804db137",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "43d86417-198a-4a31-b9fb-aaf7abc01710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7b79c6-e2f7-4241-b4f8-2542c0ec1406",
        "cursor": {
          "ref": "d5bd4887-c72c-4d52-9093-e628ec61f63c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "22243fb4-5d5d-4f5f-b904-a37aff4cb058"
        },
        "item": {
          "id": "eb7b79c6-e2f7-4241-b4f8-2542c0ec1406",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d7faed9d-0287-4a79-a81a-506ba4b1b29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9cf129-9530-4167-805f-4af1e6fd4075",
        "cursor": {
          "ref": "beee9b7f-80f4-44d1-9523-423960707182",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "78bcfabc-2eae-4196-954e-b03992aacdf5"
        },
        "item": {
          "id": "3c9cf129-9530-4167-805f-4af1e6fd4075",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "78709ce3-4892-4ee2-9312-aff01ddf132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8566bc-d0ed-4a30-bbf7-1ad40cbc4acb",
        "cursor": {
          "ref": "210cb561-3543-4385-942b-5d8f32c1b5df",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df6332d1-d48d-4150-94ca-7492273bcfb1"
        },
        "item": {
          "id": "2a8566bc-d0ed-4a30-bbf7-1ad40cbc4acb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b0146df2-cec0-4575-a31d-c81aaebe598a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81d8e6-9b25-4dd3-8ae7-cea6476ed535",
        "cursor": {
          "ref": "e333fc3e-4fea-4afe-9071-b1d10ff6e2f9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56a36cf5-d721-412d-bb1a-e455e0da4084"
        },
        "item": {
          "id": "1b81d8e6-9b25-4dd3-8ae7-cea6476ed535",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dc2c8c25-e1e8-40cb-b4b3-c158e4055d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8185372f-8715-4a2d-8f55-edfd0769b3b0",
        "cursor": {
          "ref": "b127f15f-f2f4-42f7-ae7c-1db15475e62f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a8834566-2ece-46a6-a562-c0aba6ad69fc"
        },
        "item": {
          "id": "8185372f-8715-4a2d-8f55-edfd0769b3b0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "026bcc3a-162d-431d-a0ad-db68339600ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b161331-440c-455d-8500-4e10880e7b15",
        "cursor": {
          "ref": "8c03bcbd-9876-427b-a636-523c8c81add4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a51957d-1ccb-4a9a-8613-dce25cb1b957"
        },
        "item": {
          "id": "5b161331-440c-455d-8500-4e10880e7b15",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55bfe28a-abca-438d-9c50-0f097c77c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ec453-a6c5-49f5-9d12-a1c483fc1952",
        "cursor": {
          "ref": "ba66ac34-3c4c-43fc-a51d-10a8811c8af2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "562d909d-7e21-4811-8735-50b8875ee55f"
        },
        "item": {
          "id": "411ec453-a6c5-49f5-9d12-a1c483fc1952",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "862031c2-134e-4cb0-8918-96b003658a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc1171-3ecb-4ab0-b481-2c8443862df6",
        "cursor": {
          "ref": "84982caa-291c-4fe3-b091-82b3913a57ec",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6b3343a0-17df-47a5-871b-578d6c26324f"
        },
        "item": {
          "id": "e2dc1171-3ecb-4ab0-b481-2c8443862df6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ab37742f-2494-46c5-bfc6-21a4d3d0d357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb3901e-d2d7-4296-a8e8-17d16033be73",
        "cursor": {
          "ref": "2bb2a354-5448-43f2-89ee-cebe7df5624f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2a073f0c-dd8a-410e-b23a-be771327bb8c"
        },
        "item": {
          "id": "8cb3901e-d2d7-4296-a8e8-17d16033be73",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dc828134-572e-46c1-84a0-32249ce03594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec022e-2696-4a8c-9e63-9e4658f23e3a",
        "cursor": {
          "ref": "84864912-10ae-46bc-814d-97fc31a3833f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e286593a-8141-4bd2-990f-0af391a426cb"
        },
        "item": {
          "id": "53ec022e-2696-4a8c-9e63-9e4658f23e3a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "00e96244-5edc-4280-ad0c-e2ff4261eb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5526b359-7733-4269-b760-32eca3dc3656",
        "cursor": {
          "ref": "9f23924c-5045-4b64-b45a-ed0acb35818f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1790ef54-ce16-4d5b-8fce-f378513de372"
        },
        "item": {
          "id": "5526b359-7733-4269-b760-32eca3dc3656",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e230e7a9-a75a-4e74-bddc-68624f896584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197158b9-fa82-42e6-8daa-65bae81dd441",
        "cursor": {
          "ref": "652639e1-763f-4f75-9fb0-5efd0c599c4b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b09bd581-7493-4489-9f50-457ef226488f"
        },
        "item": {
          "id": "197158b9-fa82-42e6-8daa-65bae81dd441",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fec603c6-aded-40da-81ac-cb3309b6a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9827db24-4edf-4913-ab7c-39f22c7fc27e",
        "cursor": {
          "ref": "f1104a3a-f00d-406b-9080-ea371f5b0720",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c7d7c8d9-3a83-4375-91f9-50d58830603a"
        },
        "item": {
          "id": "9827db24-4edf-4913-ab7c-39f22c7fc27e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52da8c55-ead5-43a0-94c3-21adf7aefae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d77691-bdc7-4628-9398-52df65dda9b3",
        "cursor": {
          "ref": "2e47a1e9-ed7f-4901-8e50-87131d3c6333",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a3db99a-7823-4257-9dd0-959a9e373dd6"
        },
        "item": {
          "id": "31d77691-bdc7-4628-9398-52df65dda9b3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d3df0b39-44c7-4285-89b4-279db85e3822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b182ab8d-6d9f-4ab3-a2e2-d26e5724fd3b",
        "cursor": {
          "ref": "59f3bb75-697e-4037-be74-8797a10cc4a5",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "af152100-e995-4b49-94e7-b79734c15482"
        },
        "item": {
          "id": "b182ab8d-6d9f-4ab3-a2e2-d26e5724fd3b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1d7552d5-524b-4638-b75c-a2cad6201d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7ee355-1e23-4e29-9bfe-59c64e284b1a",
        "cursor": {
          "ref": "1a38b0f7-c19a-4d09-a9bb-bd45c950159d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a174f34a-f01b-4fd4-917e-a7801f42e689"
        },
        "item": {
          "id": "fc7ee355-1e23-4e29-9bfe-59c64e284b1a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "21d778a6-d8c3-4222-8e2d-e577dcb2c4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1709605-e9f7-4aba-bbcd-b629ca4469ae",
        "cursor": {
          "ref": "8ebcf0a9-51c5-4eca-8c37-b5906bc2920f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c308ad5b-e757-40be-9948-88e091bf0938"
        },
        "item": {
          "id": "c1709605-e9f7-4aba-bbcd-b629ca4469ae",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a95a501-508c-4de0-8bd5-97f191393f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0fcf0-fe03-4d9b-aa28-d2fb6b56ab9a",
        "cursor": {
          "ref": "7b6e01ba-9d72-4946-a636-3906d1d5d215",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6a9f6e9c-7ba7-4d41-b10d-4bd400f446c6"
        },
        "item": {
          "id": "06e0fcf0-fe03-4d9b-aa28-d2fb6b56ab9a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6fdb32d0-1d3b-4466-8c0a-0f61fcfa44db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5be6ca-3cd5-4aa2-bb97-2399c31cd326",
        "cursor": {
          "ref": "92747455-792a-40bb-91e9-8bf3e9fbc06b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fc9cd4b5-4bf1-4885-b1c4-343918837066"
        },
        "item": {
          "id": "6e5be6ca-3cd5-4aa2-bb97-2399c31cd326",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0613d548-05e4-42aa-abb1-da449a8b82ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3be098-ac13-4193-85f2-86bfbcb2f931",
        "cursor": {
          "ref": "b6f6e6e4-976e-4374-8160-1b2c7fae6c8b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c9cad567-8c6e-4517-8281-b2d1413d4eb6"
        },
        "item": {
          "id": "cd3be098-ac13-4193-85f2-86bfbcb2f931",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "22fb6997-4e89-4f2f-b13a-b1f74a21ae9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa3675-3bc2-48b4-954a-e98f8e3341a0",
        "cursor": {
          "ref": "c1a28848-9b3c-4dab-9653-bb0f6cfb4459",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "66348871-52c0-4387-8157-4c09290a5bf9"
        },
        "item": {
          "id": "c4fa3675-3bc2-48b4-954a-e98f8e3341a0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d2ece09a-470b-4025-bce1-a48e2e1e1c48",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43de45c-2648-4d25-8f55-6ab6b9ce4aa1",
        "cursor": {
          "ref": "aa4a2c46-4a13-4718-8967-189e4a59a3df",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39a80d2d-f0bd-49d1-a141-e4f9a396b6ce"
        },
        "item": {
          "id": "a43de45c-2648-4d25-8f55-6ab6b9ce4aa1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a50f86c6-198e-446e-b7eb-b247fd75b8ea",
          "status": "Created",
          "code": 201,
          "responseTime": 250,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "994acd96-18a7-4c0b-8dee-ecf813951420",
        "cursor": {
          "ref": "408e2a2b-8ffc-440d-9e72-96bb0eb33363",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bb9619a7-d49a-4529-ab23-82a0bee81b5d"
        },
        "item": {
          "id": "994acd96-18a7-4c0b-8dee-ecf813951420",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "30b2d949-0c6b-4688-96f6-a171090f0af4",
          "status": "Created",
          "code": 201,
          "responseTime": 183,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1635d4b1-6bad-43e1-8767-2db5cf4d776c",
        "cursor": {
          "ref": "77ce7bd6-2c15-42e7-8019-a77dfccc22bf",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4a53207f-d31b-40ab-9593-dd106917f7ac"
        },
        "item": {
          "id": "1635d4b1-6bad-43e1-8767-2db5cf4d776c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ef9ce04-5d50-4d91-8cc1-77aa6d859968",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8dc558-20c2-4858-815d-fa2207fb690f",
        "cursor": {
          "ref": "0c2b9fd5-547a-4b3a-a12c-945a4d863540",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "515fec36-b6a6-4ba8-995a-868bcb805c15"
        },
        "item": {
          "id": "ca8dc558-20c2-4858-815d-fa2207fb690f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d71af32f-4f3e-4f07-80ba-9f486fc3047d",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "657f408e-f50b-416d-a1a5-c6d9b0f78a82",
        "cursor": {
          "ref": "4dd5f287-a4e1-49e1-962b-0c04aaca14f4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d0b2cc16-32a2-478b-8707-3c2ff00d72d3"
        },
        "item": {
          "id": "657f408e-f50b-416d-a1a5-c6d9b0f78a82",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "81927857-ddd1-4d0d-8cab-ddb9a5d92099",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa9e07-0099-490c-8c78-0569899fda44",
        "cursor": {
          "ref": "de07c08e-452c-4e1c-b09f-b5e384aacdf7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b18f5ad4-44fb-4e5f-8472-0051a1bd3255"
        },
        "item": {
          "id": "e2aa9e07-0099-490c-8c78-0569899fda44",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ffb8b29-a2f4-4104-9415-09540ca357b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b18744-47e9-4988-b57a-077bb7cc47f5",
        "cursor": {
          "ref": "ca5bec06-e53d-4348-936d-9e2344b2566f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ae6045d5-3764-473e-9667-124614b0d2c6"
        },
        "item": {
          "id": "17b18744-47e9-4988-b57a-077bb7cc47f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7c2f50a-740a-45f5-a98c-29a4e4445e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cb7d87-aea3-47fc-b036-b6ff54755424",
        "cursor": {
          "ref": "7b0ac5cc-9656-4ea7-a9fc-c8799771c00d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "202400c8-0764-49c4-91c6-98310dd1b76e"
        },
        "item": {
          "id": "07cb7d87-aea3-47fc-b036-b6ff54755424",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da61589e-36af-4bd1-9b44-5cccc41cf36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc84ae60-44d7-403b-b216-e3215e7fd1a8",
        "cursor": {
          "ref": "7e56465f-fa71-4a70-b853-a346f2bee578",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "362f126a-f38e-4a48-ab70-fc1ab12024ce"
        },
        "item": {
          "id": "bc84ae60-44d7-403b-b216-e3215e7fd1a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1348349f-8b9e-4f2d-b8bc-883509a617db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee45fbcb-f49d-4f5a-9463-6bd9ac87c96d",
        "cursor": {
          "ref": "52fe8618-85c1-4c3a-ab05-d48d6c2a38a0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4612f766-1f64-4f20-a8cd-064c5f6cf628"
        },
        "item": {
          "id": "ee45fbcb-f49d-4f5a-9463-6bd9ac87c96d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "276e2b0b-51a0-4f3e-8451-92bb5bcd3035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3df9262-e9f5-45ea-a726-44f71e93461c",
        "cursor": {
          "ref": "2d763b75-0df3-4c41-8987-ec425f9d1814",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "96449c49-9435-471f-b2f2-af6d55230e10"
        },
        "item": {
          "id": "c3df9262-e9f5-45ea-a726-44f71e93461c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cf85c93d-7682-4ef1-9f78-3957ee0febcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702bf66b-f423-40a4-89bb-509d48675643",
        "cursor": {
          "ref": "0bc9cc15-8d8a-40d2-b7e8-7f4134f5bedd",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "573ebce2-7ac4-4b43-83f0-86b05d9315ff"
        },
        "item": {
          "id": "702bf66b-f423-40a4-89bb-509d48675643",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b64491b-d5c9-4ed9-9bed-e80704ed028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4f4b8e-6c7d-4226-a050-e1541438b74a",
        "cursor": {
          "ref": "bbaaaa2f-d258-487c-847d-b60c8b91128e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36e5c88e-15f5-425f-a5c7-62afdbc51d86"
        },
        "item": {
          "id": "ec4f4b8e-6c7d-4226-a050-e1541438b74a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed98af33-1a0f-40d6-a817-97113f5040b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8270786a-5cfd-4e57-bce5-98a1acd49d28",
        "cursor": {
          "ref": "15f3f4d8-e906-4069-b44e-2c37c2476c63",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d8764a98-13df-4f74-b3e6-561b90145de9"
        },
        "item": {
          "id": "8270786a-5cfd-4e57-bce5-98a1acd49d28",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f59ce97-1627-4d5d-875e-8bb9af6d8a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a76ac-0bd5-49ac-b415-de9616a79ebe",
        "cursor": {
          "ref": "f3ee3f74-28ae-4906-926f-bbaf6581de5b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e570ca45-50c3-4606-b7f6-dd851d410c9d"
        },
        "item": {
          "id": "841a76ac-0bd5-49ac-b415-de9616a79ebe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "17287987-6b90-4929-beb4-40765c7201b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f62a1b-dbf7-4e73-827c-2c2f4a818bbe",
        "cursor": {
          "ref": "602d6612-2521-45b3-8482-68cf2abd4512",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6fbed719-9d8b-4622-9638-f2be36ef0309"
        },
        "item": {
          "id": "12f62a1b-dbf7-4e73-827c-2c2f4a818bbe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "67e9f7f6-3369-4a6d-9251-d5fee4b78e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7eef4f-eeb7-40f6-aae8-261f46317233",
        "cursor": {
          "ref": "71c36514-4f1e-4a95-beff-7614cafd1cf7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9dd35cc5-8b1f-4934-9190-efd8516b03e1"
        },
        "item": {
          "id": "bb7eef4f-eeb7-40f6-aae8-261f46317233",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4e137363-09da-4aba-ab6f-9c4f3719813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7807e48-005a-4e81-8549-6a91222d28f8",
        "cursor": {
          "ref": "6ebceedc-0fb9-4917-bb0d-356eae9994d4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7996ecf3-19a4-4011-85b7-20dc7ba2852a"
        },
        "item": {
          "id": "a7807e48-005a-4e81-8549-6a91222d28f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a0a26e16-cc71-434e-b7dd-129964fee769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0ddec-01a2-46a2-a7bc-02cd6213fc57",
        "cursor": {
          "ref": "6d4ccb3b-5aa3-479e-81ce-d256ac865487",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "117ab6ea-d500-4651-8de8-0a69bac52da6"
        },
        "item": {
          "id": "18a0ddec-01a2-46a2-a7bc-02cd6213fc57",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dd5e376-0f77-4371-b9c6-c2a876a15541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752c2f37-b853-4233-9825-842fb1dde036",
        "cursor": {
          "ref": "1f0b6ac3-bf83-4356-8cd5-a1dab72623bb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f4be81bf-d513-4e1d-9194-a33470c606ab"
        },
        "item": {
          "id": "752c2f37-b853-4233-9825-842fb1dde036",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d870d2a3-f199-498e-aae2-5343c3c6eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc3690-bff3-4c1f-9064-643307f44102",
        "cursor": {
          "ref": "3d1aa09f-4096-48fc-8530-c421d68cb47c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8fc8409f-eb9e-4fbb-ba07-0a6893376554"
        },
        "item": {
          "id": "3bfc3690-bff3-4c1f-9064-643307f44102",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ea5311a1-61a7-4b13-a0d5-1415689e6105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e285f9eb-3fa1-41ee-8deb-c3e89d81bc73",
        "cursor": {
          "ref": "0582056e-bace-46d8-9d78-0bf609cf7aac",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "76c22d41-9030-46e0-80a7-eaedc0a54b3b"
        },
        "item": {
          "id": "e285f9eb-3fa1-41ee-8deb-c3e89d81bc73",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e72e8a6f-f14b-40ce-b245-d0a735085311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa2783a-4211-4b54-a6d5-2c6058442c00",
        "cursor": {
          "ref": "a91a693e-a148-47a4-862a-a9adf2456af2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "111aaabb-dc1b-4d5e-92dc-860de5b43399"
        },
        "item": {
          "id": "daa2783a-4211-4b54-a6d5-2c6058442c00",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e25c7324-d959-45c7-8e46-00f142f4e433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aebee5-3797-4303-aedf-d360c3b489c0",
        "cursor": {
          "ref": "a0c8e076-430f-4953-a621-5bebfd6466f3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1d91515e-a233-4e2f-8cda-72a1952e8b5c"
        },
        "item": {
          "id": "52aebee5-3797-4303-aedf-d360c3b489c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "29fa0759-0751-4542-8586-a2dd78a9923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b904ac7-3dc1-4418-afbc-b7ebbf5971fc",
        "cursor": {
          "ref": "556a5292-28ff-4bde-8051-a370d0081292",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "482860d6-4d76-419a-8cc9-da4816407227"
        },
        "item": {
          "id": "8b904ac7-3dc1-4418-afbc-b7ebbf5971fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "849b57f5-9246-4fa3-a727-d5346dca4838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc8b898-507a-47ef-8107-0685c83bc877",
        "cursor": {
          "ref": "4caaee28-5320-4b38-b20b-bd7717b9a9b8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e0dc77c-594f-49f7-ad97-a91405c25b3d"
        },
        "item": {
          "id": "dfc8b898-507a-47ef-8107-0685c83bc877",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e686b46-a895-4d52-9421-2a25a200c66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf79195-1208-4818-bfed-44591216dba7",
        "cursor": {
          "ref": "a3ec5cf0-d33b-4216-a1dd-a24a54ff3591",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a635d723-2a11-42b8-a649-dd62e5af0c02"
        },
        "item": {
          "id": "edf79195-1208-4818-bfed-44591216dba7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e176cc91-b460-431c-9543-3c43482e6e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a040898-7035-4be5-acda-cc14f593b9d1",
        "cursor": {
          "ref": "9802f1ac-f7c0-4da3-adca-323905685bc9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3c4739e5-b6dc-4a61-8ebd-43e1df826174"
        },
        "item": {
          "id": "2a040898-7035-4be5-acda-cc14f593b9d1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "048327ce-3c22-4b86-b90f-bf21dbd32943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18018e34-0061-4fd3-946c-1f8b58b0940c",
        "cursor": {
          "ref": "2108a035-f99e-4817-989b-60456cca9678",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68d0c630-bbeb-4f9f-a742-80d021255138"
        },
        "item": {
          "id": "18018e34-0061-4fd3-946c-1f8b58b0940c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99ff250b-0134-4ebe-a4ba-b622cf4a1e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d177930d-ee5a-4406-b40c-18f6033dd976",
        "cursor": {
          "ref": "aea89187-e9f5-416c-bfb3-089f31b90858",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b08bfedf-8a45-495c-aa8e-05313eadf4eb"
        },
        "item": {
          "id": "d177930d-ee5a-4406-b40c-18f6033dd976",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01d5d728-e16f-48c9-9435-c13758fbc215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d0b08-194e-4333-9556-86eeb0172453",
        "cursor": {
          "ref": "554a58c3-6d1a-4eb1-9a08-8457db94fb23",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fe3d7f5a-1420-496a-920e-91b08ab69168"
        },
        "item": {
          "id": "7a7d0b08-194e-4333-9556-86eeb0172453",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f5bc9aad-1b74-4631-86a9-578a92c4e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456e12c8-9901-4d7d-b914-d11e462c3a9a",
        "cursor": {
          "ref": "532eef58-e25b-4e83-8677-1e673c816698",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aae8450d-a327-44a4-af7e-a4d1a9a804c0"
        },
        "item": {
          "id": "456e12c8-9901-4d7d-b914-d11e462c3a9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8fb5ad15-579f-4eab-9adc-6e60cb25aa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ceb024-f141-4cd6-9052-d952ca0d970c",
        "cursor": {
          "ref": "2229c38a-d27e-41aa-bd14-6f990e9e7aa0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dc2b8761-615f-4074-a1b6-1e78f2541e7b"
        },
        "item": {
          "id": "93ceb024-f141-4cd6-9052-d952ca0d970c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "867f6d3d-ccbf-4ae0-a1d5-478810fd0c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b1deca-d087-4f81-853f-51f4821ca6f9",
        "cursor": {
          "ref": "63f53903-2113-4e41-a827-0c0ec38cb8fe",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6545b799-86c4-494f-be2f-4b1bf2b5137f"
        },
        "item": {
          "id": "77b1deca-d087-4f81-853f-51f4821ca6f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e9930b1d-441d-4a00-a41f-8525ad16e3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b07e7-42cf-4ea4-ba40-bc597cb01fa3",
        "cursor": {
          "ref": "1be35dba-ca1d-46cc-966f-4096ffa562d7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "be7fdf38-d06a-4caa-a333-5ffd38d09b24"
        },
        "item": {
          "id": "413b07e7-42cf-4ea4-ba40-bc597cb01fa3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13211dc2-93dc-4b12-9085-7466f2fe3f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a195b1-a5f0-43f8-a915-839d40d8fbaf",
        "cursor": {
          "ref": "258a766c-5feb-4f8f-a116-0e36c7a99d18",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0cb8aaf1-173a-4b76-98cd-edc80ad329c5"
        },
        "item": {
          "id": "56a195b1-a5f0-43f8-a915-839d40d8fbaf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e40cfab3-7557-4d79-afc8-d2f34788f536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c669280-ae98-4534-8ab2-a9cf15a71877",
        "cursor": {
          "ref": "d07bdb11-825a-4774-a2ec-0b79e4e59d75",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ae3203da-3f1e-43d4-a757-701379ac1b8f"
        },
        "item": {
          "id": "0c669280-ae98-4534-8ab2-a9cf15a71877",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "20ed6879-9d19-4b1e-b0bc-4c2aec0da55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c6cf1f-d8ff-46dd-8898-1a9b0dea05f1",
        "cursor": {
          "ref": "48e6f442-d66d-432a-a5fe-8f74c6c5e1ba",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "59741abd-e466-44db-b39e-0b571c414b0c"
        },
        "item": {
          "id": "44c6cf1f-d8ff-46dd-8898-1a9b0dea05f1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "04b46fa2-7f5f-4a55-b0f8-60b8cc183782",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d5aa46-8c14-4954-94b4-4f59768fe02d",
        "cursor": {
          "ref": "eaf1e102-a6d4-4c93-b098-ecb4cf4f6ad9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9d262faf-f8e8-43e4-ac49-29928a94c8b3"
        },
        "item": {
          "id": "f1d5aa46-8c14-4954-94b4-4f59768fe02d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b555fc2d-7705-4f17-8d74-4fcd06472ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39710ea-7c7e-45a0-bf5c-c1976e96fa54",
        "cursor": {
          "ref": "13eb1abb-c3a5-4f14-b364-ae61b4129e46",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a5ec149-7611-4326-86fe-4af37ce56ac2"
        },
        "item": {
          "id": "e39710ea-7c7e-45a0-bf5c-c1976e96fa54",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "105e0e7c-475b-464a-811f-0d93501a10d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4df456-e20c-4044-91b7-de6c2caff8d6",
        "cursor": {
          "ref": "7422e6fb-f85d-49b9-bdaa-0f909ac6135c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "eacf3d33-7a6b-446b-860c-b564f41c4942"
        },
        "item": {
          "id": "ad4df456-e20c-4044-91b7-de6c2caff8d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46c87367-d384-4fa2-867f-1f546020eefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb82809-a625-4ac5-9e52-43f010fe3cff",
        "cursor": {
          "ref": "a246145a-8140-419e-8cc2-135671adfdb2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "31744324-ca7a-48b7-b87a-d4b299420a3b"
        },
        "item": {
          "id": "afb82809-a625-4ac5-9e52-43f010fe3cff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3eba17a6-66ef-4e42-98dd-122e09f7ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7525bada-f74b-4b1e-ad2f-5f8050d73dcd",
        "cursor": {
          "ref": "c4ef213b-cf91-4b7e-b9e1-1ae2fd514265",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "55d67a90-38fb-4adb-8d41-d25e3b8fb69f"
        },
        "item": {
          "id": "7525bada-f74b-4b1e-ad2f-5f8050d73dcd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1bd3634a-574d-43b9-a668-a9f257a26656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dba4b8-6117-43ac-a7a8-b67dcde69df8",
        "cursor": {
          "ref": "b878691d-de50-4a3b-b08f-d9d85f70d669",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "caae1624-29c4-4943-b10e-7ded7c6992e5"
        },
        "item": {
          "id": "a3dba4b8-6117-43ac-a7a8-b67dcde69df8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0800718e-d03c-49ec-bf83-3109035c84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc4c54d-de23-476c-a0cd-38564dc6c005",
        "cursor": {
          "ref": "169d31a5-4a4d-4938-a82c-c1a936c33037",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "089e26ac-0b39-4189-a993-079f0d6da590"
        },
        "item": {
          "id": "8bc4c54d-de23-476c-a0cd-38564dc6c005",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96cac211-e48e-42f8-94f8-72c48ad67799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3f3d2e-189f-40f0-8786-ef2feeb31b78",
        "cursor": {
          "ref": "fa220762-52df-4fb0-b7ab-67474b34b49c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f99f6ce9-bb22-4134-9fb0-095cfdbe0531"
        },
        "item": {
          "id": "6a3f3d2e-189f-40f0-8786-ef2feeb31b78",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f34bfa23-b5c3-4436-a0a6-5594ba0ae6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84774a15-33da-4343-8156-cfca0f6c7ee7",
        "cursor": {
          "ref": "ec69647e-de93-4901-8a4f-a86580134611",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "be04a699-b9cc-48f5-ac6e-ad9ae420d1bd"
        },
        "item": {
          "id": "84774a15-33da-4343-8156-cfca0f6c7ee7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d06871bf-bff3-4281-b04d-40ca24d706c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871de43f-5ea2-4c83-822b-a53145311ebd",
        "cursor": {
          "ref": "aeea0a10-7e74-4bca-92a0-e0cf7048924b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d03e4fe1-1db2-4b7e-b92d-4ce0bdd51d9c"
        },
        "item": {
          "id": "871de43f-5ea2-4c83-822b-a53145311ebd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99629aaa-f5ec-4e29-8aa1-f093fbbdcf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e91ad4d-ad35-4330-bb40-55d6737771a2",
        "cursor": {
          "ref": "a7a89583-7184-4323-9a1e-22b15d60efad",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83871e68-b3ef-4321-9aba-9d1ef581cb1a"
        },
        "item": {
          "id": "6e91ad4d-ad35-4330-bb40-55d6737771a2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "996b6a90-6550-4012-858f-0554ea746b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455b534-3e5c-4323-afe6-b135623f84ff",
        "cursor": {
          "ref": "64f9f14a-6c8d-4447-ba6e-e6ff36c09f8e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ca752f4-0e2c-4012-8777-c91a3ac9fa7c"
        },
        "item": {
          "id": "6455b534-3e5c-4323-afe6-b135623f84ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1a3f1c66-d963-4cb3-9383-730a382a7bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65763f5d-05c6-4da1-b3dd-91d4f0f9d314",
        "cursor": {
          "ref": "f319659b-c9e6-47da-b023-6fb7ca49ec87",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a10dccab-6235-42db-baa5-74a4e3811970"
        },
        "item": {
          "id": "65763f5d-05c6-4da1-b3dd-91d4f0f9d314",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "186bad93-fda4-4eb3-a99f-ca1d5bb02d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13be2fe4-8435-4b9e-b2ad-ef6bb79102f2",
        "cursor": {
          "ref": "00066537-0ecc-4eac-b180-b44935c44e98",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7810fbc2-9df9-4a0b-9a8e-aba98a6f4147"
        },
        "item": {
          "id": "13be2fe4-8435-4b9e-b2ad-ef6bb79102f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b2fbd31-e185-42bb-b2eb-4d401a43753a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c14cab-5b76-4a11-afad-1063cbd22010",
        "cursor": {
          "ref": "b03a58db-c785-462f-aebf-a8bd1e12c41e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2acd5a42-d025-4c7b-94cb-710748d751eb"
        },
        "item": {
          "id": "38c14cab-5b76-4a11-afad-1063cbd22010",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d5f3a7e2-c2b3-4001-b1d5-f58997259fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fad0ee-6b38-48de-8eee-ff8b88fe737a",
        "cursor": {
          "ref": "b6367818-becc-4e6a-a27e-5ea0c11fb7a2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a41cb7ef-ec60-408c-97b5-10fc7983453e"
        },
        "item": {
          "id": "d8fad0ee-6b38-48de-8eee-ff8b88fe737a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "00e93567-3606-4cde-bfa7-644e899f04d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81558c4-ed0f-405c-b60d-d7dce2efc2f3",
        "cursor": {
          "ref": "aa961799-5c4b-484d-8323-b9b2a79b6d2a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62b05cd4-6609-47a8-8186-46f8a247b473"
        },
        "item": {
          "id": "c81558c4-ed0f-405c-b60d-d7dce2efc2f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "97844655-53be-4d68-bc52-f04856e6668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d130a4-ff7e-4162-8396-1bf2618577ae",
        "cursor": {
          "ref": "be21e445-ff36-4236-9992-9372c44f5ec7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "914df2de-a44e-4452-876a-75a016952228"
        },
        "item": {
          "id": "d4d130a4-ff7e-4162-8396-1bf2618577ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d439f608-6bb1-4ff6-8aec-8635a1ed3d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8347fa1-ff91-4f34-9701-576dc1108ee4",
        "cursor": {
          "ref": "b06e1e9e-9f9b-4d72-aafd-b3652018e7fc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "89668ec5-4a61-4c39-bf77-02c302ebf1e1"
        },
        "item": {
          "id": "a8347fa1-ff91-4f34-9701-576dc1108ee4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0f66ef67-c114-47ca-9f91-c2e3f426c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1f648-e224-43af-8cdf-683625889179",
        "cursor": {
          "ref": "61f39ff2-7154-46fb-b20b-287e072caf5d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c5d7168b-461f-40f0-a459-92863fa99416"
        },
        "item": {
          "id": "7fa1f648-e224-43af-8cdf-683625889179",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1d14c80d-b758-42b8-b717-5c984cc5c48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3987a7-fd66-43bb-a429-bbf42159a3f5",
        "cursor": {
          "ref": "f20ad111-89ca-450e-b822-57edeee95145",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "91f9afb5-9385-4aaa-a517-bc2964046810"
        },
        "item": {
          "id": "3c3987a7-fd66-43bb-a429-bbf42159a3f5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1fdc2726-9044-464e-b2b7-cf3f9bae81c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708b227b-6753-43a1-9e54-aaeb47b5e3c9",
        "cursor": {
          "ref": "ec6d430c-8216-4510-98e5-325df38e6cb0",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b0c3035c-76fd-4f6b-8e2c-a45d5231098e"
        },
        "item": {
          "id": "708b227b-6753-43a1-9e54-aaeb47b5e3c9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98b68068-33e1-4fd4-9d15-78421572d7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa76722c-072a-4471-b811-9d3be53382f3",
        "cursor": {
          "ref": "b6abb4c8-66db-4a33-80d2-ee2338e9afd5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fd714671-88e3-4696-a5bf-0dd2e233d14d"
        },
        "item": {
          "id": "aa76722c-072a-4471-b811-9d3be53382f3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a57e4f1-15cf-43da-83f8-1e3d4937da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31cfd4-94c3-482e-9b83-b227a43b5d5e",
        "cursor": {
          "ref": "2adb152c-8099-4720-bce7-1deb00e2121f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0b3e4a77-4687-420c-b72f-4aeac5e0552d"
        },
        "item": {
          "id": "9f31cfd4-94c3-482e-9b83-b227a43b5d5e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f1506726-37bf-4320-92b4-e212a13e579b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9050436f-e1ab-4c3e-91eb-68d8fc45d150",
        "cursor": {
          "ref": "c0f83658-6220-4840-bb2c-01c6665fe38f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "27bc7f24-537f-49fe-8ae7-2943258b2f5d"
        },
        "item": {
          "id": "9050436f-e1ab-4c3e-91eb-68d8fc45d150",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a989f6ed-8b93-4cfe-967a-e5b2802c1d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a404fe3e-f0e9-4a6e-a849-aa3d7fabb046",
        "cursor": {
          "ref": "7e93f8d5-055a-441c-9a54-585c9b5487fd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d32cbb48-011a-478e-81b1-a3ea38296aa7"
        },
        "item": {
          "id": "a404fe3e-f0e9-4a6e-a849-aa3d7fabb046",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "733be64a-a74f-4bab-856a-53816899dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca68479-a40e-452a-99b7-5219ceade096",
        "cursor": {
          "ref": "86bdfa54-14ec-4470-aa07-9440e1424448",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b26bba24-b2ef-49f7-9813-7ee45d619aea"
        },
        "item": {
          "id": "5ca68479-a40e-452a-99b7-5219ceade096",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0060a84f-3405-430a-ad84-58c2d0861c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bd81ac-8a4f-4509-8d85-6820ca38f54a",
        "cursor": {
          "ref": "22a60992-2dde-4d7a-af58-acfe0e5d834b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfae2e7a-d56f-481f-9687-d2cf832be7ce"
        },
        "item": {
          "id": "59bd81ac-8a4f-4509-8d85-6820ca38f54a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "721ee4f6-bf9d-4176-af11-862ba5e72d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9b0d90-2ff6-4bf3-9780-b073f101e90c",
        "cursor": {
          "ref": "a9bc8dc7-0948-400a-a878-e6035d21bec4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3b80321-755c-4370-821e-5236122d8b98"
        },
        "item": {
          "id": "aa9b0d90-2ff6-4bf3-9780-b073f101e90c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7c8fed24-2542-4917-8931-004fe2ed372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c7648-ae57-49a5-b6e7-781002029169",
        "cursor": {
          "ref": "f430de20-3043-4f4b-b5d6-d98ff171e066",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "97205885-08c3-454f-b891-db8a05bdc07b"
        },
        "item": {
          "id": "e19c7648-ae57-49a5-b6e7-781002029169",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42cc3bb8-27af-4c12-bcd7-38d460a880e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e129499-9405-4cbd-8fd6-bbe52a9e41dc",
        "cursor": {
          "ref": "adac91d4-2c88-49ce-9a75-40b52c5b9b4f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "32d69af8-2f1f-40a5-a9a0-9bec655d70be"
        },
        "item": {
          "id": "8e129499-9405-4cbd-8fd6-bbe52a9e41dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "136f5f1d-bbb1-4451-8636-870b71430ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cf894d-824c-4c00-92fb-f7579b9207d5",
        "cursor": {
          "ref": "1104250f-fb63-4991-8a49-e4c3f87f21be",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d50f3b7-3487-4b56-b10d-3830cfbfbf0f"
        },
        "item": {
          "id": "38cf894d-824c-4c00-92fb-f7579b9207d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8c0795fb-b7d7-4127-bfaf-421646078e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c69516d-0131-4940-9e3d-d3853a6e7e42",
        "cursor": {
          "ref": "cd4c76ce-5baa-4f2a-a482-6d42ab8394b8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3a96f5e8-2d33-4610-b042-09279daf4bf6"
        },
        "item": {
          "id": "4c69516d-0131-4940-9e3d-d3853a6e7e42",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f470932f-68ac-40d4-b2c0-7190ff40e374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4236bbc-7759-4efc-bce0-666586a9197b",
        "cursor": {
          "ref": "2ea1c6ea-de38-4543-b57d-6a1d45ffe03e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ed1b0282-0897-476c-9e8d-49ece2b36f75"
        },
        "item": {
          "id": "c4236bbc-7759-4efc-bce0-666586a9197b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "94485feb-7688-4806-902b-db2f863fe6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e1d25-1769-4956-ac71-09cb22fba4b3",
        "cursor": {
          "ref": "9ed15d70-9152-4d79-a4d6-b183a139b2b2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a49a89b0-bc19-4b46-a502-b805f1cbcd71"
        },
        "item": {
          "id": "196e1d25-1769-4956-ac71-09cb22fba4b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "441a5fc5-398f-4a3a-ace5-a3a74f8666f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e33973-e5e9-49c3-b05b-5edcd9f16c0c",
        "cursor": {
          "ref": "2142fcb3-7188-4137-92c4-4f6034b03887",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ffe4fe74-49d7-4192-b021-b4d6b0fd2be6"
        },
        "item": {
          "id": "e8e33973-e5e9-49c3-b05b-5edcd9f16c0c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "17aa62e7-1b07-4fde-9a75-aa5714e56e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48942d7d-1ae9-478d-9669-f4b8f660045a",
        "cursor": {
          "ref": "eb765ee8-2e3c-4519-8c5f-ea34cb43c483",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2c15838-c2f5-41a0-9b88-88716c0cdafe"
        },
        "item": {
          "id": "48942d7d-1ae9-478d-9669-f4b8f660045a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d221a1c-8fb0-47a0-a3eb-d46c6d87ff88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e602e4-54c7-4483-b53f-ff8852045bb8",
        "cursor": {
          "ref": "03bd4f96-57de-4e97-8557-b9ccb7200f62",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bcb891d1-5386-4b5c-b240-4a61199b4e8b"
        },
        "item": {
          "id": "76e602e4-54c7-4483-b53f-ff8852045bb8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0bda7d2d-86a2-4a1c-887d-bcb3f51bc6f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af1423e-c1f4-4d8e-94e4-dbeecfd276a6",
        "cursor": {
          "ref": "a9103db1-ff9b-4d65-a747-ddf4b52dbd29",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7193082-f8b4-40c0-b615-d3d5a4efe211"
        },
        "item": {
          "id": "4af1423e-c1f4-4d8e-94e4-dbeecfd276a6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25f42aa6-4fb0-4dad-8040-fba1c3c02f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d42dbc-dd91-4a73-9732-42881c96f5c8",
        "cursor": {
          "ref": "3c8f2b7f-1fde-46ff-809c-1dc29d374d14",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1c3118d-af39-4ca8-aeca-3265cef7bbf2"
        },
        "item": {
          "id": "03d42dbc-dd91-4a73-9732-42881c96f5c8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "93d0012c-4447-4f68-a693-56df29be5a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d12f6-9176-4c4a-b4bd-cfd10c36afb2",
        "cursor": {
          "ref": "9674aebe-c6fa-45c4-b6d5-9985ee81f628",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "53e0b23d-68f9-4001-bb0a-4da66e5f1b2e"
        },
        "item": {
          "id": "2b4d12f6-9176-4c4a-b4bd-cfd10c36afb2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14121100-040f-479a-8811-73bc4aa5fd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c192e01-e234-4fbb-b3ab-57f257c93738",
        "cursor": {
          "ref": "8a67d9e9-3222-4c98-a4ab-ef0d5914415a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6f4b51c-02d1-4b0a-b483-f5aabc549dc3"
        },
        "item": {
          "id": "2c192e01-e234-4fbb-b3ab-57f257c93738",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ac5eb9b5-1a55-43e7-b479-6edaee18f9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c982b-03c9-4918-ac5c-a7f9ebdc13e8",
        "cursor": {
          "ref": "847c7009-c68b-4e9a-a45f-48d50ac17abb",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cc74606f-1493-4536-a2f2-62c740b4f27f"
        },
        "item": {
          "id": "619c982b-03c9-4918-ac5c-a7f9ebdc13e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "08f0c3b1-d45b-4277-992c-11dbe46e2644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646ec842-72a2-42ff-a7a2-598344b60fab",
        "cursor": {
          "ref": "fbfd626b-6946-46d9-b895-b837b20b28c8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d629a22d-433d-466a-8d1e-f4a0773007a9"
        },
        "item": {
          "id": "646ec842-72a2-42ff-a7a2-598344b60fab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6c96b2cd-77dc-493c-a028-88d266be05d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1943439e-6b62-4bf4-ae4c-9b69ebcc1f7f",
        "cursor": {
          "ref": "dc72c695-a9a6-4880-8b19-09cfd41639e2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "43d9406d-3991-40fa-9ee1-da9adcd3eae9"
        },
        "item": {
          "id": "1943439e-6b62-4bf4-ae4c-9b69ebcc1f7f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49a1de32-b682-4c88-b485-5c8004e8ca1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a45419c-1feb-45fe-ae74-b1535c1bfca0",
        "cursor": {
          "ref": "4450e352-9fb9-44d1-94aa-50fc91903f66",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de673bb6-3c43-4090-a3c8-e919deb7e099"
        },
        "item": {
          "id": "0a45419c-1feb-45fe-ae74-b1535c1bfca0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "128ff687-8352-47b8-987f-b065d4864779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c0aa3-8beb-476b-844a-2766085c35dc",
        "cursor": {
          "ref": "120c3af3-fab8-452a-94b7-fe4c85751cfc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b8c6837d-20a0-4971-8f17-0952fba65217"
        },
        "item": {
          "id": "670c0aa3-8beb-476b-844a-2766085c35dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "95ffa8f2-a8cd-479c-91d7-89bfd0266c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45307f6-a60e-4c69-918d-3cb29da8fe02",
        "cursor": {
          "ref": "7763b45f-d3d4-437e-aeb0-3711f3c6167b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "248961dc-1457-4f67-ae83-110c58d3983c"
        },
        "item": {
          "id": "a45307f6-a60e-4c69-918d-3cb29da8fe02",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2f9f85f-87ce-49d1-9cb8-8bee13465fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff64bf-ac1b-4678-b5cc-643f8e184341",
        "cursor": {
          "ref": "374c613d-0240-4837-82b7-9d59feb06e51",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b5df8dd-9522-47a7-a186-be5a1426dabd"
        },
        "item": {
          "id": "42ff64bf-ac1b-4678-b5cc-643f8e184341",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "07e599b5-ed13-4c51-98e7-7aefcde8ac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bbb988-9466-4aed-bd4f-c68e6b936280",
        "cursor": {
          "ref": "e82b07ef-8c33-44fc-900b-3438a712588a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8159f987-3b9b-410d-ad00-50f2081b3064"
        },
        "item": {
          "id": "86bbb988-9466-4aed-bd4f-c68e6b936280",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fb34f657-db7f-40e9-bdf6-451d33195e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7e01c9-cb8d-41ab-86ee-5a99fa0862ec",
        "cursor": {
          "ref": "7e6024b6-ec13-4af3-8a06-e12052fee9d7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d97608cc-c703-43f1-b183-405032ad024a"
        },
        "item": {
          "id": "fa7e01c9-cb8d-41ab-86ee-5a99fa0862ec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "580fb0ac-a212-497f-b723-107f135b30dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5f2a9d-d262-4390-a110-c09a8e3bbe38",
        "cursor": {
          "ref": "ae04a20e-d095-4c6a-8d08-749b1815459d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6cfc9de0-3071-466e-91aa-60359a5b5725"
        },
        "item": {
          "id": "aa5f2a9d-d262-4390-a110-c09a8e3bbe38",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a288302f-9893-4527-935d-bd8520c88fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd3136-8dbd-4e1e-b836-ae7b38ec71e6",
        "cursor": {
          "ref": "bfbebbb4-52f0-451b-a844-a874239283f5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e1b055f1-99fa-4ddf-8a55-b86f15116c81"
        },
        "item": {
          "id": "a2cd3136-8dbd-4e1e-b836-ae7b38ec71e6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "be4d6078-a009-46c5-ac6c-3dce2f67b2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4281d24-e471-444b-ba0b-fc47e7a9272d",
        "cursor": {
          "ref": "9c185541-2ff8-4cd9-84d2-39ff9d6fad5a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0d0cfac3-61b1-490c-bb47-e6709f9b8a8f"
        },
        "item": {
          "id": "f4281d24-e471-444b-ba0b-fc47e7a9272d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea685281-986b-45ed-b1c0-4403d22780e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35f349e-3b4f-4280-bf0f-45ee0fe4a940",
        "cursor": {
          "ref": "d89ceca0-d538-43cf-867c-74433437abe7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9886dde4-c641-48b3-837e-f44887ca4ff9"
        },
        "item": {
          "id": "e35f349e-3b4f-4280-bf0f-45ee0fe4a940",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "31cc5a69-7bde-4d7f-acc2-0bcb97af838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e032bc1-6925-4c19-90a2-205d4faf9895",
        "cursor": {
          "ref": "7d0d8f9c-225d-44a3-bdf0-668c2a563835",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0694e4f6-cb76-4653-943c-3ed12d132bee"
        },
        "item": {
          "id": "0e032bc1-6925-4c19-90a2-205d4faf9895",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a0e8e2b0-de1f-4a21-aad6-b0ac7d56507b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dac6dc-2522-402c-aabc-0cb8a0d2f2bc",
        "cursor": {
          "ref": "4ac23d43-9d7a-41ef-a6c3-27233a142972",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f804f7e4-6aa9-4473-a239-b272a34139de"
        },
        "item": {
          "id": "f8dac6dc-2522-402c-aabc-0cb8a0d2f2bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd067609-50ee-4ea7-a79f-25d5a430dcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60342b1-9c48-470d-b09f-e01606099c4c",
        "cursor": {
          "ref": "d90ce5e2-ca12-4e39-b2de-ffb5d5e4855a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "00e2e7ae-0a82-4377-9d76-b1968e038eb7"
        },
        "item": {
          "id": "f60342b1-9c48-470d-b09f-e01606099c4c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "18e0f164-c0f3-4220-8a7c-fc26a50d7449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4effc3e3-b7cb-40d5-9ba9-0d4dffe5f3a9",
        "cursor": {
          "ref": "e1cfb8d1-3a14-4099-a51e-1b804c73ebaa",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "780e1218-5670-4502-be36-5378857e48c5"
        },
        "item": {
          "id": "4effc3e3-b7cb-40d5-9ba9-0d4dffe5f3a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bf8b88cd-a096-449d-89dc-2206c3310148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b1ce0c-7fa4-4dea-89a8-8f5d82f4c3e1",
        "cursor": {
          "ref": "c701a358-f381-4d7c-9361-262bbd44c130",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7901a9d4-0a1e-4bce-9eec-69c27b11f6cc"
        },
        "item": {
          "id": "30b1ce0c-7fa4-4dea-89a8-8f5d82f4c3e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a6ecf8d-28b6-410b-9130-6e625a75eeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b03874-28f2-402c-8da4-cf50bc8fa603",
        "cursor": {
          "ref": "38c62619-1fa3-4103-836e-d7282cd22bbc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dc3e334d-6833-4574-9887-a2548ffed126"
        },
        "item": {
          "id": "78b03874-28f2-402c-8da4-cf50bc8fa603",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ab498a2d-bf83-4b60-9dd8-5c50ff1f97b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b744ec2f-02af-40a9-81fa-0aa5c805d3fb",
        "cursor": {
          "ref": "7e841636-78c1-4263-8931-de52a03ec851",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "152d5f9b-c8be-495c-a743-812648ddbf81"
        },
        "item": {
          "id": "b744ec2f-02af-40a9-81fa-0aa5c805d3fb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5a0d17db-f11b-4a06-bba3-dde44b6e50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf96d8e-8cf1-4504-ac3d-5cb8e9ca7ee5",
        "cursor": {
          "ref": "c86dab48-fad5-4737-bf97-ee70d69c1032",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "718ea09c-e4b4-4e2e-8ed3-bb610c5b48e5"
        },
        "item": {
          "id": "dcf96d8e-8cf1-4504-ac3d-5cb8e9ca7ee5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "831358f3-a87e-44cb-8829-bd6953f26a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252bad4-161f-4052-bc80-429852cf400d",
        "cursor": {
          "ref": "b17a558f-c0df-4ae5-92f3-d65166fde1bd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ef534c74-4929-4177-9872-cee63d056e5b"
        },
        "item": {
          "id": "e252bad4-161f-4052-bc80-429852cf400d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "424e2091-ab65-4097-97e9-ac48e2e79d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77021feb-1a09-440b-85e6-a9ab4d177255",
        "cursor": {
          "ref": "03607f89-2965-430f-b913-2ee01f346ea2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d0061a90-65db-43d9-a7b6-af012f73270a"
        },
        "item": {
          "id": "77021feb-1a09-440b-85e6-a9ab4d177255",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4ba44295-7586-452c-8d99-e1837c7a018a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e633237-ac51-4aed-a120-bc3a7e9b17ca",
        "cursor": {
          "ref": "76e15005-9e9a-4718-ba6e-4c611a2661bf",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ff5b4f6-5e4f-4d64-8623-da4e19921e15"
        },
        "item": {
          "id": "5e633237-ac51-4aed-a120-bc3a7e9b17ca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e56c691-5af3-415f-95c8-ed2bdaaf132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcca79c-a10d-4ecc-ab2e-8d2531220e33",
        "cursor": {
          "ref": "3a0795d5-ccf4-4573-a130-c0a8a7635f55",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "753c5838-d9c8-4fa4-a426-2347d52b3c07"
        },
        "item": {
          "id": "cfcca79c-a10d-4ecc-ab2e-8d2531220e33",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b0093527-3741-4ad0-91cd-e4f546dbb844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f17a97b-2855-41b2-bab9-a93daf7431db",
        "cursor": {
          "ref": "ea2fe231-4541-4869-ac18-f8d2c362d780",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b144b0ba-b825-4b6e-808e-ad28b97fb39a"
        },
        "item": {
          "id": "5f17a97b-2855-41b2-bab9-a93daf7431db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "76f046b5-7fc1-4beb-a581-df3d266a91cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ccc50-88a5-4f6c-97be-493de60ab27b",
        "cursor": {
          "ref": "4504f39e-dc96-4d34-abad-0cf4868e1ec9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d83af9d9-c52b-41de-8147-6a01f95de55f"
        },
        "item": {
          "id": "619ccc50-88a5-4f6c-97be-493de60ab27b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bbc8c118-f727-42d7-9a05-0a00aea1867c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e5cfab-b1cb-4347-940f-c283d5c6283a",
        "cursor": {
          "ref": "6c30d394-8262-40d4-bcb4-d502be275440",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "874282d0-edb4-4e52-867b-564376c6f537"
        },
        "item": {
          "id": "c9e5cfab-b1cb-4347-940f-c283d5c6283a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a8256b5-8b32-44d6-84d1-0b46d4c461fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f79d5fd-49b4-491b-b93e-a9738c98c2ce",
        "cursor": {
          "ref": "10083911-0586-4fb0-aee5-c924ce13d4a0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "870c141a-0a12-454a-8094-e8f9f86e431a"
        },
        "item": {
          "id": "8f79d5fd-49b4-491b-b93e-a9738c98c2ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64b10751-1b5a-4d8f-b6c3-ba49ab5c9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c48c3b8-4d46-4d22-b297-549c4aaa04d3",
        "cursor": {
          "ref": "dce485b3-5081-4bb7-8d70-fa687c9ddb94",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eaa0b77f-5ad2-467f-9c44-65e2599b2adb"
        },
        "item": {
          "id": "6c48c3b8-4d46-4d22-b297-549c4aaa04d3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ab386ca9-17ee-40c0-84dd-7eb9dca36485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6bf3b6-0b31-4d3a-8c02-5c83b1d0acfd",
        "cursor": {
          "ref": "1c044254-fbbe-4d97-b33e-316699b89b32",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eebf95bd-6b29-4fd2-ab5c-d6a31e893497"
        },
        "item": {
          "id": "cc6bf3b6-0b31-4d3a-8c02-5c83b1d0acfd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "054effd6-cfcc-4f73-94c8-e80bdc39f2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b50eef-3d30-44cc-9060-29fd692b9143",
        "cursor": {
          "ref": "45476779-33f5-4e42-8618-ce4650e6f650",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5e688a18-59bb-4ae9-9d78-a27f8a627319"
        },
        "item": {
          "id": "c2b50eef-3d30-44cc-9060-29fd692b9143",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c4f723d3-55f9-4373-87bf-6bdc491fdcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8931ac5c-b5a7-402c-b0a9-290033126849",
        "cursor": {
          "ref": "00a17630-bb98-4066-b04f-42ae4106d50c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "54ca5fd0-0910-41d9-b7d3-e6992f6c01e8"
        },
        "item": {
          "id": "8931ac5c-b5a7-402c-b0a9-290033126849",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "330314bd-4ff7-414d-8ce8-f347932e8dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ed6810-9d53-4d4c-a8ba-4c6ca9f5cdc6",
        "cursor": {
          "ref": "0be5c47c-3808-4dcb-8865-3d924caa014d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "92c6b127-4ee2-4a19-be60-694430f4f71c"
        },
        "item": {
          "id": "b4ed6810-9d53-4d4c-a8ba-4c6ca9f5cdc6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3236a44d-7358-4b58-a1a2-a7b975398982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148fcfc-85d0-4e64-99f6-3d3fcbb80fec",
        "cursor": {
          "ref": "8782c3de-2d9b-47fb-bad0-2b3b7bcb8718",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9190d7c6-98a1-4a71-80ab-f4903bf72df5"
        },
        "item": {
          "id": "f148fcfc-85d0-4e64-99f6-3d3fcbb80fec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f823840c-9885-4cfd-8027-3c72bca19310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2143b556-26ad-4f84-a6fa-b3d7eb212971",
        "cursor": {
          "ref": "28d8b535-fdc7-45f0-8bb7-b314e33e4527",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "46bb9e45-cb4a-4caf-aa47-ace9f7ef97c5"
        },
        "item": {
          "id": "2143b556-26ad-4f84-a6fa-b3d7eb212971",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "65b8bff6-4182-4b1e-8cae-e145fd129e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577d0844-c1cb-40fa-ae90-da53dc275aaf",
        "cursor": {
          "ref": "d9273d70-c3a9-413f-959f-87cfb1771353",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "da139466-71bf-4051-87f2-48efca9df1c6"
        },
        "item": {
          "id": "577d0844-c1cb-40fa-ae90-da53dc275aaf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5a510631-3f7b-4692-b286-97788f2d6935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9447c-959d-4ef5-a800-fc9234560386",
        "cursor": {
          "ref": "ac860abc-d489-42d4-98c6-e90915901dc5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c6161798-8838-4d66-b98a-2ad041bf6faf"
        },
        "item": {
          "id": "80e9447c-959d-4ef5-a800-fc9234560386",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e19e9440-de54-4116-a013-5f35b66390fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a57e74d-12a1-440f-a3d0-3e6760549382",
        "cursor": {
          "ref": "2146f91a-f48d-4029-b7fb-d26ea89c2103",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a3d1cc25-4adf-48a3-bef4-515215907457"
        },
        "item": {
          "id": "3a57e74d-12a1-440f-a3d0-3e6760549382",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c5ccb20b-efbd-43bd-91db-63764f4d6b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d87bc3e-b6c1-4635-a3da-822864ddc641",
        "cursor": {
          "ref": "1472ee74-0b29-4aa3-9c6b-fd3f00e132b9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1c97ebe5-e166-4100-bb5b-76f535b32618"
        },
        "item": {
          "id": "7d87bc3e-b6c1-4635-a3da-822864ddc641",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8dbf851-bd84-418c-93d3-427c62f55768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c9bd14-3a11-415d-a658-76197327821f",
        "cursor": {
          "ref": "1f039777-03ba-4349-a927-4731c797aad9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0802933-ebc3-48e8-aef4-ab972daeffe9"
        },
        "item": {
          "id": "46c9bd14-3a11-415d-a658-76197327821f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "15c0d2b1-e7fc-4497-b604-e2feeb51c3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c79e475-26ec-4d05-81db-4a450a149033",
        "cursor": {
          "ref": "6f0bd5d3-1158-4e93-b803-2a52ee1eb737",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e755b562-e5a6-46e1-b384-8a6d58144efd"
        },
        "item": {
          "id": "2c79e475-26ec-4d05-81db-4a450a149033",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e548b032-7117-4ebf-a7dc-50e06eb52c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf35d217-d749-4c9a-9719-fd6447cee468",
        "cursor": {
          "ref": "4a8a4a29-54a8-47a0-a332-e49f7f4b6264",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa705b86-6822-4b21-86c4-7fce22be4624"
        },
        "item": {
          "id": "bf35d217-d749-4c9a-9719-fd6447cee468",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "336b2d94-2f97-4564-a303-53c438d9f974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40270d34-a359-45e6-bfad-a407ac1bd64d",
        "cursor": {
          "ref": "2eb1491e-cd29-47be-a3d1-7bf5fdebee0d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "16a5261a-fc9a-4b68-8c4f-dff3a8b0dcfa"
        },
        "item": {
          "id": "40270d34-a359-45e6-bfad-a407ac1bd64d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "26e1fcba-875a-42ee-ba04-458d10862dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4250e1da-2a8e-45b7-bbdb-c54c6dd7ad29",
        "cursor": {
          "ref": "f34f77a4-19b4-42ac-90e8-814aadcc7f5e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "25529894-6dec-46be-9a95-64e21e044e5f"
        },
        "item": {
          "id": "4250e1da-2a8e-45b7-bbdb-c54c6dd7ad29",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0328ffe5-ad40-4646-a7ac-0f1557ac8dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd1ed0a-c1ab-4f3e-9cf8-0e6bd1c39858",
        "cursor": {
          "ref": "f8c10899-b52e-4696-a9d0-a54eab2e2977",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a636e9f-8dfc-4720-8e4e-1c0c5531f5c0"
        },
        "item": {
          "id": "7cd1ed0a-c1ab-4f3e-9cf8-0e6bd1c39858",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0ac8be41-88e7-4b6f-89a4-dd08cde5c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c88b53-b37f-4a25-840f-c2f5b85eaf8f",
        "cursor": {
          "ref": "3e8b2df8-4763-476c-a1dc-e73f752d46df",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "da6d6b60-9beb-449a-961c-057ad2fa6854"
        },
        "item": {
          "id": "e6c88b53-b37f-4a25-840f-c2f5b85eaf8f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b556db98-ddd0-4fa3-8e75-e721670a39cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b004bb63-e7ea-4d73-ab7b-5be07cf1feb9",
        "cursor": {
          "ref": "9f940125-a97f-4ac2-b491-ba1b71b9858a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0151a1dd-7d14-460f-948f-b74627b3c94c"
        },
        "item": {
          "id": "b004bb63-e7ea-4d73-ab7b-5be07cf1feb9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7c90d4e9-161d-4041-ae99-b3910e898e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f43c5ad-1bc2-4956-9d27-283d087fae43",
        "cursor": {
          "ref": "2dee3afc-1b03-4c13-b117-4fee3599cba1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7ada20b6-797d-4af7-af89-8771838d8405"
        },
        "item": {
          "id": "0f43c5ad-1bc2-4956-9d27-283d087fae43",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed593206-88d0-4b0b-872a-c2dd09c99d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743b2f26-4fa7-425c-8487-69f30ba639b5",
        "cursor": {
          "ref": "3b370da2-300e-471a-986b-b6074ddc5694",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d0929788-025f-43ce-ae25-df33c45fee17"
        },
        "item": {
          "id": "743b2f26-4fa7-425c-8487-69f30ba639b5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7551804f-eab3-4094-89f3-877a337c458b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbbca02-2124-47dc-9a95-cc744680ffd7",
        "cursor": {
          "ref": "3b62ffad-e02e-4f7e-abb8-1564d8348962",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7da09bff-5dd7-426d-a329-da4280659acf"
        },
        "item": {
          "id": "8fbbca02-2124-47dc-9a95-cc744680ffd7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dd28a679-52db-4765-abaa-64bc98948e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1345c37e-47e3-45ef-98c1-16f1d914be3d",
        "cursor": {
          "ref": "01a33ee5-827c-4c3f-8ef8-2952191dfd5c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1f28b987-9a93-462f-ad2c-8a725e38a90a"
        },
        "item": {
          "id": "1345c37e-47e3-45ef-98c1-16f1d914be3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "77cc9fe3-d534-42fa-ae39-54b4265cb2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5594c-c817-4694-9036-61f5b8779e6a",
        "cursor": {
          "ref": "0ba6235b-79ca-46d8-ba15-eacc6981e5de",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21647318-e879-4cfd-b576-339980b7761d"
        },
        "item": {
          "id": "b2b5594c-c817-4694-9036-61f5b8779e6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "db420000-36d8-4304-8346-442c05c94109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c8f569-1a92-4157-bda3-eed8bb4706c8",
        "cursor": {
          "ref": "2e3df7f1-7ed2-470c-b51a-9d1bec857bce",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "adb76504-0895-4d57-be03-c3e13ea10b7d"
        },
        "item": {
          "id": "16c8f569-1a92-4157-bda3-eed8bb4706c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eaab9633-1879-4856-a1bb-ac88d60bd56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff203c6-2a32-4e46-99a3-03bb16f0e06c",
        "cursor": {
          "ref": "ec819787-21c6-4525-8771-0ee2739bf9ff",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6a2f7520-d31a-40c8-8f3f-816f89222039"
        },
        "item": {
          "id": "aff203c6-2a32-4e46-99a3-03bb16f0e06c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "905c935c-4987-491c-b1aa-7cceed57b9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db79de6b-11dd-42e1-b44e-8cfc6bb0c6c5",
        "cursor": {
          "ref": "9e31f791-f178-4baf-9222-fce7b73dda89",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7e6d11d2-074a-45f8-a0b1-a9593158c79c"
        },
        "item": {
          "id": "db79de6b-11dd-42e1-b44e-8cfc6bb0c6c5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "45fbe033-063a-445a-987c-a3c45d7a7cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8031a030-6f26-497e-9433-8e8f7cf23af0",
        "cursor": {
          "ref": "2756a7fa-742c-4785-b51e-c2d5901cf824",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c7641e3c-a576-4c2f-9bc1-011d7c901f60"
        },
        "item": {
          "id": "8031a030-6f26-497e-9433-8e8f7cf23af0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1610b7f-1252-473a-bd9a-428c90406c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4cab62-c162-4c81-9929-806d21d3cb9c",
        "cursor": {
          "ref": "d691aa39-50b9-417f-99a5-fd0e9716de17",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d8728fab-bcb2-4f34-987a-3f0ef7232c06"
        },
        "item": {
          "id": "de4cab62-c162-4c81-9929-806d21d3cb9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0edab53e-b073-41b5-a9ce-cb4b3a40df0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf61b8-a1a2-4d6d-a871-3e153fd49185",
        "cursor": {
          "ref": "cde0c8bb-aa3b-4f04-bcef-4bb3aa85668a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6a00e856-6f67-44c0-9dc1-d6c800d05dd6"
        },
        "item": {
          "id": "6baf61b8-a1a2-4d6d-a871-3e153fd49185",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96bb21ed-22f5-4589-b9c4-3b16a30cbfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96468a-5aed-4c5d-a763-60730404b701",
        "cursor": {
          "ref": "02251deb-2dc4-4f1c-a0ed-864b49c18f89",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c85cf00e-2b74-4d7d-9152-1c74e02a5e1e"
        },
        "item": {
          "id": "1f96468a-5aed-4c5d-a763-60730404b701",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ba9d81d1-4d2d-40cf-acd9-3c26a83f3b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29756a42-ec70-4587-8875-a3a57d6fa445",
        "cursor": {
          "ref": "7c83c9db-2369-4396-85ad-e158564bc299",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70ae6b65-57a4-464c-9dbf-faecaec13aca"
        },
        "item": {
          "id": "29756a42-ec70-4587-8875-a3a57d6fa445",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0491af6a-90fa-42ac-9493-04df7babc54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48692965-8c88-4c76-998c-a14e0551fb53",
        "cursor": {
          "ref": "b84c373e-ecc8-4749-b595-799dd8683472",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a6831a30-f0e8-4098-8602-8813372647b3"
        },
        "item": {
          "id": "48692965-8c88-4c76-998c-a14e0551fb53",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e48eb2ea-8bcc-47ac-8936-d5c64dd11ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745c5d81-859d-4072-b6fe-6ccb84474b8e",
        "cursor": {
          "ref": "e6a8cd89-4b08-4d5c-9629-e0b1886df4dd",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b20163ca-432b-4115-bc46-8badf5c1c45c"
        },
        "item": {
          "id": "745c5d81-859d-4072-b6fe-6ccb84474b8e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2bbc9e6a-42f6-4edd-ad4b-a22532cfb988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffd263b-d5a7-4252-b15d-abea1d3c1e5e",
        "cursor": {
          "ref": "015b5ba0-21c9-4d74-a841-c06d01abe324",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "58e44997-0f18-4e17-a53f-cbd88050d249"
        },
        "item": {
          "id": "5ffd263b-d5a7-4252-b15d-abea1d3c1e5e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6f344326-57f4-4118-9729-2ee75432f5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75595b0e-a366-41b9-b266-e44b950df4fc",
        "cursor": {
          "ref": "57a1b10b-20b9-42b9-b0a9-44f51d2d71bf",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1edc16a4-efe3-426b-aac7-db09d6f2f380"
        },
        "item": {
          "id": "75595b0e-a366-41b9-b266-e44b950df4fc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a2c0b54f-5e53-4234-8320-f8fc2d212f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0f1235-3abb-4764-b0da-321ca9ea5044",
        "cursor": {
          "ref": "91c31746-0b7b-455c-bdc7-7f3d34746196",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b58c3b9-e373-4d03-8476-a92f648defbe"
        },
        "item": {
          "id": "9a0f1235-3abb-4764-b0da-321ca9ea5044",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "47f4630f-78ac-4cf5-b2c1-79c9457b4d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73365b81-018f-4a29-8189-320e9d3e149d",
        "cursor": {
          "ref": "42cd9429-c76e-4f0c-8f7f-f3b8136d760e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "18dcebc0-f60d-407d-bd97-7abd57f8d93f"
        },
        "item": {
          "id": "73365b81-018f-4a29-8189-320e9d3e149d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "017a8637-6792-496b-96b4-0204750ad35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b874fb-2908-4a49-a996-ef404443b140",
        "cursor": {
          "ref": "b58dddf7-26b0-446b-8369-79539cf738fc",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "708ced1d-770f-4b7a-9d5f-02dcf53a6321"
        },
        "item": {
          "id": "66b874fb-2908-4a49-a996-ef404443b140",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "990e6b0b-63a2-40fc-b5ec-e39a765f232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfef7877-98ee-483e-a73d-47f420e10f50",
        "cursor": {
          "ref": "ece870ae-242d-4035-af9c-da93a2272899",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "632d743d-6c9c-41a7-950a-a14d65b9dd40"
        },
        "item": {
          "id": "bfef7877-98ee-483e-a73d-47f420e10f50",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2e702a54-00f4-48b3-88d6-ccd4b6d82563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f305d523-2bfc-4e8e-8c3d-245212ab27dd",
        "cursor": {
          "ref": "127cb719-6161-46b6-8b26-88f6a269eb74",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4cdcb331-c122-4a1a-9030-a70d2c95465f"
        },
        "item": {
          "id": "f305d523-2bfc-4e8e-8c3d-245212ab27dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a89cb6ab-0b95-4705-add2-e0a8c327d546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ed616-645a-41de-97e5-65a542338300",
        "cursor": {
          "ref": "50f829a2-96e2-471c-8f1f-660529984161",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6effc402-ce29-42ba-8741-242a7e3f26bc"
        },
        "item": {
          "id": "cb8ed616-645a-41de-97e5-65a542338300",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4f7428c9-8516-4400-b1de-c7f458f7a37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1d80af-a2c9-4b2c-8133-61f8e1266fe2",
        "cursor": {
          "ref": "bb0cc289-7754-4006-9e6e-07029571b8f5",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "777a0a0a-c719-4365-a380-5b7c7237f830"
        },
        "item": {
          "id": "ab1d80af-a2c9-4b2c-8133-61f8e1266fe2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d2cfa4fd-4ce5-427a-971b-0892f63b5ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854c4528-dbb9-4e18-9882-4cdb64c94270",
        "cursor": {
          "ref": "326fb7e5-a4f1-43cc-bc07-9e9ae6401dcb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "65ddfe08-9392-4995-9249-9a4d73f8d2d6"
        },
        "item": {
          "id": "854c4528-dbb9-4e18-9882-4cdb64c94270",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae35b320-c8ac-4760-91a1-075baa7628c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6acae-907b-4e5c-a321-99ce17785ca9",
        "cursor": {
          "ref": "613dacd4-f0ee-46d3-994c-11bd0dfb74cc",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "442676c6-7aa1-42da-b926-a21261968eb0"
        },
        "item": {
          "id": "73f6acae-907b-4e5c-a321-99ce17785ca9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5a9e0aad-092c-46d5-aecb-6a65e302eed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0881986a-5776-44f3-ada2-06824c67cb23",
        "cursor": {
          "ref": "3c6844f2-1711-47e2-8b2b-6c95bd7e40d7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d141b9e8-5216-4a03-993a-d5f99018a63b"
        },
        "item": {
          "id": "0881986a-5776-44f3-ada2-06824c67cb23",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a7aa839d-716c-44bb-8721-ff6a3f3905a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32655720-6431-4874-8e9c-21c9393f5ad2",
        "cursor": {
          "ref": "d96792a2-2ae7-45fa-b5b9-18c6613a9c90",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0016b959-e344-4586-8725-9526b4a1e72b"
        },
        "item": {
          "id": "32655720-6431-4874-8e9c-21c9393f5ad2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de579e20-c753-4c3a-b142-751433946fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a614ba15-1a28-4f25-b4c9-cd942b91c414",
        "cursor": {
          "ref": "60e9dd50-876d-4b30-bb3f-f75a0f5e84de",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bddbab18-8b32-4a4f-904e-40050c10930d"
        },
        "item": {
          "id": "a614ba15-1a28-4f25-b4c9-cd942b91c414",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "52bdd0c3-25c6-4ab0-9990-358f443b276c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b0f93-d697-46e9-b2b7-3abbc13e9995",
        "cursor": {
          "ref": "1b50a983-6e2b-4ab4-af59-d43a8eb88926",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e03f85af-e121-4686-8b53-fb6f23e11ff9"
        },
        "item": {
          "id": "485b0f93-d697-46e9-b2b7-3abbc13e9995",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "de5e4e69-2ffa-43a3-bb6e-c0b2f43b8b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd3a301-3684-46c4-8e7b-9e01d038fa1f",
        "cursor": {
          "ref": "7d3b3082-964e-423a-aed9-b41c60f040e6",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "51604f1d-c85c-4a11-b899-3059cdcce82d"
        },
        "item": {
          "id": "9fd3a301-3684-46c4-8e7b-9e01d038fa1f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a2bda539-67cc-4117-8830-b94b97a9bc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0741bcf5-cfa0-4175-83a4-62fb0912f838",
        "cursor": {
          "ref": "3bbb28da-f805-4eef-ad67-192096eb2c0c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7d083df3-375e-4faa-abd5-60c5a64c14fb"
        },
        "item": {
          "id": "0741bcf5-cfa0-4175-83a4-62fb0912f838",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d06c108c-6051-45e2-80b0-b80a9fad9770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9020018-3dbf-4c95-bc2d-bf87241cedcc",
        "cursor": {
          "ref": "edca8064-5111-49c4-9e29-e4e6d16b1b10",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5676f3b0-756d-4b0c-81f7-7f385a053212"
        },
        "item": {
          "id": "e9020018-3dbf-4c95-bc2d-bf87241cedcc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1b0d17e5-4f3b-48bd-94a8-731bfdaeec39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d74a01-6a58-4e75-a04e-40e1375cc0f8",
        "cursor": {
          "ref": "d2cb2236-c2cd-4e5f-82ac-59aff17b16f9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a4064df5-ef60-4de2-82f2-910335947ae7"
        },
        "item": {
          "id": "38d74a01-6a58-4e75-a04e-40e1375cc0f8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6a913b9e-1293-44fd-8793-99894d54291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155bfc89-1a72-477d-963a-e610ca9b6f46",
        "cursor": {
          "ref": "2710437c-c379-42c1-b260-622581aca218",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f2958155-1978-4ec9-96fe-f3042b11ca22"
        },
        "item": {
          "id": "155bfc89-1a72-477d-963a-e610ca9b6f46",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7f8d7aaf-c0d1-40bd-ae3d-1957a3c5ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56df2bd4-010e-4104-8315-26fbec1faf8d",
        "cursor": {
          "ref": "1a92f436-9361-4fba-858d-73e0e96a348e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c27c41a2-39a2-4bd4-b962-1e8c433590bd"
        },
        "item": {
          "id": "56df2bd4-010e-4104-8315-26fbec1faf8d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e26f1bbd-6675-415a-8987-489033a178e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c7537-0124-41ab-8f5f-b749f4f73d59",
        "cursor": {
          "ref": "97a3c3fa-6594-4667-900f-fad80565a33c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d66b0608-db0b-448e-bd62-eeb27e31af89"
        },
        "item": {
          "id": "332c7537-0124-41ab-8f5f-b749f4f73d59",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c5d4bd0f-b039-414f-bb4a-6b75e80840f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd52293-765d-4264-aaae-09addaf97008",
        "cursor": {
          "ref": "eca23cd0-41f5-47f0-84d3-c107a455ad54",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "96c5df0c-8922-45e9-9b93-d325381d7887"
        },
        "item": {
          "id": "abd52293-765d-4264-aaae-09addaf97008",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ed3cc302-85ad-44c7-9d4a-239109405170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0507a0ec-3e73-4a23-a6e8-7fb5ecacd067",
        "cursor": {
          "ref": "96d958f4-7cce-474f-9578-3eb5543af430",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e0ca3be9-8e67-4c0e-9ae8-9efa6f3ee39e"
        },
        "item": {
          "id": "0507a0ec-3e73-4a23-a6e8-7fb5ecacd067",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d1bf5032-da81-4a07-92aa-31aae8938397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4dc23a-ba8f-4528-bc32-e4bccf7bdb0d",
        "cursor": {
          "ref": "ad6815bf-c55c-4df3-ad46-2ed295015e36",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "97c2816d-b30d-4607-87c3-4f7c0d04ab79"
        },
        "item": {
          "id": "de4dc23a-ba8f-4528-bc32-e4bccf7bdb0d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c71a334c-a361-428f-945a-ef7887a3e21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87d7116-11d8-40b1-8279-aa58450b2bbc",
        "cursor": {
          "ref": "c43fc7db-5c33-4342-b5ec-f4b341199762",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f68648b6-92e6-4b7d-8527-a5c9d11efd10"
        },
        "item": {
          "id": "d87d7116-11d8-40b1-8279-aa58450b2bbc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dfc4a812-41da-4fcf-ad14-dcdb80579712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b40fc0-3d1a-4510-8879-a9d92df59276",
        "cursor": {
          "ref": "bc60436f-e211-4129-8b84-7b6afc070f7f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "90489eb3-b8fb-45ae-881b-cc86bac3e0d5"
        },
        "item": {
          "id": "28b40fc0-3d1a-4510-8879-a9d92df59276",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f015a43b-7607-426c-b058-f5d6772e4ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdb478-e1d0-4ce8-8b0f-96b817172f63",
        "cursor": {
          "ref": "438bfaac-af77-4977-a881-1a1ccdd4ac3b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "57db7cc4-225d-4d3d-bc2e-3bf728e99cd7"
        },
        "item": {
          "id": "35bdb478-e1d0-4ce8-8b0f-96b817172f63",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b5f6561-166f-466b-9a90-1211119f6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d29aae-7021-412f-8ca8-d8169687d52d",
        "cursor": {
          "ref": "a2f4c52e-2bfb-48fc-b96e-8a51b3ef6968",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4ec4506f-3ee4-462a-ac25-4c1a7f8cbf39"
        },
        "item": {
          "id": "f3d29aae-7021-412f-8ca8-d8169687d52d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "65085e40-8227-4ced-af5c-8b003c6b163c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8b2a5-1c37-4dfe-92cd-993a8ca108d9",
        "cursor": {
          "ref": "44a4fd95-9581-49ff-8698-46ff0338a4d0",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f42bec79-376f-47a8-b38e-9126698f0172"
        },
        "item": {
          "id": "83c8b2a5-1c37-4dfe-92cd-993a8ca108d9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e193b1db-79ed-44cb-b70e-9a05c92bf263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe141317-585a-4303-8cdc-d6dab6085f16",
        "cursor": {
          "ref": "6e00e1cc-d054-42ca-9d19-1533539ddd3a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "699e451b-e0f7-47bd-b428-142c1999d084"
        },
        "item": {
          "id": "fe141317-585a-4303-8cdc-d6dab6085f16",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9c029565-9b02-4d03-92a6-eee2dd730ad8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c125702-0fa7-4422-bf49-e85213a83a10",
        "cursor": {
          "ref": "7bc73dc2-53c6-44c2-bc7f-3b0d0085bd03",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f5846699-fcb3-45b9-a443-4df1c7ee04e0"
        },
        "item": {
          "id": "4c125702-0fa7-4422-bf49-e85213a83a10",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ab4e4923-759f-44b9-86d8-4849be5646a5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "666832fb-7c1c-47a2-8f96-3392c53b10a8",
        "cursor": {
          "ref": "4b284585-9683-4c91-b988-b78cbae29b12",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1809f40c-514c-4ff8-b3cd-d3f6a919d34f"
        },
        "item": {
          "id": "666832fb-7c1c-47a2-8f96-3392c53b10a8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "40f73ab6-ac53-4203-af51-cd339d465df0",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c9111b-d95e-4837-9400-e2b8430bb87a",
        "cursor": {
          "ref": "34348255-c439-4b9f-97f9-9459247d6e87",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5cf95d16-b9b5-4bdc-b6df-d85cefae9fd7"
        },
        "item": {
          "id": "07c9111b-d95e-4837-9400-e2b8430bb87a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ebc08aee-0e25-4f0e-84b4-d9eefa21585b",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "668a0226-9201-4aa3-ac14-13d2485e5ab9",
        "cursor": {
          "ref": "ec44daf6-687f-4243-8543-3bd9c595bfa1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c630e9ec-4577-41ac-9d4c-a8c0b074a652"
        },
        "item": {
          "id": "668a0226-9201-4aa3-ac14-13d2485e5ab9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f281e10-774a-4850-ba4d-1f683bb5caa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668a0226-9201-4aa3-ac14-13d2485e5ab9",
        "cursor": {
          "ref": "ec44daf6-687f-4243-8543-3bd9c595bfa1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c630e9ec-4577-41ac-9d4c-a8c0b074a652"
        },
        "item": {
          "id": "668a0226-9201-4aa3-ac14-13d2485e5ab9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f281e10-774a-4850-ba4d-1f683bb5caa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0189699-f474-45de-aa3f-68ae5e4e03a9",
        "cursor": {
          "ref": "dbb56eb7-42a9-43ff-9562-3a5152239a46",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "42c28aa6-5ddd-4aba-94f6-d26a50f9c97c"
        },
        "item": {
          "id": "c0189699-f474-45de-aa3f-68ae5e4e03a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f640bbd6-b3e9-4872-958d-4d10e90d6966",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70433f21-7cdf-4c4c-b89c-9943c80dbfc0",
        "cursor": {
          "ref": "7cdcab6c-8e1c-41ab-87fb-c55b679b5b04",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8e862eb1-190e-4ae9-96ac-457cbc8479be"
        },
        "item": {
          "id": "70433f21-7cdf-4c4c-b89c-9943c80dbfc0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e353ffa-3c0b-474b-8619-7d872f141377",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}