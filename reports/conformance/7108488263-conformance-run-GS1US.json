{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3cfd128e-a5a2-4ee6-8ae7-8852f5d5b107",
        "name": "Clear Cache",
        "item": [
          {
            "id": "370287fb-a851-4063-9a64-378af61b99b8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca52f7b6-3283-4826-b605-c7c8bc49c25a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78633866-178f-4e55-b4ff-5fef37d9e331"
                }
              }
            ]
          },
          {
            "id": "65732e5c-fe77-4a5e-8c5b-54d4869e17c6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c27af7b3-3bb5-4070-a60b-31380f8a74dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6de474a-b416-429c-9cae-0520f59eb4a5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3684765b-10b6-4b15-aa5d-55119b020ba0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d060cf86-0414-447d-b7de-47f1ee836377",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea41326e-317f-4ad1-93c4-55084ccc685a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fc5c4a-1545-4eba-8059-ca34f6a53a55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3e12d99-020b-49a7-9761-cd559c1a0ae8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "537b2977-5778-4e46-baae-c376276881c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "120b5855-0c63-4191-8f4b-0708136f69b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f4854dd-0847-49f0-bd09-29e14a23d4bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9db4b311-cac0-4765-a464-32b156db0e89"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78a44f1d-4d3c-426f-bc9b-6cf8e06bbd5b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9f1a0e36-5bb9-4cae-890e-e982cf0b23cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "642f3563-19bf-4216-bcc9-4b4a70177a56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b1c6718-02d2-4508-bccd-ee59682c9e56"
            }
          }
        ]
      },
      {
        "id": "b9ba0cf8-88f9-42d7-ad28-d8b3d2a42ed6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e8b59ab7-68e8-4955-ab58-171f558e6ef6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90d23481-9432-4f59-8f2e-2fe1d5e1acc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be15280e-e63f-4359-92b9-2fa374e9f491",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e59deb-1674-442c-9681-451abd076c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c951258-1002-4413-ae54-923323126440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff65f08e-d727-49e0-8c2b-2eddf28a91d6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f877f6f-b57a-4a91-a247-ada2997f92b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d148c22-0afc-4e34-8c53-28329d6d7507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1571d28-1da5-420b-bdf5-bb63ccb6620c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc404dae-8a92-4fac-b18e-4ebe89c7cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56fadee8-609f-4622-80a8-0b31f6f7e6ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9d0233c-a9fd-4fe0-8e1a-2ddf92acd0d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff513a50-d10b-491f-94c3-9d1a8a74bff2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422de6ea-1459-4940-bff7-2df755030b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aeac803-b0da-4644-a6ee-e33f2db09d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236494b-4f7d-4bcf-9aee-95f862391f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4ff991-8329-4dec-86ee-2d3fa2336399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9183d02-90ec-4a86-ab77-483ecfbb605b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53a77bf5-4336-4c56-86c3-2e1b0b34e9d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8434b1d-8c0d-4cde-aab7-cb2bf56d38e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "29aee69c-67bc-4ce0-9064-30bcb3d64991"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62cb74d-2e11-48f3-a95b-90797a35d0f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5bd9e70f-2580-408f-9c11-86c9b654d7c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d1b3829-9cad-41d7-9a9c-521f3db877fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca00ec85-0522-4b73-b1f3-d895bc485d76"
            }
          }
        ]
      },
      {
        "id": "b32e92e2-e2ea-4806-b3f3-03f6689ebb44",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "475b890a-039c-47c3-b47a-a0b7f9240705",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c330ace1-1c53-4887-8cbc-f3d926b73c94",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "da1a152d-136e-4414-999b-11a1d79d073f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214a82de-0d9e-46d9-82b3-050e920b69d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92959363-adb7-406d-adf6-166a42cf685b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f12070-cd1b-4314-a6f5-004e8243ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9e5f657-8710-4c7e-8b9c-a84744df1ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c909cb-4eb4-4dae-8078-a29de9ba3155",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0e6a29-ced0-42ab-bbfb-46377cb99947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b24fa7-d804-43ab-b00b-bbdc6c3eb29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80d3af-1b3c-4619-8396-3889ec636a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d41b2b33-1352-47db-9b99-32b721f8fb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ea87b-68a9-405f-85ac-cd2b5affcea9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afbb89b-e27b-4a78-8f32-556417b6bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e5e135-826c-4e47-8302-79211baa9f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0294ea5-e7a4-4482-8c96-1f153a681321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "284a85cd-1f63-45e5-b3a1-d6c013f6d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7500ca6a-078e-4307-8b87-57b416c8624d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4bafe4-4d57-4a0b-bfd2-cf1b10fa129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fc7d03-ea53-45a6-baa9-3ef1e535506b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e44196-5b40-4815-8eac-ade62dae31c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "298a5dcb-739b-4606-9522-24e0873ef0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b405f2d-84fc-4901-8f98-7ca67d484bed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e679c4-66e8-4372-b28b-43fd7907a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb928aba-79ef-4500-8d30-a6377196aa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462bff0c-239c-4021-9205-7c2871c7bd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e6d3d1a-1c23-4afd-8185-3541edefaa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e10139-825b-42f0-958f-a359c7a1140e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3b0adc-72f3-482d-ad83-701adcf58695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe6fa61-7293-4952-8434-206f4980c2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40295a76-7288-43f0-acf9-6a04a0e4cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d8564d1-8811-48ac-96d1-89279501d4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1a823d-2eea-4a9d-81bc-16c77ffa48c3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21228442-57c7-4c6d-b34f-890c05f5c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33dda12-1a49-436c-99f8-4d5e0579e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6bf0b-e404-4cd4-96ae-cf6a15ef7d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a4cb5b2-4fee-4d44-8374-67759ba9ad2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baad7d55-eae9-4f29-b99d-4614d90e80fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8680675-bd5d-456f-9d43-49ef2a607950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ed828c-d009-4303-8572-b4712f0bdb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7539cdb-26ff-492a-9788-eb2694a56d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f52bb714-eb43-491f-bc2e-eefa84766675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48823982-3e7d-4de9-aa7f-075992bd9bb6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27399c-2cd2-4040-9ea0-5c0175e3eb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849fec07-635d-4852-8a83-eb9e46fa5cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e5b25-9b92-4251-b28e-e4e859f62ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e602b1d-a136-40ab-90d2-99222529021d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ee8a2-b157-4567-88f6-8050624ebaf0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556dd96-b583-4355-bd24-5585c113e066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01082db-6336-418f-8ca4-71cfbe6e504d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcdea0e-7b80-424f-80ea-51ecc7a0b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e703635c-c759-4fbb-8c0d-07781dd43bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306ba153-a6e6-4473-a919-9e7cfbfd2353",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eca47c-67e2-47ad-ab5f-d2dc52ff16eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b782225b-fed8-4094-a572-ed8d3dcded63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cc38d7-e91a-4a34-9e16-6c76b762b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fb4930e-a3ed-49e7-a4c0-a5e71247dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea87846-de26-49c9-8913-9f92be482643",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca11f78-2a27-4013-8c81-8f0395c19ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6223d3-69c2-4271-bf50-3757ef4a2574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e9c2a9-d7a6-4072-b99f-aa90d3ea1967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "651032e4-9859-44d6-bbba-d45f26584fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa252546-405d-45cb-a702-5880f92bb6a4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff1a482-8626-46f1-9288-5135ba07831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5475dd-b2d5-44b8-823c-37715b30508d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9e368b-b9a8-4584-90e5-a09366aa7da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e3bff7-7eb4-4202-b811-eaafbff84ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951e097e-cf83-479d-beca-9c345f67193d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cabd181-a19c-4bcc-8b6a-ee5cb8b06913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4fb74e-8b96-41ad-b51e-4e224772497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b024dd-0c07-44ff-8016-e70e8f0b84d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87dd06b2-e6fd-4fc1-8c21-200de5dce663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f70c51-c8b5-4bb0-89cb-34e6edc7ebb7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b2418f-8f98-491d-9d4b-cb8483ef8e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f39f4a-57fa-430f-b95f-17f5decf0873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678bf149-a2a4-48bb-a155-1ad97b9ef52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8ac8329-a97e-4ed5-b43c-c550b1396cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1c7132-ebee-4219-a9a5-121d8274048d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32707a1e-df89-49e2-98e7-6d653867350c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0815ce-6193-425a-92ff-2a247ae19dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3f9f7d-c8f9-420e-977d-e5824f3bff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4162a490-8248-453d-8b89-2b675f588c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ed7608-727b-4b8c-86c8-ee1e6030ea57",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e7f670-866f-49a8-9256-aa554cd6c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e1ba31-416d-4748-8d74-d14cd298c34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9085cd14-dd98-4db9-bc6c-fe1b2a7db3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8209e8c-49e9-4b75-8bb4-be3303a61bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a68e4a8-801d-428a-93bd-bedd3688bf7a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a61dd0a-4d45-40f8-a9ad-2e0fa528d562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6683ac25-e07e-465d-ae01-1d42bb0d4034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd96ca3-70ef-49e7-a250-c663f198c836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "db16c83f-2576-48db-aeb7-ab0f35281750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8598e4de-ae90-402e-944a-15ae37065276",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058e897-8670-4557-b6ce-78a600a46020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5996b2-fe37-4d51-8123-f9c3e3d68f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933e233b-b5d4-44cc-b31e-344ae43779d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e19434-c678-4701-983b-616b1f9f3675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463e0018-5b34-4129-ab9e-1b2bf94f92c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1773c43-b934-4a95-981b-c52e1a3ce6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c38043a-7ee7-4301-b059-230fd3718d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677dabdd-48f9-43d6-b414-e7bfcb64fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41e3dac-b279-4ba0-81f3-e82cd10cd51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d7ad48-b6d7-4d9c-8dd6-b8b8352f4696",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ec838-ac56-4f70-a798-c9bbb8a22bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1c5c47-335d-467f-897f-54ff19104cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6c677-d7bb-4129-aa01-27a068dd24fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24dbe305-3697-4559-be92-4e0e52363ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d45154e-5ca3-40bf-85df-6a521f60ea33",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ebe48-c165-4c2b-ad39-83f82e1edd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575a4e2a-e79d-49e5-9850-313c3283b329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cad2e0-16ff-4dc3-88f3-29cdd8e6f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4d59b-bb78-4bd2-94c1-71d5f3064a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f3d00f-ed0f-4c16-9b9c-c84c11260cf0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3ca38d-8503-4396-aac8-46509111fc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efdb26c-02b7-4e16-b2fb-0eeb45b3f899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2726c13-31d2-4312-9b79-c64334d1e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a50c0f8b-8ffd-46c5-b5ff-6809ce4baacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887ca5e1-2717-4066-ba9a-d8f0426db6e0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e7ae9-dc60-4517-8bb3-985f2994a391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bd78be-ef39-4d08-972a-a3d81071fdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e873eb61-e5c7-4092-836c-388be2f35e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f59c7d-b45c-4fc8-b349-d399adafca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e439f661-0da2-4f6f-ba81-dd72e9f38146",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262597b7-afbd-4ef6-879b-2b2779b842b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dedde2c-4928-448a-9351-3899008d9374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b68746-6d47-4448-840e-68f93e92d97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a2f128-cb61-496c-8dba-473d30d0c058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cd8044-898f-4724-bf32-0e7c8397768d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd7191-f162-4e6b-b039-30bf7914655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f406cbb-b01b-4119-878b-8d1f3c9c7d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74710d3e-b807-4c99-ae42-c933377b1261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea201c1a-378a-4b96-9ded-3fad1606880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06597cba-4b84-4bec-89b7-2b0bc11dbf6b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97620a1a-01af-4223-a681-abb7a0c37bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762b6518-25f6-45e9-bafb-2c985bdfc3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea51910-31a9-448f-9aa0-d7540cc1a4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9efff2fa-2b23-4afe-86ef-77bc31989bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a3ac32-7b02-423c-990b-97fe02c77683",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf78cf8-d145-4825-9bc5-b26c434aafcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936eb3a9-cf22-4758-8de9-476b33e3e988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660dfde7-d0ad-426e-b30f-afad652a10c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb81944-e545-44b9-a81d-79de8c6c65f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc64981-dc9e-4df7-a5f0-4f5bf3bd7182",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b56135f-9901-4b8b-952e-6f1bf8515780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21da32a6-5f96-4b10-9854-d383bb4b61b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c09d2b8-d95c-4d7b-8ac1-f4eb80fa0e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c462f86e-57bd-475d-895b-34dd951c2822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596cdce7-6278-41c9-87c3-fc24568d54dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abfc339-8a38-4d26-b3b0-f1c642c3d848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b797a6f2-97ec-43e5-8dcf-cdfe55afd977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347b503b-563e-4148-b9dd-82173e3637e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1728223d-5f53-47d2-9230-7564c0089131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8245ff3a-7c7e-459b-8a08-52651ebbd518",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14468e4-f49b-472f-a51f-f7b77fad303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbc7adb-10ad-4b16-a3b1-72ed5c4182f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc92223c-3ecd-4e53-9f79-7f735f7f6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "687f47fc-0167-4ce1-90dd-3af1e0569074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b604c4c-2e3a-4e55-993d-6716c8e4fffe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebd0ca-c076-4e44-9221-5a435e67fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727cd966-5aa0-44a3-8650-bd830102994c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d966c-28b5-4150-ad68-03311ec764f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a901e54-6004-49e0-acbe-285258137dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbce547-af99-48fa-9d92-3c9384cd4445",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdb0b49-3b40-4219-9542-34bd5d97e088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb1d15b-d444-47fc-8a74-6ac74d659566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13991a9e-9187-4b9a-9377-bb7d6c6a199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9b2414-78ff-49ed-9dea-683f167b49d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a32bb1-be5d-450e-a311-62f87c7a861a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3cf8f5-87dd-4100-ba3c-d5760959e439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babfdd8a-821f-4393-b183-d7de4f2267c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3b2e68-059a-413b-bc39-0da840ab3493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddb0edc-1fad-4275-bac5-822e16695e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6461d0ea-9443-467e-a865-cdccf66045a6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61e8b0b-3c1b-47ce-ba3a-da04d3f3dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab73f3f-6cae-4e61-b1b8-2754eda4248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2256efa-7397-49cc-a27a-d6bd1e802bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "897d60bc-4b75-4d56-baf5-dae9fca26925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7845bd-ef8f-4c9c-a310-0682f0de57a4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241230c-20f5-4253-8919-9a1b7e648c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "408266b6-eea0-4737-b214-75a599656d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f873507-7a5d-41a4-8248-ddeef0d9b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff9738e-6bb6-46a5-9dae-88abf57aeeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c11a72-6587-45c6-bfbf-99e5760934bc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66a7067-04e6-48c0-99ef-7ba12a037304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c98461-8787-487a-9800-7371ca32378f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6993feaf-fcab-4e1e-b5cf-ca6e8850fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77cfd5b6-ce05-4677-bf62-acc0a79e795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f78ef26-a308-4a68-b266-00f6c17a6d85",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417876f3-061e-496d-bdc3-ade01609ee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3409d372-d41c-4720-af27-c98caca64078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2350eeda-5e7f-4e48-a771-ca2a3f276d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ce9d09-43d3-43e9-a055-15f696b94a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c6305-fdbb-446f-a0c7-813d09148fea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca1271d-5336-45c2-a16b-a4d071270cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26223506-092a-4958-9c11-acc181440202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f7072f-b04e-45d3-9615-c2fc08d491ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1c0352-68b3-4fe3-a19f-c6b9bb41f448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813ad0f1-48db-4e9e-96c3-1e3833a193b4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457e145-ff75-468e-a1c3-da81ede0b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97867db5-1a4d-4d42-b0fc-cf91b0bf79d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3951520c-9dc9-410b-83d3-a404df6438e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac9951e-b214-4587-8e83-e0f1ddf2c1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a22a14e-61f4-4b6a-9302-a38289793598",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff2e762-b365-4f3a-894e-5e3c773f8726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c81e7c-ca4d-4ee1-9cca-17ea17b6d0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacaa328-b56d-4f65-9a72-29f3bdfd009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "147464b9-e360-41eb-8695-7b573306482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3a4caa-709e-405d-b3f7-eec851e57629",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44a5b0b-0804-4b5a-8930-2227f162b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a252b7-2480-46e2-a1cc-1969cb614556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f6fd73-ec8b-4050-baa0-36f55e0a13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9691634f-9ae6-4ef1-baf6-885373daed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588cd85c-4daf-46ba-bdea-164d4170f547",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4922e93f-fa0e-4d0f-87f2-fd77504c2511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc60be5-3f90-420d-8a2a-078d1a80f2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ab9d34-7ba7-48f8-b860-c9addcad6938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a13aa1-e787-4f43-a1ce-4c3a22f48d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fcd92e-f747-457f-a80f-f3a372121baa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fda34c3-a428-4d13-ad8d-f14d3a0568ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d2cbb1-8113-48d2-9466-365de789d906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182fcca-4baf-40c5-adf2-e9573d28d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a064d58c-0611-4719-90c8-e65aaa8483f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41b2ee8-c2e6-4c30-9973-e6749497ac4d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ff674a-f27c-4f87-9954-ce2ba2992be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc7b22f-2877-441a-b0e6-c021fd64bc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d983059-b920-4050-aa4e-fe8807ff79d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0042c1-756e-46d6-920e-f3fcb19bc576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e604a-0cb0-49f2-9938-9040bcee7e9b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36b9259-0d45-4345-bd46-4ced64572856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25bed38-0a68-49b1-8dd4-f98c1c2b1695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6a3dc2-0eb5-4523-8fc1-38fb0d88f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "986a422e-e1df-4cf3-b7be-c1e51bd6eaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683322ca-f271-4d9b-9dd1-ba996c4f61cc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc4b84-0c3d-45a4-965e-27ff9e2c0629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed96b5a4-5e13-4178-9580-9a56415bfd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cd71bd-0ded-4c27-94c8-318ffa640ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f357af-f0b9-4988-b2fc-9783ce33f61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b318855b-b102-46ba-944d-2db7a7346719",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7e1dce-6fef-4d7a-addc-4a4537189f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce5f821-5dfd-4d08-a133-a3afa6e669f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c34293a-36a6-4ad1-b5a8-f0412be97835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b9e2dd-af5e-4ca2-9fee-48a19c91b238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133e8559-a2f1-4b8a-9c26-fcc85cd35771",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd975da-950f-4b15-8c81-1cf83ba3f777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f32f390-4ab3-4717-bdcf-c052740d6bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf1d6c-8574-4987-b0c6-2c395a134474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8bec0f-b39b-402f-935f-3ce5c6042850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e21c1d-7281-41d6-b60c-183d339ec7be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c695d5-2316-40d9-ab12-45522ea03d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4e6cb8-4116-4736-98d4-6abd8e3afce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247ebad3-2268-4a2e-8636-c28621bbc77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e068fd1c-3bf3-4e8e-b510-a008e2ba69be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8cfe5f-29fd-4b33-a49b-b3eece693f8c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84351da-340f-4ac7-ae9f-673f66d6cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4a4f51-614a-4fa7-9ba7-1aaf004741a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a3acaf-a953-48c9-b5cb-921c8037080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26cd0f2-fa19-4d5b-a143-4ee349a61533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2943c-1eda-45d5-9abd-bf03988dfa37",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a68118e-006f-42ef-89f9-debba9bc849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549bae75-c422-4239-bc3a-f235d000d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f8dc9c-53a6-4acf-842b-442f4368908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c2a2bf-7341-46d3-a9dc-e17d27e378dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c3a08c-15fa-487f-ace3-c957dc68e2b8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14beacb3-9aa3-4f1b-9cc0-d0d475c48825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e838b4-9962-4be3-8818-25c3c32ea701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77a7c0f-e0e5-46bc-9ef3-1c100cb2b05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88612830-283b-4f8b-ba7f-40ec6252530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ea2ce8-f5a8-490f-8e7d-caf0181a0cb6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a1f81-ebcc-486c-945f-24f3fc8e6b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546cd188-575e-4976-9f18-e95ca871fd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75bd4e2-75f9-4d8e-bb4f-bf24d7222676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8018e7-d8ef-46a5-997d-5fa634fa7525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685cf25e-0605-40aa-87f4-c6b65579b0d7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccf223a-5f0c-4cac-b1cd-8bd89cd20d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2765bb1c-c8ec-4b83-b489-f0f80cc99002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe00be-81a9-4393-a510-0a5fb6b04993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48422ab2-6114-4deb-a6fc-d7c8388213c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a44f25-9e13-4827-849d-e0071d2cdfb0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690c03a2-989a-4135-9243-a535adfae242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb16fd7f-039c-40ec-be90-52521791adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1e4ac8-1a07-4899-84c0-f08a9556c03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ada23298-fdd4-4559-ab54-e4439dedb5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4779f6c-1b90-4bdc-9273-a24595f5e265",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b988b-82a2-47b8-a9fe-6d18f669f372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aca9be-7ebb-4586-9cee-41969b84a62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768ba4e2-95ba-4e27-bff1-a24e91931933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4d92d2-f14e-4b0b-b1c8-488116c54c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f5d5c0-a12f-4646-bdbb-8ad9add79c44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245ea446-e028-4534-ae09-9e3a03b03a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5085f8-7cac-4e0c-bb77-f962a07902b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131acba1-920c-4820-9b47-5e6524fcdc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3594a26f-69fd-44cd-8513-4ee303bec8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdcfba0-cd2a-4889-bb70-49b158d36a70",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e0e544-c7de-45d1-ae86-420a7993e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa654405-40aa-447a-9a7e-68f69b65ce1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb7887d-f097-4010-87af-d032fda6e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f369b8-f765-427e-8346-77cdec4db39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32324b68-76b3-4811-98fb-58a76a8e2e96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c011e466-b9c7-480d-942a-ebf634993f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ca4434-659a-4d63-8210-8fe721490663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffc0915-5cd8-4408-9e0d-75525d14a9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a93f6e1-6d81-465a-91cf-1a8578231b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b108120-4789-439a-a49f-15016f881427",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e805a6df-fdee-47ea-975e-faca4905a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba69c791-c8c3-42be-b9ff-84e76ab8ed11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83b181e-23c1-4c1e-91dd-2dfd8f94cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3da7ca68-d22c-4242-a82e-bbaac9958ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62187ea5-c2c0-43b3-a4ae-9f56082d792e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b0339d-320d-4a43-8f9c-c322012692ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eea435-277d-46a6-aeef-7275cfa55f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f732c3f7-579a-421a-a2c7-81e6c32935da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "577f79d8-d83c-4445-a4e1-6d89d48a8b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ecf86-fffd-4f0a-b35a-ea9658db3486",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ce127d-dc26-45eb-9192-ca9b3394261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e076298b-f3fd-4623-ae85-6b96d5b9ed07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184eea1f-f2a9-4c10-98a9-da430b18e5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc733575-7a41-409a-acfc-92272a0fc4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85204ecd-77eb-48aa-9226-1f0921647e3d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284000e4-b421-46ac-a02d-3c33131fa20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1021e59-be4d-45bd-9d1b-9eb78ac8a554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf986aa2-f713-48e4-bba0-d3de36367388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3f9cb4-4821-423a-b2d2-cfdb37d07a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e720a5ea-b4f7-44c2-bd8e-f41526fe3975",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd9966c-8365-4cfa-a2c4-3b93f26ef44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a4b7f7-e595-4e52-8f1b-75f627e4d813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35bbacf-025a-41d8-85be-e98f602e547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69221992-62ad-4a84-b5c4-1fb066c841f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4d879d-571f-4898-9cb8-f4c484f2db59",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957f1a83-6c67-439d-8dae-601601656f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a84d64-c684-4d08-9af8-53c15a4b2b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e48607-7efe-41c3-99e7-d87e5742ec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e2f4f0-16fa-4bed-a484-214b1af0f6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cd27bf-4f81-411a-8902-78a3551994a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6045e6f-8132-421b-8ba6-7eec9c8f90ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dd234b-a654-47ac-b6dd-920644c540a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d44877d-22c4-4c7c-b166-1608b4264ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1daa88d4-f243-4917-be65-f46df37501f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce96a937-6f06-4482-ac1d-aec8c7599c0e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a557986-8d67-4f88-a76b-2d1273d45c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9353f07f-a734-4af8-b869-ee054cefa87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175ed3b1-02c4-4020-96a9-d02a6044d1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f838c2b-dd23-48d9-82f5-277a5f4038cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdbf9ad-c916-4361-8499-d6351e562805",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fdd6a2-d998-4a1f-bd6f-67194bc8bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb199bb-7cd0-4f45-a451-77447518db90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fa8f6c-7f95-460f-9088-a9c733c677da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42daf29e-5c7a-4556-b45e-39ed7db3a3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f64302-b3a4-4796-8421-1b2ee6c651fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1abf9c6-62d2-4381-9605-f51407472e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6242ed27-ebb1-4af8-867d-974e079bc7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f68b47-3f2e-4c40-bbb1-812d91272eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b67c7f-c4c4-406c-9c76-2ae033defb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa19dc3-520d-4c54-acff-524557b72451",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c05439-55dd-4953-b536-1af8d1de5ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9180a9b5-12b5-4974-8dff-b3409088be55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a513bcd0-95ef-4245-a654-c23db4c611fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8466b9e0-2fb3-4024-af2c-763c5ae92669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080666b0-419a-4e8f-9725-1ba74b8239aa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264ab40a-b766-4be2-bd55-937cf8346b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41d12e8-4e5f-4045-bb67-f6c7ad158fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0a2fda-56f7-4192-9e62-f3255c1b4e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c9fdda-88da-4116-927d-0ea09dd51c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a82afd-f13c-4155-a1f6-22cda0f12249",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53f78c-4675-4531-8fef-d27c03ead08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086c0eec-2734-4f54-9fad-c51dfcf8a148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11a01b9-c984-4011-8b3b-03ff9bdc8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "940998cc-7ff5-401b-8d70-c9585d7649c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2931b150-d336-458e-aaa6-987a8258f283",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f11d789-4af8-4aad-9959-0708afc0055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693c9308-ad6d-4362-b02b-701d29135071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9fb6b9-2ee9-4f78-bc4d-923f6f4e6b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f93ffe-a016-461b-a714-0ea5d069cbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1ee48-8f0b-4ec7-af2f-ecbddc010209",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a77883-cd47-4ac8-bfaf-01f664c697d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8274fa-248f-4814-bfe6-ff2b0428b470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c137e-04c8-4934-b64d-3b67a659bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b95316-2ee8-4fe1-a010-328462628187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3727b080-943c-4ad9-922c-17387afc1898",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb4f96-880d-4c5e-ae91-d4cefd962c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093e3300-d9cc-4b2c-a77e-1b538d58931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3427306-9d40-4dad-8c79-ac5b265e8e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e39eb1-0569-46e4-ad9d-e5e6502cbaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab013842-8dd9-4054-ae8a-0c41a8f7bd03",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19308c92-1d6d-4257-bd19-95a355252a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5855de-ca08-49c4-b273-a2ddd4a3cbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32926890-7a58-4c44-a866-938ec9c47bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6690802d-b447-43ab-84d7-89de1b4ad2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a253180b-129a-4a45-939d-0a56e1241864",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a680358c-8b20-4f75-9b75-74767ceed3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32db382d-ee22-492d-b6b5-832de0b52652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb56bc6-66b8-4bc1-90eb-4abbf40a7e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "271afe51-5cc3-4068-92e3-fccba3e17ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94282f6e-48ac-480e-9570-8b2ae9bbffab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41383e15-d6d7-42d5-957c-7d0a4189fe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d9b733-0dc6-4598-9256-25c4db5d504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba02c95-05d0-47b0-8451-5c5d2d4851cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e44319-bb10-4da2-a328-e5c100464020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13e7aa6-7de3-4c55-8b3d-25d367fbc502",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01001636-dfac-4c01-a2e6-ba8f79793a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420c24f0-6756-41c6-92f1-4c2aadda6f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b970408d-2e2a-4f5f-9f08-76917e39fcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5b1ad6-f583-43eb-b6b6-274cab47d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e685267c-9f40-4536-a08b-33f9d95b78e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f2b9b6-af2f-4947-b379-efc1589e4be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875d351b-612b-4d28-880b-aa2d2c9b6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12771eb-80b3-403f-a2b9-cd32b72b3093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d51aba9-55dd-41dd-8580-de5278666a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f706ca16-7d8a-465d-9451-e18fb4b573b6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92397c3b-aec4-41dc-bba6-8958b33331a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ef47e5-78d0-4df8-ab88-46747228ee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ffdf96-194e-46e8-a63a-301e22ed4647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2924953b-6f46-4ccb-9842-adde96979327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e87d72-b6fb-4781-83bf-aed32eef52b1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ade75c-ac5b-4f26-a9ad-18de6131be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db8b6eb-d2f8-41a7-bf1f-5d9e77d7ec86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a312132-46c9-4188-a562-5285d50914e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "885eb445-4ab6-4d73-a763-f6d2a60259de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b302da24-a6a2-4f62-8037-6ff2c006cd9f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439fd90d-4217-4dd3-b6fb-faef727422e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760cac54-b5e5-4064-8823-ac7111a77351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b6293-4e06-4cef-a087-7c658d0b543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6c8b75-cf9e-4821-a3a8-50e8824be10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7f0b02-23b8-4c6d-ba11-be29eee76553",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36949d06-6ce9-4bb0-a827-a1d1de6343d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e798a21-aaa5-4801-b4d4-972f2fd62ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeac4e72-1db5-464c-843c-49ec84b1c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13ab02c3-f3da-49ce-9598-4669760c8073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fc0617-2b00-4f70-be32-1dfa97ac6e85",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edba7747-4f4f-4808-b6bb-8f713124b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0ce389-a878-4bf8-8de2-451b79ea423f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5003ea7-fac9-4f08-8592-9eeaed3df367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d289e6-7c2b-482c-aed4-079ef1ca639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2641c1-b988-4ed5-a1c4-2ee57e129a7a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54addc5f-0289-4d76-8747-4cf7366a6be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f0b183-5b8d-41ef-8299-6e55d3c5ebcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6743df2-21aa-4187-89cd-caace497f3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33a8cd58-3aa9-4a4b-89fb-e64bd1631689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50163b55-f69c-4816-b512-07f5c8c4564c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599e43a7-83f4-4b1b-830a-a051a31d43c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dac0dc-21aa-429c-8356-ece32da2b3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca9ce3-69e7-4d80-8e3a-01695dbb19ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "370098d1-6dca-45eb-b4a2-1ca27ca2378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413adda0-fb17-4ebd-a8d1-537caad910ba",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98218d9-3019-48f2-a000-0cd6cba34f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65221743-2a49-49d3-bbc5-a2012522a8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d7f788-3ec6-4fa3-a5d3-524bbe23bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb458c3-45ac-4bcb-ad40-c7d938279fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ab2d64-0ab8-49a1-9ef7-5fa4dc5c8add",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d46ce02-06bc-40bc-90a5-2e0a49f1c4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8dd558-898c-4207-a7a5-e862660f6d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a339c302-2ca3-4293-92eb-07a299596d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34ddeafd-a89f-4f1c-bc9a-2d0597cc2016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c9475-9b7b-43b4-8c02-0fbf000d11d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff0559-e19b-432e-886a-fa3675807748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700700b2-bb14-449d-b14e-3d07decb3c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c839d7-9407-43d3-bb10-2fde3d4b81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c8eba5-d8d1-47ac-9c19-5f7b5842c7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586a1d1-d5d0-49b0-be8c-cc0726dad1f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e488075-35e7-43c8-8e60-9454c546c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dc7b555b-9908-4dc3-9a2c-7d6947dfceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0fa3fd-7160-4cf3-96a9-32c3661981b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b56f52-9edd-4ec7-8822-0faf588505bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e20c7e48-465f-4861-9fd8-d8e157de3d44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d932307-24e9-4d26-826a-0a4b14d11d96",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a6c3f6-aae5-4479-85f6-ea4ecc1c0cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0b8b100-c8e8-4126-88f3-f0e4fa552fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6b2fdd-e532-420f-89cb-d136dbc3c26f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195879af-3b07-459a-8545-8a0914357147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5de3152c-0acd-4744-9006-4580389a8e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "954e36f0-d54e-4944-adda-514857f1bb81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94b16cb1-a25c-4154-a934-db0560225fe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c203fa0c-ea8d-4eaf-90bf-218651d17f19"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88a3b83f-c181-4538-aa79-1bc7592c573f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf3dbc15-3c79-4c22-b00b-9fd77836f8cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "571ad4af-2bb0-4bf5-a9eb-5bb13cf019c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9db2f426-e388-4437-acce-ed22b29355ef"
                }
              }
            ]
          },
          {
            "id": "272900ba-a1ab-4f26-a8c6-97bb06d80ffd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50328247-7e21-406c-b1f4-81041709cefd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7802bd83-f41a-446d-84de-6a847fbcfc55",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556637bc-e1ed-4a1b-bbf0-7287d57be1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a04e66ea-4b8f-46c9-a6b8-4eb28d6d28d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7334492-5aeb-44a2-93f6-abc804494232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9295103-b36a-4ec0-81e2-7cb2d41abe21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ec66f67-4f4c-4882-b27e-3c2622ff8566",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d76e8940-0a10-4af1-814b-ef529f6a55d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94bfa811-e059-4b32-bca0-cc581c69d457"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a1778b3-9313-44b4-8a0b-b64c7d8a9566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e4d2e16-a2eb-48c7-8675-2db11d10dd06"
                    }
                  }
                ]
              },
              {
                "id": "af5632ba-32ec-41b9-956d-835d44437802",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd71edf0-b2a2-4c94-a0ef-47b052910909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3c92b14-09ee-4c26-91ce-22cb21739475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9cf7a41-baf7-4481-9487-fef6fed3c3e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f173c736-1a57-4fd2-9053-f29d95ba5017"
                    }
                  }
                ]
              },
              {
                "id": "68e4a573-263d-41a3-b7b5-aa9e925db1de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d111eb-15ba-47da-8de9-613eb96ef981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3c5786a-0d24-4118-b60f-dcc12201cfa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9bed3af-6161-48ea-a215-5f71de163b9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c72f9a92-4f0f-42bc-83d4-89adc7fae275"
                    }
                  }
                ]
              },
              {
                "id": "60549116-998e-4153-b53b-0238e6b9a65f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b07ff01-375e-40b4-8231-ea515b1e45b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44d7e1db-88cd-4415-bbae-48731cad00ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3967263d-3bd2-4830-91f4-ac4b2e459ee5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bed57b36-bd62-48f4-ab5a-6a400e7803c7"
                    }
                  }
                ]
              },
              {
                "id": "9406ed40-9913-4197-b960-8c92ac7b4809",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b46e406-0ffb-43a4-a9f6-afac622a09b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee90b8aa-586d-46f6-aca8-1148fdf3ef8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afa20edc-1ee5-466a-ad12-b87633c2fd88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3a85ce80-e897-434c-a1df-670f79736bbf"
                    }
                  }
                ]
              },
              {
                "id": "6a93954d-bffb-470a-b68a-535426aad1b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cd3a18e-7102-400d-b1a3-032b0091abf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69f45481-4796-491e-b0ad-9bc505f0e19d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dbcf432-eda7-4831-a539-a2801af04e99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3b8107c-d2bc-4b54-b62f-351c1865482c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d55d92d6-e498-44be-98f9-687b95750a71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ead5fc46-8818-42d1-8dfb-8031048f0981"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8da889a4-c31f-457d-a42c-b0a4bbd3f52c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e20635a-2b66-46a9-b36e-9c2acb826d04"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8670ada3-ea86-4c4f-b8cf-55ce70517876",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "85a134fb-aafc-4650-b5ea-e9978ebe9341"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69ebe230-b697-4464-989f-3d6bbb3a2ab5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "110e943e-03c8-4902-83a1-f13193e683ce"
            }
          }
        ]
      },
      {
        "id": "1f38a930-bce4-4488-b13d-2d3e81ff3368",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f6791a37-a2b9-40d4-bd7f-8fccb2c7aaf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eab0a75e-e53e-4934-8949-9b1af6964d97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48785bac-7c99-4090-8428-14beafcc54f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f8990-a610-4cc6-9e80-9a7d19905ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61da4bd-fbba-4351-b2fb-521cf31a7cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f44d6a-e12a-4f79-9ea4-77cce0a6dcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4682bf-b6bc-4fc2-bda2-c43bc32cf70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6cc1fe-8e4b-4df5-bda9-c1574008534f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbd65cc-7442-4a04-97bc-a45956a0ef83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19993161-1ed4-4969-ba9a-24a3a0595efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8facdc8-76fc-4fbf-9db8-a6975eb389b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe568eb-4e38-46a7-8dac-50e0b4c14da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213ee242-ff15-44c4-a1e3-760e3598b0b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506f9a6c-312d-43f6-9889-3b9b2b95bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9861eb7f-31b2-4786-9f9d-774916506a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4c2f70-5e85-46a1-88b2-b0e1ae0171f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf42cb9-84b8-493e-9f25-90438474c9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a08edf5-58d3-4e92-a4a4-3a6b25f19813",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1df9fb-de94-4379-8efd-c34330f82698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7232733e-e397-4b54-87c1-9a9d92e04d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ab2489-6d54-4a20-8c13-98b50a8f9e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "530e17f8-4a91-470e-b032-0e70f2c0598e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f1f84-c009-412f-8c89-823af78b6d43",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08430b0-ece4-40f3-b0b9-72a28d7d72d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b8f70c-9230-4b8c-87b9-740ffb186dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13144e55-51c4-4023-9709-185e327cbf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e55460-0a34-4e7a-98d7-cfcb47e4809b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3de150-5c71-412c-9a46-ebf8bdf56679",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35b410-b036-487f-a03e-a79f4428db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ba18f5-43ed-4386-802b-44fcd1336ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d189e3-455d-490f-ba5b-a7e10d5d904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d15cdd-5182-41cd-947f-b80189007672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f7b7d9-86b0-49d2-a2cf-a17f68deb93a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61441815-c1ff-47cc-ac10-66bcd198abb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5fb2a8-7c44-4609-92fa-615cc434efd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195e6d6-cc05-47d4-89a0-604efbdf73df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2663a5-49cd-46ba-a62d-671c618e367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72915268-7fd3-45f0-b2ae-8e790e6bad7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d31049-6f45-4fb0-96f0-c09be03c3281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db4786a-08a2-4f53-af23-da2de4e5ad03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592bb47d-cbab-4bdb-9a38-90e6a58d4185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e94818-1ccc-49c1-862a-7a67d8432dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f769aed0-c6d6-4287-9cfa-c8b17895f5fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986fd415-4cc4-4c17-876b-ed450555cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363fe1cf-ebbf-4a99-93e1-6ff2de339490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4777ab4b-5549-4c99-a3a5-51dc98a8741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d992a465-9914-45c3-8b2d-45edc9d635c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bf12c7-fd92-4e92-baf4-57d8940a5576",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998d6634-cca5-4e21-b49d-1b0c6a5f2c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dec151-16cd-4b91-ad8d-185f72f92496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0db64c-cef8-4aa7-b2c1-ac390f46cbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "197b4cee-22b5-44de-b193-8c716420504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd435de1-c0fe-41a1-90a7-3976e9d77c0d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d650739-02fa-4579-b864-04f204b4000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15672dc3-bc26-4ced-9cc0-520db4c10b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d38779-b17f-42a8-b30b-36b2dccb1016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09eb9886-e105-46a9-97c7-f5543d5ca772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622fc0f7-ee5e-41c0-88d9-0cbb927d8cdc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f693d50-b5aa-49b7-afa2-39ce87a37d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29064c5-ffd1-4094-a91b-5f9c43c15842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e7a41d-e4fc-4b52-be13-3572b51bcbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8d9b13-b2d7-4225-9f69-3617b3eda345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c3d160-5899-4a83-a631-615ee2d92276",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcdb153-8c9c-435d-96dd-89a545fae421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e14c32-02cd-45b4-97eb-c9421ca82945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f27fb1-2584-4423-a4ed-7199cfa269df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34160f34-ec33-43a2-9402-8947abd51a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84921547-6733-4cd3-9963-98cbd80f80b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec40bf-8810-4c7d-b05a-ead50d489464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cba5b5-63a1-49b1-8eac-16442ceac23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5981481f-0581-4896-9628-4b7d0152435c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74f52f1-76d2-4b56-a5c3-4e7e74454db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2e4b8-3066-49c6-bd6a-90976eaad4af",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b2e490-0d54-43a3-869b-1ffd24db3122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31fe4c1-24a0-4f9f-97ee-8435784f669b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2276f85-120d-43bf-8d63-f2737e88405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "03dd7a73-72a8-46cb-b7df-f7cb5d14dc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b434a65-29e4-40a6-8e4d-8f602907d7e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e98b58-edd2-431c-a136-c9210c799583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93953b0-0936-403d-820f-499236befcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa0d311-a14d-42bd-a22b-b54bd8913f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34d6e1f-512c-4bcc-8ed6-0633906b32cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f54ad7-4f01-4bb0-9d26-e783c774cf37",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a63eb0f-f0d5-4ae7-8cc0-3332426d118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eeda87-7cdc-43dc-acfb-f6d91df97017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4a455c-3b66-405b-81a0-d46d2d28200f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3740e0-ff53-4c8e-8e1f-c06e3272e635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd4426e-6e18-4f95-871a-168a83129da4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04535190-ecbe-4fb4-ba78-4889934aefc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865ad8cb-3694-4315-b76e-0be9c15b8d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d818c0-626b-4a00-8818-c8b41b1a547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c4dc09-f479-4cd3-b0b0-d146c5bc0b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761196e4-94c3-4b87-ab1b-0b42fb454647",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e64d13-e02d-472e-977a-5e52659123a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b644ae-e34f-48d7-be89-6f0de384d155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5e5f77-f99e-4f7e-8033-e3db230952ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ea63cd-59dc-4608-bccd-a0f63f67b31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5d18b0-ed65-435e-ac4c-a1389a7f3d07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291de352-9ee5-4c82-aa68-472e1b3537c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2289061-3911-4fed-892e-658909640cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a7375-2625-4aa8-816e-bef59ca62ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9b0ff8-3be5-4b4e-a401-82f05cf46b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63485b28-74fe-4bc8-9c28-7218436664a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585c237-5632-40ae-87b4-1b1edaae4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96b48e9-2e7f-4341-bc5f-56ac82dcd176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc53801b-a7cd-4a0f-b672-a6b24998f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7b7452-3ece-42d3-a5f2-c530d4d97430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d2275f-459a-4a4a-a465-d93f849d1ce7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261384fd-6b97-4162-b337-ef5b095f6557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5896af-4b54-4b13-96e0-725d15fbdd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbd310f-8c30-40b0-a4bb-63873df06d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5043bc-ef69-4dd2-aa98-8156f107cc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6932b248-6a64-4161-ad1e-4532705afc6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77e696c-841e-4960-9abc-29d4bfc442c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d9350b-1725-4ad2-b2fe-5d58b6676e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e854479-2e9e-41f2-b5c3-c1fa926f9367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6376fea9-c1fd-4c5f-bf1f-c714a701d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80bd892-cfef-4d11-8f7d-fee58d65f91b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e70fa-fbc9-4fec-a66e-004378ed6b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b855fdc-c83c-4454-a556-017bfcbe8a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3619ad2c-513f-4381-bfe6-74102134a2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a852365c-810f-4be1-8b1d-a2ae9215f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a06f7e8-76b7-446d-a7c1-678de04f781f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51954217-fa85-4b4e-8968-16671b2a4888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7417404-141c-4d66-8484-2e36c2fce4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11af676-5a79-4234-8c28-ead831b98cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bee97e6-6686-454a-a11a-a6ffffa8cc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aca1d7-c8be-433c-8379-865302fbcfd8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf061c8-a266-4191-b77f-098ed6c6cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44073e3b-65c6-45a8-9fd1-a87c0d0735ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19256c7-79c0-4738-b228-b7c4f75020f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc47f1c-ef05-4504-8ec3-b8d215e3696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7fee9f-ae29-4ba6-ac26-ca21b3783a76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f42f3e-fe27-4ebc-93e6-7529123bcdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e188bbd-b877-4bfb-aa02-3924ceb2a6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed4ce42-c3f8-436a-97f3-3ba1f11e64e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3315db58-d5f3-43a6-b335-aabc90d3516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f54fd-8a56-42f8-8113-d059c39b8417",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d934b6-4b94-40ac-9af0-9c934a77a696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffbc710-e0bf-46fb-91a9-160090a02f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fbdf9b-b668-44a0-910b-5ab74970c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b091fc27-a9af-495c-b58a-538e5eb1070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abb50e8-524d-40f6-a37f-a51445b8edc6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c02383-c442-4d37-b6eb-02d1877a33c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01d86a6-2364-4011-9c35-11b07d8d70cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f730858-7208-471d-906e-e81cbd594b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b44605-1dfa-49fe-8c35-79b28933d6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0cc5c6-1068-42f1-8114-a6a3ce401525",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed2401-445b-4490-ae34-c49128cd2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ae8cf6-b151-4243-aab1-844018550356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7828c54-23a9-414f-9407-1291b33b21c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f331631-fe74-4851-b6f3-4098d098d79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d2524-e515-498c-9a3e-8f2ba36b0f0b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe784cd-344c-40b0-ac79-6a04392e1337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f385490-600d-4ffd-b24c-38a9e28c44c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb6c73d-478c-4b27-9b1b-4e68e164baf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fcf0a2-405a-4f8a-8c5d-1155fdfa3c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f428260-f5b7-4337-882b-0635e736bc22",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb73b37-531e-43b1-8f5f-3790e2592223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c72faea-b623-42fc-90a2-7599d74d1c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d1357-3e87-406f-b867-4eb9f892d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdf2c4c-5e80-492a-bd63-bf2be9b1f066"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a8314b7-5a3f-481f-8bee-f2c20d163b0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b645d99-d0ad-4650-b604-e0d9b8215158",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea9c444-a7bd-4498-a612-282c63b166af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4791be-605d-41ec-a7b5-79641569d3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd95e0e-2d2a-49ee-b9ad-0980a20d2f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c93bc5d-09ed-46d3-b066-1caef1d065a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fd02734-fdae-44bf-a045-2b2c69573704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d60273ae-0204-41f1-836d-5405a4917fe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19c68984-68e3-49af-a0db-9c745870d832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbdae827-d4f8-4877-8497-66a7ad6d1d46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c90987b2-3486-417c-8ea6-cd9bafa8f266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "198417e3-e1f0-460f-886a-07814ff4eea1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfa165b4-6e5e-4730-b949-1d4514a6e4cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "761110c5-79bd-4142-a37c-70faccfe5fab"
            }
          }
        ]
      },
      {
        "id": "6a1214db-ce6c-4ee9-aff6-5319d0902b22",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7c3a3b72-349c-446a-a83e-fa22f03e48d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7fa8aed-8eee-4faa-8252-34ffcf8a0e82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edb7a28f-601f-4cac-811c-f0fb976ea2eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb4212-cb25-4cab-876b-675ac47cc9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b62aad-afc2-45dd-84ee-f48724d341dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2accf66-27c2-47f6-8687-cdcc8409e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0148129f-9fb5-45e7-9511-a1b748c3ac14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810b3e9-5b8e-44f7-8853-23212f1e3627",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb39b7f8-b1a4-4e27-a9c4-4d12a3d2b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bbe647-b8bb-4ee2-8d91-dfc7f743c7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4785f031-03eb-4b99-9abc-8815d03ca4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b17c079-0a4c-4b56-9996-e720eba7c05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe95190-d76c-4690-92b7-fdc2d275d949",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd05a71-2e73-47b1-bbbc-619c68b37041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92aa4e-bce2-42a0-806f-af973c0b7684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70824df9-cafc-4f41-8f6a-f12dd39ab06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04880378-2d4b-4071-9821-cd80edce9ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff5f56a-1c75-4a03-bf06-b8dae1483729",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d9bf8e-115f-47e2-b70f-66a731cb5cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a43b81-6404-4911-8ac1-f43628df1ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e24d6-3009-4775-bf5c-efdb626968a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6ccc8c-7ea5-468b-9b35-51a8879ae901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cdadfb-f573-4120-8d52-183a3d59989c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2561fd59-6027-422a-b687-c8e6e3dc89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b495e27-0c51-4a36-ad47-569b22a459a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e88aa1a-1694-4b4a-897c-9b6361336556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdddf02-5c27-4297-92c1-8e8f8aba926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd2a118-02ab-4d1c-94c2-6de78bfe237f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7602cbe-5982-442b-8bd1-3a0bfe874fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7499790b-868a-4c10-b744-5e5ccd571682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e419304a-d169-4890-b850-9cbfc287559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9b79f3-82e6-480a-a68f-2a243c439c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5e1f5c-017d-4282-8648-c4347276696d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4770d2-3ea9-41d5-b6be-6ce1ecc5257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adecb1d-9966-452b-ab53-2b9c1816c806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ff5551-936f-411c-9fd6-3f015128b22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d78473e-9840-479a-b9c1-ea82f1368298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb754de-5f97-44bc-aca4-9cf98cb5b679",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d0d286-eb30-4eac-932b-a4b0e7f74db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305954f2-34a5-49ea-a976-e7a4aea8fbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48b69d5-735f-4eb5-82ea-6917e0770ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abf3909-256b-4409-b0e2-7b038830c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed11d1-b4df-48dd-9705-ef350808f73a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9364bca-08e4-4886-8444-022af73e8095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ccd555-c424-40e3-a5ad-cef7d05ce888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f442c3e4-d075-415b-9a14-141c26577b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac84f744-d011-49f5-b3a2-bcbc1b921a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097495be-97de-41ae-8522-3091d4834f5a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930cd971-1f15-4218-b8b1-44d5ae144935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df29838-8765-40b8-b06f-0aba46c1fd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754faf16-93c3-4bba-8da6-6f86eb71d2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbaed47c-c277-4765-9eab-308f8d174d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46fc630-0954-4d17-95ba-0998fb87fd50",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41ba166-9a87-45b7-9d44-6cafeb335bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedb932c-2f68-403d-b2cf-9ec166d5c2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec5499f-a1a9-46d7-942a-4a4f87c58c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f632406-6838-4ea5-b719-7e308386df39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d744216-e57a-4153-a8b4-b9b7f5cb1c9b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e17ce0-0a57-4a25-b3f0-fd627e750ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72abf6c-b6bf-4dfd-aba7-1b578d068880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df330ac-52aa-4cc2-99d5-15be3ec8b20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b27f192-b539-4050-bd2d-f23dd0017d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b8db07-bcae-493d-b2ff-725aae115f84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c24eed-3ec0-4de4-9050-359dc6ef3443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49efaad5-7d33-4477-a3f1-2fa62aa97da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5114de03-02fe-4da2-b2da-8526cb4e69e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9567ecad-51ba-4416-a4bb-f145b0cf2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219a931-5ab3-4342-8354-1c8ef8d69549",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a378632d-c195-4b34-8735-79fdf19cc305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0eb35e5-ac27-44a4-b537-6b74cbaf8532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbc529a-f210-47e5-a0cd-c4ef34d5125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d7df86-5df7-4d2c-98ab-ba1658651339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf254b5-815e-4ba9-9222-156b834a1c17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177af10c-b90e-4159-b86c-799c4766cbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7037bdaa-7a03-4c74-b76f-b33af3ce79d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea394ef9-5449-4a1e-a0c3-a601ff056666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "653ff75f-7026-4b0d-9a34-fedc52e865fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ce11c5-84c2-4376-a4ee-49977d728735",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7962587-48e5-4018-8bb7-360074c0bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694411f2-19df-4b83-ad07-9224af3f88d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0f2aee-881a-465d-b726-1a6bf487d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b8aa4d-9846-45e3-a98d-e9dac326621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cbc97c-a19c-4ed6-8f3b-d52b01e67c8b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90217412-2d4b-41ce-b24a-489f452f056f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06067b2e-a2d8-4f83-b4e7-79b5574f7100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de3da0b-6ec5-46f2-89b3-713fb54162f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5125b783-a004-4342-8a62-bc92ddff70fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103779e-da72-4f06-aea2-84b0d9f7883c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bdc91a-414e-4e20-a3b1-a1f6af8f77d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ad64a9-5eb5-42e3-89f4-4b7b2e7d1748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f705ab17-ebeb-482b-a6db-c068fbcb900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3359a8-659e-4caa-9119-5b4a1da2d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4d66b5-0240-4e78-a4f1-b23a892846bd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfb3606-6f33-465d-888c-515f5b5bdeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ae7b9c-9da2-4d72-84ee-345d05c33cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8df9726-a6ce-4349-99c2-e4f17981712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21679875-7a58-4482-aad3-cc90a032c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92bb903-72a6-4fd6-a3b2-e7e21cc58d7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5bbe1f-34a9-4eeb-be73-b502f1672f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10eb38f-a594-4422-8e77-0f8e445670c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d3738a-fa9c-4f35-a88f-2b99dd22921e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a988c0f-64a8-4a05-bec5-36a901c34d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b61f1-7808-4de0-ac94-b9ab2542725e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a4f60b-d69c-40b8-92e8-e78801415053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0068521f-7856-487e-b45b-414ce8be4957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3604cefa-dff8-4be3-b95e-5033a5f0a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52384cdb-f2c8-43f5-be59-59993eb2ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787883f6-d725-4068-b20f-dfe4a505f47d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e02028-b18a-4091-b37a-32163f8cab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4907c4-9f11-4d9d-9ac8-d28d5454fb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51020575-6b5b-42d2-adfb-34f7c3735a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e68e98b-cd10-4e24-8a9c-39d902f08aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b83e5a1-bbd9-46ab-b998-35fd1fe9d95a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2629309-18ce-44ae-b4fa-293406ec3363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c409046-3c08-4d72-be94-3cc29bc4ad25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f685acc-aa90-40cc-b125-5ca20b86957a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962dd220-a929-44a4-9d03-61eaec287d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101ecf1-6e33-456a-a25e-4291ff066274",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7abaaf-17ff-48c1-a1ab-b526fa707f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678c06d1-c403-4ec5-a7f6-ea7777c39229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea66594-5cf9-480f-b7b4-d4ee1dd3d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd1f883-082a-4320-bb12-2a5f5c0d88d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef225975-6423-4968-8620-553d51e22b4a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb87423-6e2c-41b3-97e6-c38fd9714a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed4228f-5de5-459e-9168-11d8c6f34b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab6339-f100-4da9-abd6-a530f298c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80714d2-47b3-44ed-9550-521642bf8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784efe56-11f9-4515-86e5-5c5892bb1dd1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff294fe-a6f8-4ace-9fec-cb24537e4364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d94075-cefe-4a21-8dc2-e8d4d511ca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fcc596-2dc3-417e-91c9-3f3d6392f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "badf1785-76eb-48cb-bf41-d2d50788aac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eaed7c-8f72-487b-9476-4a4bff0900ff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d602b7d7-1fed-4afd-a026-8e2e9915a445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a04ed5-670b-4185-aaad-f4508571fa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89701bd7-1a17-49bd-b895-8d06cb41489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e22b90-a915-4d4b-9505-32cfc5e56bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1186874d-c1da-44e8-bad2-3b3a1941b3a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc6df6a-7d9e-4053-8bdd-661f31b5aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6c1107-7139-4c57-b30f-dda7d5545e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf76f00-ebd8-403e-95a4-1b40e8021fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcfd115-b2f9-493f-9155-50e7a5f2fb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a3d47-d477-40e0-b103-7e3207c5b526",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4eecd9-3e14-4a08-b568-4e1a631056b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb67c63-c235-497c-8edc-879ff35c80a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a05e5d8-171f-45bf-a9d2-d7dc71c0b31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4369ea4-fdd0-4d43-9156-8702bbff5208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe58dbc-1c38-4927-a7aa-43823a5cf5e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a18e54-5b81-41cb-869e-859e904b8591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f8df76-6424-40f3-b59a-c459a2f78791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17814028-f879-4ae7-b526-860384acfabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4453af-2eea-4812-a701-4be85b4b40bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5ec8aa-7298-4efa-a0a7-cdb5bc8f91ec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ed9f2d-bc52-4f19-be5f-145fcdbd3c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aae884f-2e54-43f5-90b8-e5aa2dcea77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0a166-baac-4d41-81de-d32b7c358a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cb82f4-f598-4ad3-ab84-1f9a200b1e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4146d4-efe4-4092-8e3b-6ed058472326",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cab6cbc-ae55-45e0-9af9-ec7d03d6d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6d47f2-356c-4006-97c1-21c3393d4f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd299040-b67f-4a7f-91b6-042685dbeb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4f6624-4427-4516-a601-a94137fda973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89f03c4-c025-4b01-9d8b-62383f99998d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597bb344-945c-4001-8e9f-b0964cc265c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5ca137-27cf-471f-9bfa-727e422d5fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5278f5-9aa6-42b1-9689-67f0ce154179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bda873-5dfb-4e6b-9f10-4afd4ef1438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77825ef7-abb1-4b2f-afce-795478169573",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784faec3-4554-4b89-b844-0344f60ba50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6497901-a0e2-4be2-a104-27cc2339df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05abd9e-66f2-4ed0-97f9-bb8c3df15a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "075e00e1-4036-4ad1-9bf2-781c2f3b0a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ee1204-fd3b-4d1c-b641-2286fa8685cf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba47bec3-0c15-493c-abb8-d7ebb307a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069346f0-6cc6-4372-8873-3d56b12368a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be1dc3b-cd06-45e9-9882-37214b78cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95ebf92-49ce-49e4-8480-088ad7b07aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7525de56-fb8f-47af-91b6-063cd870f06b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa120e00-c945-4e58-84d0-cab81763d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755a0bd4-2d0f-484e-aca1-3c29a5fc0c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fb89e6-7daa-4e0e-a355-5d5dd45b2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8bbaf5-6608-497a-b8a0-cb8d4164570f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96c85bd-bf40-4d15-92ba-5a6ce91fc751",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da94f4-e4fd-4c09-b60e-5b82cdad2b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ae7fb7-d320-480f-a720-9ede4c1bfb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cbd6a2-d36d-40ae-9f94-504d1719c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7d00ae-72e0-4d9c-bd5d-e0b2d516dc06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4475a750-bf2f-4aed-93bc-4de6225fbd5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf98d7cc-35ad-425e-b6c6-81163b747491",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890958bb-2e01-49d0-84cf-c35ef557fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "269dfd3e-646e-477b-b0e6-7d7bb8411fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f7b8ba-fc55-42ae-917d-75846eda5802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53e2a94a-7934-4160-ab1e-e92ce1e61542"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fe8c957-4cee-40ec-97b6-79db6923bcaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "515c91d9-9ab4-4342-9ffc-6e328ba60b8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30b0a93-ac56-43e9-b0c5-a57bf28fc9bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6920743-f8f7-4d4b-b11b-2820ad5ba1af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0954f5fa-8f69-4763-9674-a1dc62f43a42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89a9732c-7f49-4a48-896d-a02980c095de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8865391-4877-48c2-aaba-9ee8b347692a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85c0ae73-5a22-4876-93d8-431ff9330043"
            }
          }
        ]
      },
      {
        "id": "b1fbc349-5130-483b-b86b-aaf51dcba1b0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e3e58e02-183e-4adb-8463-763c60fc0899",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6728bdc4-a695-410e-bcf2-df6780320d9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac215d5f-b3e4-49c4-b938-1906e763ad69",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feb00c6-9b57-4e1b-816b-73547eadec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6028cd-15ca-4117-91b4-5afcc67bc3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a800e04b-c27b-42fd-908e-f46135efa57f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33e18fc-8d05-4de3-98aa-0c406651160b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8541256b-9b77-4ade-8aab-ebb1b4e24d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e52226-af5b-4547-a56d-a1a918c59ac4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e1efcd-5b14-4c79-9898-ede43dcac796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f91208-ab14-469f-b04a-ba2cfeeff8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a84f35c-9745-480a-b664-dc599b1ddccb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f465d4b-98a9-4138-b10f-f1987c225b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf1b4e8-20fd-4255-a51b-1bc6b1002e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94b4991-b128-4007-95aa-2a1124a7f026",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f909a5-ea8b-46f1-b0fe-304cb868a312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a2c078-cc41-44d3-9fe8-4cb7104a35f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274f405e-9546-4fa0-a709-d8351fe535a7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d70740e-a96d-4762-bddd-e8d0bab8d217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784e161e-ed76-4fe6-8295-f24ffa5e5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7ed89b-3ace-42c0-aea3-d9e819781c77",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20646c4-b2a7-498a-b152-c4e02e319217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca1d755-b5c4-4fc4-a7ed-70a5969432c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7dd236-6ac4-4601-ba95-3906fc82b106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43194cd-8ddc-464a-ac22-fe52c7385775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36929629-7324-44f7-a429-39deb91c1b87",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ed89c0-5ac0-4735-a939-2c002ed70d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e066b643-aba4-4469-beb9-9f3dded2246f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02577212-7c19-40c7-ab89-113aa583cf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb48e5a8-c9a8-4172-9584-97fd5efefbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345a3851-23a9-44af-a9fa-0254478ddc7d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cba48ee-59c7-47aa-b03e-843d36fe7ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d98884-7f81-4433-8a06-1b7abf5012b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073e786b-0161-488c-8dde-0395ddba309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a08f8e7-2205-4cf2-9c3e-dd436c6d0cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13824c6e-7dac-47b2-bfe2-526947e19e80",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fea166-d454-4c92-86ff-13eab29d6f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590f45e9-32b7-4ac9-a21f-dfb8bff22b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5743bc-579f-4f20-91b6-1b85ef5e84f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493b0d3d-3d34-4d38-bad5-6b16eee77059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222a72ba-dec5-4eec-97a9-0288afdf4f22",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf284f5e-7a2f-4885-b2d6-9fb2151f5171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e68845b-8ab7-45a9-8653-34bbb8ee4ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dd597b-82eb-49d7-8232-7c8d8d8c1894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bed91b-e824-49f1-bdee-796f1a218473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5bc9a-1479-4f42-82c3-fd48ddc22ab5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9279033a-0e50-43b7-bc67-08d32a3c5a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154aced-c71a-4262-8a39-fd1cd66770e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe78fbf-f145-48c9-9324-a2ee98c92337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be3b94c-0de4-442a-a5f1-9a0c7d9ccc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfdc3e6-51a0-4315-9f66-b9ec0d2c0c24",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3aa8ed-5eea-4828-8d0f-27aa3d447cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0670a0b-0e14-44bf-b4b1-7164d84d07b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac46eb-42bb-4f30-84e9-3e5b6793366b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba252e92-aa00-4134-929f-47d131201026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd482967-9292-4837-9865-20cc17e32b89",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054da04e-8588-4bf5-87f5-38593ac3fda9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab532fb0-0fc0-4908-a759-9148d5454eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78d737a-1736-403d-93e7-e5b05db231cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d0377b-ff86-4f63-a41a-9fc4035e9a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1276df1-ad95-49d1-bfcb-b43a286d26c4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd7b7d-e7b5-4167-a876-dd8e6eed350c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea0d3a9-0480-4a2e-8e74-adf62e25eb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04332e69-c44b-484f-8965-230b3e2af965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f243ed-5176-4178-83a8-ff1c7fcd9d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ee4155-e730-476c-98a3-2ed561047a28",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd531ac-6146-46b3-903a-958b2503eeec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8964cc5a-5040-49bb-bddf-48d90f2739ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e58334-13d8-466f-899d-946815cc8ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79360b2d-ca40-42e0-936a-f238811471df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a59e6-5125-4aba-a405-29a2db460666",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f841d598-df38-4478-a3c9-e87a7f52d27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f39599-aa80-44af-abf5-2ae12c71b0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971d1382-2757-4644-810f-092148a1e2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5260918-ddd7-4236-8d0c-51a225bf738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f32faf6-9a62-4ae0-9e57-fff43c19c4f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32db509-4ffc-4f6b-bc20-37f7c4dac740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e05eaa-3aa2-4804-9886-a86772fb8b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf11ca-ab16-45e0-be15-11ac022b4436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eb1767-cbff-4922-8a5a-856e1b34072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22607f32-8a20-4f95-9995-067d112dc5b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4b76e2-c645-47fb-bcba-bb9e54a8a134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e69fcf-a958-4049-96a4-974369d1855d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a842c-be79-4578-8576-779281e43aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e593205e-a14c-4398-ab97-967b34ca6e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e85f47a-8b80-422b-a02b-03bf4ab73242",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90576af4-b454-4c28-8ba8-cad5cbdd886e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681ed6d4-017a-4df2-89df-5d6c4b3a1679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc73f17-93e3-43a9-8daf-cbed14983aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bcf40e-dd34-4348-8ce2-8d5fb1c3cfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc52109f-180c-4a70-8885-88c5335aa2a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d6a160-6b68-4f45-b8d3-2332cecd30c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c739fb6b-719e-411b-b453-db61f8fcf183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068b7392-ad39-4b1f-ae41-d15a751e4a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6f9369-04cb-424e-b783-a6f0cf693124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648085f7-6ee6-4d6c-b0e1-7beb50c3675b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824119e-b234-4854-ba85-34bd84e4c488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08855e7d-14d4-45e1-bbef-9c9bbfb96da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a90f4-dabc-4b78-87c2-eabd90f7105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64038929-25f4-4716-8eb0-469a545effa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f9590c-b5e0-467b-82dd-e119ddfffbc2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eac60a5-cf85-4a08-94e1-c1cd10c0fa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edcfe22-e114-4176-afe4-3be2b090b34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a1ec96-b80f-40b2-8fff-e311a5b4c903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f568af0a-ef42-45be-8f73-7647b6df8088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6f8cf5-a877-432e-8213-1f61bf631ba1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652ef061-f563-4995-928f-449f3a6d8735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f02f8de-1f03-4db2-b39c-2edfbb27e785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc99da2-98c8-412d-affa-7f6350b9fba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef9c797-0c74-4c6e-bfc1-d0759ea6bb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0900ea71-d3f6-4d1d-a1cd-7e55476f7b68",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e27ca-4623-4365-8fc9-157e816b5364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb4da34-25b4-46b8-8b84-fafdfaeb0e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65c02b4-60f9-4700-89a4-cde552505b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4264e9c1-b0a0-4a4a-8f6e-0cdf5568457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f64ceb-820f-4c5b-8257-4cd34c52940d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebda8ed-7e06-4354-93fc-28bf0a8fb2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91005060-cff8-4833-865c-176641d1a516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a431f4bf-f3bd-4259-a5c5-dd9bd33bf7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94767509-d61c-495a-8c00-85f977f5fb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8786d5-beb7-485b-9ee5-e6e74cb0b99f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b34dfd-0a12-4fb4-885d-08134f513d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954c6a72-4a02-4fda-81e1-8b99ba70e710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a84d36-2814-46b5-b69d-9e5a7afb5638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f162623-42d6-4f90-9146-073109a0b447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa334c6-4b09-45d3-bca7-a8b09a30748a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079d10e-f0e7-4881-9d19-f9b0796c40ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631968a0-5c59-4e80-9072-c6eecf2a42cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea8fa2a-2835-47fa-a0dd-9b148bb5af55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e5730c-21f6-478f-8e31-254c515fc54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f362facb-900c-4738-9061-78e3b1733edf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f1a89e-9273-4ed1-a7cd-148dad9b4658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2a0189-0823-4504-8c7e-c1ae419dae75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda2da1-8d94-4af5-99c4-2cdf11cf16f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11cf470-00e4-45a9-80d6-5176a6f4c80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c4ab44-c853-44dc-87d2-858aa29524d7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40318b66-6951-42f6-a14e-69745d5d2a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba796d5-a321-42bd-9712-dc52f398993e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac0d87-7979-46b9-b3a8-344b38083671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9206f9b6-af48-432e-bd7f-0a3725dae1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce725b1-7cf0-4ca9-9c0e-2f519e875bd0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6338adcd-2f6b-4d68-8e72-dbcd6a684d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d584ec13-d606-4b4c-8f12-c68acd9160df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad8c1ce-26eb-4711-98fe-48af2aecf7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b5c2f8-cda3-47d4-8172-3e2c72934b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ca855-2cbf-4b47-a8d0-3dda108d858b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7692b1-b93c-4e4d-a64d-9468ff3f21d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697b6758-5576-4f89-b92d-be42894ebffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55d6c83-9971-40d1-a553-9b0c1afca8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc13942-8222-4c5e-9e32-b9642988c051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca6f0cf-d89c-4722-9a83-d827d949a8dd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75b6a1c-df20-4eff-96c4-07f31a9be2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd05bcd-899f-49c7-9350-873ac93396ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f035ecf-5818-4842-ada5-d8c2f2699727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b609be-601d-4766-8fb8-df572dbacecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6753dd0e-4ae1-477c-8cac-2f9a428db428",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8597a911-38a2-4e12-a81f-bbd7b64e266f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69013e8-fc7a-459c-b348-bb75596eac5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8620e54c-30f1-4072-b5b2-dac37111ef0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16814682-f0fd-4fd7-806f-a17a7ce5dac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f99fe38-1be8-4136-89d3-ebf9b4dd881c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60b8b3b-c42f-4e76-855f-08e91a28f063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9f4ea3-2036-412e-a566-7d5af747797d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2282d73f-9577-40cf-99de-aff7a92b55a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fe1684-bbc7-4d38-a9ef-2fcfcff6f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b887635a-c8f5-4908-816e-452661ea606e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1a933e-9d18-442c-bcc7-aa1d1ce81480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eabf11a-a547-44b0-8b0e-c5a7bfd1b410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe8989-79e0-4803-8ee6-f255e1732b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381745ad-c657-449b-af35-8b0c88e24636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e1d18a-9d1a-4cf8-b581-cd40c3643b7b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf26e10-30f4-4677-9f4e-569fa06ca263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ea79df-10c4-48fc-888d-77b0d752d1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbaf5bb-89a3-4e6b-977c-7d70d17b7cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d68c1c1-8de8-4a12-8ac3-af279487c53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb208223-ff83-48f4-b861-556c6c65d6d1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c33b46-7f12-4ed4-b33e-718e134cd496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f04382c-3c1f-447e-bf2e-ac6acb9c25a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f0110-6de8-4fc3-b84a-7bcaa7002f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fca3a1-44d1-496b-8020-e289c055f4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be41caa8-d901-4a8f-9322-994665412af5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e967f02-3031-46b3-983c-bd7d3fd81749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b009a78-ee53-422a-b355-31e08e0ab50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345eec0d-01a1-444c-a568-6587cb3c23e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef55ec2-9d40-402e-96be-ad3ed38216a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0c8c0d-d22f-4f07-871e-70c7790a1501",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f5d946-5924-475d-8e60-abc22983cc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6332c56-d6f7-46ef-9c3c-570519b89f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0605be-84a2-4a19-8054-078f1f49e3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ee80e0-260e-4d94-a61f-f30824bcbbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab39bc61-b08e-468e-b819-7365ebe56666",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361305a8-53ca-4c71-a330-d91a158fae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478da98b-bad6-4ad8-917f-f49da2efecf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a8f23-02f8-4547-a072-9bf709651950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a8763f-27bf-432c-81bf-e8e7daa978a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff60341-c6c4-4b34-bd4e-aa1bf5e728c3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42af68d8-ea5a-4840-aab6-dee8769ba833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a6c50f-b22d-48c5-815a-045d6a2646e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906dfc94-2146-4162-be4c-1536723d6056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53216f4c-aaa0-4b1a-8d7a-c8a0b66c5c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca1fc2c-088d-40a0-9a6c-73aee8874251",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766b00e-7afc-4211-9b38-815f08429da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df58f2a1-d1af-48a7-b20d-3c73fea298d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49627c30-6b75-4258-8676-9a9bb933efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa24a08-4ad2-437c-9baa-f56868cee510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741dc5ce-90f0-4598-9f64-2472027e4b83",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7575c8d-0982-42e6-bb6e-26ae32eaabdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3114ced9-eaaf-49cc-babc-02bf7c48a1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a6f65d-8fab-4920-afd8-4dee85a1f2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe4134e-c43f-4d50-8bc1-e2e8eaba935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17605041-a819-42c6-94d8-7956d90f00b4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c071d08-80e9-441a-8d1a-e79dd32a73ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa177f46-4439-4072-8d4c-e76e7372228d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542b1f2a-ec1d-4c9c-ba3c-8f6507aeeb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a8512f-c20b-46de-8f78-e464a0a41580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd88c22-4dd0-4f49-8e36-9c54363a4bfd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71620604-7c36-464c-8af7-04316af3b533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cadab9b-ccc6-436f-88cd-34abcb2e9a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99f0c3b-e30b-4005-881a-60d6e353e253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f152835-9c6a-496f-8cf8-b95b4c9ab807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5920359a-6d3f-4dc9-93bc-68b2cdfc4e66",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4431f987-2478-4429-a4b2-44b3d1263310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1964a2a-c704-4733-9bea-d474cca0cff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c10e96-2514-46bc-954d-f4836e5cb437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b35a9c-7abf-464d-8edd-854c8128f393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bb9655-4f1f-497a-8faf-c5a8507d7fc4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca2862-3ea5-4eaf-8134-887dc2af2d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcd7543-269d-4d73-8986-1059a63b6adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa3a39-8f57-4d0e-a16b-ade8e17ab2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a5dfd8-5f50-4b33-9f82-2e9b808371ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57225b8-ee00-4f76-b366-316494db1b0e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9730ecc8-a465-48c5-bd8d-f78a3afd2691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb89235-0da5-4165-989f-3bf160e61757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ee958-b8e2-4706-a5dd-f487441ce568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86233daa-ee4f-42d5-a23d-7b884b7eefcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4645e9b9-15ab-4938-aaee-2e768e33983d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347953e4-71df-4710-9cda-c324aab81365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040130a-8e91-4305-a521-8fd402a9f6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd3c40f-627c-4342-8ca4-c93338674c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea24647-fa09-4525-b84f-9a0d5887a40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1d16c1-d687-42fe-900e-230fbef7bfe0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f7820-68e2-472d-97a1-0c87f68ed88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5df6c88-3951-491a-95cf-c761ae4f3256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431a94f0-ccd0-4f4f-9d9d-41234d1604d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e45b592-6f22-4027-826c-563d7ad36442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94903f6a-78c6-44c6-bdd5-68da8650f7c8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91f3f89-4d89-45f0-9a97-255668586647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d890f95-86b9-4b27-a7ce-5070f66ddb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa19241c-9773-4c42-894b-70a7f5fae52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a1a6d9-82d3-4c35-885d-ab2fc9c56335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f18484-165e-482e-87fa-e8a77ca10152",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebddacfb-2dfd-4985-a2dc-ba2e9239af80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c569e63e-1732-4789-aa43-7421bdf51fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d116d5e-9e16-4201-9955-3209dcbf84b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c85f886-4bd1-411b-8aa0-efd7da06515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf57b03-d391-4f56-a9e7-4ce851d33f1e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3865655c-abf4-4e6a-af52-60a79f3712a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce388a1-823c-499c-b9d6-bf168f06c4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b096b88-a2d4-40b7-85d5-bae25140bfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd8053f-2938-4f08-9628-93eb92813b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be716606-e169-424e-98fc-654c75828d0f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395be7a5-ee91-47f6-96a7-5aa0858a0746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a496c40-e22b-4e3b-98da-172c224a1dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb2dcb7-6936-4a4a-8a6f-7792e147bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6986b1-802a-4512-bb94-1b8ab1d798f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10564eeb-6aa1-4c68-b679-5a1aefa305a3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c56a40-ca75-4306-b19c-c51f2e418795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f42978-c071-43d7-832c-24923dec858b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e82b3e6-4592-4986-b0f1-87dc83dd9b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50ac208-4143-4a0c-a343-3f98a9f28ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3a8b26-2e75-4eb8-ba38-6e0c4f2cea75",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb8cff-4366-402c-b9c7-d3c9c89b29e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf40d95-a4fd-4418-b661-54827726e2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388fbd4a-bdab-47c9-a627-d2dc5dee984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283b3e3b-a920-474d-a927-3a82ac7a41a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b8ed92-9f1d-4fae-9e62-401b97e8c0e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09353200-c4f7-4cd5-a721-a3b182a3c7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a527748-83b8-43b8-b6fe-699988a48a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4add1fc0-96da-4ea6-91f3-b1ac3c7bfe4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6368563-2534-4578-97f6-e8340b50e386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3295b456-37d0-411e-ac74-d71119718d01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a45e6-0e9c-4ffa-a217-b32dcfecec38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968a09a9-c3ea-47df-afa8-a22195343b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24a99ba-4bd7-42f8-af3c-cb37821bde95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2affeb-e46f-422d-9ff2-e8c234b1b987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a373329-f889-49ea-b5f2-876c3e325fc0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1565c78e-fc84-4a74-ab52-cb8b4ba4c83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf827190-0e83-4699-b9a4-7e08aaa9119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9eb731-f4ea-4870-8582-3c31ede5bd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3ec866-8b10-4c38-8603-d742538d83b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142bbdbb-1925-48e3-964a-b0980caec5ff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850f04cc-a1f8-43e2-8d55-c84f73b6f52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717de77b-3a84-4c13-b923-9e2f5b769547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efd04ba-6fd2-40a3-a0aa-de4849d51bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8e30f2-b22a-4e29-b364-714c380c02bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23036a-9b74-4f22-a02d-b187289a5cad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb8e73-2598-461a-a885-db272cf95954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efcd505-ee5f-47eb-8bb4-c5e98937a265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52aa48b-3ce9-4908-94e4-63ddf114a5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacf827a-0dfd-4942-9518-032f08b2a710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2b2e99-a511-42ac-8fe8-8cb7faf90d0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf4eaf0-60f9-438a-b9c6-3b8cb249f62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911a9553-972b-4a9b-8c8f-2648c102d1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c98d4-1665-465f-a035-8268d0266632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f2f1d8-74c0-442d-a773-1a7760231574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561ada2a-f6fa-4450-8118-9293d9eb1829",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22b8b21-be6b-4327-a59b-a359c97cd065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8cd673-2f04-40bf-8f4c-9c9509fc8041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5263c263-d780-4a75-a50b-eeb812d0f353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d1483a-bc65-4ac5-9f7b-2078cfe7fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457f17d3-1715-4ba5-b68f-94be8c92b8bf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56da14f7-4728-4037-a6a2-b19b005c4339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436d01bb-9972-4ab0-b35b-f90a548b311f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359aa7e5-296d-4b43-8b90-3a89e46273de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657b8805-dc11-4fcb-aa14-1c660ce54ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf68fe3-fc93-41d0-b2ba-855a16c8f704",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dc28b5-48ea-42a2-b962-bf22fb49b2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3f3bfb-0e18-4e97-ba37-1c4bb6f7bb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fd52cc-3e2e-4b46-8165-39c6ae9926ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a3922f-6240-4e0c-aea6-a5fa3441e202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25956d2e-1c80-42cf-a569-b191a3dcefe4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37614a6-d5da-4223-ba17-d8ea09879107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7baef8a3-8f25-413f-9d1d-45675d32a7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da5526-b5a8-42d8-9aa6-444f35ba6c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854d63cc-e1f0-4ae0-b3ff-20aac34bf933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0d54c0-1c7e-40a7-b0fb-b25af7581bfb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0c7077-68fa-46a3-baeb-18ce538a852d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f91455a-29f6-4a30-86b2-982aafa22de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c244901-95c5-4242-8c96-461893facf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50099c3a-e5ee-440b-9588-cf21762ca0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a2f466-56b6-4a6a-beb1-34fbc839ebe6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef145e7-058b-493a-b485-2ce88920fd85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4975bc-85f0-401c-bd13-28009489fe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de0111a-700e-489f-9056-79d7f62a2d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f60e3e5-c268-438e-9ef3-ceb5f50f3dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2704163b-44f9-4ad3-8319-c16d9aaca2a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7ef244-0edc-42de-ae3a-8b39314aafec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc666fe-c537-49c9-b76b-744c2cc13d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e432374-41f2-45ee-9e78-3f6fb7095762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3171fff-59d8-491b-a62b-f2533189edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9305f3-74eb-4030-9988-ac157451ba91",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3956dad2-d405-4308-a784-0e1f228825f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4dd2a0-9b7e-4edb-8eae-4dee7807bf41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863432ca-f71e-455a-abab-5b0e460740fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa568b3-cc39-4fbc-86fb-591582b461d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e8937d-49f1-44de-8a35-02a50b367bb3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4090d54f-705d-412a-96f2-26b234f1e09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fb4283-13d9-4c3c-b54b-dd67b5a11a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de37a2aa-54b9-4c22-89c9-5b38d6425a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab69fd-a937-4d39-a8c4-416c93014ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477b50da-f081-420a-bc1f-e329e8305589",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea37e80-ee01-43e7-b616-79cf639b217f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63559d1a-953c-4feb-91da-0ae63d8fe36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da4e4e-6ce3-4c36-a3d7-942d7df3a45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fde6e3-a4c6-4ef7-9353-2476bc9de0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eceeaf-7a20-4c67-9252-79db35358a91",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b5c751-6fbd-42b7-911c-d38961273ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25942cbc-392f-4f21-a270-b7002d507b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36833866-3023-460a-ab0f-4036301c70e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eddc97-5a44-4eb2-9b2f-8ae9c061d672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84244e41-9f01-4616-b1ab-f71fe4c55bef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f341b1b-e488-4291-845f-19ed33a3c07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7228cd2-7c7e-4d30-8c84-b9207f433f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343a0627-2a57-4753-8a23-7274d4a9baed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba13955-73d2-4cd6-858c-9ee561dba25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af22c323-a4ae-4dc0-8796-ced9522df8a3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d98c54-791e-47e2-87d3-4856152bfbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469d37ce-5e9a-4048-a841-8a2f7133518c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f22462-3250-4792-9bd6-7ce55128634b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b20ceb-3ed2-4287-a36a-8582309d959c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe55f452-95fe-4771-a55c-f4a08421fab8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b671a041-cdbf-4a87-af18-0a0f61192eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650b0df8-ca33-499a-8f95-32673b8d4ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947cbdd8-aad6-4ebe-bb9b-55269325a558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dc23ac-2565-403e-83ed-e448e617c589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b5febe-adac-4dc3-8079-8548bbc37d85",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af544f-7ddb-4539-88c9-9c0439055f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a20d9d7-2e85-4eca-825b-5cde51431d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e4ea65-d053-45bc-bcee-477f995f98c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6eb7d01-cca5-4c9e-9b8d-09d86ab071cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f124d81-7873-475c-8768-c08d6cd6b520",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b895f72-3d31-4bce-97cc-4fa574ffdd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a4029c-c27a-4225-914a-c264dba449aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87deec97-c8c3-4863-97d7-61e8a1a825a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d49845-dcca-4936-b76a-2289fdd08719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b91d258-1c0e-42b9-94bb-c28c92fb4803",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74451dfa-86d7-41e3-8cd6-afbe8200c032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1692227f-e956-46d9-bdf7-75faff92dda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62013d62-84d1-4df4-8772-74e11cd99553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2654ea3e-304f-4773-be39-633413c2df99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6b0fdb-28b8-4289-b31e-0d84a7f212c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0b9b4e-55b3-4afb-95fd-02d2cada5b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177d6b10-33b5-4e4b-819a-7fa304cbc433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3bdd38-f7f5-4b67-8509-e5f9482dce45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5414344f-101e-4552-a4e2-0991054cf66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4299748e-f154-47ab-8b7a-94b4649aa199",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7663f6c-f7ac-4baf-a2ca-ce50fba16294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf97b92-c986-4bb9-b26b-2e92a16f70c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2108f018-f32c-45e2-abcc-8720ea625e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684daa31-dc10-4c4c-a4e8-9929d5322db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2143ec7e-0831-42a6-99eb-7b796ae16ffa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bbaf73-43d3-4e48-ad88-be53ce2f303a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097c6245-675e-4821-89e8-c2fd539dcd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8058e18f-c952-452a-876b-0176d036101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a8be20-11b1-4a5e-9663-64c0feb9a4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fe3222-50a5-454d-ba1e-72457322a227",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef926b8-5a2c-44bd-9047-227befe5baf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74994705-00b9-4415-bbb8-029b7356efaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656e89ec-5172-4658-a6cd-fb64de0d88b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe207d2c-16b0-437a-8371-81c2c1f7a3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e4c47c-e247-4cf9-94d4-212da58bb72d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531d742e-7939-4688-a9e3-75205ce0cece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c2c6a2-1a26-4345-a0ca-af305ab25a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3406975-f40b-4e78-b78a-99f04ec4755e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b141a524-ae0a-4977-b553-b129ce575a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e306c840-e96e-4020-a988-92cc70df153a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9e041e-e6b8-4f5b-ae69-0ae9b3de79ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3f5c52-54e3-4398-8f62-de2bdf2e8115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb7f976-e1fb-4e85-8613-41e5f3127abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0863416d-6e8a-4ed7-bc3b-3d0adcff0515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed37556-1de3-4379-ac18-325b9c32af42",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16bbbfc-7ab4-4248-aefd-c7f3ffd94977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49623923-3b6b-4990-83b2-831802e6e76c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f517a993-b18a-4d38-bee4-b6307ecd046d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8325a448-2f43-4be2-af6b-72420bc110fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45027be-f044-4e50-9a96-13eef3e6de1f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fdd86a-06f5-4feb-b91f-6988a4181a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0956e439-6f41-471c-b03f-48da6751bd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0517afb-1103-4e2e-a310-cc993bb17e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83546c8-1acc-454c-a7cb-3a82f33b90a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae6f29-af2f-405a-8799-742c03d68e89",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec562b5-c1d0-4c7e-a3ef-f5b17256cd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9790662b-763d-413c-a863-935a7c39559a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfbf43b-f8bb-4a62-8c91-5c169719636e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84e7a19-2ab2-44e9-a2a7-97049fe39e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5841c8-c8bb-4d4d-8a68-b2ee5a9cd872",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2783dc-9f4d-4f0f-a714-e2998670ef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8402ee-a09e-4b11-b9ac-ebc84eb2a751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcd6e14-3bd0-4774-8b39-7d783c6c64e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05ef825-a560-455b-b605-4f9c0a8a1bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d341e6e-6b89-40c1-b7c3-0646885293b4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ff55a-4e83-4b76-bb6d-d4daf2dc2d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369f635a-5aee-46f8-b9b1-7f75abf5b1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a8fbb0-b755-4ed2-b01c-c0d265fc90fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33044daa-154d-4203-b151-3241b4855bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ccc985-097a-44ab-9b61-a390b1bcbdfa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fc498c-e3c2-49b4-b5be-9ca3abaa1a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dba99dd-5531-4a2b-a7cb-173fd5f6c55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88b514-9acf-4661-8caa-4b607dc657ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaf53aa-6f2a-4961-a0fc-539b534f4c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b01e81a-b157-4603-86cc-22c181485138",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a6631c-85c6-46d4-9d06-dd5d30d35629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdbb480-3e56-4e4c-9d6c-c28274f54e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2230e0-bf55-4319-ace2-68374a4faa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f3f324-fdf5-46ca-99c3-8f8930505a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10150f4-5220-4e51-b333-91f7c1fa12cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c4f1f2-ec50-437c-bdac-4dce2d5aac38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b09e77-c968-4eff-a8b4-9dfa96889622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38505557-0db9-4e60-9e0f-43f18618277e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555e5412-eb37-4278-9baa-b4a379c29562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b25301-36d0-4d70-b3bc-e420db720bf6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d29eab-fcd1-4c08-a929-3ab302941701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457d150c-c60f-4e44-9ad0-713eeb8349a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a396af25-b25e-4b8b-bcb5-d5c8679e1d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d31680a-0451-467e-81fb-df7e1a7a22ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aab652-d9f0-4f73-aaf6-cc1f79b1cab6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6716ff36-4517-4ec8-9242-22d030d3992a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c79d81a-a2e8-4428-a4d3-09c2ba2d04b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a336c2de-2ce7-4f8c-bca5-ad4fecbc986f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adc4c98-d285-471f-ac09-2522f0d34485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f517f1b1-7ca8-4e3b-b00f-e0dc739f3422",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510ad3fb-0529-40ec-8843-901d7ffa229e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f6373a-df52-4c1b-988c-587e8f15af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1144f31b-5035-4637-a8fd-78faad3da7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff45700-1ef0-4858-b951-1412f56427ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3d877b2-3900-47b0-ae97-0f7af7ca0570",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fbda6c4-3452-44c9-a096-6912f24079cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38cc48e7-62fa-4cb8-b82a-1543e290a7f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "855a12bf-4c4f-4aa3-bc42-b9bcd5c75841"
                    }
                  }
                ]
              },
              {
                "id": "30a9dade-f968-4999-b0b2-8d5cf40e988e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27cb1ebc-2778-4f05-823b-a834f9facddb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01a4049-d495-4f22-8782-f0ecc2705309",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "127fec1a-25a9-48fc-abe6-9772551b81c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553736e6-4a7b-4585-a437-3c0030ad1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28db51d8-cf8d-45f2-a70a-d0f3a9e6fd67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "912af53e-09c9-4689-8b70-4c2f64029408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ba9bb83-aad5-4c43-82f2-40c7627bc1b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ded850-6084-437d-ae7d-b5b9d8600fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d00a34f7-037e-4e56-a580-bb8aa96273c6"
                    }
                  }
                ]
              },
              {
                "id": "f1380dcf-6874-43c3-bf70-f9754c3c987c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "521316dd-1e50-412d-b584-fa0dbe7098c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354ace97-782e-4a99-aceb-d252326fe12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d085b111-e03b-491e-a2e0-f192db89873a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1ca6e0-3654-4f0f-b429-70a0b3b8d3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78944430-4ab5-4153-9688-8bdb4d6ea052"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23939077-6d58-43d3-80f8-02c7c76a54ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d36f38a-eb36-410d-8c2e-13002e9e8969",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75abc564-c971-466e-847e-270c098e02a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb2c225b-5e62-44af-bba3-fb1b404da3fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "658cb3cd-c909-4ddd-a1e5-55fa3fb46032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e87f84d3-d347-4c5a-a165-726e956edf8a"
                    }
                  }
                ]
              },
              {
                "id": "ba75129c-bfec-41ee-b4cc-5ef6dcd105c0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62aeb238-7498-4953-993d-8412cb750ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f61e8bb3-26a2-4c46-ae85-9ab0a3c96fb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c3a843e-1044-467c-9069-4b7b4cfc43c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee49816-7dea-4723-83d3-48f819ddce1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f761c57-e6ff-48cf-8b7a-910b106dcf35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4a292808-af5a-4bf9-939a-588977cefe79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29ae24c5-1f80-4495-9ea2-af99ea83e722",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f93e184-2f2c-4faa-9956-1f2fda9d196a"
            }
          }
        ]
      },
      {
        "id": "7a0e819d-6a18-4954-ae7b-a51371f0abbc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a3e61c67-96fd-4a42-968d-ac397f3720e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f121953a-507b-47b8-9b2f-db1d593923b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb0aa8b0-9bc4-4f3d-9113-b0f216fdde0d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133b1bc-0108-4be1-a1b5-ed40dfcacd84",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "45b855a2-8c75-4702-a78c-b42e874bec86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2404e95-138e-4dd0-b591-78bc9068f733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4a21416-05cc-49a3-a53e-d7ec8d9e47c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a7b0637-0b2e-4e3d-835d-074b81b657ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a250758-6c31-42f0-a2f0-c7dc88149521"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d693f51f-1b6b-4693-9189-0d9fd84594f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65907a53-a992-4de7-8fa9-f1fd11795cfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b3c8cd4-b9b6-4036-92f8-3d9664759dd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "193237b5-16f2-4dba-ab84-57d50cb9476c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55a9c6da-98ec-4d50-94dd-18ee65674511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d9be33-10d1-431d-83e8-5e86ed310fb6"
            }
          }
        ]
      },
      {
        "id": "61bc604d-f559-4045-8441-7fbdf9c96939",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c36a098e-1a87-4401-9126-7d5df061e260",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61d6c9a3-f9f2-4424-aa3d-fe6ea8dbf619",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c28e883f-130f-4b24-af98-6528aaf61f97",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4afb11-a2c5-4735-b8c1-21b880ac1248",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "524bab4f-6056-4058-bddb-e91dc608479f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d4b0e7-bc9e-496d-a568-a4177666df77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07ab06d4-f5c4-48ca-8d46-a8f3a24f48b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d06486d-50ab-4237-85c8-64a7f80a4923",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64cfb691-178d-4bc8-826e-77397cbbe33a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed3d0597-f605-48fe-bd6e-255b91ae33f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6d9e3a9-2794-4911-8915-24932ca207ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a2a72c-4c87-46f9-b9a7-6a15eeb67a59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26eea591-ff6d-4fe1-bb44-14a51e48970a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "385bee28-8cd7-4525-9610-c76c57f381f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14be6420-1ee9-4411-9707-033c78d31a23"
            }
          }
        ]
      },
      {
        "id": "35f14943-9cf0-4814-b09a-dc5459274558",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9d431dc8-480a-4c86-b3ad-1b668fafd4d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16f3ea11-a53f-472c-b601-3b823a86d360",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e1ebb3d-6e66-4505-8111-d249b1556079",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0dd5c5-7f47-45bc-8113-cb916bd9657e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f63aeab-73c4-45e5-aa4e-f0ef36dd7ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae6c9a-4d17-4217-bc35-a772f0c87c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d11f516-555e-4eba-9edb-16667729237b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ce326d2-e84e-4bad-a3b5-4315ab32b642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45878139-3343-47db-96a0-a73c83b9712d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2271e2d3-3b4b-4a19-b07d-7babc9e14683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d499b2a9-6203-4927-9b39-475961ff8a68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b56e36f-072e-43be-b833-5cd47784b5fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78aa3c0f-0f6c-4ce3-99fc-5b0c8c740724"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db56a66f-2550-4a7c-b94a-3fc34e5d4c80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1098a348-a5f4-42b3-9767-722ef86c0bc9"
            }
          }
        ]
      },
      {
        "id": "fb88ac5a-3eca-4b76-a26a-4e9314671b4e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d582dd9e-ef1c-4cc9-8738-a7c1e45f73ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a5e337d-594f-42e0-9b1c-43857240aa19",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e1e9c1a5-7bd3-425d-ab9d-d0bf3c3e2aae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6455bb5e-be32-4d3a-af2d-de8dbf466532",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cbfa820-28e7-477a-aa4c-8ceb95e2fde5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 105.48421052631579,
      "responseMin": 9,
      "responseMax": 10062,
      "responseSd": 633.0684815896863,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701822981809,
      "completed": 1701823020907
    },
    "executions": [
      {
        "id": "370287fb-a851-4063-9a64-378af61b99b8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16fe1d42-b94f-4aa0-a08c-53b15cdb3862",
          "httpRequestId": "7b04582f-784e-47c3-9085-4d87072d3e9b"
        },
        "item": {
          "id": "370287fb-a851-4063-9a64-378af61b99b8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7ded11f0-dd80-415f-9897-81b214c1c37f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "65732e5c-fe77-4a5e-8c5b-54d4869e17c6",
        "cursor": {
          "ref": "b0f87d53-0376-45fb-a667-44c341ae4c14",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "97beb8c8-97af-47ec-97bd-eeb0c23d3c53"
        },
        "item": {
          "id": "65732e5c-fe77-4a5e-8c5b-54d4869e17c6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4a126eb7-1288-401d-8914-5abc3eaab484",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "ea41326e-317f-4ad1-93c4-55084ccc685a",
        "cursor": {
          "ref": "348a932c-2ccd-4eec-a223-0e9802504a05",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57beb972-ba21-4588-82ce-fb6273403dd0"
        },
        "item": {
          "id": "ea41326e-317f-4ad1-93c4-55084ccc685a",
          "name": "did_json"
        },
        "response": {
          "id": "787b6f89-56aa-4a94-9ad7-1d5bbc42c5ea",
          "status": "OK",
          "code": 200,
          "responseTime": 424,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be15280e-e63f-4359-92b9-2fa374e9f491",
        "cursor": {
          "ref": "dface6e1-9c0a-4f1a-87bb-4fe1da32052f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0c12d51c-7723-4687-bc44-f245fa92bdc0"
        },
        "item": {
          "id": "be15280e-e63f-4359-92b9-2fa374e9f491",
          "name": "did:invalid"
        },
        "response": {
          "id": "db21ced2-67db-4019-9f3b-5a94d147d1fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1020,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be15280e-e63f-4359-92b9-2fa374e9f491",
        "cursor": {
          "ref": "dface6e1-9c0a-4f1a-87bb-4fe1da32052f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0c12d51c-7723-4687-bc44-f245fa92bdc0"
        },
        "item": {
          "id": "be15280e-e63f-4359-92b9-2fa374e9f491",
          "name": "did:invalid"
        },
        "response": {
          "id": "db21ced2-67db-4019-9f3b-5a94d147d1fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1020,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff65f08e-d727-49e0-8c2b-2eddf28a91d6",
        "cursor": {
          "ref": "4a5798ba-ebd9-49c5-b779-09de986cd45f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "18d8e73e-a609-40db-a66f-bb104fcf7db6"
        },
        "item": {
          "id": "ff65f08e-d727-49e0-8c2b-2eddf28a91d6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8327945e-a4fb-4f3e-9ba3-f2105b20a6fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1571d28-1da5-420b-bdf5-bb63ccb6620c",
        "cursor": {
          "ref": "e4d56a62-cc01-4bd8-a0ec-d148e8dcb2cf",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4011960e-da8c-4012-b6a5-136cea1b5bf3"
        },
        "item": {
          "id": "e1571d28-1da5-420b-bdf5-bb63ccb6620c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f599af8d-d33f-444c-86c9-ab895f7e0b67",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff513a50-d10b-491f-94c3-9d1a8a74bff2",
        "cursor": {
          "ref": "62ca55a5-ea4f-4fa3-8ff9-9f5cc78c202d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "27ce085a-31fd-4238-a6b3-4b42379a7bea"
        },
        "item": {
          "id": "ff513a50-d10b-491f-94c3-9d1a8a74bff2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "92d89be7-28b5-4ccd-883f-745302e4ee63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a77bf5-4336-4c56-86c3-2e1b0b34e9d3",
        "cursor": {
          "ref": "4ba0d969-a3c6-4ded-a770-9f06ff58c5df",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c7b748b-100a-4f5a-88a9-2f6734ca8665"
        },
        "item": {
          "id": "53a77bf5-4336-4c56-86c3-2e1b0b34e9d3",
          "name": "identifiers"
        },
        "response": {
          "id": "e0e615b0-b61b-4957-ba48-0654213b3dce",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1a152d-136e-4414-999b-11a1d79d073f",
        "cursor": {
          "ref": "cae6e350-de70-42d4-be34-f0c13b373fbb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0777b701-b9c6-489e-a507-1a1390115e67"
        },
        "item": {
          "id": "da1a152d-136e-4414-999b-11a1d79d073f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9d9e7608-9d84-4eb6-9624-2c88c7ab6bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c909cb-4eb4-4dae-8078-a29de9ba3155",
        "cursor": {
          "ref": "27f65182-0433-4cfb-adf9-4ef17c56f75e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3caebbc0-2bdf-420c-bc13-9175f271991d"
        },
        "item": {
          "id": "a0c909cb-4eb4-4dae-8078-a29de9ba3155",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aef96900-e6f6-4860-bb01-9c61037eecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ea87b-68a9-405f-85ac-cd2b5affcea9",
        "cursor": {
          "ref": "54819ac9-54e2-4e9f-b84f-b3970590f8ed",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c6548105-da0c-4c02-8575-6fc7ade28072"
        },
        "item": {
          "id": "680ea87b-68a9-405f-85ac-cd2b5affcea9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b6b7fd42-d3a7-460c-927c-65ca4121d90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500ca6a-078e-4307-8b87-57b416c8624d",
        "cursor": {
          "ref": "9847f852-0e04-4d77-84f1-bdef19064e9e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3ffa94b1-bfc6-464a-b1de-3430b14da617"
        },
        "item": {
          "id": "7500ca6a-078e-4307-8b87-57b416c8624d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4d48c76e-ae87-4c68-a0ac-e86770df0671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b405f2d-84fc-4901-8f98-7ca67d484bed",
        "cursor": {
          "ref": "62350b9b-8be6-4dc5-8752-946e07509130",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a81653b9-abc4-44c3-bc70-e74ae211f59f"
        },
        "item": {
          "id": "7b405f2d-84fc-4901-8f98-7ca67d484bed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9183a265-e849-416e-8a86-7834264ab28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e10139-825b-42f0-958f-a359c7a1140e",
        "cursor": {
          "ref": "2a5d6819-af1f-4ec8-b360-c33532dd13b7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "158c83e0-283f-4a47-8744-6a73dd5c6365"
        },
        "item": {
          "id": "91e10139-825b-42f0-958f-a359c7a1140e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7297ff83-8515-4ffa-879d-cf361cef6287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1a823d-2eea-4a9d-81bc-16c77ffa48c3",
        "cursor": {
          "ref": "299e0e4b-ce39-46b5-b55f-1fa49d4c9bfd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51fc7130-2c05-43b8-94a6-756daa619655"
        },
        "item": {
          "id": "8d1a823d-2eea-4a9d-81bc-16c77ffa48c3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf7fce1b-67c5-4db8-8b66-0d4e13512175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baad7d55-eae9-4f29-b99d-4614d90e80fa",
        "cursor": {
          "ref": "e806ac4c-5f51-4b86-afc6-bffa00f702dd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "691c814b-978e-467e-ba63-4ea4c3ef17a4"
        },
        "item": {
          "id": "baad7d55-eae9-4f29-b99d-4614d90e80fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c510564c-8d9f-405a-98ba-f43d715bf5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48823982-3e7d-4de9-aa7f-075992bd9bb6",
        "cursor": {
          "ref": "ee6990c8-c739-4bc1-a27d-5226eb1c707f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "71ef4edc-298e-4125-9e6a-1af34b174f27"
        },
        "item": {
          "id": "48823982-3e7d-4de9-aa7f-075992bd9bb6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e8fbfc08-f89e-4e09-a786-742349994e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ee8a2-b157-4567-88f6-8050624ebaf0",
        "cursor": {
          "ref": "a08843e2-bccb-4c6d-bca2-1983e5cf8645",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d0c4b62-8993-4392-b151-13524ecc18f0"
        },
        "item": {
          "id": "434ee8a2-b157-4567-88f6-8050624ebaf0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e18541ee-dc47-4708-9451-fb696653dd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306ba153-a6e6-4473-a919-9e7cfbfd2353",
        "cursor": {
          "ref": "8a261929-a4a6-472c-b434-cdec4a487cbd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6d250ff7-2e2a-441a-98dc-3e7c358295d9"
        },
        "item": {
          "id": "306ba153-a6e6-4473-a919-9e7cfbfd2353",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14dc3203-938b-4fdb-a650-2ca5302271c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea87846-de26-49c9-8913-9f92be482643",
        "cursor": {
          "ref": "1142d230-140d-40b3-b666-156a763ba5ee",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e1d4863f-bae7-4233-8c11-29b6f3ca2067"
        },
        "item": {
          "id": "eea87846-de26-49c9-8913-9f92be482643",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fad22f08-fdc5-4d84-b06e-6770f1550d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa252546-405d-45cb-a702-5880f92bb6a4",
        "cursor": {
          "ref": "f395d71f-e5ec-4372-af03-87e64d9b88a4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4d97ef5-5df8-46f7-8403-06430069d61e"
        },
        "item": {
          "id": "fa252546-405d-45cb-a702-5880f92bb6a4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6efab6d2-7f02-4380-88b4-41d15d012900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951e097e-cf83-479d-beca-9c345f67193d",
        "cursor": {
          "ref": "c57201d6-6a04-466b-9ba4-538cee8bc919",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e3bdefa-c78c-4f70-bfbc-9c89c30b6e1e"
        },
        "item": {
          "id": "951e097e-cf83-479d-beca-9c345f67193d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d05398d8-1dc7-491e-989f-f8865b256131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f70c51-c8b5-4bb0-89cb-34e6edc7ebb7",
        "cursor": {
          "ref": "578c6c72-05a8-4ea6-86fa-97c4c4015d51",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1b93e106-4c5e-4106-9179-63b2a7d84d43"
        },
        "item": {
          "id": "98f70c51-c8b5-4bb0-89cb-34e6edc7ebb7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "42a3ad18-ac94-4d5d-9d1d-a59840f7b481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1c7132-ebee-4219-a9a5-121d8274048d",
        "cursor": {
          "ref": "b9fc32cb-8750-4ddb-b228-c8bdf0259155",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bf92fbc9-8124-4486-9c58-235f62e08459"
        },
        "item": {
          "id": "df1c7132-ebee-4219-a9a5-121d8274048d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e7b32e2c-4b08-4c51-bca9-fda8e3124528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ed7608-727b-4b8c-86c8-ee1e6030ea57",
        "cursor": {
          "ref": "401aef9f-b039-473f-87ba-34e21e6fe5c0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "42e7b5c6-d285-48c9-a013-fc87e112cbfd"
        },
        "item": {
          "id": "70ed7608-727b-4b8c-86c8-ee1e6030ea57",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a9bac72d-dd8c-404a-a266-158c229532a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a68e4a8-801d-428a-93bd-bedd3688bf7a",
        "cursor": {
          "ref": "b41f96b6-d861-47f7-afff-4110ad0f6459",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "77ea931d-da69-4be0-b164-6a3238bc0dc2"
        },
        "item": {
          "id": "2a68e4a8-801d-428a-93bd-bedd3688bf7a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "54ab9440-53e5-4d73-bf94-23acbbd43176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8598e4de-ae90-402e-944a-15ae37065276",
        "cursor": {
          "ref": "caeef958-40e2-4abb-9cbe-5c6bef8c8c43",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7e366ee6-5edb-4758-a910-8b47e835786b"
        },
        "item": {
          "id": "8598e4de-ae90-402e-944a-15ae37065276",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d0ac86a5-b44d-43c6-83f5-3e4514c72f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463e0018-5b34-4129-ab9e-1b2bf94f92c3",
        "cursor": {
          "ref": "d976a699-0a3c-4f73-a719-5da108dd4770",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f4d9eec5-f0e4-4a46-ac38-495e6c49d6b1"
        },
        "item": {
          "id": "463e0018-5b34-4129-ab9e-1b2bf94f92c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "183a8cf6-4190-47b3-87a7-87fc4838d51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d7ad48-b6d7-4d9c-8dd6-b8b8352f4696",
        "cursor": {
          "ref": "99a51da1-d5d7-4bfe-a216-28a0df3ba039",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f682db19-e05b-455e-9bf3-9015197dccff"
        },
        "item": {
          "id": "29d7ad48-b6d7-4d9c-8dd6-b8b8352f4696",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "36ffc684-20d8-44a0-8c74-d5099684cdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d45154e-5ca3-40bf-85df-6a521f60ea33",
        "cursor": {
          "ref": "504f199c-5611-4c06-b77a-3101708f0da9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ba92866-6a09-4e72-9d48-a31ff6a1c43d"
        },
        "item": {
          "id": "3d45154e-5ca3-40bf-85df-6a521f60ea33",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "be3aa48e-ebf9-42f8-802b-e91413814813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3d00f-ed0f-4c16-9b9c-c84c11260cf0",
        "cursor": {
          "ref": "ac06f94e-55c8-4c21-b1ff-f040eeab073d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "edaa5a9b-90df-4f7d-880c-537aa7f39f34"
        },
        "item": {
          "id": "99f3d00f-ed0f-4c16-9b9c-c84c11260cf0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "866485ca-02b2-416f-a03c-60932bd0f3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887ca5e1-2717-4066-ba9a-d8f0426db6e0",
        "cursor": {
          "ref": "9c67c9f5-62aa-4bc1-bba1-cbdcfbc6ee03",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8a700697-3887-4c6a-9922-fa7b5a9e7749"
        },
        "item": {
          "id": "887ca5e1-2717-4066-ba9a-d8f0426db6e0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bfee380c-bb45-4410-a0e0-5f37fbb959f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e439f661-0da2-4f6f-ba81-dd72e9f38146",
        "cursor": {
          "ref": "6bfcbd5c-edf9-4599-9de4-18373fb1649b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "095f1f32-392a-4fda-ba1e-65e90058ac68"
        },
        "item": {
          "id": "e439f661-0da2-4f6f-ba81-dd72e9f38146",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f9182b9a-23bc-4d5c-93c1-faf653315adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cd8044-898f-4724-bf32-0e7c8397768d",
        "cursor": {
          "ref": "1117b093-384a-4645-a498-8406bfafb3fa",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee76677a-68ec-4525-b0ab-28ea104207dd"
        },
        "item": {
          "id": "c4cd8044-898f-4724-bf32-0e7c8397768d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7bd9f03f-9fde-499d-8616-f694d03b8757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06597cba-4b84-4bec-89b7-2b0bc11dbf6b",
        "cursor": {
          "ref": "b889ad3d-ffb8-4210-95ec-e9846031c2e0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "27d4d28d-db82-45c4-bb2b-fb89ee79d2f0"
        },
        "item": {
          "id": "06597cba-4b84-4bec-89b7-2b0bc11dbf6b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6205134-e41b-41c4-87dd-7ee51c146356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a3ac32-7b02-423c-990b-97fe02c77683",
        "cursor": {
          "ref": "3694f6ba-76f7-4f1f-bfaf-623ed10de50c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6080d8d0-bf71-43da-9be2-ec595d702aa1"
        },
        "item": {
          "id": "51a3ac32-7b02-423c-990b-97fe02c77683",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "089813c3-6e96-4bda-844b-1219bebe2d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc64981-dc9e-4df7-a5f0-4f5bf3bd7182",
        "cursor": {
          "ref": "2132508e-63b4-47a2-baea-b36660754dc3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ab08ce9-851e-4a34-88c6-19ffc55d5ae4"
        },
        "item": {
          "id": "8fc64981-dc9e-4df7-a5f0-4f5bf3bd7182",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "872735ad-0b3a-4aa3-a0a3-aba4e0e25f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596cdce7-6278-41c9-87c3-fc24568d54dd",
        "cursor": {
          "ref": "14e7b6c2-1f24-45b1-be0a-8997afe9c5f1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b03988ec-9a29-4614-9ee7-1a32fd863a18"
        },
        "item": {
          "id": "596cdce7-6278-41c9-87c3-fc24568d54dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f78309e-0fd9-4a9c-aa2b-7fbf427e34f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8245ff3a-7c7e-459b-8a08-52651ebbd518",
        "cursor": {
          "ref": "cfc28f14-994b-46ff-a800-03a3e05e7953",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "654ffcb1-2793-4c9a-8836-da3f7a5354bc"
        },
        "item": {
          "id": "8245ff3a-7c7e-459b-8a08-52651ebbd518",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8469c6ba-4477-42f2-ba62-f65d7764647e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b604c4c-2e3a-4e55-993d-6716c8e4fffe",
        "cursor": {
          "ref": "c0aeca2f-2b29-4536-86ee-1ae33ca7b678",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "61ed976c-c7b8-4fd1-b4fe-7ef0b8ad4f21"
        },
        "item": {
          "id": "2b604c4c-2e3a-4e55-993d-6716c8e4fffe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fd4de8ee-2715-4e8b-b5c2-4b44f013b1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbce547-af99-48fa-9d92-3c9384cd4445",
        "cursor": {
          "ref": "fa99f585-0b99-4479-8958-61271495ef25",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "faf2d4a0-dee7-40b1-87ed-bcf98562006d"
        },
        "item": {
          "id": "8cbce547-af99-48fa-9d92-3c9384cd4445",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5d6915fd-e9a4-4895-94d4-cb287c1a7dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a32bb1-be5d-450e-a311-62f87c7a861a",
        "cursor": {
          "ref": "525a7a3d-1cf9-4884-8cff-285facb8dc58",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f077057c-2610-48d0-9d73-aa0cf04246a9"
        },
        "item": {
          "id": "d4a32bb1-be5d-450e-a311-62f87c7a861a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "36e57aa6-2e17-483a-bb29-e0b4d4e354c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6461d0ea-9443-467e-a865-cdccf66045a6",
        "cursor": {
          "ref": "17dd3322-2b31-4025-b533-4fe6a7b56705",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "44c93919-bab0-4fe3-8a4e-b8b47cac89f0"
        },
        "item": {
          "id": "6461d0ea-9443-467e-a865-cdccf66045a6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "97cc74b4-8a3f-4e67-b274-80a33d902e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7845bd-ef8f-4c9c-a310-0682f0de57a4",
        "cursor": {
          "ref": "d12041cf-9abd-4fd2-9545-4b69d14ccb0b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ee338c9-3489-41e2-a422-bebe012fe851"
        },
        "item": {
          "id": "1a7845bd-ef8f-4c9c-a310-0682f0de57a4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "baf39f4b-ae1b-49a4-8e9e-38a66c3034bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c11a72-6587-45c6-bfbf-99e5760934bc",
        "cursor": {
          "ref": "98a2d2fb-383c-46fd-9a60-cdc4c97aa521",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b9d0ce71-742b-4102-9d24-933f90d894e1"
        },
        "item": {
          "id": "d5c11a72-6587-45c6-bfbf-99e5760934bc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0f853f55-e62f-411c-aa5f-a27c0bfe5b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f78ef26-a308-4a68-b266-00f6c17a6d85",
        "cursor": {
          "ref": "5a9cc0da-5cd8-4863-99bf-c3a09a8ca303",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72c1abf3-8b5b-467a-9b67-f7d74106aac0"
        },
        "item": {
          "id": "7f78ef26-a308-4a68-b266-00f6c17a6d85",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5c9bb696-ad45-47e6-a575-2b721de51e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c6305-fdbb-446f-a0c7-813d09148fea",
        "cursor": {
          "ref": "cb9519cc-5d8f-47c5-8cad-3f146cb73f71",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "64abf3cf-d7a9-4ada-a417-7a36ea1241d4"
        },
        "item": {
          "id": "e11c6305-fdbb-446f-a0c7-813d09148fea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4bb3da6a-a46c-4e3c-aaed-66ee10fa3922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813ad0f1-48db-4e9e-96c3-1e3833a193b4",
        "cursor": {
          "ref": "a9c0d035-f5b4-4c10-b4f7-189aab0874cc",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52122b36-3076-4855-bedc-c33aa67f76cb"
        },
        "item": {
          "id": "813ad0f1-48db-4e9e-96c3-1e3833a193b4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e17981e9-05c4-4033-b262-4f77862e68a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a22a14e-61f4-4b6a-9302-a38289793598",
        "cursor": {
          "ref": "d2287eb9-0b5f-4776-9c7e-15f38ede8e2a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8c86e568-26d2-4ba8-890c-417cfcffe55d"
        },
        "item": {
          "id": "8a22a14e-61f4-4b6a-9302-a38289793598",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c12553c7-134e-4ccc-9887-6d0b1821dfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a4caa-709e-405d-b3f7-eec851e57629",
        "cursor": {
          "ref": "6407739f-b8be-4ad8-8c25-c5ed7cc99770",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aa467d47-29a0-4f69-aec8-2c963c35fcd0"
        },
        "item": {
          "id": "af3a4caa-709e-405d-b3f7-eec851e57629",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4b6cc5d6-b782-4d36-87d0-719f2e76cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588cd85c-4daf-46ba-bdea-164d4170f547",
        "cursor": {
          "ref": "18fc8035-5417-42f0-ae5c-2765ca56a132",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7448f2a0-46c8-4fef-8872-f780335aa6a4"
        },
        "item": {
          "id": "588cd85c-4daf-46ba-bdea-164d4170f547",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "60a8c6b6-f7e0-4ada-8326-9dac3cae58cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fcd92e-f747-457f-a80f-f3a372121baa",
        "cursor": {
          "ref": "8f9c9ba4-4368-4f4a-b2c0-54904af04b64",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "de586cba-1213-40dd-a99a-a41739ba2209"
        },
        "item": {
          "id": "19fcd92e-f747-457f-a80f-f3a372121baa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1661a5c1-633e-4956-adfd-6a5b85a7c0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41b2ee8-c2e6-4c30-9973-e6749497ac4d",
        "cursor": {
          "ref": "522c4b12-7d46-427a-b8d4-48c010d7043d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a79b0f8e-456f-40b2-8f9e-dec3ca4b4dcc"
        },
        "item": {
          "id": "e41b2ee8-c2e6-4c30-9973-e6749497ac4d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b7566ad1-88d7-4a01-af6c-3a68e3f5bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e604a-0cb0-49f2-9938-9040bcee7e9b",
        "cursor": {
          "ref": "84974e9b-2fef-49c2-802c-b041821fd984",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "586a697e-b162-492c-8faa-68523c1c619f"
        },
        "item": {
          "id": "5b1e604a-0cb0-49f2-9938-9040bcee7e9b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e486ec82-c25f-4a03-ad4b-feadc520159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683322ca-f271-4d9b-9dd1-ba996c4f61cc",
        "cursor": {
          "ref": "9d38d274-a8af-4da4-9691-148167ffa34f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eded8510-3465-49f9-9c17-c8b5663e4c08"
        },
        "item": {
          "id": "683322ca-f271-4d9b-9dd1-ba996c4f61cc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3907998b-3612-4672-8db7-d4678ca23531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b318855b-b102-46ba-944d-2db7a7346719",
        "cursor": {
          "ref": "555bda9e-0238-485b-9b77-1d71a9ad3ecc",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff9de7f5-ee46-411a-b637-f3e74db2c410"
        },
        "item": {
          "id": "b318855b-b102-46ba-944d-2db7a7346719",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7647d120-3316-4133-946b-f140898a099b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133e8559-a2f1-4b8a-9c26-fcc85cd35771",
        "cursor": {
          "ref": "923f4b77-2ded-4966-93cf-372d09e34ec9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a04b3152-25d9-47b6-96d9-81342b8766a8"
        },
        "item": {
          "id": "133e8559-a2f1-4b8a-9c26-fcc85cd35771",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9a8f5597-b0f0-45d7-a322-ed632c077383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e21c1d-7281-41d6-b60c-183d339ec7be",
        "cursor": {
          "ref": "8bc91f98-ceee-42ec-85d3-92285dde69ee",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ee3d2fb8-48e0-4920-83e5-76db53e2f8fc"
        },
        "item": {
          "id": "e9e21c1d-7281-41d6-b60c-183d339ec7be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "547b805d-640e-4cb9-8004-fa7002588541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8cfe5f-29fd-4b33-a49b-b3eece693f8c",
        "cursor": {
          "ref": "a3cad909-cec4-4c17-9eb9-3717da530684",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8159d95b-c0b1-47c6-8548-6df738adda0c"
        },
        "item": {
          "id": "ef8cfe5f-29fd-4b33-a49b-b3eece693f8c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a01a1562-21ba-4322-92a4-1a22504588db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2943c-1eda-45d5-9abd-bf03988dfa37",
        "cursor": {
          "ref": "c29706df-132d-4ba3-b0dd-6392d7910b78",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "64cef8ba-4d92-4c0a-ac96-c2da4b8db0bd"
        },
        "item": {
          "id": "4ef2943c-1eda-45d5-9abd-bf03988dfa37",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "563de313-de48-44d4-8f7f-23842f1ef2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c3a08c-15fa-487f-ace3-c957dc68e2b8",
        "cursor": {
          "ref": "bb569ca1-bd7c-4161-ad63-afe4cee68997",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46b7e431-5160-45fa-9475-4e51245f7e6e"
        },
        "item": {
          "id": "c0c3a08c-15fa-487f-ace3-c957dc68e2b8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "98b75c60-3418-49be-a310-489c29bbb7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ea2ce8-f5a8-490f-8e7d-caf0181a0cb6",
        "cursor": {
          "ref": "dba9e820-0344-4854-9138-c2b3b5e21468",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "55df9b98-53c9-47cb-9688-aa008aa7d8b7"
        },
        "item": {
          "id": "d6ea2ce8-f5a8-490f-8e7d-caf0181a0cb6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7711ea90-c3ff-49e6-9a51-751f39f01195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685cf25e-0605-40aa-87f4-c6b65579b0d7",
        "cursor": {
          "ref": "e993be55-3d26-431b-b954-f45ccf20ae5b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cec14183-9650-436d-ac38-60d005ede286"
        },
        "item": {
          "id": "685cf25e-0605-40aa-87f4-c6b65579b0d7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "54d174b5-7437-4aaa-b6c6-11717c102f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a44f25-9e13-4827-849d-e0071d2cdfb0",
        "cursor": {
          "ref": "da26c51a-dd0f-4703-ab1b-41ffdd01d96a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6bf0b60b-0bd8-4278-afa2-2dd992dd016d"
        },
        "item": {
          "id": "18a44f25-9e13-4827-849d-e0071d2cdfb0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3a578178-b501-4762-bd49-e909e75dabf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4779f6c-1b90-4bdc-9273-a24595f5e265",
        "cursor": {
          "ref": "b425ec3a-728d-4394-bdaa-37588ec2d3d6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be96b2aa-99b3-489a-9973-8f248bf6e40c"
        },
        "item": {
          "id": "d4779f6c-1b90-4bdc-9273-a24595f5e265",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6ed6fca7-5677-4801-8006-181d5b73f74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5d5c0-a12f-4646-bdbb-8ad9add79c44",
        "cursor": {
          "ref": "bbe191d3-20c4-47a2-8b78-fd73754d298b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b7a87ebc-d249-4308-b54b-3f6334c17dba"
        },
        "item": {
          "id": "c2f5d5c0-a12f-4646-bdbb-8ad9add79c44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1095864a-7219-485a-afb4-c6c25c9f8640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdcfba0-cd2a-4889-bb70-49b158d36a70",
        "cursor": {
          "ref": "9550f2e8-2356-4779-9026-db2f7b607e54",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ccb88ccd-828f-4610-ab1b-8ed833f365d3"
        },
        "item": {
          "id": "7cdcfba0-cd2a-4889-bb70-49b158d36a70",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e840d7da-2bac-4914-8896-fd331ecc7ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32324b68-76b3-4811-98fb-58a76a8e2e96",
        "cursor": {
          "ref": "8f716400-71e0-4dae-b0c8-7b62c6cb516e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f47df0a-a08d-4666-8d83-e238b0bae1e7"
        },
        "item": {
          "id": "32324b68-76b3-4811-98fb-58a76a8e2e96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b7023a5b-19f3-47e6-b65c-c1eb4fe5f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b108120-4789-439a-a49f-15016f881427",
        "cursor": {
          "ref": "081abe45-2f37-469c-a915-520a24465923",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f05bcfa7-4dcd-488c-823b-f45c10c955a0"
        },
        "item": {
          "id": "0b108120-4789-439a-a49f-15016f881427",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ce3027ae-dd5a-4a51-9980-e2718c4b80ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62187ea5-c2c0-43b3-a4ae-9f56082d792e",
        "cursor": {
          "ref": "db999e4a-1c91-46d7-8ea6-2786b840c54a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "aafe4bb7-6f10-4dce-b1bb-e1dc3dd8e5e8"
        },
        "item": {
          "id": "62187ea5-c2c0-43b3-a4ae-9f56082d792e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1565bd94-2b87-4356-b611-4fff50951294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ecf86-fffd-4f0a-b35a-ea9658db3486",
        "cursor": {
          "ref": "8e9f06fa-5f7a-48d8-8456-573ce52c3fe7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a6d16fb-e219-41f8-8907-e299c6b92e8c"
        },
        "item": {
          "id": "446ecf86-fffd-4f0a-b35a-ea9658db3486",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4255861c-c08e-4f66-ab9f-dc6dd602a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85204ecd-77eb-48aa-9226-1f0921647e3d",
        "cursor": {
          "ref": "100abcd4-6e97-4c9e-b6d7-ad58ee3fecde",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6495c0d2-3a85-45bc-8bbf-ae40c952f3d6"
        },
        "item": {
          "id": "85204ecd-77eb-48aa-9226-1f0921647e3d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a3bb9807-d204-48ae-89ff-1db9e650271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e720a5ea-b4f7-44c2-bd8e-f41526fe3975",
        "cursor": {
          "ref": "ccaf942b-6267-463b-8c5d-1c42cfc7e9fa",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d0eba81a-837c-4593-8122-fe4144b64d57"
        },
        "item": {
          "id": "e720a5ea-b4f7-44c2-bd8e-f41526fe3975",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3cc40d8b-5c32-4574-916d-dbe005518697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4d879d-571f-4898-9cb8-f4c484f2db59",
        "cursor": {
          "ref": "be3ac69f-9729-4521-91a5-f526b75ac06c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d2b7c00e-c33f-446d-86cd-95c2eba46536"
        },
        "item": {
          "id": "7e4d879d-571f-4898-9cb8-f4c484f2db59",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ff15972-37aa-4428-9d34-a9950863930c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cd27bf-4f81-411a-8902-78a3551994a9",
        "cursor": {
          "ref": "fad5117f-bf7d-4f71-83c7-586682f676aa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f22b5949-2605-4999-9cc4-488facd8cb78"
        },
        "item": {
          "id": "04cd27bf-4f81-411a-8902-78a3551994a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7949779b-5e8e-4622-94ff-d5f5a91bac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce96a937-6f06-4482-ac1d-aec8c7599c0e",
        "cursor": {
          "ref": "8214533c-bde9-4ff7-8d8a-d3c222bd2d15",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4a3f65b8-0d1d-4ab5-8ba0-a62f4549ee3c"
        },
        "item": {
          "id": "ce96a937-6f06-4482-ac1d-aec8c7599c0e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5d971316-5e05-465e-afcf-b1001abc07c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdbf9ad-c916-4361-8499-d6351e562805",
        "cursor": {
          "ref": "31d08c5f-5f1b-44b1-97ae-c250467837a5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "911f1789-b017-4068-896c-0fef629ee2a7"
        },
        "item": {
          "id": "0fdbf9ad-c916-4361-8499-d6351e562805",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b1c1316-2256-42cc-92b5-43e297ccff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f64302-b3a4-4796-8421-1b2ee6c651fa",
        "cursor": {
          "ref": "22ab3b3e-e477-42ba-ab00-7677fee17716",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c799b16f-807e-4fee-8b75-360c6e4c860a"
        },
        "item": {
          "id": "89f64302-b3a4-4796-8421-1b2ee6c651fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c64ad935-3b2d-4e9c-8448-d4ec0fd59c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa19dc3-520d-4c54-acff-524557b72451",
        "cursor": {
          "ref": "243b157e-7d3a-4cbd-889f-861e1334b703",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "25edb0f5-3634-4ec2-a37e-ec575890b7cc"
        },
        "item": {
          "id": "aaa19dc3-520d-4c54-acff-524557b72451",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c528e4b6-249f-4e9c-8f0e-7b47b6c3d75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080666b0-419a-4e8f-9725-1ba74b8239aa",
        "cursor": {
          "ref": "5ed56c0b-27c1-425d-ba7b-02f5ae3f3253",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2dbd2f70-ad11-4f97-af72-7857e78b6cb9"
        },
        "item": {
          "id": "080666b0-419a-4e8f-9725-1ba74b8239aa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9e8d1467-c86d-4992-9aab-a43fd4c9ad5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a82afd-f13c-4155-a1f6-22cda0f12249",
        "cursor": {
          "ref": "e3a33634-eae2-4963-b167-c8f07aab4c19",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d56d51c2-8c61-4588-9390-d488ed3036ff"
        },
        "item": {
          "id": "d7a82afd-f13c-4155-a1f6-22cda0f12249",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "413a8047-df29-4ba3-944c-ba5db6097557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2931b150-d336-458e-aaa6-987a8258f283",
        "cursor": {
          "ref": "d8fb8b87-a3bb-4d2b-94f9-31bee1754b0a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3b57c3a-a047-4cb2-80e8-b311172ddff3"
        },
        "item": {
          "id": "2931b150-d336-458e-aaa6-987a8258f283",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b6fde114-b85b-4f3c-bc8b-b521f8775d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1ee48-8f0b-4ec7-af2f-ecbddc010209",
        "cursor": {
          "ref": "5eb1d0e9-4f73-490e-a68b-67ded67f4f69",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c09c353c-8063-486c-a04f-0e110afefadc"
        },
        "item": {
          "id": "e7c1ee48-8f0b-4ec7-af2f-ecbddc010209",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "985abae2-3849-44e3-ada7-f8bc5b7061eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3727b080-943c-4ad9-922c-17387afc1898",
        "cursor": {
          "ref": "fa59d904-b0d5-43e1-b33c-b111b04467a5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2d61453c-6173-4b97-8113-80da801dce46"
        },
        "item": {
          "id": "3727b080-943c-4ad9-922c-17387afc1898",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "003892b7-2ed8-4cac-80ad-8a028244fc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab013842-8dd9-4054-ae8a-0c41a8f7bd03",
        "cursor": {
          "ref": "9712a66b-c4e7-418c-a6d8-3d8b50a726dd",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "85e71910-9969-4931-ba1d-13e14a4ecb4a"
        },
        "item": {
          "id": "ab013842-8dd9-4054-ae8a-0c41a8f7bd03",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e2d6d514-c83b-46f1-90c2-4e422e0a3982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a253180b-129a-4a45-939d-0a56e1241864",
        "cursor": {
          "ref": "ef114f95-7dcc-4c79-8ac8-ca893a59d5fe",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c17e341-750c-4270-aae8-dfbc32b97c9e"
        },
        "item": {
          "id": "a253180b-129a-4a45-939d-0a56e1241864",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "83c088a2-f879-4b00-9e0e-b09f905a2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94282f6e-48ac-480e-9570-8b2ae9bbffab",
        "cursor": {
          "ref": "3783389b-9802-4fae-a97c-941dd15d5491",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e8c72a02-3af0-4841-8c06-0a3c3a9d3d4d"
        },
        "item": {
          "id": "94282f6e-48ac-480e-9570-8b2ae9bbffab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "891e60b6-5c90-4284-8668-0304a83a910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13e7aa6-7de3-4c55-8b3d-25d367fbc502",
        "cursor": {
          "ref": "f1f00f5d-0d7c-4201-bb24-4bf1ae46a9c2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "58661fa6-5ec1-4f47-829a-314505b4afd6"
        },
        "item": {
          "id": "c13e7aa6-7de3-4c55-8b3d-25d367fbc502",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "18779453-2979-462b-a70d-cf9a48bd5ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e685267c-9f40-4536-a08b-33f9d95b78e7",
        "cursor": {
          "ref": "997edcde-0a51-4d36-bc6d-0b514232c060",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "60748505-d093-4205-86c8-3b01f830612e"
        },
        "item": {
          "id": "e685267c-9f40-4536-a08b-33f9d95b78e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e048395-c47e-40cf-b28a-a4e8d578f084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706ca16-7d8a-465d-9451-e18fb4b573b6",
        "cursor": {
          "ref": "3230619b-3cb5-43e9-a40b-d2f65d9cbd89",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5a57c2bb-9538-4d2d-9391-442633dda2a4"
        },
        "item": {
          "id": "f706ca16-7d8a-465d-9451-e18fb4b573b6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "68c6e33c-9d1c-4492-bc07-7f3e779ce4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e87d72-b6fb-4781-83bf-aed32eef52b1",
        "cursor": {
          "ref": "5fa70eba-5b43-4e0f-a73a-e4c2d915e0dc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2215c636-55e5-451c-ae11-258a9af9aa87"
        },
        "item": {
          "id": "29e87d72-b6fb-4781-83bf-aed32eef52b1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7eeb4910-78f6-4b1c-9112-0293a865bedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b302da24-a6a2-4f62-8037-6ff2c006cd9f",
        "cursor": {
          "ref": "c62ccdbe-a2d1-4e08-b23c-e534ec3a92f3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "15346066-7704-4934-9cbb-1e35ddc8eb80"
        },
        "item": {
          "id": "b302da24-a6a2-4f62-8037-6ff2c006cd9f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "39c9ab82-0ae8-48ab-ae0c-36c1a646945a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7f0b02-23b8-4c6d-ba11-be29eee76553",
        "cursor": {
          "ref": "35e285c1-9d06-48d1-8650-e76a24892f2a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dd1706d1-1861-4257-a89f-25e7392bbf89"
        },
        "item": {
          "id": "3f7f0b02-23b8-4c6d-ba11-be29eee76553",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1e9c820b-a2bc-4241-905a-0602210aa5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fc0617-2b00-4f70-be32-1dfa97ac6e85",
        "cursor": {
          "ref": "4e338f13-d2e1-4c70-b210-760dc81c29dd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "be96642d-26c5-4ee7-a6e1-4d05b90e8efb"
        },
        "item": {
          "id": "75fc0617-2b00-4f70-be32-1dfa97ac6e85",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7abada4d-a43d-4e9c-83cd-d08002cb3719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2641c1-b988-4ed5-a1c4-2ee57e129a7a",
        "cursor": {
          "ref": "b2d4995b-4222-4946-a9d1-c78604cf479a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c24d5d98-8a87-44b7-a678-151680578606"
        },
        "item": {
          "id": "0c2641c1-b988-4ed5-a1c4-2ee57e129a7a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9c68886d-f600-461c-a4c9-6eff2d7cb844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50163b55-f69c-4816-b512-07f5c8c4564c",
        "cursor": {
          "ref": "60e102f2-0593-452f-a7c0-221c06272b2e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79844b96-6f5c-481f-8519-1b49138f89d9"
        },
        "item": {
          "id": "50163b55-f69c-4816-b512-07f5c8c4564c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "812fec0b-3ae9-45fd-ace8-5c43dd641de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413adda0-fb17-4ebd-a8d1-537caad910ba",
        "cursor": {
          "ref": "80f0c304-5d2b-4168-851c-60d9f88d09b7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "de6e7e4f-b9e2-4f2b-b71b-1e1286314963"
        },
        "item": {
          "id": "413adda0-fb17-4ebd-a8d1-537caad910ba",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a19d76c4-65a9-4106-a13f-53b96331037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ab2d64-0ab8-49a1-9ef7-5fa4dc5c8add",
        "cursor": {
          "ref": "8cf5b94a-9556-4182-92f7-5805f52f06a7",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84dc6d99-f8e7-4d17-bfb4-a05ba6a9349c"
        },
        "item": {
          "id": "96ab2d64-0ab8-49a1-9ef7-5fa4dc5c8add",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1cd2fe9f-f431-4574-9ff0-ac652c9d8c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c9475-9b7b-43b4-8c02-0fbf000d11d8",
        "cursor": {
          "ref": "c68dca48-c42d-46a6-bc79-0ec0cdd67345",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ce71dd21-ad0f-4259-a100-a93cf5790509"
        },
        "item": {
          "id": "2b0c9475-9b7b-43b4-8c02-0fbf000d11d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "143d2cee-3186-4944-b0d7-e9831a43c50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586a1d1-d5d0-49b0-be8c-cc0726dad1f7",
        "cursor": {
          "ref": "ef9d3116-fdde-416b-aaf7-92e9a4456c43",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d1e8e577-2271-4637-9dbc-0a56c0a0aa9e"
        },
        "item": {
          "id": "9586a1d1-d5d0-49b0-be8c-cc0726dad1f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b79ac5c-dbff-478e-8d0b-b4eae88c5760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d932307-24e9-4d26-826a-0a4b14d11d96",
        "cursor": {
          "ref": "7e9a64d5-dab1-4f10-ab21-f84a3b1a4abf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "181993f1-4cb9-4486-8a55-5cdc45874bb9"
        },
        "item": {
          "id": "0d932307-24e9-4d26-826a-0a4b14d11d96",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a158c57a-fd1f-40aa-8ce0-1b1f4fc1ad9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7802bd83-f41a-446d-84de-6a847fbcfc55",
        "cursor": {
          "ref": "ef0b4589-d848-45f8-b018-2c39128f945c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f3d30ddd-8151-44c2-a7ea-4d67ec04da67"
        },
        "item": {
          "id": "7802bd83-f41a-446d-84de-6a847fbcfc55",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a1cff99a-e4b8-4bac-8ee3-9d222b84159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9ec66f67-4f4c-4882-b27e-3c2622ff8566",
        "cursor": {
          "ref": "a3873c4b-4756-4ceb-97e3-f8d255511f7e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95146f75-d259-4c22-8202-1c3b3312f0b4"
        },
        "item": {
          "id": "9ec66f67-4f4c-4882-b27e-3c2622ff8566",
          "name": "credentials_issue"
        },
        "response": {
          "id": "34ca376b-2e3e-42ef-abe6-3e81898b17f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "af5632ba-32ec-41b9-956d-835d44437802",
        "cursor": {
          "ref": "774781fd-5327-4802-aae1-4ab1981a7a31",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5eb4abf7-9bd5-4b69-abc3-ad968988c4f0"
        },
        "item": {
          "id": "af5632ba-32ec-41b9-956d-835d44437802",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fdbfafa3-421c-44b2-b8e0-2ece894a6a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "68e4a573-263d-41a3-b7b5-aa9e925db1de",
        "cursor": {
          "ref": "5ef4811e-ad76-4e3d-b149-69345e532318",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "070bbf9a-331c-41bd-a309-fa66525aad85"
        },
        "item": {
          "id": "68e4a573-263d-41a3-b7b5-aa9e925db1de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea36c4c3-5bcd-48fe-94e4-108ecbb1587c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "60549116-998e-4153-b53b-0238e6b9a65f",
        "cursor": {
          "ref": "245b347a-7261-4ff0-9923-e3ee62745475",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85cc6ae2-2415-40eb-9265-837776a94239"
        },
        "item": {
          "id": "60549116-998e-4153-b53b-0238e6b9a65f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26f93793-4867-4bf3-8f07-44a5686bddf2",
          "status": "Created",
          "code": 201,
          "responseTime": 10062,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9406ed40-9913-4197-b960-8c92ac7b4809",
        "cursor": {
          "ref": "22fc8c50-0f40-4d55-adeb-5f63923beeef",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9289eef3-acbc-47f6-9ad7-a60e97525873"
        },
        "item": {
          "id": "9406ed40-9913-4197-b960-8c92ac7b4809",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6bdb2ec6-03d6-42c9-b758-c423387f9263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6a93954d-bffb-470a-b68a-535426aad1b0",
        "cursor": {
          "ref": "f24e3249-c77f-47e8-adf7-d2edb49b6011",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "436f86cb-612d-4187-b21d-60faca9e9bc0"
        },
        "item": {
          "id": "6a93954d-bffb-470a-b68a-535426aad1b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a92b589d-a67d-4912-90db-86921ff85aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "48785bac-7c99-4090-8428-14beafcc54f5",
        "cursor": {
          "ref": "a0892976-1b6e-481e-9689-53a5c8f9ace6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e1f10a2-1ee1-4f8b-b36c-2ad204f85da8"
        },
        "item": {
          "id": "48785bac-7c99-4090-8428-14beafcc54f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ae1e6160-6469-4c8c-9acb-5c8e21f80045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6cc1fe-8e4b-4df5-bda9-c1574008534f",
        "cursor": {
          "ref": "133d2b7f-5a3d-4c83-8e19-4bcc263f410e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "54bcf67c-d293-4da6-86de-284b1cc166bd"
        },
        "item": {
          "id": "4f6cc1fe-8e4b-4df5-bda9-c1574008534f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "378a7b27-1dd8-4a4f-b3d2-f6c55242af98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213ee242-ff15-44c4-a1e3-760e3598b0b4",
        "cursor": {
          "ref": "df480a3e-aaee-477b-bbea-bcf3a33d3293",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48614c37-2eca-45d3-b524-03b77ad66359"
        },
        "item": {
          "id": "213ee242-ff15-44c4-a1e3-760e3598b0b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d3b7da5f-1697-4e96-a08c-b79eadc232f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a08edf5-58d3-4e92-a4a4-3a6b25f19813",
        "cursor": {
          "ref": "ed094f92-81ca-4f45-8e98-416141b1605a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "085b0b27-4436-4375-982c-06e98ad8ee5b"
        },
        "item": {
          "id": "7a08edf5-58d3-4e92-a4a4-3a6b25f19813",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2745f08-0c66-48b2-bf4b-945d6a9502fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f1f84-c009-412f-8c89-823af78b6d43",
        "cursor": {
          "ref": "a29168f9-9fa5-48e5-9ff7-4e18c11e1ee7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0d9d9d24-268a-49e6-a9b8-20ef7ddef6b8"
        },
        "item": {
          "id": "f96f1f84-c009-412f-8c89-823af78b6d43",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3bb76a54-0104-4582-9659-715bcd6571ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3de150-5c71-412c-9a46-ebf8bdf56679",
        "cursor": {
          "ref": "808c04fe-da7e-4625-8e64-2b7ca28fd0a3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "544ffc5d-1f3b-4e19-9785-59c0446b45d2"
        },
        "item": {
          "id": "fe3de150-5c71-412c-9a46-ebf8bdf56679",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93a8c103-4a98-4598-9b69-ca9eb0e9723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f7b7d9-86b0-49d2-a2cf-a17f68deb93a",
        "cursor": {
          "ref": "cb3cfeea-39a6-4a40-99f9-05bdf61c8405",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ddb8f063-a046-4336-8930-304853eef366"
        },
        "item": {
          "id": "e0f7b7d9-86b0-49d2-a2cf-a17f68deb93a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "23a8743d-ff1c-4e0c-b3e2-c940ea063adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72915268-7fd3-45f0-b2ae-8e790e6bad7e",
        "cursor": {
          "ref": "e6474453-2e6d-44f8-936e-d24e4e2e89ac",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e90aaedc-b597-48a1-9f12-770f5944e822"
        },
        "item": {
          "id": "72915268-7fd3-45f0-b2ae-8e790e6bad7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60275132-e9e2-48e3-87d5-8429ae984d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f769aed0-c6d6-4287-9cfa-c8b17895f5fc",
        "cursor": {
          "ref": "e63e81d2-dfb7-4999-9a90-7d138a63b5df",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "03eb1afd-8af7-486a-b083-108b5d1d86ad"
        },
        "item": {
          "id": "f769aed0-c6d6-4287-9cfa-c8b17895f5fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40bc7079-ce25-4e4c-b786-52f75c3faca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bf12c7-fd92-4e92-baf4-57d8940a5576",
        "cursor": {
          "ref": "bd8117fa-37af-4615-81e7-4bbe47d5cd2c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "02fa7ba0-f3eb-4e3d-8905-5e4b45a1085a"
        },
        "item": {
          "id": "67bf12c7-fd92-4e92-baf4-57d8940a5576",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d4443068-61c8-4578-aadb-740d82f879db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd435de1-c0fe-41a1-90a7-3976e9d77c0d",
        "cursor": {
          "ref": "ca831415-fe4b-4f3f-8050-f3ea3cf342df",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1ef6be2e-1dc7-445b-8c7f-fd068668c4a2"
        },
        "item": {
          "id": "fd435de1-c0fe-41a1-90a7-3976e9d77c0d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8260c499-ce14-4138-a0b0-5eb69ae1cf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622fc0f7-ee5e-41c0-88d9-0cbb927d8cdc",
        "cursor": {
          "ref": "5886f5c7-c811-47e4-b357-c8ce518c851d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2d8cddc7-a0c8-4e7b-9de5-e0b5dbee4ee5"
        },
        "item": {
          "id": "622fc0f7-ee5e-41c0-88d9-0cbb927d8cdc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "643a69bb-c9e7-4d05-b074-b804b03ccd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c3d160-5899-4a83-a631-615ee2d92276",
        "cursor": {
          "ref": "1a6531a4-f2f0-46bc-b101-50e5fd6ca98c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e22bf539-f6c2-4b46-b969-12484a723de7"
        },
        "item": {
          "id": "67c3d160-5899-4a83-a631-615ee2d92276",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2888abf7-2860-45ed-ba5c-158cf2238494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84921547-6733-4cd3-9963-98cbd80f80b7",
        "cursor": {
          "ref": "59a0f234-4f40-4dee-912a-07d10d42b364",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9ecf7131-3f0f-4010-b7ea-5b0f56512cc0"
        },
        "item": {
          "id": "84921547-6733-4cd3-9963-98cbd80f80b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce1dd7d8-1a25-4d9f-ba9e-2ca7f56500de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2e4b8-3066-49c6-bd6a-90976eaad4af",
        "cursor": {
          "ref": "404f7584-63b1-4a81-b5d0-2317835edd06",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8f1ca84-f3b5-4623-adfc-042f3be0427d"
        },
        "item": {
          "id": "12e2e4b8-3066-49c6-bd6a-90976eaad4af",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "edbd7bab-c883-4da7-b149-71fc92bd283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b434a65-29e4-40a6-8e4d-8f602907d7e3",
        "cursor": {
          "ref": "6efe6f45-594d-40f3-b865-5989f82ae74c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cc8f197c-dff0-438d-a982-862478682990"
        },
        "item": {
          "id": "3b434a65-29e4-40a6-8e4d-8f602907d7e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a152c27d-7c2b-4c9c-a9ce-4065e8c97d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f54ad7-4f01-4bb0-9d26-e783c774cf37",
        "cursor": {
          "ref": "b6a8fa7c-8288-49eb-b72e-c89fe9042841",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2541051d-4db9-4541-8257-4f996910e119"
        },
        "item": {
          "id": "05f54ad7-4f01-4bb0-9d26-e783c774cf37",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74ec7da3-7a14-40a7-8969-a7fc88c0d707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd4426e-6e18-4f95-871a-168a83129da4",
        "cursor": {
          "ref": "d316bdd3-ad38-4a4e-9b1d-92df662d933e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2b87e49d-6454-44e2-99cf-a3c17993387d"
        },
        "item": {
          "id": "7bd4426e-6e18-4f95-871a-168a83129da4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ef140b6-f4e6-4cd4-b71b-f8617e79cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761196e4-94c3-4b87-ab1b-0b42fb454647",
        "cursor": {
          "ref": "df98bbe6-d6c2-45c9-be92-1f6e090f940a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c80ec6b8-0e39-462c-9e35-665755cb2a0f"
        },
        "item": {
          "id": "761196e4-94c3-4b87-ab1b-0b42fb454647",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "98812040-a3c5-4a7b-8119-bd6b1d56be3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5d18b0-ed65-435e-ac4c-a1389a7f3d07",
        "cursor": {
          "ref": "96ef1cb0-26eb-46e6-bf7d-09734cd64f46",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf006217-27f2-48d0-aba7-8b9ce5665e8f"
        },
        "item": {
          "id": "cc5d18b0-ed65-435e-ac4c-a1389a7f3d07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63fb7430-a816-4117-b549-2c1a75e11243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63485b28-74fe-4bc8-9c28-7218436664a1",
        "cursor": {
          "ref": "a86889dd-fc6f-4d9b-ac39-852eae103509",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "24da3e17-4ea5-4e74-a370-88e50b98586d"
        },
        "item": {
          "id": "63485b28-74fe-4bc8-9c28-7218436664a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cb2560c3-e8fd-4d7e-bd9d-c2055600fdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d2275f-459a-4a4a-a465-d93f849d1ce7",
        "cursor": {
          "ref": "53bb692b-fde6-4917-9957-c3b198082fc5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f369b60-284b-4181-8b2a-ea0dd341f3cf"
        },
        "item": {
          "id": "53d2275f-459a-4a4a-a465-d93f849d1ce7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86c71f5a-3c5f-443f-84d5-04098b08946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6932b248-6a64-4161-ad1e-4532705afc6a",
        "cursor": {
          "ref": "fe916a90-e793-49f8-9e2f-2c3de39d8b96",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a4beb60d-7d90-4731-8188-c62357423db2"
        },
        "item": {
          "id": "6932b248-6a64-4161-ad1e-4532705afc6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f4dc4ff-9d35-430a-95d9-76136bc049fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80bd892-cfef-4d11-8f7d-fee58d65f91b",
        "cursor": {
          "ref": "dac6c033-926e-4646-940d-246e5135a1ae",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "37046888-54fd-42e4-ae31-c0a603aa71b0"
        },
        "item": {
          "id": "d80bd892-cfef-4d11-8f7d-fee58d65f91b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad35200c-a588-4f5a-88ad-17e1eedb8fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a06f7e8-76b7-446d-a7c1-678de04f781f",
        "cursor": {
          "ref": "6260069e-6f60-45ed-9ee6-8c6847338baa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c4e37ad5-3e37-4a6d-bea2-f54ec1e2567d"
        },
        "item": {
          "id": "5a06f7e8-76b7-446d-a7c1-678de04f781f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f165beb2-1ef9-409e-b011-57868c671238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aca1d7-c8be-433c-8379-865302fbcfd8",
        "cursor": {
          "ref": "593e09c4-4d70-4854-b56a-840cf0817701",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b78b2542-3841-41f0-973c-0ef2e451ef9c"
        },
        "item": {
          "id": "e4aca1d7-c8be-433c-8379-865302fbcfd8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bada96cc-9734-43d9-994e-e650e72611d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7fee9f-ae29-4ba6-ac26-ca21b3783a76",
        "cursor": {
          "ref": "ad6ff2cb-f3dc-4043-995b-5e6c091a56b2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a20002e-fbd5-468d-a7d4-452b3155d807"
        },
        "item": {
          "id": "bb7fee9f-ae29-4ba6-ac26-ca21b3783a76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0a050fc3-e2d4-4440-b528-908530a27511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f54fd-8a56-42f8-8113-d059c39b8417",
        "cursor": {
          "ref": "96f01d55-7c90-4893-90f1-8243ab223c0c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "822e63e9-e87f-4334-a21c-730828a40c81"
        },
        "item": {
          "id": "376f54fd-8a56-42f8-8113-d059c39b8417",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2a52d7b-bc71-4799-b0ba-299dbf7e57aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abb50e8-524d-40f6-a37f-a51445b8edc6",
        "cursor": {
          "ref": "f2736ffa-f930-4e22-a499-fbf2f60ddf93",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "01c2eaaa-f08e-4951-9953-ac70a1bb8f94"
        },
        "item": {
          "id": "0abb50e8-524d-40f6-a37f-a51445b8edc6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4169ad3-77fd-4115-b854-8b86aecb2968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0cc5c6-1068-42f1-8114-a6a3ce401525",
        "cursor": {
          "ref": "458681b5-ccd5-48a1-93e8-ed8b87ba4567",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "596c688a-825b-4e8f-b0d4-36d986ac41d5"
        },
        "item": {
          "id": "1a0cc5c6-1068-42f1-8114-a6a3ce401525",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "357227b0-492d-4420-9bc8-85c90e5f0fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d2524-e515-498c-9a3e-8f2ba36b0f0b",
        "cursor": {
          "ref": "862eab33-25b4-4fe6-83ae-e3970a338bde",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1c71164a-70be-4b7e-ad5e-7507c56f5400"
        },
        "item": {
          "id": "8d1d2524-e515-498c-9a3e-8f2ba36b0f0b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c0b9396a-1071-4ad8-a3eb-3ac67b619a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f428260-f5b7-4337-882b-0635e736bc22",
        "cursor": {
          "ref": "b29fedf6-58ed-4aa3-83fc-0f02aa8b357d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "237513ec-c1e7-4d80-81dc-7d7e5d96131a"
        },
        "item": {
          "id": "2f428260-f5b7-4337-882b-0635e736bc22",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dd8039eb-109c-4930-87a5-e01ffce05f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b645d99-d0ad-4650-b604-e0d9b8215158",
        "cursor": {
          "ref": "0436f9dd-5112-420e-9075-5c16620d1ca1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "62254eb1-0ac2-4465-90c0-1f04660ac2f6"
        },
        "item": {
          "id": "6b645d99-d0ad-4650-b604-e0d9b8215158",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "92b903ed-1b0b-4676-b1be-76fa74e8301f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb7a28f-601f-4cac-811c-f0fb976ea2eb",
        "cursor": {
          "ref": "004f0612-9c4e-4f8c-8f00-3177f3c4dc00",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0ae571fb-f7ef-41ee-96d4-9ed821743a8d"
        },
        "item": {
          "id": "edb7a28f-601f-4cac-811c-f0fb976ea2eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7256cff-751a-42b0-8625-52217f551a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810b3e9-5b8e-44f7-8853-23212f1e3627",
        "cursor": {
          "ref": "90666d9d-7c4b-4322-b386-47bf7b54189f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e905c70-4970-42fd-859e-d6de731f4ea6"
        },
        "item": {
          "id": "b810b3e9-5b8e-44f7-8853-23212f1e3627",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "02aeb6b7-88df-483d-bdf2-e5ac34978b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe95190-d76c-4690-92b7-fdc2d275d949",
        "cursor": {
          "ref": "dffb4e90-a344-47e3-a779-230371520b44",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "890be227-ad19-4e55-84b1-98406f55bc57"
        },
        "item": {
          "id": "9fe95190-d76c-4690-92b7-fdc2d275d949",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26358ed5-66b6-4113-a52d-f3a61dc05ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff5f56a-1c75-4a03-bf06-b8dae1483729",
        "cursor": {
          "ref": "e6b8ffb1-2d02-4a6d-963e-d32771843d14",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bcc60a59-a3a9-477e-a1fa-b05c0e85b7f7"
        },
        "item": {
          "id": "8ff5f56a-1c75-4a03-bf06-b8dae1483729",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5da92d3f-7891-4b85-a16c-8ccdb0035346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cdadfb-f573-4120-8d52-183a3d59989c",
        "cursor": {
          "ref": "7241bd09-5d18-4e21-9297-ff96510f596e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b32fa65-1b6b-4716-b728-186a208b5aaf"
        },
        "item": {
          "id": "16cdadfb-f573-4120-8d52-183a3d59989c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "610c03dc-b57f-4b46-9e78-4bd695081cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd2a118-02ab-4d1c-94c2-6de78bfe237f",
        "cursor": {
          "ref": "daa26dfa-81fb-410c-946a-2e6c99d97e18",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c7dcd23-7c69-4cfb-a7b3-6f14a15070d1"
        },
        "item": {
          "id": "3cd2a118-02ab-4d1c-94c2-6de78bfe237f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a3492e89-5ed9-417f-9999-f93aa78dfe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5e1f5c-017d-4282-8648-c4347276696d",
        "cursor": {
          "ref": "ed8698b5-744e-4c54-91f8-39fe66df7a06",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ae882353-d50c-4c52-a13c-bd389bdc7dab"
        },
        "item": {
          "id": "9e5e1f5c-017d-4282-8648-c4347276696d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba2e6e7c-f97a-402d-bb80-40dbc004dcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb754de-5f97-44bc-aca4-9cf98cb5b679",
        "cursor": {
          "ref": "0fc8ebe6-fa52-4f2a-bb66-7971e848b20e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c232e23b-2bc5-4b7e-b6fd-0ca3aa2ea7a6"
        },
        "item": {
          "id": "dcb754de-5f97-44bc-aca4-9cf98cb5b679",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e53294cf-8fa9-431a-89f8-4a9e706f2a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed11d1-b4df-48dd-9705-ef350808f73a",
        "cursor": {
          "ref": "2e9df439-c40c-4e52-9fea-59101f0bd340",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "481fdb26-1abc-4f78-afb8-b3429a6706a7"
        },
        "item": {
          "id": "fbed11d1-b4df-48dd-9705-ef350808f73a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c14a706-4cd0-4323-b9c8-dae63aee7d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097495be-97de-41ae-8522-3091d4834f5a",
        "cursor": {
          "ref": "522dbb30-32eb-41a9-b2a5-0e5e60647eee",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "935d167a-9695-448d-8cd0-d07b3614d35c"
        },
        "item": {
          "id": "097495be-97de-41ae-8522-3091d4834f5a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5530b840-5b9e-4001-b5fe-41c4c0df534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46fc630-0954-4d17-95ba-0998fb87fd50",
        "cursor": {
          "ref": "34e13a9e-22cc-4a13-9c49-5a80fff6c31d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb349a88-f6da-48af-8f1b-1b4dce8f2a78"
        },
        "item": {
          "id": "d46fc630-0954-4d17-95ba-0998fb87fd50",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a52c8738-7ac6-4f3d-9ffb-dae7cf8c8e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d744216-e57a-4153-a8b4-b9b7f5cb1c9b",
        "cursor": {
          "ref": "07cce0d3-3cf6-4965-9ba4-3b6ac5ecb6b5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7eb57a7a-7024-4d26-92e4-b3211571d502"
        },
        "item": {
          "id": "4d744216-e57a-4153-a8b4-b9b7f5cb1c9b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f105b25c-9516-4281-8c78-4b0596ba07cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b8db07-bcae-493d-b2ff-725aae115f84",
        "cursor": {
          "ref": "75adbf6f-eb58-499a-a558-a039c3e839c5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "85502c10-7174-4b08-b4b9-5208744d0976"
        },
        "item": {
          "id": "64b8db07-bcae-493d-b2ff-725aae115f84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "861afd38-c0d0-4971-98cf-321f79d8fad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219a931-5ab3-4342-8354-1c8ef8d69549",
        "cursor": {
          "ref": "0139ce9c-a4d7-4ee1-9a17-0efe1b02aa37",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0cd3052f-45be-406d-aefc-7f43d89d97d3"
        },
        "item": {
          "id": "e219a931-5ab3-4342-8354-1c8ef8d69549",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d1734731-2769-41ac-8fab-4763d9bfbb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf254b5-815e-4ba9-9222-156b834a1c17",
        "cursor": {
          "ref": "a65d4cfb-1740-47ef-84cd-b2bf034b86d0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "badfb779-3e85-4c42-bd10-fc3c6a85e649"
        },
        "item": {
          "id": "9bf254b5-815e-4ba9-9222-156b834a1c17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ab7c5c4-89cc-43fb-9b78-d790613a6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ce11c5-84c2-4376-a4ee-49977d728735",
        "cursor": {
          "ref": "48fd8d5d-8a50-45b1-abe6-0a0febcf4397",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2c54af83-a4f0-4b76-aa6d-266e1554ebd3"
        },
        "item": {
          "id": "b5ce11c5-84c2-4376-a4ee-49977d728735",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a6c6720-f15d-41f7-83d6-90901b715599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cbc97c-a19c-4ed6-8f3b-d52b01e67c8b",
        "cursor": {
          "ref": "724bba73-9f2e-44b2-a406-11d42d411d06",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0b92ba0-a2cf-402c-910b-6809c01d3e96"
        },
        "item": {
          "id": "76cbc97c-a19c-4ed6-8f3b-d52b01e67c8b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a6eefdf-e0f8-44b2-8b57-f0c90817d909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103779e-da72-4f06-aea2-84b0d9f7883c",
        "cursor": {
          "ref": "17755929-af50-4107-864a-89cf9a39d5e7",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e96de5b2-f445-4daf-907a-d6946aaaf56c"
        },
        "item": {
          "id": "1103779e-da72-4f06-aea2-84b0d9f7883c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a1c0cec7-93a4-45f5-9f66-4afee4262baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4d66b5-0240-4e78-a4f1-b23a892846bd",
        "cursor": {
          "ref": "a70eb661-67b7-4124-b09d-8a3f7b10ad0e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "28f6b9ca-5ac3-4b2a-9450-e950bdf9fe23"
        },
        "item": {
          "id": "8e4d66b5-0240-4e78-a4f1-b23a892846bd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9cbc935e-d7a3-461c-a846-ce0dec34e0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92bb903-72a6-4fd6-a3b2-e7e21cc58d7b",
        "cursor": {
          "ref": "c1812b88-54fd-452f-a15b-26a40d5f3f5b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07488061-6651-4d61-98ac-30bcf228a6e8"
        },
        "item": {
          "id": "e92bb903-72a6-4fd6-a3b2-e7e21cc58d7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e9463a8-da0b-4755-b843-4e700acd422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b61f1-7808-4de0-ac94-b9ab2542725e",
        "cursor": {
          "ref": "02f469f1-0f27-4770-9272-2667711cbd86",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1e0b5c68-a1f9-423b-97c2-83e095bcc4da"
        },
        "item": {
          "id": "d68b61f1-7808-4de0-ac94-b9ab2542725e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f00a9b4a-115e-451c-9395-8932ec133e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787883f6-d725-4068-b20f-dfe4a505f47d",
        "cursor": {
          "ref": "cd1ab86a-6f45-4faa-a7df-f7921941a6ad",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "94816305-21e3-4eed-b945-fc0d355c2dd8"
        },
        "item": {
          "id": "787883f6-d725-4068-b20f-dfe4a505f47d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2713675f-27b5-41d6-9689-a0a772192746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b83e5a1-bbd9-46ab-b998-35fd1fe9d95a",
        "cursor": {
          "ref": "bebcf4c4-6b50-4d05-b709-d443c6f5b75a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "94c69670-0fbb-432a-acb7-06632de37f0f"
        },
        "item": {
          "id": "9b83e5a1-bbd9-46ab-b998-35fd1fe9d95a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6040e1fb-202a-4ab1-a5ea-70196b120039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101ecf1-6e33-456a-a25e-4291ff066274",
        "cursor": {
          "ref": "3803f14c-3c9a-421c-98b5-048083ece9e9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f95e1307-570c-4a8a-be64-2008ed052de9"
        },
        "item": {
          "id": "9101ecf1-6e33-456a-a25e-4291ff066274",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d33a722-dbc5-46e0-bb89-cc255058034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef225975-6423-4968-8620-553d51e22b4a",
        "cursor": {
          "ref": "4e828489-b850-41b7-bd98-3a4baac0d548",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aa18ca79-dadc-4024-b4d4-251453f8694b"
        },
        "item": {
          "id": "ef225975-6423-4968-8620-553d51e22b4a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8131178-512c-4a79-a3a4-ed02e8710966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784efe56-11f9-4515-86e5-5c5892bb1dd1",
        "cursor": {
          "ref": "434db97b-e135-4daa-ae75-b5ed746a4c4b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "97ae1d47-4d8d-4795-9b44-013cad776194"
        },
        "item": {
          "id": "784efe56-11f9-4515-86e5-5c5892bb1dd1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d20f725-8917-48d8-9ed8-f4d17464aad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eaed7c-8f72-487b-9476-4a4bff0900ff",
        "cursor": {
          "ref": "3381b8a7-9d19-49ea-9c54-927ad7740c9a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "35816f14-ee27-4756-8246-1750776fd9cd"
        },
        "item": {
          "id": "88eaed7c-8f72-487b-9476-4a4bff0900ff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "159cce83-0869-4f51-9816-f3e86e76fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1186874d-c1da-44e8-bad2-3b3a1941b3a2",
        "cursor": {
          "ref": "19531186-6c73-455f-9276-e2fd75e53b97",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a4f349f7-71cc-42f9-8e54-c7fd03afb41e"
        },
        "item": {
          "id": "1186874d-c1da-44e8-bad2-3b3a1941b3a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d11d298a-e317-4e98-8f2f-d17066d3f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a3d47-d477-40e0-b103-7e3207c5b526",
        "cursor": {
          "ref": "e6a87bd7-3a3b-49c1-982e-2074065d242f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4620933e-a985-4fa0-8201-7434b35a33de"
        },
        "item": {
          "id": "2a0a3d47-d477-40e0-b103-7e3207c5b526",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a196bbe-bf46-46a8-a50b-bfc6c96f7f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe58dbc-1c38-4927-a7aa-43823a5cf5e5",
        "cursor": {
          "ref": "27b05386-d3a5-427f-99db-332a6c1764ca",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bfbb32eb-1966-413f-8843-c149daab94dc"
        },
        "item": {
          "id": "abe58dbc-1c38-4927-a7aa-43823a5cf5e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6f95035-ef46-4bca-a071-91a5f15881a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5ec8aa-7298-4efa-a0a7-cdb5bc8f91ec",
        "cursor": {
          "ref": "c6635203-54b3-425a-a3ab-ef99de2e9c27",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4f469b63-eaab-4e0d-adc1-d922c0780744"
        },
        "item": {
          "id": "6c5ec8aa-7298-4efa-a0a7-cdb5bc8f91ec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3274bb4f-d569-4cd9-b24a-b70b5f49dc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4146d4-efe4-4092-8e3b-6ed058472326",
        "cursor": {
          "ref": "9e9a1514-759b-44a9-8f90-dd110219584a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7ef46b09-4005-46e0-bbaf-b36b19b52313"
        },
        "item": {
          "id": "cd4146d4-efe4-4092-8e3b-6ed058472326",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aa2c82c8-213a-496a-a613-21405aa37124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89f03c4-c025-4b01-9d8b-62383f99998d",
        "cursor": {
          "ref": "9ea1a7fb-9ad4-45da-a1a9-6ff526cffc0f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "79a5a40f-183f-4846-b632-852c62ae6cbe"
        },
        "item": {
          "id": "b89f03c4-c025-4b01-9d8b-62383f99998d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "44f1fbf4-bf0b-4c82-9b30-869639f61009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77825ef7-abb1-4b2f-afce-795478169573",
        "cursor": {
          "ref": "c4594014-19c7-40eb-ac87-f324eb04a24b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "028b7d71-eec5-49e8-8d02-1815fa9c2c24"
        },
        "item": {
          "id": "77825ef7-abb1-4b2f-afce-795478169573",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a267e0f2-b516-4f2b-92b4-3c9e2f3f29aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ee1204-fd3b-4d1c-b641-2286fa8685cf",
        "cursor": {
          "ref": "bbac73f1-4db6-4b6a-baa2-af2bf8f737f7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "efabd2d7-4eda-43bb-9819-0ac24b623a45"
        },
        "item": {
          "id": "68ee1204-fd3b-4d1c-b641-2286fa8685cf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f7d8f1b6-2303-48c2-9279-08445f053450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7525de56-fb8f-47af-91b6-063cd870f06b",
        "cursor": {
          "ref": "d1126e8c-7f6d-4e76-8bdd-75baca39d6fd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a71bee87-3d8f-4650-a214-56f7340ad33b"
        },
        "item": {
          "id": "7525de56-fb8f-47af-91b6-063cd870f06b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "938b4a1c-d44c-4491-9beb-1437322250f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96c85bd-bf40-4d15-92ba-5a6ce91fc751",
        "cursor": {
          "ref": "46508240-26c8-491e-9174-c9400dcf3325",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f41a46c3-8443-4478-91eb-1db98932853d"
        },
        "item": {
          "id": "f96c85bd-bf40-4d15-92ba-5a6ce91fc751",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7482655e-554d-4e07-a91d-cc6d6fa1160f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf98d7cc-35ad-425e-b6c6-81163b747491",
        "cursor": {
          "ref": "528fd8d5-2864-44bd-8668-8c5f0f567c98",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3c0227ec-7c34-4e5d-91d5-6eb166b9aa3b"
        },
        "item": {
          "id": "bf98d7cc-35ad-425e-b6c6-81163b747491",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "97be611f-6e2f-4eda-87cd-9c561cc40886",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac215d5f-b3e4-49c4-b938-1906e763ad69",
        "cursor": {
          "ref": "aeb6f34e-dc6f-4c84-943c-29669efa0571",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9c97c4df-78da-4347-b718-b72720ca32ae"
        },
        "item": {
          "id": "ac215d5f-b3e4-49c4-b938-1906e763ad69",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d22024d2-6364-465a-a811-6c32942130bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a800e04b-c27b-42fd-908e-f46135efa57f",
        "cursor": {
          "ref": "a9bddfb4-14d7-49b8-ae3c-a6b192d7a934",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "702f245a-0151-492e-b3ba-40da1d227c43"
        },
        "item": {
          "id": "a800e04b-c27b-42fd-908e-f46135efa57f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f765f69f-03ff-4b0d-b3b3-208fe5fb04dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e52226-af5b-4547-a56d-a1a918c59ac4",
        "cursor": {
          "ref": "184f4aa9-5e4b-47ae-a665-7968b7d2a644",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9f021e1e-34bd-430d-ac91-fb4db3fe6f2d"
        },
        "item": {
          "id": "72e52226-af5b-4547-a56d-a1a918c59ac4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f8967f16-ce39-4ed7-8970-a6268bae4cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a84f35c-9745-480a-b664-dc599b1ddccb",
        "cursor": {
          "ref": "2e461d60-a656-42ad-994c-9686c6895913",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db46695d-f135-4543-811f-752a731e14ec"
        },
        "item": {
          "id": "6a84f35c-9745-480a-b664-dc599b1ddccb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "73784c04-4aac-4e6c-b3ff-2c75ef436640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b4991-b128-4007-95aa-2a1124a7f026",
        "cursor": {
          "ref": "0828efa5-6030-47bb-95cf-6b7f3b33d208",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "724acb67-4eca-4b7b-a127-f9253a6820a6"
        },
        "item": {
          "id": "c94b4991-b128-4007-95aa-2a1124a7f026",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7b6330e-7d3c-4125-bdfc-5869d49ac0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f405e-9546-4fa0-a709-d8351fe535a7",
        "cursor": {
          "ref": "4139c9cd-d2e9-48f1-9353-18872df4da3f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "298e5ea4-c3d6-45c7-8df1-3312c47d6ba7"
        },
        "item": {
          "id": "274f405e-9546-4fa0-a709-d8351fe535a7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fb5298ee-798d-44bf-ba8c-cfc503f24dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7ed89b-3ace-42c0-aea3-d9e819781c77",
        "cursor": {
          "ref": "65204981-e781-489b-a821-e05e30f15974",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2e0a6c43-70d3-47b4-a4cf-2dd28352746b"
        },
        "item": {
          "id": "7e7ed89b-3ace-42c0-aea3-d9e819781c77",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71777a4f-7ef0-4d8e-8128-5ab26c75da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36929629-7324-44f7-a429-39deb91c1b87",
        "cursor": {
          "ref": "a6ec78c1-67f2-4e29-aafb-e4cdadbfffa1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6102a21e-2d69-411f-9334-18533ad7069d"
        },
        "item": {
          "id": "36929629-7324-44f7-a429-39deb91c1b87",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6050d3fc-a604-448c-bac2-264eda8b9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345a3851-23a9-44af-a9fa-0254478ddc7d",
        "cursor": {
          "ref": "04eca041-f50b-4137-a6d3-07098ca125cc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bdbefda2-bfcc-4168-8e63-ecb454936d65"
        },
        "item": {
          "id": "345a3851-23a9-44af-a9fa-0254478ddc7d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "46dd7e67-4399-4c56-9f1a-de85ca261c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13824c6e-7dac-47b2-bfe2-526947e19e80",
        "cursor": {
          "ref": "d956544b-ab59-4b0a-8396-b0ceb818438c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5dfa691a-e232-4f4d-bf9b-5989c166ed81"
        },
        "item": {
          "id": "13824c6e-7dac-47b2-bfe2-526947e19e80",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a0807060-0273-4107-b7ed-cb9b291f5500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222a72ba-dec5-4eec-97a9-0288afdf4f22",
        "cursor": {
          "ref": "c1c376d6-c297-45a1-9461-0608a67a65cc",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7397046c-8490-4b9a-b167-30ee45a3aea0"
        },
        "item": {
          "id": "222a72ba-dec5-4eec-97a9-0288afdf4f22",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b0c7d989-9bfb-4e6d-bbe6-f758da19c048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5bc9a-1479-4f42-82c3-fd48ddc22ab5",
        "cursor": {
          "ref": "6d408d5e-58b9-4544-a11f-b935fed5fe82",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6eaaab78-7421-4bab-a432-f9e50cb2feeb"
        },
        "item": {
          "id": "8eb5bc9a-1479-4f42-82c3-fd48ddc22ab5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ac78f4d-2dec-44fc-94ea-84d6301a44aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfdc3e6-51a0-4315-9f66-b9ec0d2c0c24",
        "cursor": {
          "ref": "473ca755-046f-4315-9207-0ad9dc6bc1b5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9e7f1a5d-5c1a-40fc-98ce-3797c34a5cd6"
        },
        "item": {
          "id": "7bfdc3e6-51a0-4315-9f66-b9ec0d2c0c24",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "618f5575-74c6-4b8b-a8ef-78a1c4a1f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd482967-9292-4837-9865-20cc17e32b89",
        "cursor": {
          "ref": "adf6f805-859f-4775-bee5-8a366cf0cfc9",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7e28e708-c284-48cd-a3c4-98e3abee2864"
        },
        "item": {
          "id": "bd482967-9292-4837-9865-20cc17e32b89",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5b61234-6357-4596-9ff6-bbb552c63755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1276df1-ad95-49d1-bfcb-b43a286d26c4",
        "cursor": {
          "ref": "335d9c87-6141-48ec-ab17-aaf643c5332a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ce26e73e-27b1-407f-98a2-0d260a822985"
        },
        "item": {
          "id": "f1276df1-ad95-49d1-bfcb-b43a286d26c4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "26a04388-921c-4eb3-af02-ad82557dcfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ee4155-e730-476c-98a3-2ed561047a28",
        "cursor": {
          "ref": "74cddfe1-87bf-4c72-84f7-9444e612efed",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "370a7ea7-7421-41a3-be23-db5f40990e6e"
        },
        "item": {
          "id": "d4ee4155-e730-476c-98a3-2ed561047a28",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "817fa09f-d462-43da-b382-588e3539c281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a59e6-5125-4aba-a405-29a2db460666",
        "cursor": {
          "ref": "5d78be8b-b021-4ab5-8eb1-3940641f755b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e34b6a41-726f-459d-aee7-29fe616cb352"
        },
        "item": {
          "id": "b94a59e6-5125-4aba-a405-29a2db460666",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "08f58a58-8a48-4a4d-aea8-c3d54aede6e3",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3f32faf6-9a62-4ae0-9e57-fff43c19c4f3",
        "cursor": {
          "ref": "7947505e-3a24-4c78-8f99-1829fe8fc1bd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "caa0fd89-8e20-4121-8aea-e07dd4b060b8"
        },
        "item": {
          "id": "3f32faf6-9a62-4ae0-9e57-fff43c19c4f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "78d7c213-2d98-463a-b92a-5206e458344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22607f32-8a20-4f95-9995-067d112dc5b1",
        "cursor": {
          "ref": "e41bf351-71bb-489c-9796-5ae322041b4f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2ef7a5dd-b9e0-4b2f-aea5-8584e245135c"
        },
        "item": {
          "id": "22607f32-8a20-4f95-9995-067d112dc5b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "034d5352-6d06-4e3f-90ef-4c97179f6a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e85f47a-8b80-422b-a02b-03bf4ab73242",
        "cursor": {
          "ref": "915e6c55-fbb7-4753-802e-e779b052a00f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e66e20c0-195d-47fb-bdb5-94210da0960d"
        },
        "item": {
          "id": "9e85f47a-8b80-422b-a02b-03bf4ab73242",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a03765a7-3784-4e01-8c64-e723d230b7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc52109f-180c-4a70-8885-88c5335aa2a0",
        "cursor": {
          "ref": "2c7635b3-359a-469d-879b-6eeeb10387db",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27e52b59-ac37-408c-8f71-c43eb4f95bbd"
        },
        "item": {
          "id": "fc52109f-180c-4a70-8885-88c5335aa2a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2ad52264-65f1-49a6-a08e-769d9e8de7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648085f7-6ee6-4d6c-b0e1-7beb50c3675b",
        "cursor": {
          "ref": "0318f7dc-609d-49da-888e-c331b88d69a7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e1eaf7cb-20bd-48f0-95b5-868f1dcf7dfd"
        },
        "item": {
          "id": "648085f7-6ee6-4d6c-b0e1-7beb50c3675b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "15ec7a1f-fb60-4050-8b23-1a57e7021261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f9590c-b5e0-467b-82dd-e119ddfffbc2",
        "cursor": {
          "ref": "7432b57c-15c3-4259-bf1b-10d38b341ece",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f04e9568-a53b-44a5-a6d9-1f76634d4cb2"
        },
        "item": {
          "id": "43f9590c-b5e0-467b-82dd-e119ddfffbc2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00f78a49-5c29-4ab5-9c20-70b25838d661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6f8cf5-a877-432e-8213-1f61bf631ba1",
        "cursor": {
          "ref": "a331cba5-f539-427c-8108-702b1fd80f6a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1bec1be2-1910-4a04-a8c5-36310738db3a"
        },
        "item": {
          "id": "1e6f8cf5-a877-432e-8213-1f61bf631ba1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d00097fc-3207-4386-81b7-e58dcacbefb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0900ea71-d3f6-4d1d-a1cd-7e55476f7b68",
        "cursor": {
          "ref": "03d1a9ad-0e54-4401-8e0b-9311bf4317a7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8f67fe15-d907-4391-9aed-dd9b9871bf08"
        },
        "item": {
          "id": "0900ea71-d3f6-4d1d-a1cd-7e55476f7b68",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "02cc96ba-f644-443a-9408-dc50b020d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f64ceb-820f-4c5b-8257-4cd34c52940d",
        "cursor": {
          "ref": "d44519e4-b0bd-4a2e-9225-f05259757326",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dc2610aa-9e34-46e4-85ce-6e74d7e3aab9"
        },
        "item": {
          "id": "83f64ceb-820f-4c5b-8257-4cd34c52940d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "39e129b0-90cd-4711-859f-1ad4ffde2cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8786d5-beb7-485b-9ee5-e6e74cb0b99f",
        "cursor": {
          "ref": "35c77bc6-542e-488d-a4da-19e22f23ba56",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f0e55484-1f70-4217-9ef0-1ff3d6cb35ef"
        },
        "item": {
          "id": "2b8786d5-beb7-485b-9ee5-e6e74cb0b99f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5378b5c9-71d5-4e4d-8499-3c82c61518a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa334c6-4b09-45d3-bca7-a8b09a30748a",
        "cursor": {
          "ref": "77dfdaf7-8d36-4dfe-916c-006e8abccb52",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "17c29f33-c807-41f2-a594-7ca37953b479"
        },
        "item": {
          "id": "7aa334c6-4b09-45d3-bca7-a8b09a30748a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2704dd8f-e503-4fdf-a6de-836df20b7f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f362facb-900c-4738-9061-78e3b1733edf",
        "cursor": {
          "ref": "5d85fd91-c6ef-4123-a722-e9a11282df3a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "617501bf-cce6-4772-99fe-705b3c100860"
        },
        "item": {
          "id": "f362facb-900c-4738-9061-78e3b1733edf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cc2eea10-f380-473e-8c40-f66a146a1385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c4ab44-c853-44dc-87d2-858aa29524d7",
        "cursor": {
          "ref": "a0b98cb1-a036-465f-8769-276ceefb41ae",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "77579b48-f437-446e-a701-fd3a65c97c0c"
        },
        "item": {
          "id": "c5c4ab44-c853-44dc-87d2-858aa29524d7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4bd9223c-b659-4757-86fd-530c81cb626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce725b1-7cf0-4ca9-9c0e-2f519e875bd0",
        "cursor": {
          "ref": "552a8b28-d757-46cd-96ae-946f68af74d1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9387c152-b3fb-4a41-aa52-e0d0715f8cd8"
        },
        "item": {
          "id": "8ce725b1-7cf0-4ca9-9c0e-2f519e875bd0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "35130112-6daa-4ff3-a323-f216761ad4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ca855-2cbf-4b47-a8d0-3dda108d858b",
        "cursor": {
          "ref": "8ab55e46-548e-467d-9429-739c58a0f79b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "70e6d5ac-175e-4b66-92b3-01cf9c4bdf1d"
        },
        "item": {
          "id": "af5ca855-2cbf-4b47-a8d0-3dda108d858b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ab7396ed-d129-49f5-b0e8-f85b1367530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca6f0cf-d89c-4722-9a83-d827d949a8dd",
        "cursor": {
          "ref": "2f7b0995-b4ac-427e-a6c7-756869dc0276",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "388defba-ab12-4928-9d6f-8930f543d383"
        },
        "item": {
          "id": "1ca6f0cf-d89c-4722-9a83-d827d949a8dd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b0142cf1-8f89-4011-b26c-7371eb44c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753dd0e-4ae1-477c-8cac-2f9a428db428",
        "cursor": {
          "ref": "42a5a0ff-ee9f-4d2f-9cd9-5a3ab32c5a0b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e56c62c1-f9ef-46a3-a7cd-d46038b701e4"
        },
        "item": {
          "id": "6753dd0e-4ae1-477c-8cac-2f9a428db428",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e5642b33-1d45-4e1f-9e69-dc5d12e8f621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f99fe38-1be8-4136-89d3-ebf9b4dd881c",
        "cursor": {
          "ref": "fe5d8e85-aff1-447d-9de9-e74d032a4611",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "157688e7-7bfa-4d8d-97c1-9b2da6706811"
        },
        "item": {
          "id": "0f99fe38-1be8-4136-89d3-ebf9b4dd881c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ed657479-ad4d-4b1c-b8c8-3913fa90b6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887635a-c8f5-4908-816e-452661ea606e",
        "cursor": {
          "ref": "1dd774a5-2478-4d98-98de-7a049d7a8b32",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff9ed2d9-c18a-4dbc-9f9a-0be6d0a5140d"
        },
        "item": {
          "id": "b887635a-c8f5-4908-816e-452661ea606e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5fcb1e50-e2f0-410c-b6e5-b0e68e38b053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e1d18a-9d1a-4cf8-b581-cd40c3643b7b",
        "cursor": {
          "ref": "d3cabfee-eaef-4a95-96e4-63d0667d57d8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3fffc029-387d-41ab-bae8-1ba7c6ce9d0e"
        },
        "item": {
          "id": "78e1d18a-9d1a-4cf8-b581-cd40c3643b7b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "addfdcc0-7321-44e8-88b5-02dde0544216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb208223-ff83-48f4-b861-556c6c65d6d1",
        "cursor": {
          "ref": "30551424-8ae8-4725-a60f-70c24344b689",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55b23810-0099-4001-97fc-f82b2843e2cc"
        },
        "item": {
          "id": "cb208223-ff83-48f4-b861-556c6c65d6d1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b07dea1e-9f05-4ccb-8983-21a0ce6d1570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be41caa8-d901-4a8f-9322-994665412af5",
        "cursor": {
          "ref": "db73ec11-4761-411d-a48a-523ddcc0e1bb",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a38c2df-0f27-4c53-bb0a-d290e46e48f0"
        },
        "item": {
          "id": "be41caa8-d901-4a8f-9322-994665412af5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5c42c2b4-b271-43c2-9a03-7060b86e242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0c8c0d-d22f-4f07-871e-70c7790a1501",
        "cursor": {
          "ref": "1985e3d9-094d-4a44-a7a7-37bd643568a8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c57d12e3-ed62-491c-bce4-6930cfa38be2"
        },
        "item": {
          "id": "8c0c8c0d-d22f-4f07-871e-70c7790a1501",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5eafe510-1dfa-43f5-9173-aab86ae4daa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab39bc61-b08e-468e-b819-7365ebe56666",
        "cursor": {
          "ref": "811ddbf9-86d0-4645-8012-7cfbb00821ca",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e5a51aa5-a0aa-4f31-8447-066b0b91fe80"
        },
        "item": {
          "id": "ab39bc61-b08e-468e-b819-7365ebe56666",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e4b38a30-fd8e-44ba-b08a-dd315730f1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff60341-c6c4-4b34-bd4e-aa1bf5e728c3",
        "cursor": {
          "ref": "f4d619eb-904f-45a1-9fd8-21a355ba7c99",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2dfed4df-96a9-4f4e-a642-c1ed5c3f7dd3"
        },
        "item": {
          "id": "6ff60341-c6c4-4b34-bd4e-aa1bf5e728c3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a0f1d11-43b8-4f99-9ead-a856aee94d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca1fc2c-088d-40a0-9a6c-73aee8874251",
        "cursor": {
          "ref": "1714b718-d3b5-4024-bcbf-b82cd5b244dc",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c9494495-939d-4d33-a612-f43a158d751f"
        },
        "item": {
          "id": "2ca1fc2c-088d-40a0-9a6c-73aee8874251",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "470641ee-7998-4f06-a7ec-5450aa87ab88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741dc5ce-90f0-4598-9f64-2472027e4b83",
        "cursor": {
          "ref": "f7edaf44-5c67-43ee-baa4-3ba4b2efa098",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0ed9f566-e625-4cf9-964f-f07262e97d80"
        },
        "item": {
          "id": "741dc5ce-90f0-4598-9f64-2472027e4b83",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "daf64206-2005-4afa-9ea6-b80814f62c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17605041-a819-42c6-94d8-7956d90f00b4",
        "cursor": {
          "ref": "4d4f0b25-a437-4d96-a59b-46ab81e434ea",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f06bc6b-80a3-4527-b6be-1712b170b9c5"
        },
        "item": {
          "id": "17605041-a819-42c6-94d8-7956d90f00b4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6cf67800-c0c6-4940-9262-07d6b2a06e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd88c22-4dd0-4f49-8e36-9c54363a4bfd",
        "cursor": {
          "ref": "1b70040b-d909-4710-8179-f1c75baee108",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "52ccce73-9a37-41ff-86fc-e6a8ffc85500"
        },
        "item": {
          "id": "1fd88c22-4dd0-4f49-8e36-9c54363a4bfd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3c55aaeb-2d9a-4701-b8ed-41e728d361be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5920359a-6d3f-4dc9-93bc-68b2cdfc4e66",
        "cursor": {
          "ref": "a7b113df-30dc-41ed-9885-ed2c00d50da5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3efaa86-8286-4ee3-8a3d-098efc0ba268"
        },
        "item": {
          "id": "5920359a-6d3f-4dc9-93bc-68b2cdfc4e66",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ca368fda-c8fd-4fa8-9e5d-8cd0df4cc29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb9655-4f1f-497a-8faf-c5a8507d7fc4",
        "cursor": {
          "ref": "b3d0c55f-d4d3-4f8f-8e4d-20d385f6f1e0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "18bd13ea-5a40-4b2e-bd42-684f45fd2c05"
        },
        "item": {
          "id": "64bb9655-4f1f-497a-8faf-c5a8507d7fc4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cb29de34-2012-4189-b9fd-408a9b6c5ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57225b8-ee00-4f76-b366-316494db1b0e",
        "cursor": {
          "ref": "c493de42-191e-480e-b368-04ed99b1432d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4653b44a-0960-4cac-9af7-c394c42bae61"
        },
        "item": {
          "id": "a57225b8-ee00-4f76-b366-316494db1b0e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ef85b69-626e-440f-9f4f-e3045b8f19d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4645e9b9-15ab-4938-aaee-2e768e33983d",
        "cursor": {
          "ref": "1ec4c0e1-6310-4c03-9eb9-d5aaf53e4dd9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7bee0256-0e8f-4ed5-a2fc-11da0c097d27"
        },
        "item": {
          "id": "4645e9b9-15ab-4938-aaee-2e768e33983d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0b08bdc3-ac66-4aa8-90ef-2f65b289b5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1d16c1-d687-42fe-900e-230fbef7bfe0",
        "cursor": {
          "ref": "da6aa4f4-4546-4505-a4ee-70d18c58f6d4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f620af4-6d12-4d87-ac94-0572ce92bd80"
        },
        "item": {
          "id": "9d1d16c1-d687-42fe-900e-230fbef7bfe0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6dd6167a-8487-41e2-b03a-b904fc7c4022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94903f6a-78c6-44c6-bdd5-68da8650f7c8",
        "cursor": {
          "ref": "82469103-3230-4008-a720-b6941222dc4b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "52f5fc13-a7fc-4c93-b98e-2e7b9cc641a3"
        },
        "item": {
          "id": "94903f6a-78c6-44c6-bdd5-68da8650f7c8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bce43e65-27f0-4c10-a02b-67a005794bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f18484-165e-482e-87fa-e8a77ca10152",
        "cursor": {
          "ref": "e9d93af5-5eb4-423c-a2ba-2d280c9ced44",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9b104d01-4ed9-4e10-9f05-72a0f2c88872"
        },
        "item": {
          "id": "c6f18484-165e-482e-87fa-e8a77ca10152",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4bb58524-3134-4b73-a844-af824378292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf57b03-d391-4f56-a9e7-4ce851d33f1e",
        "cursor": {
          "ref": "8f01b398-0e61-4e4f-be35-a768b75d507d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f495d7f8-f27d-4a4c-b425-2ef0becf6d73"
        },
        "item": {
          "id": "8cf57b03-d391-4f56-a9e7-4ce851d33f1e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d24803bf-f841-4307-b860-2fac2ace4b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be716606-e169-424e-98fc-654c75828d0f",
        "cursor": {
          "ref": "8c1d8d88-47ac-40c2-860c-0ed2e5e21894",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "69ce40b8-341b-4a36-8959-e05c938adebb"
        },
        "item": {
          "id": "be716606-e169-424e-98fc-654c75828d0f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ceb8f0e7-0279-431f-9080-1bd5eb04e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10564eeb-6aa1-4c68-b679-5a1aefa305a3",
        "cursor": {
          "ref": "736c5339-ea0a-4709-bce3-bd331b3059bc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3fdf00e3-41dc-4143-b9db-8bf2f7ba060f"
        },
        "item": {
          "id": "10564eeb-6aa1-4c68-b679-5a1aefa305a3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "673627c0-3e1b-4423-8b1d-dee0a8cc18b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3a8b26-2e75-4eb8-ba38-6e0c4f2cea75",
        "cursor": {
          "ref": "fb64b676-5788-426c-95cd-af4617094515",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c89bfa6d-f585-45ed-a00b-4246d2ae0ac9"
        },
        "item": {
          "id": "ab3a8b26-2e75-4eb8-ba38-6e0c4f2cea75",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f05271bb-f01a-4c97-a91e-c8bfdbae79ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b8ed92-9f1d-4fae-9e62-401b97e8c0e0",
        "cursor": {
          "ref": "983a158d-8959-4004-b8d2-00117610f9db",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2ccf8831-7f2a-4968-a92e-5444e3d243fc"
        },
        "item": {
          "id": "b3b8ed92-9f1d-4fae-9e62-401b97e8c0e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d697a4ca-0ae4-4e27-8944-c5748d8e9c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3295b456-37d0-411e-ac74-d71119718d01",
        "cursor": {
          "ref": "a477e23c-ab60-4839-b3fe-de4bef0afeec",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e8aaf00b-30d8-4408-942f-4ababe676c8a"
        },
        "item": {
          "id": "3295b456-37d0-411e-ac74-d71119718d01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44c755d0-a445-4766-9528-876d82680a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a373329-f889-49ea-b5f2-876c3e325fc0",
        "cursor": {
          "ref": "9a5771df-5197-4e1a-93d6-f8065c02a27c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3802568f-23bb-4891-a56d-330379203633"
        },
        "item": {
          "id": "5a373329-f889-49ea-b5f2-876c3e325fc0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2db2c428-28a4-41b7-8a26-9aa22e66bd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142bbdbb-1925-48e3-964a-b0980caec5ff",
        "cursor": {
          "ref": "bd16e05b-0c21-4614-8ba8-23541be3c599",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1def88c4-edb8-4e25-927c-162d8ebf8cde"
        },
        "item": {
          "id": "142bbdbb-1925-48e3-964a-b0980caec5ff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d72fb889-d1fd-4efa-8b0e-273ae63aaac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23036a-9b74-4f22-a02d-b187289a5cad",
        "cursor": {
          "ref": "d96b937b-da2f-416f-9b89-0cd76417d4c5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d0a7a10c-2cbb-4abc-9780-215f3c4b9586"
        },
        "item": {
          "id": "2f23036a-9b74-4f22-a02d-b187289a5cad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "48cf677a-2f3e-4068-a5cf-c3bad504f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2b2e99-a511-42ac-8fe8-8cb7faf90d0a",
        "cursor": {
          "ref": "dbd02422-9f98-4b81-9ee7-3748b45430fd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eca96bbb-c9d0-46bf-8545-0c65240cfcc1"
        },
        "item": {
          "id": "8b2b2e99-a511-42ac-8fe8-8cb7faf90d0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9dc1081c-65ab-49c9-96f9-3091dce7bb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561ada2a-f6fa-4450-8118-9293d9eb1829",
        "cursor": {
          "ref": "16ef379a-c192-48df-a542-6b363a30f3bb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "08c692f1-c6cf-4994-85e3-e59045726f19"
        },
        "item": {
          "id": "561ada2a-f6fa-4450-8118-9293d9eb1829",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3399b2d8-ef2f-4b23-9964-6b8434e06a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457f17d3-1715-4ba5-b68f-94be8c92b8bf",
        "cursor": {
          "ref": "8e13f3aa-3bd8-4733-82d6-e62067c4bbfd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2d979be-a78c-4953-b079-83394f58df63"
        },
        "item": {
          "id": "457f17d3-1715-4ba5-b68f-94be8c92b8bf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "75993ccb-db50-4bab-adfb-c012365a474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf68fe3-fc93-41d0-b2ba-855a16c8f704",
        "cursor": {
          "ref": "7a30db49-0059-41d1-a6a9-d0120b30c5d2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0009abf4-6f7e-4417-9c9f-5552bdf916e0"
        },
        "item": {
          "id": "3cf68fe3-fc93-41d0-b2ba-855a16c8f704",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "13e383b9-2225-4b1e-a748-cb10e658b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25956d2e-1c80-42cf-a569-b191a3dcefe4",
        "cursor": {
          "ref": "c6ba9651-3af8-411d-98a4-c55ea06b8fe6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0134497d-614c-45f9-a4ee-389d855be387"
        },
        "item": {
          "id": "25956d2e-1c80-42cf-a569-b191a3dcefe4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "87fa9498-a0cf-4546-8c18-e46a0c743382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0d54c0-1c7e-40a7-b0fb-b25af7581bfb",
        "cursor": {
          "ref": "db6364ec-b35e-4209-aea5-e89b5fe1ddb9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22a789e5-70d0-4021-90e1-5ce17b058090"
        },
        "item": {
          "id": "4d0d54c0-1c7e-40a7-b0fb-b25af7581bfb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bcf4fbe7-eb25-4082-8609-925d3f856ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a2f466-56b6-4a6a-beb1-34fbc839ebe6",
        "cursor": {
          "ref": "6776ed01-5a85-4040-aebb-9ad9c0b8bd98",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "efdcd235-9068-4ccd-8bc8-b00c587a4471"
        },
        "item": {
          "id": "90a2f466-56b6-4a6a-beb1-34fbc839ebe6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "522244ca-c9da-4e98-a490-cdba25843b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2704163b-44f9-4ad3-8319-c16d9aaca2a1",
        "cursor": {
          "ref": "debf2d5d-a811-44fa-a900-6a721c1c6091",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80a5ea56-ce1d-4923-b336-22a3c53e6b84"
        },
        "item": {
          "id": "2704163b-44f9-4ad3-8319-c16d9aaca2a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ab77e2b4-1c82-4cbe-aed7-8ad40f682b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9305f3-74eb-4030-9988-ac157451ba91",
        "cursor": {
          "ref": "16a95d84-8f28-45b2-a89f-76df9a87ad13",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0bf8c8ce-ce0f-4da5-9ccb-d157e690839b"
        },
        "item": {
          "id": "0a9305f3-74eb-4030-9988-ac157451ba91",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bb7f8cfe-3271-4f9a-8442-6c4a4ea5c716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e8937d-49f1-44de-8a35-02a50b367bb3",
        "cursor": {
          "ref": "0b512823-1b01-46b5-a003-8a11c2c6ad8f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "42e3e673-f825-4588-ab3e-322a7d788b1b"
        },
        "item": {
          "id": "95e8937d-49f1-44de-8a35-02a50b367bb3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "792faca9-3b83-40d4-b01c-c0b6bdbaf962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477b50da-f081-420a-bc1f-e329e8305589",
        "cursor": {
          "ref": "5837e954-f37a-4bdd-a5c9-e58564ad7f01",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "232ceeb9-0640-415a-b925-559bee1d7721"
        },
        "item": {
          "id": "477b50da-f081-420a-bc1f-e329e8305589",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0a0cd0b7-a17a-4682-b7a2-f8bc9e305040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eceeaf-7a20-4c67-9252-79db35358a91",
        "cursor": {
          "ref": "f4e47186-75d7-4891-bd01-78fa27eaad7e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "579cc0b8-2f9f-4cd5-a42f-7ea7f00e8c76"
        },
        "item": {
          "id": "42eceeaf-7a20-4c67-9252-79db35358a91",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "04a8856e-c962-4222-9df9-cf5cc004ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84244e41-9f01-4616-b1ab-f71fe4c55bef",
        "cursor": {
          "ref": "1ab41c65-8546-4145-993d-83b0478789e5",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "70e221f8-4263-4ca4-8645-98754c236c9b"
        },
        "item": {
          "id": "84244e41-9f01-4616-b1ab-f71fe4c55bef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f068eff1-2cbf-46c4-a709-2f7667a95ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af22c323-a4ae-4dc0-8796-ced9522df8a3",
        "cursor": {
          "ref": "20e5583c-2bf2-4118-aec6-bbe6d799a86f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7c4b9e20-9f65-4398-b522-2e7ad0984feb"
        },
        "item": {
          "id": "af22c323-a4ae-4dc0-8796-ced9522df8a3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "49d74ffc-e692-461c-84ab-07401f378f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe55f452-95fe-4771-a55c-f4a08421fab8",
        "cursor": {
          "ref": "e196118c-1e37-4fb2-9dda-6208fc32b5bf",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fda43fe1-696e-4759-b04e-535e1e55e7d9"
        },
        "item": {
          "id": "fe55f452-95fe-4771-a55c-f4a08421fab8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3f53dd35-d9bb-401d-97b3-a9b1733623ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b5febe-adac-4dc3-8079-8548bbc37d85",
        "cursor": {
          "ref": "b7c2b838-66b0-40f3-9b70-2538d7e12690",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "870494a2-3fee-492e-93a7-34dedd42f1df"
        },
        "item": {
          "id": "45b5febe-adac-4dc3-8079-8548bbc37d85",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "da5ff460-9763-4f5f-997c-ba2cbe0ae5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f124d81-7873-475c-8768-c08d6cd6b520",
        "cursor": {
          "ref": "0fd44979-444e-4ed7-843b-76e5d2c64ec9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d5b7ecd5-b95b-4893-8517-3426c0cd61ef"
        },
        "item": {
          "id": "1f124d81-7873-475c-8768-c08d6cd6b520",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b01ce0de-ebd0-4bf4-819e-d7b8f229713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b91d258-1c0e-42b9-94bb-c28c92fb4803",
        "cursor": {
          "ref": "f49e889f-b238-416e-855a-e8c7139162a5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "67383cc6-1ff7-4607-b0ea-0c17749e74fd"
        },
        "item": {
          "id": "6b91d258-1c0e-42b9-94bb-c28c92fb4803",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8280085a-0124-473d-bec4-7df7c1d3993f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b0fdb-28b8-4289-b31e-0d84a7f212c3",
        "cursor": {
          "ref": "ad87e8dc-47e2-4620-85da-41add947580b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27f94440-2dd8-4da0-8501-c9230e71e998"
        },
        "item": {
          "id": "fd6b0fdb-28b8-4289-b31e-0d84a7f212c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a8eda4f-9ac1-4b18-a3d3-71f293cd10d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4299748e-f154-47ab-8b7a-94b4649aa199",
        "cursor": {
          "ref": "2cd86177-5828-4ad3-9926-1332883c5805",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "45d473d1-849e-425a-b584-c952b9a29883"
        },
        "item": {
          "id": "4299748e-f154-47ab-8b7a-94b4649aa199",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1b23321c-959a-4372-865c-f57c86b26674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2143ec7e-0831-42a6-99eb-7b796ae16ffa",
        "cursor": {
          "ref": "b0f08063-6928-4bf5-9375-233597eff2f5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c34bea10-cdf7-4394-8129-118af8320989"
        },
        "item": {
          "id": "2143ec7e-0831-42a6-99eb-7b796ae16ffa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b11d84bb-030c-40d9-889a-4b3309f310a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fe3222-50a5-454d-ba1e-72457322a227",
        "cursor": {
          "ref": "ab3df47c-ea88-4ec8-8240-44195b7cd2fa",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fb3cc225-0cd6-43e6-a877-e9889e21f487"
        },
        "item": {
          "id": "54fe3222-50a5-454d-ba1e-72457322a227",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2e9ca30-84f7-4891-b3da-69716c70f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e4c47c-e247-4cf9-94d4-212da58bb72d",
        "cursor": {
          "ref": "a2427c24-82f7-4704-a1b3-f12dde2009ec",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "730c8f10-3ad4-4daa-a9a2-af00410e936c"
        },
        "item": {
          "id": "e6e4c47c-e247-4cf9-94d4-212da58bb72d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85823da9-f043-4fc0-b1ae-b0134e322e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e306c840-e96e-4020-a988-92cc70df153a",
        "cursor": {
          "ref": "49cb0f15-361d-4aad-b1ef-7740aa49994b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fafb3b21-1e64-4f15-a4c3-466806b96724"
        },
        "item": {
          "id": "e306c840-e96e-4020-a988-92cc70df153a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f2b44972-cedd-469f-b285-a0811f81f440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed37556-1de3-4379-ac18-325b9c32af42",
        "cursor": {
          "ref": "10f44477-bf32-4108-887c-2963c45f8fe6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4ed0d10b-710c-4c64-8cbf-1ebf76c9d9d8"
        },
        "item": {
          "id": "fed37556-1de3-4379-ac18-325b9c32af42",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aca56148-1123-40ec-ab01-54715f1e7074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45027be-f044-4e50-9a96-13eef3e6de1f",
        "cursor": {
          "ref": "66c87519-2082-4ee5-8fd1-c96934f04c3d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5c58e696-bbec-4788-b296-6d570e32d997"
        },
        "item": {
          "id": "f45027be-f044-4e50-9a96-13eef3e6de1f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92b82d3f-fe6f-41f1-874a-defd4cde9c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae6f29-af2f-405a-8799-742c03d68e89",
        "cursor": {
          "ref": "e8ecf367-d065-435d-a830-1ece3afc1424",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ab81106c-54d3-45ce-9dad-8bad8d219370"
        },
        "item": {
          "id": "9fae6f29-af2f-405a-8799-742c03d68e89",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "01f70bd3-1dd8-4f31-951d-d3f1130981cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5841c8-c8bb-4d4d-8a68-b2ee5a9cd872",
        "cursor": {
          "ref": "b5049880-a308-49de-ac4a-97b5ebcfe34f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "baa668b0-389c-4079-ab21-c34d2ee2eac6"
        },
        "item": {
          "id": "4f5841c8-c8bb-4d4d-8a68-b2ee5a9cd872",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b6a6d93-1f91-479c-ab41-4d77778cdad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d341e6e-6b89-40c1-b7c3-0646885293b4",
        "cursor": {
          "ref": "4846a0c7-53d5-4a6c-ae4f-b52f2eee5615",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3db10d02-a2ea-4607-9dc4-21e21dd3c4ae"
        },
        "item": {
          "id": "5d341e6e-6b89-40c1-b7c3-0646885293b4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f3c75bf2-2e2c-4785-a183-62912c3b06ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ccc985-097a-44ab-9b61-a390b1bcbdfa",
        "cursor": {
          "ref": "01116c41-43bb-4f44-bae6-4e8dfdca0b82",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cee54eae-01d0-45c0-a84e-73e8ba1f783e"
        },
        "item": {
          "id": "32ccc985-097a-44ab-9b61-a390b1bcbdfa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f5bf1209-6818-415c-873e-10c3f742c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b01e81a-b157-4603-86cc-22c181485138",
        "cursor": {
          "ref": "46f06409-ec21-4492-9fda-d286273104b0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "42f55ab6-373c-4406-aee6-8d4a940cb761"
        },
        "item": {
          "id": "2b01e81a-b157-4603-86cc-22c181485138",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "10fe096e-1f75-4cb8-be3d-059683dc8b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10150f4-5220-4e51-b333-91f7c1fa12cd",
        "cursor": {
          "ref": "eabc17f4-e0ed-4af8-b095-68e7aebd60ca",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "110f738b-4492-4422-89ca-e324d6db1017"
        },
        "item": {
          "id": "b10150f4-5220-4e51-b333-91f7c1fa12cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ccc3a4ed-6e30-4496-ac50-b723787664cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b25301-36d0-4d70-b3bc-e420db720bf6",
        "cursor": {
          "ref": "dbeef958-0177-4e73-a530-e1ec6ed69b60",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6327f36-084f-4524-97d1-c7b64d1201d2"
        },
        "item": {
          "id": "d3b25301-36d0-4d70-b3bc-e420db720bf6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "236cc1df-1f2d-4bc8-a017-c6c4a6bc7b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aab652-d9f0-4f73-aaf6-cc1f79b1cab6",
        "cursor": {
          "ref": "be4ac4d8-c1fa-4d98-b201-f13b37e7c144",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "85aa492a-0cba-4d6e-9981-a8bcbb45355a"
        },
        "item": {
          "id": "d3aab652-d9f0-4f73-aaf6-cc1f79b1cab6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5d3b550f-fc9d-4090-a58c-0c2f5abf0940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f517f1b1-7ca8-4e3b-b00f-e0dc739f3422",
        "cursor": {
          "ref": "f5205d21-b39c-47bc-bc5a-b7e88e3719b3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ef897497-2c3e-432a-b78a-a1b6ebdcae66"
        },
        "item": {
          "id": "f517f1b1-7ca8-4e3b-b00f-e0dc739f3422",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f4c4045-1ec3-4cde-b5fb-fcd81b4b7d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb1ebc-2778-4f05-823b-a834f9facddb",
        "cursor": {
          "ref": "ba0ab54b-12c4-47e7-804b-3e8e471f4894",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "62c57d93-6c0e-4889-96de-7f6dcbe9aeb7"
        },
        "item": {
          "id": "27cb1ebc-2778-4f05-823b-a834f9facddb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a571b5db-dbf8-4a2a-a8ed-d6d55a6d3669",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 152,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521316dd-1e50-412d-b584-fa0dbe7098c8",
        "cursor": {
          "ref": "32769645-5d76-4585-95b1-1ff65baaf402",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f78f91b0-02cb-4dd3-a986-38e040219cb6"
        },
        "item": {
          "id": "521316dd-1e50-412d-b584-fa0dbe7098c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d3ecaf79-24ad-4402-854a-6637606f140d",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d36f38a-eb36-410d-8c2e-13002e9e8969",
        "cursor": {
          "ref": "0d88c901-73c8-4b98-b579-a4cff1e4eada",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a969226c-7b62-46f8-961c-7332170cce34"
        },
        "item": {
          "id": "9d36f38a-eb36-410d-8c2e-13002e9e8969",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6e6aa8f8-9d13-48c5-89ea-9a9c338ff6a7",
          "status": "OK",
          "code": 200,
          "responseTime": 2851,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba75129c-bfec-41ee-b4cc-5ef6dcd105c0",
        "cursor": {
          "ref": "2a84b94c-693f-4da1-b48c-d24a52f22104",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "641be7f9-09bc-4bad-b024-7b90d28fee6f"
        },
        "item": {
          "id": "ba75129c-bfec-41ee-b4cc-5ef6dcd105c0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ed8b17bd-857b-4091-889f-5c929d6eff20",
          "status": "OK",
          "code": 200,
          "responseTime": 1925,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0aa8b0-9bc4-4f3d-9113-b0f216fdde0d",
        "cursor": {
          "ref": "0d64de88-17d0-4377-a57c-4dde19444263",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "86a1ba92-c077-4efa-a7eb-10a995b3d044"
        },
        "item": {
          "id": "bb0aa8b0-9bc4-4f3d-9113-b0f216fdde0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bcc189c9-5ae8-4048-ac61-66f524f2300d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0aa8b0-9bc4-4f3d-9113-b0f216fdde0d",
        "cursor": {
          "ref": "0d64de88-17d0-4377-a57c-4dde19444263",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "86a1ba92-c077-4efa-a7eb-10a995b3d044"
        },
        "item": {
          "id": "bb0aa8b0-9bc4-4f3d-9113-b0f216fdde0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bcc189c9-5ae8-4048-ac61-66f524f2300d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28e883f-130f-4b24-af98-6528aaf61f97",
        "cursor": {
          "ref": "5dde370e-6c0d-47df-917e-e7ff69d486be",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0e5d9193-9c7e-4817-a020-06797700a429"
        },
        "item": {
          "id": "c28e883f-130f-4b24-af98-6528aaf61f97",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "31dd4ace-6532-4774-af91-0eedc63fc34b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1ebb3d-6e66-4505-8111-d249b1556079",
        "cursor": {
          "ref": "a98a8ad7-1b8b-478f-98a6-0495fcd9a7cb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bc4c2b77-5c7c-4d47-9f5e-efdce5011a63"
        },
        "item": {
          "id": "1e1ebb3d-6e66-4505-8111-d249b1556079",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4fbfc74-3cee-4a88-8b78-d142365743f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}